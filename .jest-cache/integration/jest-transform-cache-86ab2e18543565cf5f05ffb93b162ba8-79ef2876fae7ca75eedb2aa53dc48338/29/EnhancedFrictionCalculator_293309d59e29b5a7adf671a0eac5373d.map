{"version":3,"names":["cov_1gkvtjp5c","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","AirPropertiesCalculator_1","require","FrictionMethod","exports","FlowRegime","MaterialAge","SurfaceCondition","EnhancedFrictionCalculator","calculateFrictionLoss","input","velocity","hydraulicDiameter","length","material","method","ENHANCED_DARCY","airConditions","materialAge","GOOD","surfaceCondition","customRoughness","ductShape","aspectRatio","correctionFactors","validationLevel","warnings","recommendations","validateInputs","airProps","AirPropertiesCalculator","calculateAirProperties","density","STANDARD_AIR","viscosity","push","velocityFps","diameterFt","reynoldsNumber","flowRegime","classifyFlowRegime","materialProperties","getMaterialProperties","relativeRoughness","adjustedRoughness","frictionFactor","calculateFrictionFactor","environmentalCorrections","calculateEnvironmentalCorrections","shapeCorrection","calculateShapeCorrection","additionalCorrections","calculateAdditionalCorrections","baseFrictionLoss","Math","pow","totalCorrection","combined","correctedFrictionLoss","frictionRate","uncertaintyBounds","calculateUncertaintyBounds","generateRecommendations","frictionLoss","accuracy","METHOD_ACCURACY","calculationDetails","formula","getFormulaDescription","intermediateValues","standardReference","getStandardReference","getOptimalMethod","REYNOLDS_TRANSITIONS","LAMINAR_MAX","COLEBROOK_WHITE","HAALAND","SWAMEE_JAIN","CHEN","Error","LAMINAR","TRANSITIONAL_MAX","TRANSITIONAL","TURBULENT_SMOOTH","TURBULENT_ROUGH","FULLY_ROUGH","baseRoughness","materialData","getEnhancedMaterialRoughness","error","getDefaultRoughness","agingFactor","AGING_FACTORS","surfaceFactor","SURFACE_FACTORS","combinedFactor","defaultRoughness","colebrookWhite","MOODY","moodyApproximation","swameeJain","haaland","chen","ZIGRANG_SYLVESTER","zigrangSylvester","enhancedDarcy","i","fNew","log10","sqrt","abs","numerator","term1","term2","A","fLaminar","fTurbulent","weight","airDensity","corrections","temperature","pressure","humidity","densityRatio","installation","maintenance","environmental","baseAccuracy","uncertainty","lower","upper","confidenceLevel","descriptions","VERSION","TURBULENT_MIN","NEW","AVERAGE","POOR","VERY_POOR","EXCELLENT"],"sources":["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/EnhancedFrictionCalculator.ts"],"sourcesContent":["/**\n * Enhanced Friction Calculator\n * \n * Comprehensive friction calculation service for Phase 3: Advanced Calculation Modules\n * Provides multiple friction factor calculation methods, material aging effects,\n * environmental corrections, and advanced features for HVAC duct systems.\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport { AirPropertiesCalculator, AirConditions } from './AirPropertiesCalculator';\n\n/**\n * Friction calculation method options\n */\nexport enum FrictionMethod {\n  COLEBROOK_WHITE = 'colebrook_white',\n  MOODY = 'moody',\n  SWAMEE_JAIN = 'swamee_jain',\n  HAALAND = 'haaland',\n  CHEN = 'chen',\n  ZIGRANG_SYLVESTER = 'zigrang_sylvester',\n  ENHANCED_DARCY = 'enhanced_darcy'\n}\n\n/**\n * Flow regime classification\n */\nexport enum FlowRegime {\n  LAMINAR = 'laminar',\n  TRANSITIONAL = 'transitional',\n  TURBULENT_SMOOTH = 'turbulent_smooth',\n  TURBULENT_ROUGH = 'turbulent_rough',\n  FULLY_ROUGH = 'fully_rough'\n}\n\n/**\n * Material aging condition\n */\nexport enum MaterialAge {\n  NEW = 'new',\n  GOOD = 'good',\n  AVERAGE = 'average',\n  POOR = 'poor',\n  VERY_POOR = 'very_poor'\n}\n\n/**\n * Surface condition classification\n */\nexport enum SurfaceCondition {\n  EXCELLENT = 'excellent',\n  GOOD = 'good',\n  AVERAGE = 'average',\n  POOR = 'poor',\n  VERY_POOR = 'very_poor'\n}\n\n/**\n * Enhanced friction calculation input parameters\n */\nexport interface FrictionCalculationInput {\n  velocity: number;                    // FPM\n  hydraulicDiameter: number;           // inches\n  length: number;                      // feet\n  material: string;                    // Material type\n  method?: FrictionMethod;             // Calculation method\n  airConditions?: AirConditions;       // Environmental conditions\n  materialAge?: MaterialAge;           // Material aging condition\n  surfaceCondition?: SurfaceCondition; // Surface condition\n  customRoughness?: number;            // Custom roughness value (feet)\n  ductShape?: 'round' | 'rectangular' | 'oval'; // Duct shape\n  aspectRatio?: number;                // For rectangular ducts (width/height)\n  correctionFactors?: {\n    installation: number;              // Installation quality factor\n    maintenance: number;               // Maintenance factor\n    environmental: number;             // Environmental exposure factor\n  };\n  validationLevel?: 'none' | 'basic' | 'standard' | 'strict';\n}\n\n/**\n * Enhanced friction calculation result\n */\nexport interface FrictionCalculationResult {\n  frictionLoss: number;                // inches w.g.\n  frictionFactor: number;              // Darcy friction factor\n  frictionRate: number;                // inches w.g. per 100 feet\n  method: FrictionMethod;              // Method used\n  flowRegime: FlowRegime;              // Flow regime classification\n  reynoldsNumber: number;              // Reynolds number\n  relativeRoughness: number;           // Relative roughness (ε/D)\n  materialProperties: {\n    baseRoughness: number;             // Base material roughness (feet)\n    adjustedRoughness: number;         // Adjusted for aging/condition (feet)\n    agingFactor: number;               // Aging adjustment factor\n    surfaceFactor: number;             // Surface condition factor\n    combinedFactor: number;            // Combined adjustment factor\n  };\n  environmentalCorrections: {\n    temperature: number;               // Temperature correction factor\n    pressure: number;                  // Pressure correction factor\n    humidity: number;                  // Humidity correction factor\n    combined: number;                  // Combined environmental factor\n  };\n  accuracy: number;                    // Estimated accuracy (0-1)\n  uncertaintyBounds?: {\n    lower: number;                     // Lower bound (inches w.g.)\n    upper: number;                     // Upper bound (inches w.g.)\n    confidenceLevel: number;           // Confidence level (0-1)\n  };\n  warnings: string[];\n  recommendations: string[];\n  calculationDetails: {\n    formula: string;                   // Formula used\n    iterations?: number;               // Number of iterations (for iterative methods)\n    convergence?: number;              // Convergence criteria achieved\n    intermediateValues: Record<string, number>;\n    standardReference: string;         // Reference standard\n  };\n}\n\n/**\n * Enhanced Friction Calculator\n * \n * Comprehensive friction calculation service providing multiple calculation methods,\n * material aging effects, environmental corrections, and advanced features.\n */\nexport class EnhancedFrictionCalculator {\n  private static readonly VERSION = '3.0.0';\n  \n  // Standard air properties at 70°F, sea level\n  private static readonly STANDARD_AIR = {\n    density: 0.075,      // lb/ft³\n    viscosity: 1.2e-5    // lb/(ft·s)\n  };\n\n  // Reynolds number transition points\n  private static readonly REYNOLDS_TRANSITIONS = {\n    LAMINAR_MAX: 2300,\n    TRANSITIONAL_MAX: 4000,\n    TURBULENT_MIN: 4000\n  };\n\n  // Method accuracy estimates\n  private static readonly METHOD_ACCURACY = {\n    [FrictionMethod.COLEBROOK_WHITE]: 0.98,\n    [FrictionMethod.MOODY]: 0.95,\n    [FrictionMethod.SWAMEE_JAIN]: 0.96,\n    [FrictionMethod.HAALAND]: 0.97,\n    [FrictionMethod.CHEN]: 0.96,\n    [FrictionMethod.ZIGRANG_SYLVESTER]: 0.97,\n    [FrictionMethod.ENHANCED_DARCY]: 0.99\n  };\n\n  // Material aging factors\n  private static readonly AGING_FACTORS = {\n    [MaterialAge.NEW]: 1.0,\n    [MaterialAge.GOOD]: 1.2,\n    [MaterialAge.AVERAGE]: 1.5,\n    [MaterialAge.POOR]: 2.0,\n    [MaterialAge.VERY_POOR]: 3.0\n  };\n\n  // Surface condition factors\n  private static readonly SURFACE_FACTORS = {\n    [SurfaceCondition.EXCELLENT]: 0.8,\n    [SurfaceCondition.GOOD]: 1.0,\n    [SurfaceCondition.AVERAGE]: 1.3,\n    [SurfaceCondition.POOR]: 1.7,\n    [SurfaceCondition.VERY_POOR]: 2.5\n  };\n\n  /**\n   * Calculate enhanced friction loss with comprehensive corrections\n   */\n  public static calculateFrictionLoss(input: FrictionCalculationInput): FrictionCalculationResult {\n    const {\n      velocity,\n      hydraulicDiameter,\n      length,\n      material,\n      method = FrictionMethod.ENHANCED_DARCY,\n      airConditions,\n      materialAge = MaterialAge.GOOD,\n      surfaceCondition = SurfaceCondition.GOOD,\n      customRoughness,\n      ductShape = 'round',\n      aspectRatio,\n      correctionFactors,\n      validationLevel = 'standard'\n    } = input;\n\n    const warnings: string[] = [];\n    const recommendations: string[] = [];\n\n    // Validate inputs\n    this.validateInputs(input, validationLevel, warnings);\n\n    // Get air properties\n    const airProps = airConditions ? \n      AirPropertiesCalculator.calculateAirProperties(airConditions) :\n      { \n        density: this.STANDARD_AIR.density, \n        viscosity: this.STANDARD_AIR.viscosity,\n        warnings: []\n      };\n    \n    warnings.push(...airProps.warnings);\n\n    // Calculate Reynolds number\n    const velocityFps = velocity / 60; // Convert FPM to fps\n    const diameterFt = hydraulicDiameter / 12; // Convert inches to feet\n    const reynoldsNumber = (airProps.density * velocityFps * diameterFt) / airProps.viscosity;\n\n    // Determine flow regime\n    const flowRegime = this.classifyFlowRegime(reynoldsNumber);\n\n    // Get material properties\n    const materialProperties = this.getMaterialProperties(\n      material,\n      materialAge,\n      surfaceCondition,\n      customRoughness,\n      warnings\n    );\n\n    // Calculate relative roughness\n    const relativeRoughness = materialProperties.adjustedRoughness / diameterFt;\n\n    // Calculate friction factor using specified method\n    const frictionFactor = this.calculateFrictionFactor(\n      method,\n      reynoldsNumber,\n      relativeRoughness,\n      flowRegime,\n      warnings\n    );\n\n    // Calculate environmental corrections\n    const environmentalCorrections = this.calculateEnvironmentalCorrections(\n      airConditions,\n      airProps.density\n    );\n\n    // Apply shape corrections for non-round ducts\n    const shapeCorrection = this.calculateShapeCorrection(ductShape, aspectRatio);\n\n    // Apply additional correction factors\n    const additionalCorrections = this.calculateAdditionalCorrections(correctionFactors);\n\n    // Calculate friction loss using Darcy-Weisbach equation\n    const baseFrictionLoss = frictionFactor * (length / diameterFt) * \n                            (airProps.density * Math.pow(velocityFps, 2)) / (2 * 32.174);\n\n    // Apply all corrections\n    const totalCorrection = environmentalCorrections.combined * shapeCorrection * additionalCorrections;\n    const correctedFrictionLoss = (baseFrictionLoss / 5.2) * totalCorrection; // Convert to inches w.g.\n\n    // Calculate friction rate\n    const frictionRate = (correctedFrictionLoss / length) * 100; // inches w.g. per 100 feet\n\n    // Calculate uncertainty bounds\n    const uncertaintyBounds = this.calculateUncertaintyBounds(\n      correctedFrictionLoss,\n      method,\n      flowRegime,\n      relativeRoughness\n    );\n\n    // Generate recommendations\n    this.generateRecommendations(\n      velocity,\n      reynoldsNumber,\n      frictionRate,\n      materialProperties,\n      recommendations\n    );\n\n    return {\n      frictionLoss: correctedFrictionLoss,\n      frictionFactor,\n      frictionRate,\n      method,\n      flowRegime,\n      reynoldsNumber,\n      relativeRoughness,\n      materialProperties,\n      environmentalCorrections,\n      accuracy: this.METHOD_ACCURACY[method],\n      uncertaintyBounds,\n      warnings,\n      recommendations,\n      calculationDetails: {\n        formula: this.getFormulaDescription(method),\n        intermediateValues: {\n          baseFrictionLoss,\n          totalCorrection,\n          velocityFps,\n          diameterFt\n        },\n        standardReference: this.getStandardReference(method)\n      }\n    };\n  }\n\n  /**\n   * Get optimal friction calculation method for given conditions\n   */\n  public static getOptimalMethod(\n    reynoldsNumber: number,\n    relativeRoughness: number,\n    accuracy: 'standard' | 'high' | 'maximum' = 'standard'\n  ): FrictionMethod {\n    // For laminar flow\n    if (reynoldsNumber < this.REYNOLDS_TRANSITIONS.LAMINAR_MAX) {\n      return FrictionMethod.ENHANCED_DARCY; // Uses analytical solution for laminar flow\n    }\n\n    // For turbulent flow, choose based on accuracy requirements\n    if (accuracy === 'maximum') {\n      return FrictionMethod.COLEBROOK_WHITE; // Most accurate but iterative\n    }\n\n    if (accuracy === 'high') {\n      return FrictionMethod.HAALAND; // Good accuracy, explicit\n    }\n\n    // For standard accuracy, choose based on relative roughness\n    if (relativeRoughness < 0.001) {\n      return FrictionMethod.SWAMEE_JAIN; // Good for smooth pipes\n    } else {\n      return FrictionMethod.CHEN; // Good for rough pipes\n    }\n  }\n\n  /**\n   * Validate input parameters\n   */\n  private static validateInputs(\n    input: FrictionCalculationInput,\n    validationLevel: string,\n    warnings: string[]\n  ): void {\n    if (validationLevel === 'none') return;\n\n    const { velocity, hydraulicDiameter, length } = input;\n\n    // Basic validation\n    if (velocity <= 0) throw new Error('Velocity must be positive');\n    if (hydraulicDiameter <= 0) throw new Error('Hydraulic diameter must be positive');\n    if (length <= 0) throw new Error('Length must be positive');\n\n    if (validationLevel === 'basic') return;\n\n    // Standard validation\n    if (velocity > 6000) {\n      warnings.push('High velocity may cause noise and energy efficiency issues');\n    }\n    if (velocity < 300) {\n      warnings.push('Low velocity may indicate oversized ductwork');\n    }\n\n    if (validationLevel === 'strict') {\n      // Strict validation\n      if (hydraulicDiameter < 4 || hydraulicDiameter > 120) {\n        warnings.push('Hydraulic diameter outside typical HVAC range (4-120 inches)');\n      }\n      if (length > 1000) {\n        warnings.push('Very long duct run - consider intermediate pressure calculations');\n      }\n    }\n  }\n\n  /**\n   * Classify flow regime based on Reynolds number\n   */\n  private static classifyFlowRegime(reynoldsNumber: number): FlowRegime {\n    if (reynoldsNumber < this.REYNOLDS_TRANSITIONS.LAMINAR_MAX) {\n      return FlowRegime.LAMINAR;\n    } else if (reynoldsNumber < this.REYNOLDS_TRANSITIONS.TRANSITIONAL_MAX) {\n      return FlowRegime.TRANSITIONAL;\n    } else if (reynoldsNumber < 100000) {\n      return FlowRegime.TURBULENT_SMOOTH;\n    } else if (reynoldsNumber < 1000000) {\n      return FlowRegime.TURBULENT_ROUGH;\n    } else {\n      return FlowRegime.FULLY_ROUGH;\n    }\n  }\n\n  /**\n   * Get material properties with aging and surface condition adjustments\n   */\n  private static getMaterialProperties(\n    material: string,\n    materialAge: MaterialAge,\n    surfaceCondition: SurfaceCondition,\n    customRoughness?: number,\n    warnings: string[] = []\n  ) {\n    let baseRoughness: number;\n\n    if (customRoughness !== undefined) {\n      baseRoughness = customRoughness;\n    } else {\n      // Get base roughness from material database\n      try {\n        const materialData = AirPropertiesCalculator.getEnhancedMaterialRoughness(\n          material,\n          materialAge,\n          surfaceCondition\n        );\n        baseRoughness = materialData.adjustedRoughness;\n        warnings.push(...materialData.warnings);\n      } catch (error) {\n        // Fallback to default values\n        baseRoughness = this.getDefaultRoughness(material);\n        warnings.push(`Using default roughness for material: ${material}`);\n      }\n    }\n\n    const agingFactor = this.AGING_FACTORS[materialAge];\n    const surfaceFactor = this.SURFACE_FACTORS[surfaceCondition];\n    const combinedFactor = agingFactor * surfaceFactor;\n    const adjustedRoughness = baseRoughness * combinedFactor;\n\n    return {\n      baseRoughness,\n      adjustedRoughness,\n      agingFactor,\n      surfaceFactor,\n      combinedFactor\n    };\n  }\n\n  /**\n   * Get default roughness values for common materials\n   */\n  private static getDefaultRoughness(material: string): number {\n    const defaultRoughness: Record<string, number> = {\n      'galvanized_steel': 0.0005,\n      'stainless_steel': 0.00015,\n      'aluminum': 0.00015,\n      'pvc': 0.000005,\n      'fiberglass': 0.0003,\n      'concrete': 0.003,\n      'cast_iron': 0.00085,\n      'flexible_duct': 0.003\n    };\n\n    return defaultRoughness[material] || 0.0005; // Default to galvanized steel\n  }\n\n  /**\n   * Calculate friction factor using specified method\n   */\n  private static calculateFrictionFactor(\n    method: FrictionMethod,\n    reynoldsNumber: number,\n    relativeRoughness: number,\n    flowRegime: FlowRegime,\n    warnings: string[]\n  ): number {\n    // For laminar flow, use analytical solution regardless of method\n    if (flowRegime === FlowRegime.LAMINAR) {\n      return 64 / reynoldsNumber;\n    }\n\n    switch (method) {\n      case FrictionMethod.COLEBROOK_WHITE:\n        return this.colebrookWhite(reynoldsNumber, relativeRoughness);\n        \n      case FrictionMethod.MOODY:\n        return this.moodyApproximation(reynoldsNumber, relativeRoughness);\n        \n      case FrictionMethod.SWAMEE_JAIN:\n        return this.swameeJain(reynoldsNumber, relativeRoughness);\n        \n      case FrictionMethod.HAALAND:\n        return this.haaland(reynoldsNumber, relativeRoughness);\n        \n      case FrictionMethod.CHEN:\n        return this.chen(reynoldsNumber, relativeRoughness);\n        \n      case FrictionMethod.ZIGRANG_SYLVESTER:\n        return this.zigrangSylvester(reynoldsNumber, relativeRoughness);\n        \n      case FrictionMethod.ENHANCED_DARCY:\n        return this.enhancedDarcy(reynoldsNumber, relativeRoughness, flowRegime);\n        \n      default:\n        warnings.push(`Unknown method ${method}, using Colebrook-White`);\n        return this.colebrookWhite(reynoldsNumber, relativeRoughness);\n    }\n  }\n\n  /**\n   * Colebrook-White equation (iterative solution)\n   */\n  private static colebrookWhite(reynoldsNumber: number, relativeRoughness: number): number {\n    let f = 0.02; // Initial guess\n    \n    for (let i = 0; i < 20; i++) {\n      const fNew = 1 / Math.pow(-2 * Math.log10(\n        relativeRoughness / 3.7 + 2.51 / (reynoldsNumber * Math.sqrt(f))\n      ), 2);\n      \n      if (Math.abs(fNew - f) < 0.0001) {\n        break;\n      }\n      f = fNew;\n    }\n    \n    return f;\n  }\n\n  /**\n   * Swamee-Jain approximation\n   */\n  private static swameeJain(reynoldsNumber: number, relativeRoughness: number): number {\n    const numerator = Math.pow(Math.log10(relativeRoughness / 3.7 + 5.74 / Math.pow(reynoldsNumber, 0.9)), 2);\n    return 0.25 / numerator;\n  }\n\n  /**\n   * Haaland approximation\n   */\n  private static haaland(reynoldsNumber: number, relativeRoughness: number): number {\n    const term1 = relativeRoughness / 3.7;\n    const term2 = 6.9 / reynoldsNumber;\n    return 1 / Math.pow(-1.8 * Math.log10(Math.pow(term1, 1.11) + term2), 2);\n  }\n\n  /**\n   * Chen approximation\n   */\n  private static chen(reynoldsNumber: number, relativeRoughness: number): number {\n    const A = Math.pow(Math.log10(relativeRoughness / 3.7065 - 5.0452 / reynoldsNumber * \n                      Math.log10(Math.pow(relativeRoughness, 1.1098) / 2.8257 + \n                      Math.pow(7.149 / reynoldsNumber, 0.8981))), 2);\n    return 1 / (4 * A);\n  }\n\n  /**\n   * Zigrang-Sylvester approximation\n   */\n  private static zigrangSylvester(reynoldsNumber: number, relativeRoughness: number): number {\n    const A = -2 * Math.log10(relativeRoughness / 3.7 + 5.02 / reynoldsNumber * \n              Math.log10(relativeRoughness / 3.7 + 5.02 / reynoldsNumber * \n              Math.log10(relativeRoughness / 3.7 + 13 / reynoldsNumber)));\n    return 1 / Math.pow(A, 2);\n  }\n\n  /**\n   * Moody diagram approximation\n   */\n  private static moodyApproximation(reynoldsNumber: number, relativeRoughness: number): number {\n    // Simplified Moody approximation\n    if (relativeRoughness < 0.0001) {\n      // Smooth pipe approximation\n      return 0.316 / Math.pow(reynoldsNumber, 0.25);\n    } else {\n      // Rough pipe approximation\n      return this.swameeJain(reynoldsNumber, relativeRoughness);\n    }\n  }\n\n  /**\n   * Enhanced Darcy method with flow regime optimization\n   */\n  private static enhancedDarcy(\n    reynoldsNumber: number, \n    relativeRoughness: number, \n    flowRegime: FlowRegime\n  ): number {\n    switch (flowRegime) {\n      case FlowRegime.LAMINAR:\n        return 64 / reynoldsNumber;\n        \n      case FlowRegime.TRANSITIONAL:\n        // Interpolate between laminar and turbulent\n        const fLaminar = 64 / reynoldsNumber;\n        const fTurbulent = this.colebrookWhite(4000, relativeRoughness);\n        const weight = (reynoldsNumber - 2300) / (4000 - 2300);\n        return fLaminar * (1 - weight) + fTurbulent * weight;\n        \n      case FlowRegime.TURBULENT_SMOOTH:\n        return this.haaland(reynoldsNumber, relativeRoughness);\n        \n      case FlowRegime.TURBULENT_ROUGH:\n      case FlowRegime.FULLY_ROUGH:\n        return this.colebrookWhite(reynoldsNumber, relativeRoughness);\n        \n      default:\n        return this.colebrookWhite(reynoldsNumber, relativeRoughness);\n    }\n  }\n\n  /**\n   * Calculate environmental corrections\n   */\n  private static calculateEnvironmentalCorrections(\n    airConditions?: AirConditions,\n    airDensity?: number\n  ) {\n    const corrections = {\n      temperature: 1.0,\n      pressure: 1.0,\n      humidity: 1.0,\n      combined: 1.0\n    };\n\n    if (airDensity) {\n      const densityRatio = airDensity / this.STANDARD_AIR.density;\n      corrections.temperature = densityRatio;\n      corrections.pressure = densityRatio;\n      corrections.humidity = densityRatio;\n      corrections.combined = densityRatio;\n    }\n\n    return corrections;\n  }\n\n  /**\n   * Calculate shape correction for non-round ducts\n   */\n  private static calculateShapeCorrection(\n    ductShape: string,\n    aspectRatio?: number\n  ): number {\n    if (ductShape === 'round') {\n      return 1.0;\n    }\n\n    if (ductShape === 'rectangular' && aspectRatio) {\n      // Correction for rectangular ducts based on aspect ratio\n      if (aspectRatio <= 1.5) return 1.0;\n      if (aspectRatio <= 2.0) return 1.05;\n      if (aspectRatio <= 3.0) return 1.10;\n      if (aspectRatio <= 4.0) return 1.15;\n      return 1.20; // High aspect ratio penalty\n    }\n\n    return 1.05; // Default correction for non-round shapes\n  }\n\n  /**\n   * Calculate additional correction factors\n   */\n  private static calculateAdditionalCorrections(\n    correctionFactors?: FrictionCalculationInput['correctionFactors']\n  ): number {\n    if (!correctionFactors) return 1.0;\n\n    const { installation = 1.0, maintenance = 1.0, environmental = 1.0 } = correctionFactors;\n    return installation * maintenance * environmental;\n  }\n\n  /**\n   * Calculate uncertainty bounds\n   */\n  private static calculateUncertaintyBounds(\n    frictionLoss: number,\n    method: FrictionMethod,\n    flowRegime: FlowRegime,\n    relativeRoughness: number\n  ) {\n    let baseAccuracy = this.METHOD_ACCURACY[method];\n\n    // Adjust accuracy based on flow regime\n    if (flowRegime === FlowRegime.TRANSITIONAL) {\n      baseAccuracy *= 0.9; // Reduced accuracy in transitional regime\n    }\n\n    // Adjust accuracy based on relative roughness\n    if (relativeRoughness > 0.05) {\n      baseAccuracy *= 0.95; // Reduced accuracy for very rough surfaces\n    }\n\n    const uncertainty = frictionLoss * (1 - baseAccuracy);\n\n    return {\n      lower: frictionLoss - uncertainty,\n      upper: frictionLoss + uncertainty,\n      confidenceLevel: baseAccuracy\n    };\n  }\n\n  /**\n   * Generate recommendations\n   */\n  private static generateRecommendations(\n    velocity: number,\n    reynoldsNumber: number,\n    frictionRate: number,\n    materialProperties: any,\n    recommendations: string[]\n  ): void {\n    // Velocity recommendations\n    if (velocity > 4000) {\n      recommendations.push('High velocity detected - consider larger duct size to reduce friction and noise');\n    }\n\n    // Friction rate recommendations\n    if (frictionRate > 0.15) {\n      recommendations.push('High friction rate - consider smoother materials or larger ducts');\n    }\n\n    // Material recommendations\n    if (materialProperties.combinedFactor > 2.0) {\n      recommendations.push('Material aging/condition significantly affects friction - consider cleaning or replacement');\n    }\n\n    // Flow regime recommendations\n    if (reynoldsNumber < 4000) {\n      recommendations.push('Low Reynolds number - verify velocity calculations and consider system optimization');\n    }\n  }\n\n  /**\n   * Get formula description for the method\n   */\n  private static getFormulaDescription(method: FrictionMethod): string {\n    const descriptions: Record<FrictionMethod, string> = {\n      [FrictionMethod.COLEBROOK_WHITE]: '1/√f = -2log₁₀(ε/3.7D + 2.51/(Re√f))',\n      [FrictionMethod.MOODY]: 'Moody diagram approximation',\n      [FrictionMethod.SWAMEE_JAIN]: 'f = 0.25/[log₁₀(ε/3.7D + 5.74/Re^0.9)]²',\n      [FrictionMethod.HAALAND]: '1/√f = -1.8log₁₀[(ε/3.7D)^1.11 + 6.9/Re]',\n      [FrictionMethod.CHEN]: 'Chen explicit approximation',\n      [FrictionMethod.ZIGRANG_SYLVESTER]: 'Zigrang-Sylvester explicit approximation',\n      [FrictionMethod.ENHANCED_DARCY]: 'Flow regime optimized Darcy-Weisbach'\n    };\n\n    return descriptions[method] || 'Unknown method';\n  }\n\n  /**\n   * Get standard reference for the method\n   */\n  private static getStandardReference(method: FrictionMethod): string {\n    return 'ASHRAE Fundamentals, Chapter 21 - Duct Design';\n  }\n}\n"],"mappings":"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","ignoreList":[]}