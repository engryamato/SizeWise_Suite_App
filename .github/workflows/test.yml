name: CI Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  frontend-tests:
    name: Frontend Tests (Next.js)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint

      - name: Run Jest tests
        run: npm run test:coverage

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: frontend/coverage
          retention-days: 30

  backend-tests:
    name: Backend Tests (Python)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            backend/requirements.txt
            auth-server/requirements.txt

      - name: Install root dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install backend dependencies
        run: |
          if [ -f backend/requirements.txt ]; then
            pip install -r backend/requirements.txt
          fi

      - name: Install auth-server dependencies
        run: |
          if [ -f auth-server/requirements.txt ]; then
            pip install -r auth-server/requirements.txt
          fi

      - name: Run Python tests
        run: |
          python -m pytest --cov=. --cov-report=xml --cov-report=html -v

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-coverage-py${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
          retention-days: 30

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Start backend server
        run: |
          python run_backend.py &
          sleep 10
          # Wait for backend to be ready
          for i in {1..30}; do
            if curl -f http://localhost:5000/api/health; then
              echo "Backend is ready!"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done

      - name: Start frontend server
        working-directory: ./frontend
        run: |
          npm run start &
          sleep 15

      - name: Run E2E tests
        working-directory: ./frontend
        run: npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            frontend/test-results/
            frontend/playwright-report/
          retention-days: 30
