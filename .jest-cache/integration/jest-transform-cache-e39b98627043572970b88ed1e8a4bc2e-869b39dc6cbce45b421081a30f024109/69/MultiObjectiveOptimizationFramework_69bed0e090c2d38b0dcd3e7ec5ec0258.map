{"version":3,"names":["cov_2n5trddhjt","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","SystemOptimizationTypes_1","require","GeneticAlgorithm_1","MultiObjectiveOptimizationFramework","constructor","parameters","currentState","paretoFront","history","populationHistory","evaluationCount","algorithm","populationSize","maxGenerations","crossoverRate","mutationRate","eliteSize","paretoSettings","maxSolutions","diversityThreshold","convergenceThreshold","hypervolume","enabled","referencePoint","spacing","targetSpacing","diversityMaintenance","constraintHandling","penaltyCoefficient","archiveSize","seedValue","random","createSeededRandom","Math","optimizeMultiObjective","problem","objectiveFunctions","constraintFunctions","startTime","performance","now","validateMultiObjectiveProblem","initializeAlgorithm","createInitialPopulation","shouldTerminate","evolvePopulation","updateHistory","updateParetoFront","tradeoffAnalysis","performTradeoffAnalysis","createMultiObjectiveResult","error","console","length","Error","objectives","log","population","i","individual","createRandomIndividual","evaluateIndividual","push","fronts","nonDominatedSort","front","calculateCrowdingDistance","archive","paretoFronts","generation","calculateHypervolume","calculateSpacing","convergenceMetric","variables","variable","discreteValues","randomIndex","floor","id","min","bounds","minimum","max","maximum","generateIndividualId","objectiveValues","constraintViolations","feasible","fitness","systemConfiguration","performanceMetrics","rank","crowdingDistance","dominationCount","dominatedSolutions","individualToVariables","objectiveValue","calculateScalarFitness","violation","constraintId","violationType","currentValue","requiredValue","severity","penalty","every","v","totalPenalty","filter","reduce","sum","Array","fill","Number","MAX_VALUE","variableTemplates","map","template","weightedSumWeights","obj","evolveNSGA2","evolveWeightedSum","offspring","createOffspring","combinedPopulation","nextGeneration","frontIndex","remainingSlots","lastFront","sort","a","slice","updateArchive","parent1","tournamentSelection","parent2","child1","child2","crossover","mutate","tournamentSize","tournament","best","current","eta","value1","value2","u","beta","pow","child1Value","child2Value","Infinity","delta","mutatedValue","j","dominance","checkDominance","firstFront","currentFront","nextFront","dominatedId","dominated","find","p","individual1","individual2","firstBetter","secondBetter","numObjectives","frontSize","objectiveRange","distance","gaParameters","ga","GeneticAlgorithm","weightedObjectiveFunction","weightedSum","weight","result","optimize","bestSolution","newIndividual","solutionToIndividual","solution","isDominated","some","archived","paretoSolutions","dominanceRank","solutions","generationFound","dominanceDepth","maxValue","ind","volume","distances","minDistance","calculateObjectiveDistance","meanDistance","d","variance","sqrt","diff","kneePoints","tradeoffCurves","sensitivityAnalysis","recommendations","findKneePoints","generateTradeoffCurves","performSensitivityAnalysis","generateRecommendations","prev","next","angle","calculateAngle","PI","solutionId","kneeMetric","tradeoffRatio","calculateTradeoffRatio","description","toFixed","p1","p2","p3","v1","val","v2","dot","mag1","mag2","cosAngle","acos","recentHistory","hypervolumeImprovement","bestFitness","abs","feasibleIndividuals","fitnesses","iteration","averageFitness","worstFitness","diversity","timestamp","Date","executionTime","statistics","totalIterations","totalEvaluations","convergenceIteration","bestFitnessHistory","h","averageFitnessHistory","diversityHistory","constraintViolationHistory","algorithmSpecificStats","paretoFrontSize","optimizationHistory","iterations","parameterHistory","convergenceMetrics","problemId","status","OptimizationStatus","CONVERGED","createDummySolution","analysis","warnings","errors","toString","substr","seed","state","exports"],"sources":["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\MultiObjectiveOptimizationFramework.ts"],"sourcesContent":["/**\r\n * Multi-objective Optimization Framework for System Optimization\r\n * \r\n * Implements comprehensive multi-objective optimization with:\r\n * - NSGA-II (Non-dominated Sorting Genetic Algorithm II)\r\n * - Pareto front analysis and visualization\r\n * - Trade-off analysis and knee point identification\r\n * - Multi-criteria decision making support\r\n * - Weighted sum aggregation methods\r\n * - Constraint handling for multi-objective problems\r\n * \r\n * @version 3.0.0\r\n * @author SizeWise Suite Development Team\r\n */\r\n\r\nimport {\r\n  OptimizationSolution,\r\n  OptimizationVariable,\r\n  OptimizationProblem,\r\n  OptimizationResult,\r\n  OptimizationStatus,\r\n  OptimizationStatistics,\r\n  OptimizationHistory,\r\n  IterationHistory,\r\n  PopulationSnapshot,\r\n  SolutionPerformanceMetrics,\r\n  ObjectiveFunctionType,\r\n  ConstraintFunctionType,\r\n  MultiObjectiveFunction,\r\n  ParetoSettings,\r\n  ObjectiveFunction,\r\n  ParetoFront,\r\n  ParetoSolution,\r\n  TradeoffAnalysis,\r\n  KneePoint,\r\n  DominanceRelation,\r\n  CrowdingDistance\r\n} from './types/SystemOptimizationTypes';\r\n\r\nimport { GeneticAlgorithm, GeneticAlgorithmParameters } from './algorithms/GeneticAlgorithm';\r\n\r\nexport interface MultiObjectiveParameters {\r\n  algorithm: 'nsga2' | 'spea2' | 'moead' | 'weighted_sum';\r\n  populationSize: number;\r\n  maxGenerations: number;\r\n  crossoverRate: number;\r\n  mutationRate: number;\r\n  eliteSize: number;\r\n  paretoSettings: ParetoSettings;\r\n  weightedSumWeights?: number[];\r\n  diversityMaintenance: boolean;\r\n  constraintHandling: 'penalty' | 'repair' | 'death_penalty';\r\n  penaltyCoefficient: number;\r\n  archiveSize: number;\r\n  seedValue?: number;\r\n}\r\n\r\nexport interface NSGA2Individual extends OptimizationSolution {\r\n  objectives: number[];\r\n  rank: number;\r\n  crowdingDistance: number;\r\n  dominationCount: number;\r\n  dominatedSolutions: string[];\r\n}\r\n\r\nexport interface MultiObjectiveState {\r\n  population: NSGA2Individual[];\r\n  archive: NSGA2Individual[];\r\n  paretoFronts: NSGA2Individual[][];\r\n  generation: number;\r\n  hypervolume: number;\r\n  spacing: number;\r\n  convergenceMetric: number;\r\n}\r\n\r\n/**\r\n * Multi-objective optimization framework with NSGA-II and Pareto analysis\r\n */\r\nexport class MultiObjectiveOptimizationFramework {\r\n  private parameters: MultiObjectiveParameters;\r\n  private currentState: MultiObjectiveState | null = null;\r\n  private paretoFront: ParetoFront | null = null;\r\n  private history: IterationHistory[] = [];\r\n  private populationHistory: PopulationSnapshot[] = [];\r\n  private random: () => number;\r\n  private evaluationCount: number = 0;\r\n\r\n  constructor(parameters?: Partial<MultiObjectiveParameters>) {\r\n    this.parameters = {\r\n      algorithm: 'nsga2',\r\n      populationSize: 100,\r\n      maxGenerations: 100,\r\n      crossoverRate: 0.9,\r\n      mutationRate: 0.1,\r\n      eliteSize: 10,\r\n      paretoSettings: {\r\n        maxSolutions: 100,\r\n        diversityThreshold: 0.01,\r\n        convergenceThreshold: 1e-6,\r\n        hypervolume: {\r\n          enabled: true,\r\n          referencePoint: []\r\n        },\r\n        spacing: {\r\n          enabled: true,\r\n          targetSpacing: 0.1\r\n        }\r\n      },\r\n      diversityMaintenance: true,\r\n      constraintHandling: 'penalty',\r\n      penaltyCoefficient: 1000,\r\n      archiveSize: 200,\r\n      ...parameters\r\n    };\r\n\r\n    // Initialize random number generator\r\n    if (this.parameters.seedValue !== undefined) {\r\n      this.random = this.createSeededRandom(this.parameters.seedValue);\r\n    } else {\r\n      this.random = Math.random;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main multi-objective optimization method\r\n   */\r\n  public async optimizeMultiObjective(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<OptimizationResult> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Validate multi-objective problem\r\n      this.validateMultiObjectiveProblem(problem, objectiveFunctions);\r\n      \r\n      // Initialize algorithm\r\n      this.initializeAlgorithm(problem);\r\n      \r\n      // Create initial population\r\n      await this.createInitialPopulation(problem, objectiveFunctions, constraintFunctions);\r\n      \r\n      // Main optimization loop\r\n      while (!this.shouldTerminate(problem)) {\r\n        await this.evolvePopulation(problem, objectiveFunctions, constraintFunctions);\r\n        this.updateHistory();\r\n        this.updateParetoFront();\r\n      }\r\n      \r\n      // Perform final analysis\r\n      const tradeoffAnalysis = this.performTradeoffAnalysis();\r\n      \r\n      // Create final result\r\n      return this.createMultiObjectiveResult(problem, startTime, tradeoffAnalysis);\r\n      \r\n    } catch (error) {\r\n      console.error('Multi-objective optimization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate multi-objective problem\r\n   */\r\n  private validateMultiObjectiveProblem(problem: OptimizationProblem, objectiveFunctions: ObjectiveFunctionType[]): void {\r\n    if (objectiveFunctions.length < 2) {\r\n      throw new Error('Multi-objective optimization requires at least 2 objective functions');\r\n    }\r\n    \r\n    if (problem.objectives.objectives.length !== objectiveFunctions.length) {\r\n      throw new Error('Number of objective functions must match problem definition');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize algorithm state\r\n   */\r\n  private initializeAlgorithm(problem: OptimizationProblem): void {\r\n    this.currentState = null;\r\n    this.paretoFront = null;\r\n    this.history = [];\r\n    this.populationHistory = [];\r\n    this.evaluationCount = 0;\r\n    \r\n    console.log(`Initializing Multi-objective Optimization (${this.parameters.algorithm}) with population size: ${this.parameters.populationSize}`);\r\n  }\r\n\r\n  /**\r\n   * Create initial population\r\n   */\r\n  private async createInitialPopulation(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    const population: NSGA2Individual[] = [];\r\n    \r\n    // Create random individuals\r\n    for (let i = 0; i < this.parameters.populationSize; i++) {\r\n      const individual = this.createRandomIndividual(problem);\r\n      await this.evaluateIndividual(individual, problem, objectiveFunctions, constraintFunctions);\r\n      population.push(individual);\r\n    }\r\n    \r\n    // Perform non-dominated sorting\r\n    const fronts = this.nonDominatedSort(population);\r\n    \r\n    // Calculate crowding distances\r\n    for (const front of fronts) {\r\n      this.calculateCrowdingDistance(front, objectiveFunctions.length);\r\n    }\r\n    \r\n    // Initialize state\r\n    this.currentState = {\r\n      population,\r\n      archive: [...population],\r\n      paretoFronts: fronts,\r\n      generation: 0,\r\n      hypervolume: this.calculateHypervolume(fronts[0] || []),\r\n      spacing: this.calculateSpacing(fronts[0] || []),\r\n      convergenceMetric: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a random individual\r\n   */\r\n  private createRandomIndividual(problem: OptimizationProblem): NSGA2Individual {\r\n    const variables: { [variableId: string]: number | string } = {};\r\n    \r\n    for (const variable of problem.variables) {\r\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n        // Discrete variable\r\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n        variables[variable.id] = variable.discreteValues[randomIndex];\r\n      } else {\r\n        // Continuous variable\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n        variables[variable.id] = min + this.random() * (max - min);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      id: this.generateIndividualId(),\r\n      variables,\r\n      objectiveValues: {},\r\n      constraintViolations: [],\r\n      feasible: true,\r\n      fitness: 0,\r\n      systemConfiguration: problem.systemConfiguration,\r\n      performanceMetrics: {} as SolutionPerformanceMetrics,\r\n      objectives: [],\r\n      rank: 0,\r\n      crowdingDistance: 0,\r\n      dominationCount: 0,\r\n      dominatedSolutions: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Evaluate individual on all objectives\r\n   */\r\n  private async evaluateIndividual(\r\n    individual: NSGA2Individual,\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    try {\r\n      // Convert individual to optimization variables\r\n      const variables = this.individualToVariables(individual, problem.variables);\r\n      \r\n      // Evaluate all objective functions\r\n      individual.objectives = [];\r\n      for (let i = 0; i < objectiveFunctions.length; i++) {\r\n        const objectiveValue = objectiveFunctions[i](variables);\r\n        individual.objectives.push(objectiveValue);\r\n        \r\n        // Store in objectiveValues map\r\n        if (problem.objectives.objectives[i]) {\r\n          individual.objectiveValues[problem.objectives.objectives[i].id] = objectiveValue;\r\n        }\r\n      }\r\n      \r\n      // Calculate fitness (for single-objective compatibility)\r\n      individual.fitness = this.calculateScalarFitness(individual.objectives, problem);\r\n      \r\n      // Evaluate constraints\r\n      individual.constraintViolations = [];\r\n      for (let i = 0; i < constraintFunctions.length; i++) {\r\n        const violation = constraintFunctions[i](variables);\r\n        individual.constraintViolations.push({\r\n          constraintId: `constraint_${i}`,\r\n          violationType: violation > 0 ? 'inequality' : 'boundary',\r\n          currentValue: violation,\r\n          requiredValue: 0,\r\n          severity: violation > 0 ? 'major' : 'minor',\r\n          penalty: violation > 0 ? violation * this.parameters.penaltyCoefficient : 0\r\n        });\r\n      }\r\n      \r\n      // Check feasibility\r\n      individual.feasible = individual.constraintViolations.every(v => v.currentValue <= 0);\r\n      \r\n      // Apply constraint handling\r\n      if (!individual.feasible && this.parameters.constraintHandling === 'penalty') {\r\n        const totalPenalty = individual.constraintViolations\r\n          .filter(v => v.currentValue > 0)\r\n          .reduce((sum, v) => sum + v.penalty, 0);\r\n        \r\n        // Add penalty to all objectives\r\n        for (let i = 0; i < individual.objectives.length; i++) {\r\n          individual.objectives[i] += totalPenalty;\r\n        }\r\n      }\r\n      \r\n      this.evaluationCount++;\r\n      \r\n    } catch (error) {\r\n      console.error('Error evaluating individual:', error);\r\n      individual.objectives = new Array(objectiveFunctions.length).fill(Number.MAX_VALUE);\r\n      individual.fitness = Number.MAX_VALUE;\r\n      individual.feasible = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert individual to optimization variables\r\n   */\r\n  private individualToVariables(individual: NSGA2Individual, variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\r\n    return variableTemplates.map(template => ({\r\n      ...template,\r\n      currentValue: individual.variables[template.id]\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Calculate scalar fitness for compatibility\r\n   */\r\n  private calculateScalarFitness(objectives: number[], problem: OptimizationProblem): number {\r\n    if (this.parameters.weightedSumWeights && this.parameters.weightedSumWeights.length === objectives.length) {\r\n      // Weighted sum aggregation\r\n      return objectives.reduce((sum, obj, i) => sum + this.parameters.weightedSumWeights![i] * obj, 0);\r\n    } else {\r\n      // Simple sum\r\n      return objectives.reduce((sum, obj) => sum + obj, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evolve population for one generation\r\n   */\r\n  private async evolvePopulation(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    if (!this.currentState) return;\r\n    \r\n    switch (this.parameters.algorithm) {\r\n      case 'nsga2':\r\n        await this.evolveNSGA2(problem, objectiveFunctions, constraintFunctions);\r\n        break;\r\n      case 'weighted_sum':\r\n        await this.evolveWeightedSum(problem, objectiveFunctions, constraintFunctions);\r\n        break;\r\n      default:\r\n        await this.evolveNSGA2(problem, objectiveFunctions, constraintFunctions);\r\n    }\r\n    \r\n    this.currentState.generation++;\r\n  }\r\n\r\n  /**\r\n   * Evolve using NSGA-II algorithm\r\n   */\r\n  private async evolveNSGA2(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    if (!this.currentState) return;\r\n    \r\n    // Create offspring population\r\n    const offspring = await this.createOffspring(problem, objectiveFunctions, constraintFunctions);\r\n    \r\n    // Combine parent and offspring populations\r\n    const combinedPopulation = [...this.currentState.population, ...offspring];\r\n    \r\n    // Perform non-dominated sorting\r\n    const fronts = this.nonDominatedSort(combinedPopulation);\r\n    \r\n    // Select next generation\r\n    const nextGeneration: NSGA2Individual[] = [];\r\n    let frontIndex = 0;\r\n    \r\n    while (nextGeneration.length + fronts[frontIndex].length <= this.parameters.populationSize) {\r\n      // Calculate crowding distance for current front\r\n      this.calculateCrowdingDistance(fronts[frontIndex], objectiveFunctions.length);\r\n      \r\n      // Add entire front\r\n      nextGeneration.push(...fronts[frontIndex]);\r\n      frontIndex++;\r\n      \r\n      if (frontIndex >= fronts.length) break;\r\n    }\r\n    \r\n    // Fill remaining slots with best individuals from next front\r\n    if (nextGeneration.length < this.parameters.populationSize && frontIndex < fronts.length) {\r\n      const remainingSlots = this.parameters.populationSize - nextGeneration.length;\r\n      const lastFront = fronts[frontIndex];\r\n      \r\n      // Calculate crowding distance for last front\r\n      this.calculateCrowdingDistance(lastFront, objectiveFunctions.length);\r\n      \r\n      // Sort by crowding distance (descending)\r\n      lastFront.sort((a, b) => b.crowdingDistance - a.crowdingDistance);\r\n      \r\n      // Add best individuals\r\n      nextGeneration.push(...lastFront.slice(0, remainingSlots));\r\n    }\r\n    \r\n    // Update state\r\n    this.currentState.population = nextGeneration;\r\n    this.currentState.paretoFronts = fronts;\r\n    this.currentState.hypervolume = this.calculateHypervolume(fronts[0] || []);\r\n    this.currentState.spacing = this.calculateSpacing(fronts[0] || []);\r\n    \r\n    // Update archive\r\n    this.updateArchive(fronts[0] || []);\r\n  }\r\n\r\n  /**\r\n   * Create offspring population\r\n   */\r\n  private async createOffspring(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<NSGA2Individual[]> {\r\n    const offspring: NSGA2Individual[] = [];\r\n    \r\n    while (offspring.length < this.parameters.populationSize) {\r\n      // Tournament selection\r\n      const parent1 = this.tournamentSelection();\r\n      const parent2 = this.tournamentSelection();\r\n      \r\n      if (!parent1 || !parent2) continue;\r\n      \r\n      // Crossover\r\n      if (this.random() < this.parameters.crossoverRate) {\r\n        const [child1, child2] = this.crossover(parent1, parent2, problem);\r\n        \r\n        // Mutation\r\n        if (this.random() < this.parameters.mutationRate) {\r\n          this.mutate(child1, problem);\r\n        }\r\n        if (this.random() < this.parameters.mutationRate) {\r\n          this.mutate(child2, problem);\r\n        }\r\n        \r\n        // Evaluate children\r\n        await this.evaluateIndividual(child1, problem, objectiveFunctions, constraintFunctions);\r\n        await this.evaluateIndividual(child2, problem, objectiveFunctions, constraintFunctions);\r\n        \r\n        offspring.push(child1);\r\n        if (offspring.length < this.parameters.populationSize) {\r\n          offspring.push(child2);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return offspring;\r\n  }\r\n\r\n  /**\r\n   * Tournament selection for NSGA-II\r\n   */\r\n  private tournamentSelection(): NSGA2Individual | null {\r\n    if (!this.currentState || this.currentState.population.length === 0) return null;\r\n    \r\n    const tournamentSize = 2;\r\n    const tournament: NSGA2Individual[] = [];\r\n    \r\n    // Select random individuals for tournament\r\n    for (let i = 0; i < tournamentSize; i++) {\r\n      const randomIndex = Math.floor(this.random() * this.currentState.population.length);\r\n      tournament.push(this.currentState.population[randomIndex]);\r\n    }\r\n    \r\n    // Select best individual based on rank and crowding distance\r\n    return tournament.reduce((best, current) => {\r\n      if (current.rank < best.rank) {\r\n        return current;\r\n      } else if (current.rank === best.rank && current.crowdingDistance > best.crowdingDistance) {\r\n        return current;\r\n      }\r\n      return best;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Crossover operation\r\n   */\r\n  private crossover(parent1: NSGA2Individual, parent2: NSGA2Individual, problem: OptimizationProblem): [NSGA2Individual, NSGA2Individual] {\r\n    const child1 = this.createRandomIndividual(problem);\r\n    const child2 = this.createRandomIndividual(problem);\r\n    \r\n    // Simulated binary crossover (SBX) for continuous variables\r\n    const eta = 20; // Distribution index\r\n    \r\n    for (const variable of problem.variables) {\r\n      const value1 = parent1.variables[variable.id];\r\n      const value2 = parent2.variables[variable.id];\r\n      \r\n      if (typeof value1 === 'number' && typeof value2 === 'number') {\r\n        // Continuous variable - SBX\r\n        const u = this.random();\r\n        const beta = u <= 0.5 ? \r\n          Math.pow(2 * u, 1 / (eta + 1)) : \r\n          Math.pow(1 / (2 * (1 - u)), 1 / (eta + 1));\r\n        \r\n        const child1Value = 0.5 * ((1 + beta) * value1 + (1 - beta) * value2);\r\n        const child2Value = 0.5 * ((1 - beta) * value1 + (1 + beta) * value2);\r\n        \r\n        // Apply bounds\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : -Infinity;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : Infinity;\r\n        \r\n        child1.variables[variable.id] = Math.max(min, Math.min(max, child1Value));\r\n        child2.variables[variable.id] = Math.max(min, Math.min(max, child2Value));\r\n      } else {\r\n        // Discrete variable - random selection\r\n        child1.variables[variable.id] = this.random() < 0.5 ? value1 : value2;\r\n        child2.variables[variable.id] = this.random() < 0.5 ? value1 : value2;\r\n      }\r\n    }\r\n    \r\n    return [child1, child2];\r\n  }\r\n\r\n  /**\r\n   * Mutation operation\r\n   */\r\n  private mutate(individual: NSGA2Individual, problem: OptimizationProblem): void {\r\n    const eta = 20; // Distribution index\r\n    \r\n    for (const variable of problem.variables) {\r\n      if (this.random() < (1 / problem.variables.length)) { // Mutation probability per variable\r\n        const currentValue = individual.variables[variable.id];\r\n        \r\n        if (typeof currentValue === 'number') {\r\n          // Continuous variable - polynomial mutation\r\n          const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n          const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n          \r\n          const u = this.random();\r\n          const delta = u < 0.5 ? \r\n            Math.pow(2 * u, 1 / (eta + 1)) - 1 : \r\n            1 - Math.pow(2 * (1 - u), 1 / (eta + 1));\r\n          \r\n          const mutatedValue = currentValue + delta * (max - min);\r\n          individual.variables[variable.id] = Math.max(min, Math.min(max, mutatedValue));\r\n        } else if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n          // Discrete variable - random selection\r\n          const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n          individual.variables[variable.id] = variable.discreteValues[randomIndex];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Non-dominated sorting\r\n   */\r\n  private nonDominatedSort(population: NSGA2Individual[]): NSGA2Individual[][] {\r\n    const fronts: NSGA2Individual[][] = [];\r\n    \r\n    // Initialize domination properties\r\n    for (const individual of population) {\r\n      individual.dominationCount = 0;\r\n      individual.dominatedSolutions = [];\r\n    }\r\n    \r\n    // Calculate domination relationships\r\n    for (let i = 0; i < population.length; i++) {\r\n      for (let j = i + 1; j < population.length; j++) {\r\n        const dominance = this.checkDominance(population[i], population[j]);\r\n        \r\n        if (dominance === 'first_dominates') {\r\n          population[i].dominatedSolutions.push(population[j].id);\r\n          population[j].dominationCount++;\r\n        } else if (dominance === 'second_dominates') {\r\n          population[j].dominatedSolutions.push(population[i].id);\r\n          population[i].dominationCount++;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Create first front\r\n    const firstFront: NSGA2Individual[] = [];\r\n    for (const individual of population) {\r\n      if (individual.dominationCount === 0) {\r\n        individual.rank = 0;\r\n        firstFront.push(individual);\r\n      }\r\n    }\r\n    \r\n    if (firstFront.length > 0) {\r\n      fronts.push(firstFront);\r\n    }\r\n    \r\n    // Create subsequent fronts\r\n    let currentFront = firstFront;\r\n    let frontIndex = 0;\r\n    \r\n    while (currentFront.length > 0) {\r\n      const nextFront: NSGA2Individual[] = [];\r\n      \r\n      for (const individual of currentFront) {\r\n        for (const dominatedId of individual.dominatedSolutions) {\r\n          const dominated = population.find(p => p.id === dominatedId);\r\n          if (dominated) {\r\n            dominated.dominationCount--;\r\n            if (dominated.dominationCount === 0) {\r\n              dominated.rank = frontIndex + 1;\r\n              nextFront.push(dominated);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (nextFront.length > 0) {\r\n        fronts.push(nextFront);\r\n      }\r\n      \r\n      currentFront = nextFront;\r\n      frontIndex++;\r\n    }\r\n    \r\n    return fronts;\r\n  }\r\n\r\n  /**\r\n   * Check dominance relationship between two individuals\r\n   */\r\n  private checkDominance(individual1: NSGA2Individual, individual2: NSGA2Individual): DominanceRelation {\r\n    let firstBetter = false;\r\n    let secondBetter = false;\r\n    \r\n    for (let i = 0; i < individual1.objectives.length; i++) {\r\n      if (individual1.objectives[i] < individual2.objectives[i]) {\r\n        firstBetter = true;\r\n      } else if (individual1.objectives[i] > individual2.objectives[i]) {\r\n        secondBetter = true;\r\n      }\r\n    }\r\n    \r\n    if (firstBetter && !secondBetter) {\r\n      return 'first_dominates';\r\n    } else if (secondBetter && !firstBetter) {\r\n      return 'second_dominates';\r\n    } else {\r\n      return 'non_dominated';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate crowding distance\r\n   */\r\n  private calculateCrowdingDistance(front: NSGA2Individual[], numObjectives: number): void {\r\n    const frontSize = front.length;\r\n    \r\n    // Initialize crowding distances\r\n    for (const individual of front) {\r\n      individual.crowdingDistance = 0;\r\n    }\r\n    \r\n    if (frontSize <= 2) {\r\n      // Boundary solutions get infinite distance\r\n      for (const individual of front) {\r\n        individual.crowdingDistance = Infinity;\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Calculate crowding distance for each objective\r\n    for (let obj = 0; obj < numObjectives; obj++) {\r\n      // Sort by objective value\r\n      front.sort((a, b) => a.objectives[obj] - b.objectives[obj]);\r\n      \r\n      // Boundary solutions get infinite distance\r\n      front[0].crowdingDistance = Infinity;\r\n      front[frontSize - 1].crowdingDistance = Infinity;\r\n      \r\n      // Calculate distance for intermediate solutions\r\n      const objectiveRange = front[frontSize - 1].objectives[obj] - front[0].objectives[obj];\r\n      \r\n      if (objectiveRange > 0) {\r\n        for (let i = 1; i < frontSize - 1; i++) {\r\n          const distance = (front[i + 1].objectives[obj] - front[i - 1].objectives[obj]) / objectiveRange;\r\n          front[i].crowdingDistance += distance;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evolve using weighted sum approach\r\n   */\r\n  private async evolveWeightedSum(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    // Use genetic algorithm with weighted sum aggregation\r\n    const gaParameters: Partial<GeneticAlgorithmParameters> = {\r\n      populationSize: this.parameters.populationSize,\r\n      maxGenerations: 1, // Single generation evolution\r\n      crossoverRate: this.parameters.crossoverRate,\r\n      mutationRate: this.parameters.mutationRate,\r\n      eliteSize: this.parameters.eliteSize,\r\n      constraintHandling: this.parameters.constraintHandling,\r\n      penaltyCoefficient: this.parameters.penaltyCoefficient\r\n    };\r\n    \r\n    const ga = new GeneticAlgorithm(gaParameters);\r\n    \r\n    // Create weighted objective function\r\n    const weightedObjectiveFunction = (variables: OptimizationVariable[]): number => {\r\n      let weightedSum = 0;\r\n      for (let i = 0; i < objectiveFunctions.length; i++) {\r\n        const weight = this.parameters.weightedSumWeights?.[i] || (1 / objectiveFunctions.length);\r\n        weightedSum += weight * objectiveFunctions[i](variables);\r\n      }\r\n      return weightedSum;\r\n    };\r\n    \r\n    // Evolve population\r\n    const result = await ga.optimize(problem, weightedObjectiveFunction, constraintFunctions);\r\n    \r\n    // Convert result back to multi-objective format\r\n    if (this.currentState && result.bestSolution) {\r\n      // Update population with new solutions (simplified)\r\n      const newIndividual = this.solutionToIndividual(result.bestSolution, problem);\r\n      await this.evaluateIndividual(newIndividual, problem, objectiveFunctions, constraintFunctions);\r\n      \r\n      // Replace worst individual\r\n      this.currentState.population.sort((a, b) => a.fitness - b.fitness);\r\n      this.currentState.population[this.currentState.population.length - 1] = newIndividual;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert optimization solution to NSGA2 individual\r\n   */\r\n  private solutionToIndividual(solution: OptimizationSolution, problem: OptimizationProblem): NSGA2Individual {\r\n    return {\r\n      ...solution,\r\n      objectives: [],\r\n      rank: 0,\r\n      crowdingDistance: 0,\r\n      dominationCount: 0,\r\n      dominatedSolutions: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update archive with non-dominated solutions\r\n   */\r\n  private updateArchive(paretoFront: NSGA2Individual[]): void {\r\n    if (!this.currentState) return;\r\n    \r\n    // Add new non-dominated solutions to archive\r\n    for (const individual of paretoFront) {\r\n      const isDominated = this.currentState.archive.some(archived => \r\n        this.checkDominance(archived, individual) === 'first_dominates'\r\n      );\r\n      \r\n      if (!isDominated) {\r\n        // Remove dominated solutions from archive\r\n        this.currentState.archive = this.currentState.archive.filter(archived =>\r\n          this.checkDominance(individual, archived) !== 'first_dominates'\r\n        );\r\n        \r\n        // Add new solution\r\n        this.currentState.archive.push({ ...individual });\r\n      }\r\n    }\r\n    \r\n    // Limit archive size\r\n    if (this.currentState.archive.length > this.parameters.archiveSize) {\r\n      // Sort by crowding distance and keep best\r\n      this.calculateCrowdingDistance(this.currentState.archive, this.currentState.archive[0]?.objectives.length || 0);\r\n      this.currentState.archive.sort((a, b) => b.crowdingDistance - a.crowdingDistance);\r\n      this.currentState.archive = this.currentState.archive.slice(0, this.parameters.archiveSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update Pareto front\r\n   */\r\n  private updateParetoFront(): void {\r\n    if (!this.currentState || this.currentState.paretoFronts.length === 0) return;\r\n    \r\n    const paretoSolutions: ParetoSolution[] = this.currentState.paretoFronts[0].map(individual => ({\r\n      id: individual.id,\r\n      objectives: [...individual.objectives],\r\n      variables: { ...individual.variables },\r\n      dominanceRank: individual.rank,\r\n      crowdingDistance: individual.crowdingDistance,\r\n      feasible: individual.feasible,\r\n      constraintViolations: individual.constraintViolations.length\r\n    }));\r\n    \r\n    this.paretoFront = {\r\n      solutions: paretoSolutions,\r\n      hypervolume: this.currentState.hypervolume,\r\n      spacing: this.currentState.spacing,\r\n      convergenceMetric: this.currentState.convergenceMetric,\r\n      generationFound: this.currentState.generation,\r\n      dominanceDepth: 1\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate hypervolume indicator\r\n   */\r\n  private calculateHypervolume(paretoFront: NSGA2Individual[]): number {\r\n    if (paretoFront.length === 0) return 0;\r\n    \r\n    // Simplified hypervolume calculation\r\n    // In practice, would use more sophisticated algorithms like WFG or FPRAS\r\n    \r\n    const referencePoint = this.parameters.paretoSettings.hypervolume.referencePoint;\r\n    if (referencePoint.length === 0) {\r\n      // Use worst values as reference point\r\n      const numObjectives = paretoFront[0]?.objectives.length || 0;\r\n      for (let i = 0; i < numObjectives; i++) {\r\n        const maxValue = Math.max(...paretoFront.map(ind => ind.objectives[i]));\r\n        referencePoint.push(maxValue * 1.1); // 10% worse than worst\r\n      }\r\n    }\r\n    \r\n    // Simple hypervolume approximation\r\n    let hypervolume = 0;\r\n    for (const individual of paretoFront) {\r\n      let volume = 1;\r\n      for (let i = 0; i < individual.objectives.length; i++) {\r\n        volume *= Math.max(0, referencePoint[i] - individual.objectives[i]);\r\n      }\r\n      hypervolume += volume;\r\n    }\r\n    \r\n    return hypervolume;\r\n  }\r\n\r\n  /**\r\n   * Calculate spacing metric\r\n   */\r\n  private calculateSpacing(paretoFront: NSGA2Individual[]): number {\r\n    if (paretoFront.length < 2) return 0;\r\n    \r\n    const distances: number[] = [];\r\n    \r\n    for (let i = 0; i < paretoFront.length; i++) {\r\n      let minDistance = Infinity;\r\n      \r\n      for (let j = 0; j < paretoFront.length; j++) {\r\n        if (i !== j) {\r\n          const distance = this.calculateObjectiveDistance(paretoFront[i], paretoFront[j]);\r\n          minDistance = Math.min(minDistance, distance);\r\n        }\r\n      }\r\n      \r\n      distances.push(minDistance);\r\n    }\r\n    \r\n    const meanDistance = distances.reduce((sum, d) => sum + d, 0) / distances.length;\r\n    const variance = distances.reduce((sum, d) => sum + Math.pow(d - meanDistance, 2), 0) / distances.length;\r\n    \r\n    return Math.sqrt(variance);\r\n  }\r\n\r\n  /**\r\n   * Calculate distance between two individuals in objective space\r\n   */\r\n  private calculateObjectiveDistance(individual1: NSGA2Individual, individual2: NSGA2Individual): number {\r\n    let distance = 0;\r\n    for (let i = 0; i < individual1.objectives.length; i++) {\r\n      const diff = individual1.objectives[i] - individual2.objectives[i];\r\n      distance += diff * diff;\r\n    }\r\n    return Math.sqrt(distance);\r\n  }\r\n\r\n  /**\r\n   * Perform trade-off analysis\r\n   */\r\n  private performTradeoffAnalysis(): TradeoffAnalysis {\r\n    if (!this.paretoFront) {\r\n      return {\r\n        kneePoints: [],\r\n        tradeoffCurves: [],\r\n        sensitivityAnalysis: {},\r\n        recommendations: []\r\n      };\r\n    }\r\n    \r\n    // Find knee points (solutions with best trade-offs)\r\n    const kneePoints = this.findKneePoints();\r\n    \r\n    // Generate trade-off curves\r\n    const tradeoffCurves = this.generateTradeoffCurves();\r\n    \r\n    // Perform sensitivity analysis\r\n    const sensitivityAnalysis = this.performSensitivityAnalysis();\r\n    \r\n    // Generate recommendations\r\n    const recommendations = this.generateRecommendations(kneePoints);\r\n    \r\n    return {\r\n      kneePoints,\r\n      tradeoffCurves,\r\n      sensitivityAnalysis,\r\n      recommendations\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find knee points in Pareto front\r\n   */\r\n  private findKneePoints(): KneePoint[] {\r\n    if (!this.paretoFront || this.paretoFront.solutions.length < 3) return [];\r\n    \r\n    const kneePoints: KneePoint[] = [];\r\n    const solutions = this.paretoFront.solutions;\r\n    \r\n    // Simple knee point detection using angle-based method\r\n    for (let i = 1; i < solutions.length - 1; i++) {\r\n      const prev = solutions[i - 1];\r\n      const current = solutions[i];\r\n      const next = solutions[i + 1];\r\n      \r\n      // Calculate angle at current point\r\n      const angle = this.calculateAngle(prev.objectives, current.objectives, next.objectives);\r\n      \r\n      // Knee points have small angles (sharp turns)\r\n      if (angle < Math.PI / 3) { // 60 degrees threshold\r\n        kneePoints.push({\r\n          solutionId: current.id,\r\n          objectives: [...current.objectives],\r\n          kneeMetric: Math.PI - angle, // Higher value = sharper knee\r\n          tradeoffRatio: this.calculateTradeoffRatio(current.objectives),\r\n          description: `Knee point with ${(Math.PI - angle).toFixed(3)} knee metric`\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Sort by knee metric (best knees first)\r\n    kneePoints.sort((a, b) => b.kneeMetric - a.kneeMetric);\r\n    \r\n    return kneePoints.slice(0, 5); // Return top 5 knee points\r\n  }\r\n\r\n  /**\r\n   * Calculate angle between three points\r\n   */\r\n  private calculateAngle(p1: number[], p2: number[], p3: number[]): number {\r\n    const v1 = p1.map((val, i) => val - p2[i]);\r\n    const v2 = p3.map((val, i) => val - p2[i]);\r\n    \r\n    const dot = v1.reduce((sum, val, i) => sum + val * v2[i], 0);\r\n    const mag1 = Math.sqrt(v1.reduce((sum, val) => sum + val * val, 0));\r\n    const mag2 = Math.sqrt(v2.reduce((sum, val) => sum + val * val, 0));\r\n    \r\n    if (mag1 === 0 || mag2 === 0) return Math.PI;\r\n    \r\n    const cosAngle = dot / (mag1 * mag2);\r\n    return Math.acos(Math.max(-1, Math.min(1, cosAngle)));\r\n  }\r\n\r\n  /**\r\n   * Calculate trade-off ratio for objectives\r\n   */\r\n  private calculateTradeoffRatio(objectives: number[]): number {\r\n    if (objectives.length !== 2) return 1; // Only for bi-objective problems\r\n    \r\n    return objectives[0] / objectives[1];\r\n  }\r\n\r\n  /**\r\n   * Generate trade-off curves\r\n   */\r\n  private generateTradeoffCurves(): any[] {\r\n    // Simplified implementation - would generate actual curve data\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Perform sensitivity analysis\r\n   */\r\n  private performSensitivityAnalysis(): any {\r\n    // Simplified implementation - would analyze parameter sensitivity\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Generate recommendations based on analysis\r\n   */\r\n  private generateRecommendations(kneePoints: KneePoint[]): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    if (kneePoints.length > 0) {\r\n      recommendations.push(`Consider solution ${kneePoints[0].solutionId} as it represents the best trade-off between objectives.`);\r\n    }\r\n    \r\n    if (this.paretoFront && this.paretoFront.solutions.length > 10) {\r\n      recommendations.push('Large Pareto front indicates good diversity in solutions. Consider multiple alternatives.');\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Check termination criteria\r\n   */\r\n  private shouldTerminate(problem: OptimizationProblem): boolean {\r\n    if (!this.currentState) return true;\r\n    \r\n    // Maximum generations\r\n    if (this.currentState.generation >= this.parameters.maxGenerations) {\r\n      return true;\r\n    }\r\n    \r\n    // Convergence check\r\n    if (this.history.length >= 10) {\r\n      const recentHistory = this.history.slice(-10);\r\n      const hypervolumeImprovement = recentHistory[recentHistory.length - 1].bestFitness - recentHistory[0].bestFitness;\r\n      \r\n      if (Math.abs(hypervolumeImprovement) < this.parameters.paretoSettings.convergenceThreshold) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Update optimization history\r\n   */\r\n  private updateHistory(): void {\r\n    if (!this.currentState) return;\r\n    \r\n    const feasibleIndividuals = this.currentState.population.filter(ind => ind.feasible);\r\n    const fitnesses = feasibleIndividuals.map(ind => ind.fitness);\r\n    \r\n    if (fitnesses.length === 0) {\r\n      fitnesses.push(Number.MAX_VALUE);\r\n    }\r\n    \r\n    const history: IterationHistory = {\r\n      iteration: this.currentState.generation,\r\n      bestFitness: Math.min(...fitnesses),\r\n      averageFitness: fitnesses.reduce((sum, f) => sum + f, 0) / fitnesses.length,\r\n      worstFitness: Math.max(...fitnesses),\r\n      diversity: this.currentState.spacing,\r\n      constraintViolations: this.currentState.population.filter(ind => !ind.feasible).length,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    this.history.push(history);\r\n  }\r\n\r\n  /**\r\n   * Create multi-objective optimization result\r\n   */\r\n  private createMultiObjectiveResult(problem: OptimizationProblem, startTime: number, tradeoffAnalysis: TradeoffAnalysis): OptimizationResult {\r\n    const executionTime = performance.now() - startTime;\r\n    \r\n    // Find best solution (first in Pareto front)\r\n    const bestSolution = this.currentState?.paretoFronts[0]?.[0] || this.currentState?.population[0];\r\n    \r\n    const statistics: OptimizationStatistics = {\r\n      totalIterations: this.currentState?.generation || 0,\r\n      totalEvaluations: this.evaluationCount,\r\n      convergenceIteration: this.currentState?.generation || 0,\r\n      executionTime,\r\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\r\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\r\n      diversityHistory: this.history.map(h => h.diversity),\r\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\r\n      algorithmSpecificStats: {\r\n        algorithm: this.parameters.algorithm,\r\n        populationSize: this.parameters.populationSize,\r\n        paretoFrontSize: this.currentState?.paretoFronts[0]?.length || 0,\r\n        hypervolume: this.currentState?.hypervolume || 0,\r\n        spacing: this.currentState?.spacing || 0,\r\n        archiveSize: this.currentState?.archive.length || 0\r\n      }\r\n    };\r\n    \r\n    const optimizationHistory: OptimizationHistory = {\r\n      iterations: this.history,\r\n      populationHistory: this.populationHistory,\r\n      parameterHistory: [],\r\n      convergenceMetrics: []\r\n    };\r\n    \r\n    return {\r\n      problemId: problem.id,\r\n      status: OptimizationStatus.CONVERGED,\r\n      bestSolution: bestSolution || this.createDummySolution(problem),\r\n      statistics,\r\n      history: optimizationHistory,\r\n      analysis: {\r\n        paretoFront: this.paretoFront,\r\n        tradeoffAnalysis\r\n      },\r\n      recommendations: tradeoffAnalysis.recommendations,\r\n      warnings: [],\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create dummy solution for error cases\r\n   */\r\n  private createDummySolution(problem: OptimizationProblem): OptimizationSolution {\r\n    const variables: { [variableId: string]: number | string } = {};\r\n    for (const variable of problem.variables) {\r\n      variables[variable.id] = 0;\r\n    }\r\n    \r\n    return {\r\n      id: 'dummy_solution',\r\n      variables,\r\n      objectiveValues: {},\r\n      constraintViolations: [],\r\n      feasible: false,\r\n      fitness: Number.MAX_VALUE,\r\n      systemConfiguration: problem.systemConfiguration,\r\n      performanceMetrics: {} as SolutionPerformanceMetrics\r\n    };\r\n  }\r\n\r\n  // Utility methods\r\n  private generateIndividualId(): string {\r\n    return `mo_ind_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private createSeededRandom(seed: number): () => number {\r\n    let state = seed;\r\n    return () => {\r\n      state = (state * 9301 + 49297) % 233280;\r\n      return state / 233280;\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}