{"version":3,"names":["cov_18q4o288he","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","demonstrateFittingLossCalculation","demonstrateSystemPressureCalculation","demonstrateComplexSystem","demonstrateIntegrationWithExisting","runAllExamples","FittingLossCalculator_1","require","SystemPressureCalculator_1","AirDuctCalculator_1","console","log","elbowConfig","ductShape","diameter","parameter","velocity","result","FittingLossCalculator","calculateFittingLoss","kFactor","velocityPressure","toFixed","pressureLoss","configuration","warnings","length","join","recommendations","segments","id","airflow","material","notes","fittingConfig","inputs","systemType","designConditions","temperature","barometricPressure","altitude","calculationOptions","includeElevationEffects","includeTemperatureEffects","frictionMethod","roundingPrecision","systemResult","SystemPressureCalculator","calculateSystemPressure","totalPressureLoss","totalFrictionLoss","totalMinorLoss","totalLength","averageVelocity","maxVelocity","segmentResults","forEach","segment","index","segmentId","segmentType","frictionLoss","minorLoss","totalLoss","complianceStatus","velocityCompliant","pressureCompliant","smacnaCompliant","systemWarnings","warning","systemRecommendations","rec","complexSegments","subtype","complexInputs","complexResult","minVelocity","basicResult","AirDuctCalculator","calculateDuctSizing","ductType","frictionRate","units","enhancedSegments","enhancedInputs","enhancedResult","Math","abs","error","process","exit","main","module"],"sources":["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/examples/duct-physics-integration-example.ts"],"sourcesContent":["/**\n * Duct Physics Integration Example\n * \n * Demonstrates the comprehensive duct physics implementation\n * Shows how to use FittingLossCalculator and SystemPressureCalculator\n * \n * Example: 10″ round duct → 10′ run → 90° elbow → 10′ run\n */\n\nimport { FittingLossCalculator, FittingConfiguration } from '../FittingLossCalculator';\nimport { SystemPressureCalculator, DuctSegment, SystemCalculationInputs } from '../SystemPressureCalculator';\nimport { AirDuctCalculator } from '../AirDuctCalculator';\n\n/**\n * Example 1: Individual Fitting Loss Calculation\n */\nfunction demonstrateFittingLossCalculation() {\n  console.log('\\n=== FITTING LOSS CALCULATION EXAMPLE ===');\n  \n  // Example: 90° smooth elbow with R/D = 1.5\n  const elbowConfig: FittingConfiguration = {\n    type: '90deg_round_smooth',\n    ductShape: 'round',\n    diameter: 10,\n    parameter: '1.5'\n  };\n\n  const velocity = 1833; // FPM (calculated from 1000 CFM in 10\" duct)\n  const result = FittingLossCalculator.calculateFittingLoss(elbowConfig, velocity);\n\n  console.log('90° Smooth Elbow (R/D = 1.5):');\n  console.log(`  K-factor: ${result.kFactor}`);\n  console.log(`  Velocity Pressure: ${result.velocityPressure.toFixed(4)} in wg`);\n  console.log(`  Pressure Loss: ${result.pressureLoss.toFixed(4)} in wg`);\n  console.log(`  Configuration: ${result.configuration}`);\n  \n  if (result.warnings.length > 0) {\n    console.log(`  Warnings: ${result.warnings.join(', ')}`);\n  }\n  \n  if (result.recommendations.length > 0) {\n    console.log(`  Recommendations: ${result.recommendations.join(', ')}`);\n  }\n\n  return result;\n}\n\n/**\n * Example 2: Complete System Pressure Drop Calculation\n * User's example: 10″ round duct → 10′ run → 90° elbow → 10′ run\n */\nfunction demonstrateSystemPressureCalculation() {\n  console.log('\\n=== SYSTEM PRESSURE DROP CALCULATION EXAMPLE ===');\n  console.log('System: 10″ round duct → 10′ run → 90° elbow → 10′ run');\n  \n  // Define system segments\n  const segments: DuctSegment[] = [\n    // First straight run: 10 feet\n    {\n      id: 'straight-run-1',\n      type: 'straight',\n      ductShape: 'round',\n      length: 10,\n      diameter: 10,\n      airflow: 1000,\n      material: 'galvanized_steel',\n      notes: 'First straight section'\n    },\n    \n    // 90° elbow with R/D = 1.5\n    {\n      id: 'elbow-90deg',\n      type: 'fitting',\n      ductShape: 'round',\n      diameter: 10,\n      airflow: 1000,\n      material: 'galvanized_steel',\n      fittingConfig: {\n        type: '90deg_round_smooth',\n        ductShape: 'round',\n        diameter: 10,\n        parameter: '1.5'\n      },\n      notes: '90° smooth elbow'\n    },\n    \n    // Second straight run: 10 feet\n    {\n      id: 'straight-run-2',\n      type: 'straight',\n      ductShape: 'round',\n      length: 10,\n      diameter: 10,\n      airflow: 1000,\n      material: 'galvanized_steel',\n      notes: 'Second straight section'\n    }\n  ];\n\n  // System calculation inputs\n  const inputs: SystemCalculationInputs = {\n    segments,\n    systemType: 'supply',\n    designConditions: {\n      temperature: 70, // °F\n      barometricPressure: 29.92, // in Hg\n      altitude: 0 // feet above sea level\n    },\n    calculationOptions: {\n      includeElevationEffects: false,\n      includeTemperatureEffects: true,\n      frictionMethod: 'darcy_weisbach',\n      roundingPrecision: 4\n    }\n  };\n\n  // Calculate system pressure drop\n  const systemResult = SystemPressureCalculator.calculateSystemPressure(inputs);\n\n  console.log('\\nSystem Results:');\n  console.log(`  Total Pressure Loss: ${systemResult.totalPressureLoss} in wg`);\n  console.log(`  Total Friction Loss: ${systemResult.totalFrictionLoss} in wg`);\n  console.log(`  Total Minor Loss: ${systemResult.totalMinorLoss} in wg`);\n  console.log(`  Total Length: ${systemResult.totalLength} feet`);\n  console.log(`  Average Velocity: ${systemResult.averageVelocity} FPM`);\n  console.log(`  Max Velocity: ${systemResult.maxVelocity} FPM`);\n\n  console.log('\\nSegment Details:');\n  systemResult.segmentResults.forEach((segment, index) => {\n    console.log(`  Segment ${index + 1} (${segment.segmentId}):`);\n    console.log(`    Type: ${segment.segmentType}`);\n    console.log(`    Velocity: ${segment.velocity} FPM`);\n    console.log(`    Velocity Pressure: ${segment.velocityPressure} in wg`);\n    console.log(`    Friction Loss: ${segment.frictionLoss} in wg`);\n    console.log(`    Minor Loss: ${segment.minorLoss} in wg`);\n    console.log(`    Total Loss: ${segment.totalLoss} in wg`);\n    \n    if (segment.kFactor) {\n      console.log(`    K-factor: ${segment.kFactor}`);\n    }\n    \n    if (segment.warnings.length > 0) {\n      console.log(`    Warnings: ${segment.warnings.join(', ')}`);\n    }\n  });\n\n  console.log('\\nCompliance Status:');\n  console.log(`  Velocity Compliant: ${systemResult.complianceStatus.velocityCompliant}`);\n  console.log(`  Pressure Compliant: ${systemResult.complianceStatus.pressureCompliant}`);\n  console.log(`  SMACNA Compliant: ${systemResult.complianceStatus.smacnaCompliant}`);\n\n  if (systemResult.systemWarnings.length > 0) {\n    console.log('\\nSystem Warnings:');\n    systemResult.systemWarnings.forEach(warning => console.log(`  - ${warning}`));\n  }\n\n  if (systemResult.systemRecommendations.length > 0) {\n    console.log('\\nSystem Recommendations:');\n    systemResult.systemRecommendations.forEach(rec => console.log(`  - ${rec}`));\n  }\n\n  return systemResult;\n}\n\n/**\n * Example 3: Complex System with Multiple Fittings\n */\nfunction demonstrateComplexSystem() {\n  console.log('\\n=== COMPLEX SYSTEM EXAMPLE ===');\n  console.log('System: Supply duct with multiple fittings and transitions');\n  \n  const complexSegments: DuctSegment[] = [\n    // Main trunk: 12\" round, 20 feet\n    {\n      id: 'main-trunk',\n      type: 'straight',\n      ductShape: 'round',\n      length: 20,\n      diameter: 12,\n      airflow: 2000,\n      material: 'galvanized_steel'\n    },\n    \n    // Tee for branch takeoff\n    {\n      id: 'main-tee',\n      type: 'fitting',\n      ductShape: 'round',\n      diameter: 12,\n      airflow: 2000,\n      material: 'galvanized_steel',\n      fittingConfig: {\n        type: 'tee_round_branch_90deg',\n        ductShape: 'round',\n        diameter: 12,\n        subtype: 'straight_through',\n        parameter: '0.6' // Branch area ratio\n      }\n    },\n    \n    // Transition from 12\" to 10\"\n    {\n      id: 'transition-12-to-10',\n      type: 'fitting',\n      ductShape: 'round',\n      diameter: 12,\n      airflow: 1500, // Reduced flow after branch\n      material: 'galvanized_steel',\n      fittingConfig: {\n        type: 'round_to_round_gradual',\n        ductShape: 'round',\n        diameter: 12,\n        parameter: '2.5' // L/D ratio\n      }\n    },\n    \n    // 10\" duct run\n    {\n      id: 'reduced-run',\n      type: 'straight',\n      ductShape: 'round',\n      length: 15,\n      diameter: 10,\n      airflow: 1500,\n      material: 'galvanized_steel'\n    },\n    \n    // 90° elbow\n    {\n      id: 'final-elbow',\n      type: 'fitting',\n      ductShape: 'round',\n      diameter: 10,\n      airflow: 1500,\n      material: 'galvanized_steel',\n      fittingConfig: {\n        type: '90deg_round_smooth',\n        ductShape: 'round',\n        diameter: 10,\n        parameter: '1.5'\n      }\n    },\n    \n    // Final run to diffuser\n    {\n      id: 'final-run',\n      type: 'straight',\n      ductShape: 'round',\n      length: 8,\n      diameter: 10,\n      airflow: 1500,\n      material: 'galvanized_steel'\n    }\n  ];\n\n  const complexInputs: SystemCalculationInputs = {\n    segments: complexSegments,\n    systemType: 'supply',\n    designConditions: {\n      temperature: 75,\n      barometricPressure: 29.92,\n      altitude: 0\n    },\n    calculationOptions: {\n      includeElevationEffects: false,\n      includeTemperatureEffects: true,\n      frictionMethod: 'darcy_weisbach',\n      roundingPrecision: 3\n    }\n  };\n\n  const complexResult = SystemPressureCalculator.calculateSystemPressure(complexInputs);\n\n  console.log('\\nComplex System Results:');\n  console.log(`  Total Pressure Loss: ${complexResult.totalPressureLoss} in wg`);\n  console.log(`  Friction vs Minor Loss Ratio: ${(complexResult.totalFrictionLoss / complexResult.totalMinorLoss).toFixed(2)}`);\n  console.log(`  System Length: ${complexResult.totalLength} feet`);\n  console.log(`  Velocity Range: ${complexResult.minVelocity} - ${complexResult.maxVelocity} FPM`);\n\n  return complexResult;\n}\n\n/**\n * Example 4: Comparison with Existing AirDuctCalculator\n */\nfunction demonstrateIntegrationWithExisting() {\n  console.log('\\n=== INTEGRATION WITH EXISTING CALCULATOR ===');\n  \n  // Use existing AirDuctCalculator for basic sizing\n  const basicResult = AirDuctCalculator.calculateDuctSizing({\n    airflow: 1000,\n    ductType: 'round',\n    frictionRate: 0.08,\n    units: 'imperial',\n    material: 'galvanized_steel'\n  });\n\n  console.log('Basic Duct Sizing (AirDuctCalculator):');\n  console.log(`  Recommended Diameter: ${basicResult.diameter}\" round`);\n  console.log(`  Velocity: ${basicResult.velocity} FPM`);\n  console.log(`  Pressure Loss: ${basicResult.pressureLoss} in wg/100 ft`);\n\n  // Now use new system calculator for complete analysis\n  const enhancedSegments: DuctSegment[] = [\n    {\n      id: 'sized-duct',\n      type: 'straight',\n      ductShape: 'round',\n      length: 100, // 100 feet for comparison\n      diameter: basicResult.diameter,\n      airflow: 1000,\n      material: 'galvanized_steel'\n    }\n  ];\n\n  const enhancedInputs: SystemCalculationInputs = {\n    segments: enhancedSegments,\n    systemType: 'supply',\n    designConditions: {\n      temperature: 70,\n      barometricPressure: 29.92,\n      altitude: 0\n    },\n    calculationOptions: {\n      includeElevationEffects: false,\n      includeTemperatureEffects: true,\n      frictionMethod: 'darcy_weisbach',\n      roundingPrecision: 4\n    }\n  };\n\n  const enhancedResult = SystemPressureCalculator.calculateSystemPressure(enhancedInputs);\n\n  console.log('\\nEnhanced System Analysis (SystemPressureCalculator):');\n  console.log(`  Calculated Velocity: ${enhancedResult.averageVelocity} FPM`);\n  console.log(`  Friction Loss (100 ft): ${enhancedResult.totalFrictionLoss} in wg`);\n  console.log(`  Pressure Loss Rate: ${(enhancedResult.totalFrictionLoss).toFixed(4)} in wg/100 ft`);\n\n  console.log('\\nComparison:');\n  console.log(`  Velocity Match: ${Math.abs(basicResult.velocity - enhancedResult.averageVelocity) < 1 ? 'PASS' : 'FAIL'}`);\n  console.log(`  Pressure Loss Match: ${Math.abs(basicResult.pressureLoss - enhancedResult.totalFrictionLoss) < 0.001 ? 'PASS' : 'FAIL'}`);\n}\n\n/**\n * Main execution function\n */\nfunction runAllExamples() {\n  console.log('COMPREHENSIVE DUCT PHYSICS IMPLEMENTATION - INTEGRATION EXAMPLES');\n  console.log('================================================================');\n  \n  try {\n    // Run all examples\n    demonstrateFittingLossCalculation();\n    demonstrateSystemPressureCalculation();\n    demonstrateComplexSystem();\n    demonstrateIntegrationWithExisting();\n    \n    console.log('\\n=== ALL EXAMPLES COMPLETED SUCCESSFULLY ===');\n    console.log('Phase 1 implementation is working correctly!');\n    \n  } catch (error) {\n    console.error('\\n=== ERROR IN EXAMPLES ===');\n    console.error(error);\n    process.exit(1);\n  }\n}\n\n// Export functions for testing\nexport {\n  demonstrateFittingLossCalculation,\n  demonstrateSystemPressureCalculation,\n  demonstrateComplexSystem,\n  demonstrateIntegrationWithExisting,\n  runAllExamples\n};\n\n// Run examples if this file is executed directly\nif (require.main === module) {\n  runAllExamples();\n}\n"],"mappings":";;AAAA;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;M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","ignoreList":[]}