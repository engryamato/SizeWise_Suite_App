{"version":3,"names":["cov_1fcfbgkfrs","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","zod_1","require","passwordSchema","z","string","min","regex","mfaTokenSchema","length","SecurityService","constructor","baseUrl","currentUser","sessionTimeout","securityPolicy","passwordMinLength","passwordRequireUppercase","passwordRequireLowercase","passwordRequireNumbers","passwordRequireSymbols","passwordMaxAgeDays","sessionTimeoutMinutes","maxFailedAttempts","lockoutDurationMinutes","mfaRequired","initializeSessionMonitoring","authenticate","email","password","mfaToken","response","fetch","method","headers","body","JSON","stringify","userAgent","navigator","ipAddress","getClientIP","result","json","success","user","startSessionTimeout","logSecurityEvent","action","resourceType","resourceId","id","details","riskLevel","error","console","setupMFA","getToken","Error","verifyMFASetup","token","parse","hasPermission","permission","permissions","includes","hasRole","roles","roleArray","Array","isArray","some","role","validatePassword","valid","errors","ZodError","issues","map","e","message","changePassword","currentPassword","newPassword","validation","join","logout","clearSession","getCurrentUser","isAuthenticated","getSecurityEvents","limit","event","fullEvent","eventId","generateEventId","userId","timestamp","Date","events","forEach","document","addEventListener","resetSessionTimeout","hidden","pauseSessionTimeout","resumeSessionTimeout","clearSessionTimeout","setTimeout","handleSessionTimeout","clearTimeout","reason","window","location","href","localStorage","removeItem","sessionStorage","clear","getItem","data","ip","now","Math","random","toString","substr","exports","securityService"],"sources":["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\frontend\\lib\\services\\SecurityService.ts"],"sourcesContent":["/**\r\n * Advanced Security Service for SizeWise Suite\r\n * Handles authentication, MFA, RBAC, and security monitoring\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// Types and Interfaces\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  roles: string[];\r\n  permissions: string[];\r\n  mfaEnabled: boolean;\r\n  lastLogin?: Date;\r\n  sessionId?: string;\r\n}\r\n\r\nexport interface AuthenticationResult {\r\n  success: boolean;\r\n  user?: User;\r\n  token?: string;\r\n  error?: string;\r\n  mfaRequired?: boolean;\r\n  sessionId?: string;\r\n}\r\n\r\nexport interface MFASetupResult {\r\n  secret: string;\r\n  qrCodeUrl: string;\r\n  backupCodes: string[];\r\n}\r\n\r\nexport interface SecurityEvent {\r\n  eventId: string;\r\n  userId: string;\r\n  action: string;\r\n  resourceType: string;\r\n  resourceId?: string;\r\n  timestamp: Date;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  details: Record<string, any>;\r\n  riskLevel: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n}\r\n\r\nexport interface SecurityPolicy {\r\n  passwordMinLength: number;\r\n  passwordRequireUppercase: boolean;\r\n  passwordRequireLowercase: boolean;\r\n  passwordRequireNumbers: boolean;\r\n  passwordRequireSymbols: boolean;\r\n  passwordMaxAgeDays: number;\r\n  sessionTimeoutMinutes: number;\r\n  maxFailedAttempts: number;\r\n  lockoutDurationMinutes: number;\r\n  mfaRequired: boolean;\r\n}\r\n\r\n// Validation Schemas\r\nconst passwordSchema = z.string()\r\n  .min(12, 'Password must be at least 12 characters')\r\n  .regex(/[A-Z]/, 'Password must contain uppercase letters')\r\n  .regex(/[a-z]/, 'Password must contain lowercase letters')\r\n  .regex(/[0-9]/, 'Password must contain numbers')\r\n  .regex(/[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]/, 'Password must contain special characters');\r\n\r\nconst mfaTokenSchema = z.string()\r\n  .length(6, 'MFA token must be 6 digits')\r\n  .regex(/^\\d{6}$/, 'MFA token must contain only numbers');\r\n\r\nexport class SecurityService {\r\n  private baseUrl: string;\r\n  private currentUser: User | null = null;\r\n  private sessionTimeout: NodeJS.Timeout | null = null;\r\n  private securityPolicy: SecurityPolicy;\r\n\r\n  constructor(baseUrl: string = '/api') {\r\n    this.baseUrl = baseUrl;\r\n    this.securityPolicy = {\r\n      passwordMinLength: 12,\r\n      passwordRequireUppercase: true,\r\n      passwordRequireLowercase: true,\r\n      passwordRequireNumbers: true,\r\n      passwordRequireSymbols: true,\r\n      passwordMaxAgeDays: 90,\r\n      sessionTimeoutMinutes: 480, // 8 hours\r\n      maxFailedAttempts: 5,\r\n      lockoutDurationMinutes: 30,\r\n      mfaRequired: true\r\n    };\r\n\r\n    // Initialize session monitoring\r\n    this.initializeSessionMonitoring();\r\n  }\r\n\r\n  /**\r\n   * Authenticate user with password and optional MFA\r\n   */\r\n  async authenticate(email: string, password: string, mfaToken?: string): Promise<AuthenticationResult> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n          mfaToken,\r\n          userAgent: navigator.userAgent,\r\n          ipAddress: await this.getClientIP()\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        this.currentUser = result.user;\r\n        this.startSessionTimeout();\r\n        \r\n        // Log successful authentication\r\n        await this.logSecurityEvent({\r\n          action: 'authentication_success',\r\n          resourceType: 'user',\r\n          resourceId: result.user.id,\r\n          details: { method: 'password_mfa' },\r\n          riskLevel: 'LOW'\r\n        });\r\n\r\n        return result;\r\n      } else {\r\n        // Log failed authentication\r\n        await this.logSecurityEvent({\r\n          action: 'authentication_failed',\r\n          resourceType: 'user',\r\n          details: { email, error: result.error },\r\n          riskLevel: 'MEDIUM'\r\n        });\r\n\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      console.error('Authentication error:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Authentication failed'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup MFA for user\r\n   */\r\n  async setupMFA(): Promise<MFASetupResult> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/auth/mfa/setup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.getToken()}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        await this.logSecurityEvent({\r\n          action: 'mfa_setup_initiated',\r\n          resourceType: 'user',\r\n          resourceId: this.currentUser?.id,\r\n          details: { method: 'totp' },\r\n          riskLevel: 'LOW'\r\n        });\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.error('MFA setup error:', error);\r\n      throw new Error('Failed to setup MFA');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify MFA setup\r\n   */\r\n  async verifyMFASetup(token: string): Promise<boolean> {\r\n    try {\r\n      mfaTokenSchema.parse(token);\r\n\r\n      const response = await fetch(`${this.baseUrl}/auth/mfa/verify-setup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.getToken()}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      await this.logSecurityEvent({\r\n        action: 'mfa_setup_verified',\r\n        resourceType: 'user',\r\n        resourceId: this.currentUser?.id,\r\n        details: { success: result.success },\r\n        riskLevel: result.success ? 'LOW' : 'MEDIUM'\r\n      });\r\n\r\n      return result.success;\r\n    } catch (error) {\r\n      console.error('MFA verification error:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if user has specific permission\r\n   */\r\n  hasPermission(permission: string): boolean {\r\n    if (!this.currentUser) return false;\r\n    return this.currentUser.permissions.includes(permission);\r\n  }\r\n\r\n  /**\r\n   * Check if user has any of the specified roles\r\n   */\r\n  hasRole(roles: string | string[]): boolean {\r\n    if (!this.currentUser) return false;\r\n    const roleArray = Array.isArray(roles) ? roles : [roles];\r\n    return roleArray.some(role => this.currentUser!.roles.includes(role));\r\n  }\r\n\r\n  /**\r\n   * Validate password against security policy\r\n   */\r\n  validatePassword(password: string): { valid: boolean; errors: string[] } {\r\n    try {\r\n      passwordSchema.parse(password);\r\n      return { valid: true, errors: [] };\r\n    } catch (error) {\r\n      if (error instanceof z.ZodError) {\r\n        return {\r\n          valid: false,\r\n          errors: error.issues.map(e => e.message)\r\n        };\r\n      }\r\n      return { valid: false, errors: ['Password validation failed'] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change user password\r\n   */\r\n  async changePassword(currentPassword: string, newPassword: string): Promise<boolean> {\r\n    try {\r\n      const validation = this.validatePassword(newPassword);\r\n      if (!validation.valid) {\r\n        throw new Error(validation.errors.join(', '));\r\n      }\r\n\r\n      const response = await fetch(`${this.baseUrl}/auth/change-password`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.getToken()}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          currentPassword,\r\n          newPassword\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      await this.logSecurityEvent({\r\n        action: 'password_changed',\r\n        resourceType: 'user',\r\n        resourceId: this.currentUser?.id,\r\n        details: { success: result.success },\r\n        riskLevel: 'MEDIUM'\r\n      });\r\n\r\n      return result.success;\r\n    } catch (error) {\r\n      console.error('Password change error:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logout user\r\n   */\r\n  async logout(): Promise<void> {\r\n    try {\r\n      await fetch(`${this.baseUrl}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.getToken()}`,\r\n        },\r\n      });\r\n\r\n      await this.logSecurityEvent({\r\n        action: 'logout',\r\n        resourceType: 'user',\r\n        resourceId: this.currentUser?.id,\r\n        details: { method: 'manual' },\r\n        riskLevel: 'LOW'\r\n      });\r\n\r\n      this.clearSession();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      this.clearSession();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current user\r\n   */\r\n  getCurrentUser(): User | null {\r\n    return this.currentUser;\r\n  }\r\n\r\n  /**\r\n   * Check if user is authenticated\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return this.currentUser !== null;\r\n  }\r\n\r\n  /**\r\n   * Get security events for current user\r\n   */\r\n  async getSecurityEvents(limit: number = 50): Promise<SecurityEvent[]> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/security/events?limit=${limit}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${this.getToken()}`,\r\n        },\r\n      });\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch security events:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log security event\r\n   */\r\n  private async logSecurityEvent(event: Partial<SecurityEvent>): Promise<void> {\r\n    try {\r\n      const fullEvent: SecurityEvent = {\r\n        eventId: this.generateEventId(),\r\n        userId: this.currentUser?.id || 'anonymous',\r\n        timestamp: new Date(),\r\n        ipAddress: await this.getClientIP(),\r\n        userAgent: navigator.userAgent,\r\n        ...event\r\n      } as SecurityEvent;\r\n\r\n      await fetch(`${this.baseUrl}/security/events`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${this.getToken()}`,\r\n        },\r\n        body: JSON.stringify(fullEvent),\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to log security event:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize session monitoring\r\n   */\r\n  private initializeSessionMonitoring(): void {\r\n    // Monitor user activity\r\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\r\n    \r\n    events.forEach(event => {\r\n      document.addEventListener(event, () => {\r\n        this.resetSessionTimeout();\r\n      }, true);\r\n    });\r\n\r\n    // Monitor page visibility\r\n    document.addEventListener('visibilitychange', () => {\r\n      if (document.hidden) {\r\n        this.pauseSessionTimeout();\r\n      } else {\r\n        this.resumeSessionTimeout();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start session timeout\r\n   */\r\n  private startSessionTimeout(): void {\r\n    this.clearSessionTimeout();\r\n    \r\n    this.sessionTimeout = setTimeout(() => {\r\n      this.handleSessionTimeout();\r\n    }, this.securityPolicy.sessionTimeoutMinutes * 60 * 1000);\r\n  }\r\n\r\n  /**\r\n   * Reset session timeout\r\n   */\r\n  private resetSessionTimeout(): void {\r\n    if (this.isAuthenticated()) {\r\n      this.startSessionTimeout();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear session timeout\r\n   */\r\n  private clearSessionTimeout(): void {\r\n    if (this.sessionTimeout) {\r\n      clearTimeout(this.sessionTimeout);\r\n      this.sessionTimeout = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pause session timeout\r\n   */\r\n  private pauseSessionTimeout(): void {\r\n    this.clearSessionTimeout();\r\n  }\r\n\r\n  /**\r\n   * Resume session timeout\r\n   */\r\n  private resumeSessionTimeout(): void {\r\n    if (this.isAuthenticated()) {\r\n      this.startSessionTimeout();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle session timeout\r\n   */\r\n  private async handleSessionTimeout(): Promise<void> {\r\n    await this.logSecurityEvent({\r\n      action: 'session_timeout',\r\n      resourceType: 'session',\r\n      details: { reason: 'inactivity' },\r\n      riskLevel: 'LOW'\r\n    });\r\n\r\n    this.clearSession();\r\n    \r\n    // Redirect to login or show session expired modal\r\n    window.location.href = '/login?reason=session_expired';\r\n  }\r\n\r\n  /**\r\n   * Clear session data\r\n   */\r\n  private clearSession(): void {\r\n    this.currentUser = null;\r\n    this.clearSessionTimeout();\r\n    localStorage.removeItem('auth_token');\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  /**\r\n   * Get authentication token\r\n   */\r\n  private getToken(): string | null {\r\n    return localStorage.getItem('auth_token');\r\n  }\r\n\r\n  /**\r\n   * Get client IP address\r\n   */\r\n  private async getClientIP(): Promise<string> {\r\n    try {\r\n      const response = await fetch('https://api.ipify.org?format=json');\r\n      const data = await response.json();\r\n      return data.ip;\r\n    } catch {\r\n      return 'unknown';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate unique event ID\r\n   */\r\n  private generateEventId(): string {\r\n    return `evt_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const securityService = new SecurityService();\r\n"],"mappings":"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","ignoreList":[]}