8715ab24f01b8b770886067927ff93dc
"use strict";

/**
 * SystemPressureCalculator - Modular calculation service for complete HVAC system pressure analysis
 *
 * MISSION-CRITICAL: Pure TypeScript functions for system-level pressure drop calculations
 * Combines friction losses (straight runs) with minor losses (fittings) for complete system analysis
 *
 * @see docs/implementation/duct-physics/system-pressure-calculations.md
 * @see backend/services/calculations/AirDuctCalculator.ts
 * @see backend/services/calculations/FittingLossCalculator.ts
 */
/* istanbul ignore next */
function cov_wvt0hmstp() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPressureCalculator.ts";
  var hash = "472991eac5b91d1606ae91760373da30343845a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPressureCalculator.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "2": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "3": {
        start: {
          line: 15,
          column: 32
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "4": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 16,
          column: 70
        }
      },
      "5": {
        start: {
          line: 26,
          column: 79
        },
        end: {
          line: 26,
          column: 85
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "7": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 69
        }
      },
      "8": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "9": {
        start: {
          line: 33,
          column: 32
        },
        end: {
          line: 33,
          column: 33
        }
      },
      "10": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "11": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 27
        }
      },
      "12": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 29
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "14": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 104
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 47
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 60
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "19": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "20": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 52
        }
      },
      "21": {
        start: {
          line: 47,
          column: 34
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "22": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 93
        }
      },
      "23": {
        start: {
          line: 49,
          column: 62
        },
        end: {
          line: 49,
          column: 69
        }
      },
      "24": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 51
        }
      },
      "25": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "26": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "27": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "28": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "29": {
        start: {
          line: 83,
          column: 32
        },
        end: {
          line: 83,
          column: 34
        }
      },
      "30": {
        start: {
          line: 85,
          column: 21
        },
        end: {
          line: 85,
          column: 52
        }
      },
      "31": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "32": {
        start: {
          line: 87,
          column: 33
        },
        end: {
          line: 87,
          column: 130
        }
      },
      "33": {
        start: {
          line: 88,
          column: 27
        },
        end: {
          line: 88,
          column: 28
        }
      },
      "34": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "36": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "37": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 112
        }
      },
      "38": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 120
        }
      },
      "39": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 90
        }
      },
      "40": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 102
        }
      },
      "41": {
        start: {
          line: 110,
          column: 13
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "42": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 141
        }
      },
      "43": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "44": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 45
        }
      },
      "45": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 54
        }
      },
      "46": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 68
        }
      },
      "47": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 50
        }
      },
      "48": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "49": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 95
        }
      },
      "50": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 85
        }
      },
      "51": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "52": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 103
        }
      },
      "53": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 87
        }
      },
      "54": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "55": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "56": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 68
        }
      },
      "57": {
        start: {
          line: 151,
          column: 13
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "58": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "59": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 75
        }
      },
      "60": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 87
        }
      },
      "61": {
        start: {
          line: 167,
          column: 62
        },
        end: {
          line: 167,
          column: 72
        }
      },
      "62": {
        start: {
          line: 169,
          column: 32
        },
        end: {
          line: 169,
          column: 37
        }
      },
      "63": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "64": {
        start: {
          line: 173,
          column: 30
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "65": {
        start: {
          line: 175,
          column: 30
        },
        end: {
          line: 175,
          column: 57
        }
      },
      "66": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 75
        }
      },
      "67": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 129
        }
      },
      "68": {
        start: {
          line: 184,
          column: 29
        },
        end: {
          line: 184,
          column: 47
        }
      },
      "69": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 43
        }
      },
      "70": {
        start: {
          line: 191,
          column: 28
        },
        end: {
          line: 191,
          column: 41
        }
      },
      "71": {
        start: {
          line: 192,
          column: 27
        },
        end: {
          line: 192,
          column: 40
        }
      },
      "72": {
        start: {
          line: 193,
          column: 35
        },
        end: {
          line: 193,
          column: 42
        }
      },
      "73": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 63
        }
      },
      "74": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 110
        }
      },
      "75": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "76": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 72
        }
      },
      "77": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "78": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "79": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 77
        }
      },
      "80": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "81": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 92
        }
      },
      "82": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "83": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 97
        }
      },
      "84": {
        start: {
          line: 226,
          column: 25
        },
        end: {
          line: 226,
          column: 27
        }
      },
      "85": {
        start: {
          line: 227,
          column: 32
        },
        end: {
          line: 227,
          column: 34
        }
      },
      "86": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 228,
          column: 75
        }
      },
      "87": {
        start: {
          line: 229,
          column: 31
        },
        end: {
          line: 229,
          column: 75
        }
      },
      "88": {
        start: {
          line: 231,
          column: 34
        },
        end: {
          line: 231,
          column: 114
        }
      },
      "89": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "90": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 119
        }
      },
      "91": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 81
        }
      },
      "92": {
        start: {
          line: 237,
          column: 34
        },
        end: {
          line: 237,
          column: 78
        }
      },
      "93": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "94": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 146
        }
      },
      "95": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 113
        }
      },
      "96": {
        start: {
          line: 243,
          column: 32
        },
        end: {
          line: 243,
          column: 70
        }
      },
      "97": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "98": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 133
        }
      },
      "99": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "100": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 129
        }
      },
      "101": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 255,
          column: 10
        }
      },
      "102": {
        start: {
          line: 261,
          column: 23
        },
        end: {
          line: 261,
          column: 46
        }
      },
      "103": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 51
        }
      },
      "104": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 271,
          column: 10
        }
      },
      "105": {
        start: {
          line: 277,
          column: 79
        },
        end: {
          line: 277,
          column: 85
        }
      },
      "106": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 42
        }
      },
      "107": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 26
        }
      },
      "108": {
        start: {
          line: 281,
          column: 32
        },
        end: {
          line: 281,
          column: 33
        }
      },
      "109": {
        start: {
          line: 282,
          column: 32
        },
        end: {
          line: 282,
          column: 33
        }
      },
      "110": {
        start: {
          line: 283,
          column: 31
        },
        end: {
          line: 283,
          column: 32
        }
      },
      "111": {
        start: {
          line: 284,
          column: 33
        },
        end: {
          line: 284,
          column: 34
        }
      },
      "112": {
        start: {
          line: 285,
          column: 25
        },
        end: {
          line: 285,
          column: 27
        }
      },
      "113": {
        start: {
          line: 286,
          column: 22
        },
        end: {
          line: 286,
          column: 24
        }
      },
      "114": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "115": {
        start: {
          line: 289,
          column: 34
        },
        end: {
          line: 289,
          column: 98
        }
      },
      "116": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 40
        }
      },
      "117": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 60
        }
      },
      "118": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "119": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 64
        }
      },
      "120": {
        start: {
          line: 295,
          column: 17
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "121": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 63
        }
      },
      "122": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "123": {
        start: {
          line: 300,
          column: 40
        },
        end: {
          line: 300,
          column: 80
        }
      },
      "124": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 69
        }
      },
      "125": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 304,
          column: 17
        }
      },
      "126": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 303,
          column: 63
        }
      },
      "127": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "128": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 57
        }
      },
      "129": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "130": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 51
        }
      },
      "131": {
        start: {
          line: 315,
          column: 29
        },
        end: {
          line: 315,
          column: 70
        }
      },
      "132": {
        start: {
          line: 315,
          column: 59
        },
        end: {
          line: 315,
          column: 68
        }
      },
      "133": {
        start: {
          line: 316,
          column: 32
        },
        end: {
          line: 316,
          column: 71
        }
      },
      "134": {
        start: {
          line: 318,
          column: 28
        },
        end: {
          line: 318,
          column: 82
        }
      },
      "135": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 38
        }
      },
      "136": {
        start: {
          line: 321,
          column: 25
        },
        end: {
          line: 321,
          column: 134
        }
      },
      "137": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 341,
          column: 10
        }
      },
      "138": {
        start: {
          line: 347,
          column: 25
        },
        end: {
          line: 347,
          column: 27
        }
      },
      "139": {
        start: {
          line: 348,
          column: 22
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "140": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "141": {
        start: {
          line: 357,
          column: 25
        },
        end: {
          line: 357,
          column: 112
        }
      },
      "142": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 44
        }
      },
      "143": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 38
        }
      },
      "144": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "145": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 90
        }
      },
      "146": {
        start: {
          line: 364,
          column: 13
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "147": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 89
        }
      },
      "148": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 376,
          column: 10
        }
      },
      "149": {
        start: {
          line: 383,
          column: 29
        },
        end: {
          line: 383,
          column: 172
        }
      },
      "150": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 48
        }
      },
      "151": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 42
        }
      },
      "152": {
        start: {
          line: 387,
          column: 21
        },
        end: {
          line: 389,
          column: 68
        }
      },
      "153": {
        start: {
          line: 390,
          column: 25
        },
        end: {
          line: 390,
          column: 47
        }
      },
      "154": {
        start: {
          line: 392,
          column: 25
        },
        end: {
          line: 394,
          column: 122
        }
      },
      "155": {
        start: {
          line: 396,
          column: 29
        },
        end: {
          line: 396,
          column: 139
        }
      },
      "156": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 408,
          column: 10
        }
      },
      "157": {
        start: {
          line: 415,
          column: 21
        },
        end: {
          line: 417,
          column: 68
        }
      },
      "158": {
        start: {
          line: 418,
          column: 25
        },
        end: {
          line: 418,
          column: 47
        }
      },
      "159": {
        start: {
          line: 420,
          column: 25
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "160": {
        start: {
          line: 429,
          column: 25
        },
        end: {
          line: 429,
          column: 110
        }
      },
      "161": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 44
        }
      },
      "162": {
        start: {
          line: 432,
          column: 30
        },
        end: {
          line: 432,
          column: 147
        }
      },
      "163": {
        start: {
          line: 434,
          column: 38
        },
        end: {
          line: 435,
          column: 70
        }
      },
      "164": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 447,
          column: 10
        }
      },
      "165": {
        start: {
          line: 453,
          column: 25
        },
        end: {
          line: 453,
          column: 27
        }
      },
      "166": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "167": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 51
        }
      },
      "168": {
        start: {
          line: 458,
          column: 33
        },
        end: {
          line: 458,
          column: 127
        }
      },
      "169": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 52
        }
      },
      "170": {
        start: {
          line: 462,
          column: 27
        },
        end: {
          line: 462,
          column: 32
        }
      },
      "171": {
        start: {
          line: 463,
          column: 31
        },
        end: {
          line: 463,
          column: 69
        }
      },
      "172": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 467,
          column: 10
        }
      },
      "173": {
        start: {
          line: 473,
          column: 28
        },
        end: {
          line: 473,
          column: 29
        }
      },
      "174": {
        start: {
          line: 474,
          column: 20
        },
        end: {
          line: 474,
          column: 21
        }
      },
      "175": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "176": {
        start: {
          line: 476,
          column: 25
        },
        end: {
          line: 478,
          column: 72
        }
      },
      "177": {
        start: {
          line: 479,
          column: 29
        },
        end: {
          line: 479,
          column: 51
        }
      },
      "178": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 38
        }
      },
      "179": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 20
        }
      },
      "180": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 53
        }
      },
      "181": {
        start: {
          line: 489,
          column: 25
        },
        end: {
          line: 489,
          column: 27
        }
      },
      "182": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "183": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 104
        }
      },
      "184": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 495,
          column: 9
        }
      },
      "185": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 106
        }
      },
      "186": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "187": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 101
        }
      },
      "188": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 24
        }
      },
      "189": {
        start: {
          line: 505,
          column: 25
        },
        end: {
          line: 505,
          column: 27
        }
      },
      "190": {
        start: {
          line: 506,
          column: 32
        },
        end: {
          line: 506,
          column: 34
        }
      },
      "191": {
        start: {
          line: 508,
          column: 23
        },
        end: {
          line: 508,
          column: 55
        }
      },
      "192": {
        start: {
          line: 509,
          column: 32
        },
        end: {
          line: 509,
          column: 103
        }
      },
      "193": {
        start: {
          line: 509,
          column: 59
        },
        end: {
          line: 509,
          column: 82
        }
      },
      "194": {
        start: {
          line: 511,
          column: 34
        },
        end: {
          line: 512,
          column: 50
        }
      },
      "195": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "196": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 109
        }
      },
      "197": {
        start: {
          line: 517,
          column: 34
        },
        end: {
          line: 517,
          column: 74
        }
      },
      "198": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 520,
          column: 9
        }
      },
      "199": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 519,
          column: 103
        }
      },
      "200": {
        start: {
          line: 522,
          column: 44
        },
        end: {
          line: 522,
          column: 137
        }
      },
      "201": {
        start: {
          line: 522,
          column: 62
        },
        end: {
          line: 522,
          column: 136
        }
      },
      "202": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 525,
          column: 9
        }
      },
      "203": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 101
        }
      },
      "204": {
        start: {
          line: 527,
          column: 32
        },
        end: {
          line: 527,
          column: 102
        }
      },
      "205": {
        start: {
          line: 527,
          column: 50
        },
        end: {
          line: 527,
          column: 101
        }
      },
      "206": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "207": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 93
        }
      },
      "208": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 539,
          column: 10
        }
      },
      "209": {
        start: {
          line: 546,
          column: 28
        },
        end: {
          line: 546,
          column: 41
        }
      },
      "210": {
        start: {
          line: 547,
          column: 27
        },
        end: {
          line: 547,
          column: 40
        }
      },
      "211": {
        start: {
          line: 549,
          column: 25
        },
        end: {
          line: 549,
          column: 91
        }
      },
      "212": {
        start: {
          line: 551,
          column: 34
        },
        end: {
          line: 551,
          column: 56
        }
      },
      "213": {
        start: {
          line: 552,
          column: 31
        },
        end: {
          line: 552,
          column: 96
        }
      },
      "214": {
        start: {
          line: 554,
          column: 32
        },
        end: {
          line: 555,
          column: 72
        }
      },
      "215": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 37
        }
      },
      "216": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 566,
          column: 9
        }
      },
      "217": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 33
        }
      },
      "218": {
        start: {
          line: 568,
          column: 16
        },
        end: {
          line: 568,
          column: 20
        }
      },
      "219": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 575,
          column: 9
        }
      },
      "220": {
        start: {
          line: 569,
          column: 21
        },
        end: {
          line: 569,
          column: 22
        }
      },
      "221": {
        start: {
          line: 570,
          column: 25
        },
        end: {
          line: 570,
          column: 117
        }
      },
      "222": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 573,
          column: 13
        }
      },
      "223": {
        start: {
          line: 572,
          column: 16
        },
        end: {
          line: 572,
          column: 22
        }
      },
      "224": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 574,
          column: 21
        }
      },
      "225": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 576,
          column: 17
        }
      },
      "226": {
        start: {
          line: 579,
          column: 0
        },
        end: {
          line: 579,
          column: 60
        }
      },
      "227": {
        start: {
          line: 581,
          column: 0
        },
        end: {
          line: 585,
          column: 2
        }
      },
      "228": {
        start: {
          line: 587,
          column: 0
        },
        end: {
          line: 591,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 50
          },
          end: {
            line: 49,
            column: 51
          }
        },
        loc: {
          start: {
            line: 49,
            column: 62
          },
          end: {
            line: 49,
            column: 69
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 66
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 38
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 147
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 54
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 159
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 43
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 166
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 83
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 181
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 67
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 190
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 65
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 199
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 40
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 206
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 39
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 225
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 46
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 260
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 39
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 267
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 51
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 276
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 315,
            column: 54
          },
          end: {
            line: 315,
            column: 55
          }
        },
        loc: {
          start: {
            line: 315,
            column: 59
          },
          end: {
            line: 315,
            column: 68
          }
        },
        line: 315
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 71
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 346
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 77
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 381
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 76
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 413
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        },
        loc: {
          start: {
            line: 452,
            column: 47
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 452
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        loc: {
          start: {
            line: 472,
            column: 46
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 472
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 61
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 488
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 116
          },
          end: {
            line: 540,
            column: 5
          }
        },
        line: 504
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 509,
            column: 47
          },
          end: {
            line: 509,
            column: 48
          }
        },
        loc: {
          start: {
            line: 509,
            column: 59
          },
          end: {
            line: 509,
            column: 82
          }
        },
        line: 509
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 522,
            column: 57
          },
          end: {
            line: 522,
            column: 58
          }
        },
        loc: {
          start: {
            line: 522,
            column: 62
          },
          end: {
            line: 522,
            column: 136
          }
        },
        line: 522
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 527,
            column: 45
          },
          end: {
            line: 527,
            column: 46
          }
        },
        loc: {
          start: {
            line: 527,
            column: 50
          },
          end: {
            line: 527,
            column: 101
          }
        },
        line: 527
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 544,
            column: 4
          },
          end: {
            line: 544,
            column: 5
          }
        },
        loc: {
          start: {
            line: 544,
            column: 91
          },
          end: {
            line: 558,
            column: 5
          }
        },
        line: 544
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 562,
            column: 4
          },
          end: {
            line: 562,
            column: 5
          }
        },
        loc: {
          start: {
            line: 562,
            column: 72
          },
          end: {
            line: 577,
            column: 5
          }
        },
        line: 562
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 117,
            column: 9
          }
        }],
        line: 94
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 39
          }
        }, {
          start: {
            line: 94,
            column: 43
          },
          end: {
            line: 94,
            column: 57
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 45
          }
        }, {
          start: {
            line: 104,
            column: 49
          },
          end: {
            line: 104,
            column: 112
          }
        }],
        line: 104
      },
      "4": {
        loc: {
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "5": {
        loc: {
          start: {
            line: 110,
            column: 17
          },
          end: {
            line: 110,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 17
          },
          end: {
            line: 110,
            column: 43
          }
        }, {
          start: {
            line: 110,
            column: 47
          },
          end: {
            line: 110,
            column: 68
          }
        }],
        line: 110
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 153,
            column: 9
          }
        }],
        line: 148
      },
      "9": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 41
          }
        }, {
          start: {
            line: 148,
            column: 45
          },
          end: {
            line: 148,
            column: 61
          }
        }],
        line: 148
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 151,
            column: 17
          },
          end: {
            line: 151,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 17
          },
          end: {
            line: 151,
            column: 52
          }
        }, {
          start: {
            line: 151,
            column: 56
          },
          end: {
            line: 151,
            column: 69
          }
        }, {
          start: {
            line: 151,
            column: 73
          },
          end: {
            line: 151,
            column: 87
          }
        }],
        line: 151
      },
      "12": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "13": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 28
          }
        }, {
          start: {
            line: 207,
            column: 32
          },
          end: {
            line: 207,
            column: 60
          }
        }],
        line: 207
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "16": {
        loc: {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 214,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 214,
            column: 43
          }
        }, {
          start: {
            line: 214,
            column: 48
          },
          end: {
            line: 214,
            column: 63
          }
        }, {
          start: {
            line: 214,
            column: 67
          },
          end: {
            line: 214,
            column: 86
          }
        }],
        line: 214
      },
      "17": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 217,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 217,
            column: 42
          }
        }, {
          start: {
            line: 217,
            column: 46
          },
          end: {
            line: 217,
            column: 68
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 231,
            column: 34
          },
          end: {
            line: 231,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 34
          },
          end: {
            line: 231,
            column: 72
          }
        }, {
          start: {
            line: 231,
            column: 76
          },
          end: {
            line: 231,
            column: 114
          }
        }],
        line: 231
      },
      "20": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "21": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "22": {
        loc: {
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 49
          }
        }, {
          start: {
            line: 243,
            column: 53
          },
          end: {
            line: 243,
            column: 70
          }
        }],
        line: 243
      },
      "23": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 269,
            column: 22
          },
          end: {
            line: 269,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 22
          },
          end: {
            line: 269,
            column: 61
          }
        }, {
          start: {
            line: 269,
            column: 65
          },
          end: {
            line: 269,
            column: 99
          }
        }],
        line: 269
      },
      "26": {
        loc: {
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 61
          }
        }, {
          start: {
            line: 270,
            column: 65
          },
          end: {
            line: 270,
            column: 99
          }
        }],
        line: 270
      },
      "27": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: 295,
            column: 17
          },
          end: {
            line: 297,
            column: 13
          }
        }],
        line: 292
      },
      "28": {
        loc: {
          start: {
            line: 295,
            column: 17
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 17
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "29": {
        loc: {
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "30": {
        loc: {
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "31": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "32": {
        loc: {
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "33": {
        loc: {
          start: {
            line: 351,
            column: 25
          },
          end: {
            line: 351,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 25
          },
          end: {
            line: 351,
            column: 44
          }
        }, {
          start: {
            line: 351,
            column: 48
          },
          end: {
            line: 351,
            column: 76
          }
        }, {
          start: {
            line: 351,
            column: 80
          },
          end: {
            line: 351,
            column: 82
          }
        }],
        line: 351
      },
      "34": {
        loc: {
          start: {
            line: 352,
            column: 22
          },
          end: {
            line: 352,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 22
          },
          end: {
            line: 352,
            column: 38
          }
        }, {
          start: {
            line: 352,
            column: 42
          },
          end: {
            line: 352,
            column: 77
          }
        }],
        line: 352
      },
      "35": {
        loc: {
          start: {
            line: 353,
            column: 22
          },
          end: {
            line: 353,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 22
          },
          end: {
            line: 353,
            column: 39
          }
        }, {
          start: {
            line: 353,
            column: 43
          },
          end: {
            line: 353,
            column: 68
          }
        }, {
          start: {
            line: 353,
            column: 72
          },
          end: {
            line: 353,
            column: 73
          }
        }],
        line: 353
      },
      "36": {
        loc: {
          start: {
            line: 354,
            column: 22
          },
          end: {
            line: 354,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 22
          },
          end: {
            line: 354,
            column: 38
          }
        }, {
          start: {
            line: 354,
            column: 42
          },
          end: {
            line: 354,
            column: 67
          }
        }, {
          start: {
            line: 354,
            column: 71
          },
          end: {
            line: 354,
            column: 73
          }
        }],
        line: 354
      },
      "37": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: 364,
            column: 13
          },
          end: {
            line: 367,
            column: 9
          }
        }],
        line: 360
      },
      "38": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 39
          }
        }, {
          start: {
            line: 360,
            column: 43
          },
          end: {
            line: 360,
            column: 57
          }
        }],
        line: 360
      },
      "39": {
        loc: {
          start: {
            line: 364,
            column: 13
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 13
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "40": {
        loc: {
          start: {
            line: 364,
            column: 17
          },
          end: {
            line: 364,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 17
          },
          end: {
            line: 364,
            column: 43
          }
        }, {
          start: {
            line: 364,
            column: 47
          },
          end: {
            line: 364,
            column: 68
          }
        }],
        line: 364
      },
      "41": {
        loc: {
          start: {
            line: 387,
            column: 21
          },
          end: {
            line: 389,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 14
          },
          end: {
            line: 388,
            column: 70
          }
        }, {
          start: {
            line: 389,
            column: 14
          },
          end: {
            line: 389,
            column: 68
          }
        }],
        line: 387
      },
      "42": {
        loc: {
          start: {
            line: 388,
            column: 34
          },
          end: {
            line: 388,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 34
          },
          end: {
            line: 388,
            column: 50
          }
        }, {
          start: {
            line: 388,
            column: 54
          },
          end: {
            line: 388,
            column: 56
          }
        }],
        line: 388
      },
      "43": {
        loc: {
          start: {
            line: 389,
            column: 16
          },
          end: {
            line: 389,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 16
          },
          end: {
            line: 389,
            column: 29
          }
        }, {
          start: {
            line: 389,
            column: 33
          },
          end: {
            line: 389,
            column: 35
          }
        }],
        line: 389
      },
      "44": {
        loc: {
          start: {
            line: 389,
            column: 40
          },
          end: {
            line: 389,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 40
          },
          end: {
            line: 389,
            column: 54
          }
        }, {
          start: {
            line: 389,
            column: 58
          },
          end: {
            line: 389,
            column: 60
          }
        }],
        line: 389
      },
      "45": {
        loc: {
          start: {
            line: 392,
            column: 25
          },
          end: {
            line: 394,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 393,
            column: 14
          },
          end: {
            line: 393,
            column: 36
          }
        }, {
          start: {
            line: 394,
            column: 14
          },
          end: {
            line: 394,
            column: 122
          }
        }],
        line: 392
      },
      "46": {
        loc: {
          start: {
            line: 393,
            column: 14
          },
          end: {
            line: 393,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 14
          },
          end: {
            line: 393,
            column: 30
          }
        }, {
          start: {
            line: 393,
            column: 34
          },
          end: {
            line: 393,
            column: 36
          }
        }],
        line: 393
      },
      "47": {
        loc: {
          start: {
            line: 394,
            column: 80
          },
          end: {
            line: 394,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 80
          },
          end: {
            line: 394,
            column: 93
          }
        }, {
          start: {
            line: 394,
            column: 97
          },
          end: {
            line: 394,
            column: 99
          }
        }],
        line: 394
      },
      "48": {
        loc: {
          start: {
            line: 394,
            column: 101
          },
          end: {
            line: 394,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 101
          },
          end: {
            line: 394,
            column: 115
          }
        }, {
          start: {
            line: 394,
            column: 119
          },
          end: {
            line: 394,
            column: 121
          }
        }],
        line: 394
      },
      "49": {
        loc: {
          start: {
            line: 396,
            column: 75
          },
          end: {
            line: 396,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 75
          },
          end: {
            line: 396,
            column: 89
          }
        }, {
          start: {
            line: 396,
            column: 93
          },
          end: {
            line: 396,
            column: 94
          }
        }],
        line: 396
      },
      "50": {
        loc: {
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 417,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 14
          },
          end: {
            line: 416,
            column: 70
          }
        }, {
          start: {
            line: 417,
            column: 14
          },
          end: {
            line: 417,
            column: 68
          }
        }],
        line: 415
      },
      "51": {
        loc: {
          start: {
            line: 416,
            column: 34
          },
          end: {
            line: 416,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 34
          },
          end: {
            line: 416,
            column: 50
          }
        }, {
          start: {
            line: 416,
            column: 54
          },
          end: {
            line: 416,
            column: 56
          }
        }],
        line: 416
      },
      "52": {
        loc: {
          start: {
            line: 417,
            column: 16
          },
          end: {
            line: 417,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 16
          },
          end: {
            line: 417,
            column: 29
          }
        }, {
          start: {
            line: 417,
            column: 33
          },
          end: {
            line: 417,
            column: 35
          }
        }],
        line: 417
      },
      "53": {
        loc: {
          start: {
            line: 417,
            column: 40
          },
          end: {
            line: 417,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 40
          },
          end: {
            line: 417,
            column: 54
          }
        }, {
          start: {
            line: 417,
            column: 58
          },
          end: {
            line: 417,
            column: 60
          }
        }],
        line: 417
      },
      "54": {
        loc: {
          start: {
            line: 423,
            column: 29
          },
          end: {
            line: 423,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 29
          },
          end: {
            line: 423,
            column: 48
          }
        }, {
          start: {
            line: 423,
            column: 52
          },
          end: {
            line: 423,
            column: 54
          }
        }],
        line: 423
      },
      "55": {
        loc: {
          start: {
            line: 425,
            column: 26
          },
          end: {
            line: 425,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 26
          },
          end: {
            line: 425,
            column: 43
          }
        }, {
          start: {
            line: 425,
            column: 47
          },
          end: {
            line: 425,
            column: 48
          }
        }],
        line: 425
      },
      "56": {
        loc: {
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 42
          }
        }, {
          start: {
            line: 426,
            column: 46
          },
          end: {
            line: 426,
            column: 48
          }
        }],
        line: 426
      },
      "57": {
        loc: {
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "58": {
        loc: {
          start: {
            line: 476,
            column: 25
          },
          end: {
            line: 478,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 477,
            column: 18
          },
          end: {
            line: 477,
            column: 74
          }
        }, {
          start: {
            line: 478,
            column: 18
          },
          end: {
            line: 478,
            column: 72
          }
        }],
        line: 476
      },
      "59": {
        loc: {
          start: {
            line: 477,
            column: 38
          },
          end: {
            line: 477,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 38
          },
          end: {
            line: 477,
            column: 54
          }
        }, {
          start: {
            line: 477,
            column: 58
          },
          end: {
            line: 477,
            column: 60
          }
        }],
        line: 477
      },
      "60": {
        loc: {
          start: {
            line: 478,
            column: 20
          },
          end: {
            line: 478,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 20
          },
          end: {
            line: 478,
            column: 33
          }
        }, {
          start: {
            line: 478,
            column: 37
          },
          end: {
            line: 478,
            column: 39
          }
        }],
        line: 478
      },
      "61": {
        loc: {
          start: {
            line: 478,
            column: 44
          },
          end: {
            line: 478,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 44
          },
          end: {
            line: 478,
            column: 58
          }
        }, {
          start: {
            line: 478,
            column: 62
          },
          end: {
            line: 478,
            column: 64
          }
        }],
        line: 478
      },
      "62": {
        loc: {
          start: {
            line: 483,
            column: 15
          },
          end: {
            line: 483,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 483,
            column: 27
          },
          end: {
            line: 483,
            column: 48
          }
        }, {
          start: {
            line: 483,
            column: 51
          },
          end: {
            line: 483,
            column: 52
          }
        }],
        line: 483
      },
      "63": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "64": {
        loc: {
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 490,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 490,
            column: 45
          }
        }, {
          start: {
            line: 490,
            column: 49
          },
          end: {
            line: 490,
            column: 83
          }
        }],
        line: 490
      },
      "65": {
        loc: {
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "66": {
        loc: {
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 493,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 493,
            column: 37
          }
        }, {
          start: {
            line: 493,
            column: 41
          },
          end: {
            line: 493,
            column: 73
          }
        }],
        line: 493
      },
      "67": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "68": {
        loc: {
          start: {
            line: 496,
            column: 12
          },
          end: {
            line: 496,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 12
          },
          end: {
            line: 496,
            column: 37
          }
        }, {
          start: {
            line: 496,
            column: 41
          },
          end: {
            line: 496,
            column: 71
          }
        }],
        line: 496
      },
      "69": {
        loc: {
          start: {
            line: 509,
            column: 66
          },
          end: {
            line: 509,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 66
          },
          end: {
            line: 509,
            column: 76
          }
        }, {
          start: {
            line: 509,
            column: 80
          },
          end: {
            line: 509,
            column: 81
          }
        }],
        line: 509
      },
      "70": {
        loc: {
          start: {
            line: 511,
            column: 34
          },
          end: {
            line: 512,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 34
          },
          end: {
            line: 511,
            column: 72
          }
        }, {
          start: {
            line: 512,
            column: 12
          },
          end: {
            line: 512,
            column: 50
          }
        }],
        line: 511
      },
      "71": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "72": {
        loc: {
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 520,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 520,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 518
      },
      "73": {
        loc: {
          start: {
            line: 522,
            column: 62
          },
          end: {
            line: 522,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 522,
            column: 62
          },
          end: {
            line: 522,
            column: 81
          }
        }, {
          start: {
            line: 522,
            column: 85
          },
          end: {
            line: 522,
            column: 136
          }
        }],
        line: 522
      },
      "74": {
        loc: {
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "75": {
        loc: {
          start: {
            line: 527,
            column: 50
          },
          end: {
            line: 527,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 527,
            column: 50
          },
          end: {
            line: 527,
            column: 69
          }
        }, {
          start: {
            line: 527,
            column: 73
          },
          end: {
            line: 527,
            column: 101
          }
        }],
        line: 527
      },
      "76": {
        loc: {
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 528
      },
      "77": {
        loc: {
          start: {
            line: 537,
            column: 33
          },
          end: {
            line: 537,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 33
          },
          end: {
            line: 537,
            column: 50
          }
        }, {
          start: {
            line: 537,
            column: 54
          },
          end: {
            line: 537,
            column: 71
          }
        }],
        line: 537
      },
      "78": {
        loc: {
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 566,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 566,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 564
      },
      "79": {
        loc: {
          start: {
            line: 571,
            column: 12
          },
          end: {
            line: 573,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 12
          },
          end: {
            line: 573,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 571
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPressureCalculator.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPressureCalculator.ts"],
      sourcesContent: ["/**\n * SystemPressureCalculator - Modular calculation service for complete HVAC system pressure analysis\n * \n * MISSION-CRITICAL: Pure TypeScript functions for system-level pressure drop calculations\n * Combines friction losses (straight runs) with minor losses (fittings) for complete system analysis\n * \n * @see docs/implementation/duct-physics/system-pressure-calculations.md\n * @see backend/services/calculations/AirDuctCalculator.ts\n * @see backend/services/calculations/FittingLossCalculator.ts\n */\n\nimport { AirDuctCalculator, DuctSizingInputs } from './AirDuctCalculator';\nimport { FittingLossCalculator, FittingConfiguration, FittingLossResult } from './FittingLossCalculator';\nimport { AirPropertiesCalculator, AirConditions, AirProperties, VelocityPressureParams } from './AirPropertiesCalculator';\n\n/**\n * Duct segment for system calculations\n */\nexport interface DuctSegment {\n  id: string;\n  type: 'straight' | 'fitting';\n  ductShape: 'round' | 'rectangular';\n  \n  // Geometry\n  length?: number; // feet (for straight segments)\n  diameter?: number; // inches (for round ducts)\n  width?: number; // inches (for rectangular ducts)\n  height?: number; // inches (for rectangular ducts)\n  \n  // Flow properties\n  airflow: number; // CFM\n  material: string; // e.g., 'galvanized_steel'\n  \n  // Fitting properties (for fitting segments)\n  fittingConfig?: FittingConfiguration;\n  \n  // Environmental conditions\n  elevation?: number; // feet (for elevation pressure calculations)\n  temperature?: number; // \xB0F (for air density corrections)\n  humidity?: number; // % RH (for air density corrections)\n  pressure?: number; // in Hg (for air density corrections)\n\n  // Material aging and condition\n  materialAge?: number; // years (for roughness corrections)\n  surfaceCondition?: 'excellent' | 'good' | 'fair' | 'poor'; // for roughness corrections\n\n  notes?: string;\n}\n\n/**\n * System calculation inputs\n */\nexport interface SystemCalculationInputs {\n  segments: DuctSegment[];\n  systemType: 'supply' | 'return' | 'exhaust';\n  designConditions: {\n    temperature: number; // \xB0F\n    barometricPressure: number; // in Hg\n    altitude: number; // feet above sea level\n  };\n  calculationOptions: {\n    includeElevationEffects: boolean;\n    includeTemperatureEffects: boolean;\n    frictionMethod: 'darcy_weisbach' | 'colebrook_white';\n    roundingPrecision: number; // decimal places\n  };\n}\n\n/**\n * Segment calculation result\n */\nexport interface SegmentResult {\n  segmentId: string;\n  segmentType: 'straight' | 'fitting';\n  \n  // Flow properties\n  velocity: number; // FPM\n  velocityPressure: number; // inches w.g.\n  reynoldsNumber?: number;\n  \n  // Pressure losses\n  frictionLoss: number; // inches w.g. (for straight segments)\n  minorLoss: number; // inches w.g. (for fitting segments)\n  totalLoss: number; // inches w.g.\n  \n  // Additional data\n  frictionFactor?: number;\n  kFactor?: number;\n  fittingDetails?: FittingLossResult;\n  \n  // Validation\n  warnings: string[];\n  recommendations: string[];\n}\n\n/**\n * System calculation result\n */\nexport interface SystemCalculationResult {\n  // Summary\n  totalPressureLoss: number; // inches w.g.\n  totalFrictionLoss: number; // inches w.g.\n  totalMinorLoss: number; // inches w.g.\n  \n  // System properties\n  totalLength: number; // feet\n  averageVelocity: number; // FPM\n  maxVelocity: number; // FPM\n  minVelocity: number; // FPM\n  \n  // Detailed results\n  segmentResults: SegmentResult[];\n  \n  // System validation\n  systemWarnings: string[];\n  systemRecommendations: string[];\n  complianceStatus: {\n    velocityCompliant: boolean;\n    pressureCompliant: boolean;\n    smacnaCompliant: boolean;\n  };\n  \n  // Calculation metadata\n  calculationMethod: string;\n  calculationDate: Date;\n  designConditions: SystemCalculationInputs['designConditions'];\n}\n\n/**\n * SystemPressureCalculator - Pure calculation functions for system pressure analysis\n * CRITICAL: No dependencies on UI, storage, or external services\n */\nexport class SystemPressureCalculator {\n  \n  // SMACNA system pressure limits (inches w.g.)\n  private static readonly SYSTEM_PRESSURE_LIMITS = {\n    supply: { max: 6.0, recommended: 4.0 },\n    return: { max: 4.0, recommended: 2.5 },\n    exhaust: { max: 8.0, recommended: 5.0 }\n  };\n\n  // SMACNA velocity limits by system type (FPM)\n  private static readonly SYSTEM_VELOCITY_LIMITS = {\n    supply: { min: 400, max: 2500, recommended: 1500 },\n    return: { min: 300, max: 2000, recommended: 1200 },\n    exhaust: { min: 500, max: 3000, recommended: 1800 }\n  };\n\n  /**\n   * Calculate complete system pressure drop\n   */\n  public static calculateSystemPressure(inputs: SystemCalculationInputs): SystemCalculationResult {\n    const { segments, systemType, designConditions, calculationOptions } = inputs;\n    \n    // Validate inputs\n    this.validateSystemInputs(inputs);\n    \n    // Calculate air density for design conditions\n    const airDensity = this.calculateAirDensity(designConditions);\n    \n    // Process each segment\n    const segmentResults: SegmentResult[] = [];\n    let totalFrictionLoss = 0;\n    let totalMinorLoss = 0;\n    let totalLength = 0;\n    const velocities: number[] = [];\n    \n    for (const segment of segments) {\n      const segmentResult = this.calculateSegmentPressure(segment, airDensity, calculationOptions);\n      segmentResults.push(segmentResult);\n      \n      totalFrictionLoss += segmentResult.frictionLoss;\n      totalMinorLoss += segmentResult.minorLoss;\n      \n      if (segment.length) {\n        totalLength += segment.length;\n      }\n      \n      velocities.push(segmentResult.velocity);\n    }\n    \n    const totalPressureLoss = totalFrictionLoss + totalMinorLoss;\n    \n    // Calculate system statistics\n    const averageVelocity = velocities.reduce((sum, v) => sum + v, 0) / velocities.length;\n    const maxVelocity = Math.max(...velocities);\n    const minVelocity = Math.min(...velocities);\n    \n    // System validation\n    const validation = this.validateSystemResults({\n      totalPressureLoss,\n      averageVelocity,\n      maxVelocity,\n      minVelocity,\n      systemType,\n      segmentResults\n    });\n    \n    return {\n      totalPressureLoss: this.roundToPrecision(totalPressureLoss, calculationOptions.roundingPrecision),\n      totalFrictionLoss: this.roundToPrecision(totalFrictionLoss, calculationOptions.roundingPrecision),\n      totalMinorLoss: this.roundToPrecision(totalMinorLoss, calculationOptions.roundingPrecision),\n      totalLength,\n      averageVelocity: this.roundToPrecision(averageVelocity, calculationOptions.roundingPrecision),\n      maxVelocity: this.roundToPrecision(maxVelocity, calculationOptions.roundingPrecision),\n      minVelocity: this.roundToPrecision(minVelocity, calculationOptions.roundingPrecision),\n      segmentResults,\n      systemWarnings: validation.warnings,\n      systemRecommendations: validation.recommendations,\n      complianceStatus: validation.compliance,\n      calculationMethod: `${calculationOptions.frictionMethod}_with_fitting_losses`,\n      calculationDate: new Date(),\n      designConditions\n    };\n  }\n\n  /**\n   * Calculate pressure drop for a single segment\n   */\n  private static calculateSegmentPressure(\n    segment: DuctSegment,\n    airDensity: number,\n    options: SystemCalculationInputs['calculationOptions']\n  ): SegmentResult {\n    \n    const warnings: string[] = [];\n    const recommendations: string[] = [];\n    \n    // Calculate velocity and velocity pressure\n    const area = this.calculateDuctArea(segment);\n    const velocity = segment.airflow / area; // FPM\n    const velocityPressure = FittingLossCalculator.calculateVelocityPressure({ velocity, airDensity });\n    \n    let frictionLoss = 0;\n    let minorLoss = 0;\n    let reynoldsNumber: number | undefined;\n    let frictionFactor: number | undefined;\n    let kFactor: number | undefined;\n    let fittingDetails: FittingLossResult | undefined;\n    \n    if (segment.type === 'straight' && segment.length) {\n      // Calculate friction loss for straight segment\n      const ductInputs: DuctSizingInputs = {\n        airflow: segment.airflow,\n        ductType: segment.ductShape,\n        frictionRate: 0.08, // Will be recalculated\n        units: 'imperial',\n        material: segment.material\n      };\n      \n      // Use existing AirDuctCalculator for friction calculations\n      const diameter = segment.diameter || this.calculateEquivalentDiameter(segment.width!, segment.height!);\n      frictionLoss = this.calculateFrictionLoss(velocity, segment.length, diameter, segment.material, airDensity);\n      \n      // Calculate Reynolds number and friction factor for reference\n      reynoldsNumber = this.calculateReynoldsNumber(velocity, diameter, airDensity);\n      frictionFactor = this.calculateFrictionFactor(reynoldsNumber, segment.material, diameter);\n      \n    } else if (segment.type === 'fitting' && segment.fittingConfig) {\n      // Calculate minor loss for fitting\n      fittingDetails = FittingLossCalculator.calculateFittingLoss(\n        segment.fittingConfig,\n        velocity,\n        airDensity\n      );\n      \n      minorLoss = fittingDetails.pressureLoss;\n      kFactor = fittingDetails.kFactor;\n      warnings.push(...fittingDetails.warnings);\n      recommendations.push(...fittingDetails.recommendations);\n    }\n    \n    const totalLoss = frictionLoss + minorLoss;\n    \n    // Segment-level validation\n    if (velocity > 3000) {\n      warnings.push(`High velocity (${velocity.toFixed(0)} FPM) may cause noise issues`);\n      recommendations.push('Consider increasing duct size to reduce velocity');\n    }\n    \n    if (velocity < 300) {\n      warnings.push(`Low velocity (${velocity.toFixed(0)} FPM) may cause poor air distribution`);\n      recommendations.push('Consider decreasing duct size to increase velocity');\n    }\n    \n    return {\n      segmentId: segment.id,\n      segmentType: segment.type,\n      velocity: this.roundToPrecision(velocity, options.roundingPrecision),\n      velocityPressure: this.roundToPrecision(velocityPressure, options.roundingPrecision),\n      reynoldsNumber,\n      frictionLoss: this.roundToPrecision(frictionLoss, options.roundingPrecision),\n      minorLoss: this.roundToPrecision(minorLoss, options.roundingPrecision),\n      totalLoss: this.roundToPrecision(totalLoss, options.roundingPrecision),\n      frictionFactor,\n      kFactor,\n      fittingDetails,\n      warnings,\n      recommendations\n    };\n  }\n\n  /**\n   * Calculate duct cross-sectional area\n   */\n  private static calculateDuctArea(segment: DuctSegment): number {\n    if (segment.ductShape === 'round' && segment.diameter) {\n      return Math.PI * Math.pow(segment.diameter / 12, 2) / 4; // sq ft\n    } else if (segment.ductShape === 'rectangular' && segment.width && segment.height) {\n      return (segment.width * segment.height) / 144; // sq ft\n    }\n    \n    throw new Error(`Invalid duct geometry for segment ${segment.id}`);\n  }\n\n  /**\n   * Calculate equivalent diameter for rectangular ducts\n   */\n  private static calculateEquivalentDiameter(width: number, height: number): number {\n    // Equivalent diameter formula: De = 1.30 * (a*b)^0.625 / (a+b)^0.25\n    return 1.30 * Math.pow(width * height, 0.625) / Math.pow(width + height, 0.25);\n  }\n\n  /**\n   * Calculate air density based on design conditions\n   */\n  private static calculateAirDensity(conditions: SystemCalculationInputs['designConditions']): number {\n    const { temperature, barometricPressure, altitude } = conditions;\n    \n    // Standard air density at 70\xB0F, 29.92 in Hg, sea level\n    const standardDensity = 0.075; // lb/ft\xB3\n    \n    // Temperature correction (assuming ideal gas)\n    const tempRatio = (459.67 + 70) / (459.67 + temperature);\n    \n    // Pressure correction\n    const pressureRatio = barometricPressure / 29.92;\n    \n    // Altitude correction (approximate)\n    const altitudeRatio = Math.exp(-altitude / 26000);\n    \n    return standardDensity * tempRatio * pressureRatio * altitudeRatio;\n  }\n\n  /**\n   * Calculate friction loss using Darcy-Weisbach equation\n   */\n  private static calculateFrictionLoss(\n    velocity: number,\n    length: number,\n    diameter: number,\n    material: string,\n    airDensity: number\n  ): number {\n    // Use AirDuctCalculator's existing method but adjust for air density\n    const standardLoss = AirDuctCalculator['calculatePressureLoss'](velocity, length, diameter, material);\n    const densityRatio = airDensity / 0.075;\n    return standardLoss * densityRatio;\n  }\n\n  /**\n   * Calculate Reynolds number\n   */\n  private static calculateReynoldsNumber(velocity: number, diameter: number, airDensity: number): number {\n    const velocityFps = velocity / 60; // FPM to FPS\n    const diameterFt = diameter / 12; // inches to feet\n    const kinematicViscosity = 1.57e-4; // ft\xB2/s at standard conditions\n    \n    return (velocityFps * diameterFt) / kinematicViscosity;\n  }\n\n  /**\n   * Calculate friction factor\n   */\n  private static calculateFrictionFactor(reynolds: number, material: string, diameter: number): number {\n    // Use AirDuctCalculator's existing method\n    return AirDuctCalculator['calculateFrictionFactor'](reynolds, material, diameter);\n  }\n\n  /**\n   * Validate system inputs\n   */\n  private static validateSystemInputs(inputs: SystemCalculationInputs): void {\n    if (!inputs.segments || inputs.segments.length === 0) {\n      throw new Error('System must contain at least one segment');\n    }\n    \n    for (const segment of inputs.segments) {\n      if (segment.airflow <= 0) {\n        throw new Error(`Invalid airflow for segment ${segment.id}`);\n      }\n      \n      if (segment.type === 'straight' && (!segment.length || segment.length <= 0)) {\n        throw new Error(`Straight segment ${segment.id} must have positive length`);\n      }\n      \n      if (segment.type === 'fitting' && !segment.fittingConfig) {\n        throw new Error(`Fitting segment ${segment.id} must have fitting configuration`);\n      }\n    }\n  }\n\n  /**\n   * Validate system results\n   */\n  private static validateSystemResults(data: {\n    totalPressureLoss: number;\n    averageVelocity: number;\n    maxVelocity: number;\n    minVelocity: number;\n    systemType: string;\n    segmentResults: SegmentResult[];\n  }): {\n    warnings: string[];\n    recommendations: string[];\n    compliance: { velocityCompliant: boolean; pressureCompliant: boolean; smacnaCompliant: boolean };\n  } {\n    const warnings: string[] = [];\n    const recommendations: string[] = [];\n    \n    const velocityLimits = this.SYSTEM_VELOCITY_LIMITS[data.systemType];\n    const pressureLimits = this.SYSTEM_PRESSURE_LIMITS[data.systemType];\n    \n    // Velocity compliance\n    const velocityCompliant = data.maxVelocity <= velocityLimits.max && data.minVelocity >= velocityLimits.min;\n    if (!velocityCompliant) {\n      warnings.push(`System velocities outside SMACNA limits (${velocityLimits.min}-${velocityLimits.max} FPM)`);\n      recommendations.push('Resize ducts to achieve compliant velocities');\n    }\n    \n    // Pressure compliance\n    const pressureCompliant = data.totalPressureLoss <= pressureLimits.max;\n    if (!pressureCompliant) {\n      warnings.push(`System pressure loss (${data.totalPressureLoss.toFixed(2)} in wg) exceeds SMACNA limit (${pressureLimits.max} in wg)`);\n      recommendations.push('Reduce system pressure loss by optimizing duct sizes and minimizing fittings');\n    }\n    \n    // Overall SMACNA compliance\n    const smacnaCompliant = velocityCompliant && pressureCompliant;\n    \n    // Additional system-level checks\n    if (data.totalPressureLoss > pressureLimits.recommended) {\n      recommendations.push(`Consider reducing pressure loss below ${pressureLimits.recommended} in wg for optimal efficiency`);\n    }\n    \n    if (data.averageVelocity > velocityLimits.recommended) {\n      recommendations.push(`Consider reducing average velocity below ${velocityLimits.recommended} FPM for noise control`);\n    }\n    \n    return {\n      warnings,\n      recommendations,\n      compliance: { velocityCompliant, pressureCompliant, smacnaCompliant }\n    };\n  }\n\n  /**\n   * Round number to specified precision\n   */\n  private static roundToPrecision(value: number, precision: number): number {\n    const factor = Math.pow(10, precision);\n    return Math.round(value * factor) / factor;\n  }\n\n  /**\n   * Get system pressure limits for a system type\n   */\n  public static getSystemLimits(systemType: string): {\n    velocity: { min: number; max: number; recommended: number };\n    pressure: { max: number; recommended: number };\n  } {\n    return {\n      velocity: this.SYSTEM_VELOCITY_LIMITS[systemType] || this.SYSTEM_VELOCITY_LIMITS.supply,\n      pressure: this.SYSTEM_PRESSURE_LIMITS[systemType] || this.SYSTEM_PRESSURE_LIMITS.supply\n    };\n  }\n\n  /**\n   * Calculate enhanced system pressure with environmental corrections\n   */\n  public static calculateEnhancedSystemPressure(inputs: SystemCalculationInputs): SystemCalculationResult {\n    const { segments, systemType, designConditions, calculationOptions } = inputs;\n\n    // Validate inputs\n    this.validateSystemInputs(inputs);\n\n    const results: SegmentResult[] = [];\n    let totalPressureLoss = 0;\n    let totalFrictionLoss = 0;\n    let totalFittingLoss = 0;\n    let totalElevationLoss = 0;\n    const warnings: string[] = [];\n    const notes: string[] = [];\n\n    // Process each segment with enhanced calculations\n    for (const segment of segments) {\n      const segmentResult = this.calculateEnhancedSegmentPressure(segment, designConditions);\n\n      results.push(segmentResult);\n      totalPressureLoss += segmentResult.pressureLoss;\n\n      if (segmentResult.type === 'friction') {\n        totalFrictionLoss += segmentResult.pressureLoss;\n      } else if (segmentResult.type === 'fitting') {\n        totalFittingLoss += segmentResult.pressureLoss;\n      }\n\n      // Add elevation effects if present\n      if (segment.elevation !== undefined) {\n        const elevationEffect = this.calculateElevationPressure(segment);\n        totalElevationLoss += elevationEffect.pressureChange;\n        if (elevationEffect.warnings.length > 0) {\n          warnings.push(...elevationEffect.warnings);\n        }\n      }\n\n      // Collect warnings and notes\n      if (segmentResult.warnings) {\n        warnings.push(...segmentResult.warnings);\n      }\n      if (segmentResult.notes) {\n        notes.push(...segmentResult.notes);\n      }\n    }\n\n    // Calculate system-level metrics\n    const totalAirflow = Math.max(...segments.map(s => s.airflow));\n    const averageVelocity = this.calculateAverageVelocity(segments);\n\n    // Add environmental condition warnings\n    const envWarnings = this.validateEnvironmentalConditions(designConditions);\n    warnings.push(...envWarnings);\n\n    // Performance analysis with enhanced data\n    const analysis = this.analyzeEnhancedSystemPerformance(\n      results,\n      totalPressureLoss,\n      totalAirflow,\n      systemType,\n      designConditions\n    );\n\n    return {\n      totalPressureLoss: this.roundToPrecision(totalPressureLoss + totalElevationLoss, 4),\n      frictionLoss: this.roundToPrecision(totalFrictionLoss, 4),\n      fittingLoss: this.roundToPrecision(totalFittingLoss, 4),\n      elevationLoss: this.roundToPrecision(totalElevationLoss, 4),\n      segments: results,\n      systemMetrics: {\n        totalAirflow,\n        averageVelocity: this.roundToPrecision(averageVelocity, 1),\n        frictionPercentage: this.roundToPrecision((totalFrictionLoss / totalPressureLoss) * 100, 1),\n        fittingPercentage: this.roundToPrecision((totalFittingLoss / totalPressureLoss) * 100, 1),\n        elevationPercentage: this.roundToPrecision((totalElevationLoss / totalPressureLoss) * 100, 1),\n        systemEfficiency: this.calculateSystemEfficiency(totalFrictionLoss, totalFittingLoss)\n      },\n      analysis,\n      warnings,\n      notes,\n      calculationMethod: 'Enhanced with environmental corrections',\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  /**\n   * Calculate enhanced segment pressure with environmental corrections\n   */\n  private static calculateEnhancedSegmentPressure(\n    segment: DuctSegment,\n    designConditions: any\n  ): SegmentResult {\n    const warnings: string[] = [];\n    const notes: string[] = [];\n\n    // Determine air conditions for this segment\n    const airConditions: AirConditions = {\n      temperature: segment.temperature || designConditions.temperature || 70,\n      pressure: segment.pressure || designConditions.barometricPressure,\n      altitude: segment.elevation || designConditions.altitude || 0,\n      humidity: segment.humidity || designConditions.humidity || 50\n    };\n\n    // Get enhanced air properties\n    const airProps = AirPropertiesCalculator.calculateAirProperties(airConditions);\n    warnings.push(...airProps.warnings);\n    notes.push(...airProps.notes);\n\n    if (segment.type === 'straight' && segment.length) {\n      // Enhanced friction loss calculation\n      return this.calculateEnhancedFrictionLoss(segment, airProps, warnings, notes);\n    } else if (segment.type === 'fitting' && segment.fittingConfig) {\n      // Enhanced fitting loss calculation\n      return this.calculateEnhancedFittingLoss(segment, airProps, warnings, notes);\n    }\n\n    // Fallback to basic calculation\n    return {\n      segmentId: segment.id,\n      type: 'unknown',\n      pressureLoss: 0,\n      velocity: 0,\n      warnings: ['Unknown segment type'],\n      notes: []\n    };\n  }\n\n  /**\n   * Calculate enhanced friction loss with material aging and environmental corrections\n   */\n  private static calculateEnhancedFrictionLoss(\n    segment: DuctSegment,\n    airProps: AirProperties,\n    warnings: string[],\n    notes: string[]\n  ): SegmentResult {\n    // Get enhanced material roughness\n    const materialData = AirPropertiesCalculator.getEnhancedMaterialRoughness(\n      segment.material,\n      segment.materialAge,\n      segment.surfaceCondition\n    );\n\n    warnings.push(...materialData.warnings);\n    notes.push(...materialData.notes);\n\n    // Calculate velocity\n    const area = segment.ductShape === 'round'\n      ? Math.PI * Math.pow((segment.diameter || 12) / 12, 2) / 4\n      : ((segment.width || 12) * (segment.height || 12)) / 144;\n    const velocity = segment.airflow / area;\n\n    // Enhanced pressure loss calculation using corrected air properties\n    const diameter = segment.ductShape === 'round'\n      ? segment.diameter || 12\n      : AirDuctCalculator.calculateEquivalentDiameter(segment.width || 12, segment.height || 12);\n\n    // Use enhanced calculation with corrected air density and viscosity\n    const pressureLoss = this.calculateCorrectedPressureLoss(\n      velocity,\n      segment.length || 0,\n      diameter,\n      materialData.roughness,\n      airProps\n    );\n\n    return {\n      segmentId: segment.id,\n      type: 'friction',\n      pressureLoss: this.roundToPrecision(pressureLoss, 4),\n      velocity: this.roundToPrecision(velocity, 1),\n      equivalentDiameter: this.roundToPrecision(diameter, 2),\n      materialRoughness: materialData.roughness,\n      airDensity: airProps.density,\n      correctionFactors: airProps.correctionFactors,\n      warnings,\n      notes\n    };\n  }\n\n  /**\n   * Calculate enhanced fitting loss with environmental corrections\n   */\n  private static calculateEnhancedFittingLoss(\n    segment: DuctSegment,\n    airProps: AirProperties,\n    warnings: string[],\n    notes: string[]\n  ): SegmentResult {\n    // Calculate velocity\n    const area = segment.ductShape === 'round'\n      ? Math.PI * Math.pow((segment.diameter || 12) / 12, 2) / 4\n      : ((segment.width || 12) * (segment.height || 12)) / 144;\n    const velocity = segment.airflow / area;\n\n    // Calculate velocity pressure with environmental corrections\n    const vpParams: VelocityPressureParams = {\n      velocity,\n      airConditions: {\n        temperature: segment.temperature || 70,\n        pressure: segment.pressure,\n        altitude: segment.elevation || 0,\n        humidity: segment.humidity || 50\n      }\n    };\n\n    const vpResult = AirPropertiesCalculator.calculateVelocityPressure(vpParams);\n    warnings.push(...vpResult.warnings);\n\n    // Calculate fitting loss using enhanced velocity pressure\n    const fittingResult = FittingLossCalculator.calculateFittingLoss(\n      segment.fittingConfig!,\n      velocity,\n      airProps.density\n    );\n\n    // Apply velocity pressure correction\n    const correctedPressureLoss = fittingResult.pressureLoss *\n      (vpResult.velocityPressure / Math.pow(velocity / 4005, 2));\n\n    return {\n      segmentId: segment.id,\n      type: 'fitting',\n      pressureLoss: this.roundToPrecision(correctedPressureLoss, 4),\n      velocity: this.roundToPrecision(velocity, 1),\n      kFactor: fittingResult.kFactor,\n      velocityPressure: vpResult.velocityPressure,\n      airDensity: airProps.density,\n      correctionFactors: vpResult.correctionFactors,\n      warnings,\n      notes\n    };\n  }\n\n  /**\n   * Calculate elevation pressure effects\n   */\n  private static calculateElevationPressure(segment: DuctSegment): {\n    pressureChange: number;\n    warnings: string[];\n  } {\n    const warnings: string[] = [];\n\n    if (!segment.elevation) {\n      return { pressureChange: 0, warnings };\n    }\n\n    // Calculate elevation effects using enhanced air properties\n    const elevationEffects = AirPropertiesCalculator.calculateElevationEffects(segment.elevation);\n    warnings.push(...elevationEffects.warnings);\n\n    // Pressure change due to elevation (simplified)\n    // \u0394P = \u03C1 \xD7 g \xD7 \u0394h / gc (converted to inches w.g.)\n    const airDensity = 0.075; // lb/ft\xB3 at standard conditions\n    const pressureChange = (airDensity * segment.elevation) / 5.2; // Convert to inches w.g.\n\n    return {\n      pressureChange: pressureChange * elevationEffects.densityRatio,\n      warnings\n    };\n  }\n\n  /**\n   * Calculate average velocity across all segments\n   */\n  private static calculateAverageVelocity(segments: DuctSegment[]): number {\n    let totalVelocity = 0;\n    let count = 0;\n\n    for (const segment of segments) {\n      const area = segment.ductShape === 'round'\n        ? Math.PI * Math.pow((segment.diameter || 12) / 12, 2) / 4\n        : ((segment.width || 12) * (segment.height || 12)) / 144;\n\n      const velocity = segment.airflow / area;\n      totalVelocity += velocity;\n      count++;\n    }\n\n    return count > 0 ? totalVelocity / count : 0;\n  }\n\n  /**\n   * Validate environmental conditions\n   */\n  private static validateEnvironmentalConditions(designConditions: any): string[] {\n    const warnings: string[] = [];\n\n    if (designConditions.temperature < 32 || designConditions.temperature > 200) {\n      warnings.push(`Temperature ${designConditions.temperature}\xB0F is outside normal HVAC range`);\n    }\n\n    if (designConditions.altitude && designConditions.altitude > 5000) {\n      warnings.push(`High altitude (${designConditions.altitude} ft) requires density corrections`);\n    }\n\n    if (designConditions.humidity && designConditions.humidity > 80) {\n      warnings.push(`High humidity (${designConditions.humidity}% RH) may cause condensation`);\n    }\n\n    return warnings;\n  }\n\n  /**\n   * Analyze enhanced system performance\n   */\n  private static analyzeEnhancedSystemPerformance(\n    results: SegmentResult[],\n    totalPressureLoss: number,\n    totalAirflow: number,\n    systemType: string,\n    designConditions: any\n  ): SystemAnalysis {\n    const warnings: string[] = [];\n    const recommendations: string[] = [];\n\n    // Enhanced performance analysis\n    const limits = this.getSystemLimits(systemType);\n    const averageVelocity = results.reduce((sum, r) => sum + (r.velocity || 0), 0) / results.length;\n\n    // Velocity compliance check\n    const velocityCompliant = averageVelocity >= limits.velocity.min &&\n                             averageVelocity <= limits.velocity.max;\n\n    if (!velocityCompliant) {\n      warnings.push(`Average velocity ${averageVelocity.toFixed(0)} FPM is outside recommended range`);\n    }\n\n    // Pressure compliance check\n    const pressureCompliant = totalPressureLoss <= limits.pressure.max;\n\n    if (!pressureCompliant) {\n      warnings.push(`Total pressure loss ${totalPressureLoss.toFixed(3)} in wg exceeds maximum`);\n    }\n\n    // Environmental impact analysis\n    const hasEnvironmentalCorrections = results.some(r =>\n      r.correctionFactors && Math.abs(r.correctionFactors.combined - 1.0) > 0.05\n    );\n\n    if (hasEnvironmentalCorrections) {\n      recommendations.push('Environmental conditions significantly affect system performance');\n    }\n\n    // Material aging analysis\n    const hasAgingEffects = results.some(r => r.materialRoughness && r.materialRoughness > 0.0005);\n\n    if (hasAgingEffects) {\n      recommendations.push('Consider duct cleaning or replacement for aged materials');\n    }\n\n    return {\n      warnings,\n      recommendations,\n      compliance: {\n        velocityCompliant,\n        pressureCompliant,\n        smacnaCompliant: velocityCompliant && pressureCompliant\n      }\n    };\n  }\n\n  /**\n   * Calculate corrected pressure loss with enhanced air properties\n   */\n  private static calculateCorrectedPressureLoss(\n    velocity: number,\n    length: number,\n    diameter: number,\n    roughness: number,\n    airProps: AirProperties\n  ): number {\n    // Convert units\n    const velocityFps = velocity / 60; // FPM to FPS\n    const diameterFt = diameter / 12; // inches to feet\n\n    // Calculate Reynolds number with corrected viscosity\n    const reynolds = (velocityFps * diameterFt * airProps.density) / airProps.viscosity;\n\n    // Calculate friction factor using enhanced roughness\n    const relativeRoughness = roughness / diameterFt;\n    const frictionFactor = this.calculateEnhancedFrictionFactor(reynolds, relativeRoughness);\n\n    // Darcy-Weisbach equation with corrected air density\n    const pressureLossPsf = frictionFactor * (length / diameterFt) *\n                           (airProps.density * Math.pow(velocityFps, 2)) / (2 * 32.174);\n\n    // Convert to inches w.g.\n    return pressureLossPsf / 5.2;\n  }\n\n  /**\n   * Enhanced friction factor calculation\n   */\n  private static calculateEnhancedFrictionFactor(reynolds: number, relativeRoughness: number): number {\n    // For laminar flow\n    if (reynolds < 2300) {\n      return 64 / reynolds;\n    }\n\n    // For turbulent flow - Colebrook-White equation (iterative solution)\n    let f = 0.02; // Initial guess\n\n    for (let i = 0; i < 10; i++) {\n      const fNew = 1 / Math.pow(-2 * Math.log10(relativeRoughness / 3.7 + 2.51 / (reynolds * Math.sqrt(f))), 2);\n\n      if (Math.abs(fNew - f) < 0.0001) {\n        break;\n      }\n      f = fNew;\n    }\n\n    return f;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "472991eac5b91d1606ae91760373da30343845a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wvt0hmstp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wvt0hmstp();
cov_wvt0hmstp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_wvt0hmstp().s[1]++;
exports.SystemPressureCalculator = void 0;
const AirDuctCalculator_1 =
/* istanbul ignore next */
(cov_wvt0hmstp().s[2]++, require("./AirDuctCalculator"));
const FittingLossCalculator_1 =
/* istanbul ignore next */
(cov_wvt0hmstp().s[3]++, require("./FittingLossCalculator"));
const AirPropertiesCalculator_1 =
/* istanbul ignore next */
(cov_wvt0hmstp().s[4]++, require("./AirPropertiesCalculator"));
/**
 * SystemPressureCalculator - Pure calculation functions for system pressure analysis
 * CRITICAL: No dependencies on UI, storage, or external services
 */
class SystemPressureCalculator {
  /**
   * Calculate complete system pressure drop
   */
  static calculateSystemPressure(inputs) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[0]++;
    const {
      segments,
      systemType,
      designConditions,
      calculationOptions
    } =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[5]++, inputs);
    // Validate inputs
    /* istanbul ignore next */
    cov_wvt0hmstp().s[6]++;
    this.validateSystemInputs(inputs);
    // Calculate air density for design conditions
    const airDensity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[7]++, this.calculateAirDensity(designConditions));
    // Process each segment
    const segmentResults =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[8]++, []);
    let totalFrictionLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[9]++, 0);
    let totalMinorLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[10]++, 0);
    let totalLength =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[11]++, 0);
    const velocities =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[12]++, []);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[13]++;
    for (const segment of segments) {
      const segmentResult =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[14]++, this.calculateSegmentPressure(segment, airDensity, calculationOptions));
      /* istanbul ignore next */
      cov_wvt0hmstp().s[15]++;
      segmentResults.push(segmentResult);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[16]++;
      totalFrictionLoss += segmentResult.frictionLoss;
      /* istanbul ignore next */
      cov_wvt0hmstp().s[17]++;
      totalMinorLoss += segmentResult.minorLoss;
      /* istanbul ignore next */
      cov_wvt0hmstp().s[18]++;
      if (segment.length) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[0][0]++;
        cov_wvt0hmstp().s[19]++;
        totalLength += segment.length;
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[0][1]++;
      }
      cov_wvt0hmstp().s[20]++;
      velocities.push(segmentResult.velocity);
    }
    const totalPressureLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[21]++, totalFrictionLoss + totalMinorLoss);
    // Calculate system statistics
    const averageVelocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[22]++, velocities.reduce((sum, v) => {
      /* istanbul ignore next */
      cov_wvt0hmstp().f[1]++;
      cov_wvt0hmstp().s[23]++;
      return sum + v;
    }, 0) / velocities.length);
    const maxVelocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[24]++, Math.max(...velocities));
    const minVelocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[25]++, Math.min(...velocities));
    // System validation
    const validation =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[26]++, this.validateSystemResults({
      totalPressureLoss,
      averageVelocity,
      maxVelocity,
      minVelocity,
      systemType,
      segmentResults
    }));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[27]++;
    return {
      totalPressureLoss: this.roundToPrecision(totalPressureLoss, calculationOptions.roundingPrecision),
      totalFrictionLoss: this.roundToPrecision(totalFrictionLoss, calculationOptions.roundingPrecision),
      totalMinorLoss: this.roundToPrecision(totalMinorLoss, calculationOptions.roundingPrecision),
      totalLength,
      averageVelocity: this.roundToPrecision(averageVelocity, calculationOptions.roundingPrecision),
      maxVelocity: this.roundToPrecision(maxVelocity, calculationOptions.roundingPrecision),
      minVelocity: this.roundToPrecision(minVelocity, calculationOptions.roundingPrecision),
      segmentResults,
      systemWarnings: validation.warnings,
      systemRecommendations: validation.recommendations,
      complianceStatus: validation.compliance,
      calculationMethod: `${calculationOptions.frictionMethod}_with_fitting_losses`,
      calculationDate: new Date(),
      designConditions
    };
  }
  /**
   * Calculate pressure drop for a single segment
   */
  static calculateSegmentPressure(segment, airDensity, options) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[2]++;
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[28]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[29]++, []);
    // Calculate velocity and velocity pressure
    const area =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[30]++, this.calculateDuctArea(segment));
    const velocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[31]++, segment.airflow / area); // FPM
    const velocityPressure =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[32]++, FittingLossCalculator_1.FittingLossCalculator.calculateVelocityPressure({
      velocity,
      airDensity
    }));
    let frictionLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[33]++, 0);
    let minorLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[34]++, 0);
    let reynoldsNumber;
    let frictionFactor;
    let kFactor;
    let fittingDetails;
    /* istanbul ignore next */
    cov_wvt0hmstp().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[2][0]++, segment.type === 'straight') &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[2][1]++, segment.length)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[1][0]++;
      // Calculate friction loss for straight segment
      const ductInputs =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[36]++, {
        airflow: segment.airflow,
        ductType: segment.ductShape,
        frictionRate: 0.08,
        // Will be recalculated
        units: 'imperial',
        material: segment.material
      });
      // Use existing AirDuctCalculator for friction calculations
      const diameter =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[37]++,
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[3][0]++, segment.diameter) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[3][1]++, this.calculateEquivalentDiameter(segment.width, segment.height)));
      /* istanbul ignore next */
      cov_wvt0hmstp().s[38]++;
      frictionLoss = this.calculateFrictionLoss(velocity, segment.length, diameter, segment.material, airDensity);
      // Calculate Reynolds number and friction factor for reference
      /* istanbul ignore next */
      cov_wvt0hmstp().s[39]++;
      reynoldsNumber = this.calculateReynoldsNumber(velocity, diameter, airDensity);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[40]++;
      frictionFactor = this.calculateFrictionFactor(reynoldsNumber, segment.material, diameter);
    } else {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[1][1]++;
      cov_wvt0hmstp().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[5][0]++, segment.type === 'fitting') &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[5][1]++, segment.fittingConfig)) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[4][0]++;
        cov_wvt0hmstp().s[42]++;
        // Calculate minor loss for fitting
        fittingDetails = FittingLossCalculator_1.FittingLossCalculator.calculateFittingLoss(segment.fittingConfig, velocity, airDensity);
        /* istanbul ignore next */
        cov_wvt0hmstp().s[43]++;
        minorLoss = fittingDetails.pressureLoss;
        /* istanbul ignore next */
        cov_wvt0hmstp().s[44]++;
        kFactor = fittingDetails.kFactor;
        /* istanbul ignore next */
        cov_wvt0hmstp().s[45]++;
        warnings.push(...fittingDetails.warnings);
        /* istanbul ignore next */
        cov_wvt0hmstp().s[46]++;
        recommendations.push(...fittingDetails.recommendations);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[4][1]++;
      }
    }
    const totalLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[47]++, frictionLoss + minorLoss);
    // Segment-level validation
    /* istanbul ignore next */
    cov_wvt0hmstp().s[48]++;
    if (velocity > 3000) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[6][0]++;
      cov_wvt0hmstp().s[49]++;
      warnings.push(`High velocity (${velocity.toFixed(0)} FPM) may cause noise issues`);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[50]++;
      recommendations.push('Consider increasing duct size to reduce velocity');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[6][1]++;
    }
    cov_wvt0hmstp().s[51]++;
    if (velocity < 300) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[7][0]++;
      cov_wvt0hmstp().s[52]++;
      warnings.push(`Low velocity (${velocity.toFixed(0)} FPM) may cause poor air distribution`);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[53]++;
      recommendations.push('Consider decreasing duct size to increase velocity');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[7][1]++;
    }
    cov_wvt0hmstp().s[54]++;
    return {
      segmentId: segment.id,
      segmentType: segment.type,
      velocity: this.roundToPrecision(velocity, options.roundingPrecision),
      velocityPressure: this.roundToPrecision(velocityPressure, options.roundingPrecision),
      reynoldsNumber,
      frictionLoss: this.roundToPrecision(frictionLoss, options.roundingPrecision),
      minorLoss: this.roundToPrecision(minorLoss, options.roundingPrecision),
      totalLoss: this.roundToPrecision(totalLoss, options.roundingPrecision),
      frictionFactor,
      kFactor,
      fittingDetails,
      warnings,
      recommendations
    };
  }
  /**
   * Calculate duct cross-sectional area
   */
  static calculateDuctArea(segment) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[3]++;
    cov_wvt0hmstp().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[9][0]++, segment.ductShape === 'round') &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[9][1]++, segment.diameter)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[8][0]++;
      cov_wvt0hmstp().s[56]++;
      return Math.PI * Math.pow(segment.diameter / 12, 2) / 4; // sq ft
    } else {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[8][1]++;
      cov_wvt0hmstp().s[57]++;
      if (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[11][0]++, segment.ductShape === 'rectangular') &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[11][1]++, segment.width) &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[11][2]++, segment.height)) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[10][0]++;
        cov_wvt0hmstp().s[58]++;
        return segment.width * segment.height / 144; // sq ft
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_wvt0hmstp().s[59]++;
    throw new Error(`Invalid duct geometry for segment ${segment.id}`);
  }
  /**
   * Calculate equivalent diameter for rectangular ducts
   */
  static calculateEquivalentDiameter(width, height) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[4]++;
    cov_wvt0hmstp().s[60]++;
    // Equivalent diameter formula: De = 1.30 * (a*b)^0.625 / (a+b)^0.25
    return 1.30 * Math.pow(width * height, 0.625) / Math.pow(width + height, 0.25);
  }
  /**
   * Calculate air density based on design conditions
   */
  static calculateAirDensity(conditions) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[5]++;
    const {
      temperature,
      barometricPressure,
      altitude
    } =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[61]++, conditions);
    // Standard air density at 70°F, 29.92 in Hg, sea level
    const standardDensity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[62]++, 0.075); // lb/ft³
    // Temperature correction (assuming ideal gas)
    const tempRatio =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[63]++, (459.67 + 70) / (459.67 + temperature));
    // Pressure correction
    const pressureRatio =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[64]++, barometricPressure / 29.92);
    // Altitude correction (approximate)
    const altitudeRatio =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[65]++, Math.exp(-altitude / 26000));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[66]++;
    return standardDensity * tempRatio * pressureRatio * altitudeRatio;
  }
  /**
   * Calculate friction loss using Darcy-Weisbach equation
   */
  static calculateFrictionLoss(velocity, length, diameter, material, airDensity) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[6]++;
    // Use AirDuctCalculator's existing method but adjust for air density
    const standardLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[67]++, AirDuctCalculator_1.AirDuctCalculator['calculatePressureLoss'](velocity, length, diameter, material));
    const densityRatio =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[68]++, airDensity / 0.075);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[69]++;
    return standardLoss * densityRatio;
  }
  /**
   * Calculate Reynolds number
   */
  static calculateReynoldsNumber(velocity, diameter, airDensity) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[7]++;
    const velocityFps =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[70]++, velocity / 60); // FPM to FPS
    const diameterFt =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[71]++, diameter / 12); // inches to feet
    const kinematicViscosity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[72]++, 1.57e-4); // ft²/s at standard conditions
    /* istanbul ignore next */
    cov_wvt0hmstp().s[73]++;
    return velocityFps * diameterFt / kinematicViscosity;
  }
  /**
   * Calculate friction factor
   */
  static calculateFrictionFactor(reynolds, material, diameter) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[8]++;
    cov_wvt0hmstp().s[74]++;
    // Use AirDuctCalculator's existing method
    return AirDuctCalculator_1.AirDuctCalculator['calculateFrictionFactor'](reynolds, material, diameter);
  }
  /**
   * Validate system inputs
   */
  static validateSystemInputs(inputs) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[9]++;
    cov_wvt0hmstp().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[13][0]++, !inputs.segments) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[13][1]++, inputs.segments.length === 0)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[12][0]++;
      cov_wvt0hmstp().s[76]++;
      throw new Error('System must contain at least one segment');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[12][1]++;
    }
    cov_wvt0hmstp().s[77]++;
    for (const segment of inputs.segments) {
      /* istanbul ignore next */
      cov_wvt0hmstp().s[78]++;
      if (segment.airflow <= 0) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[14][0]++;
        cov_wvt0hmstp().s[79]++;
        throw new Error(`Invalid airflow for segment ${segment.id}`);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[14][1]++;
      }
      cov_wvt0hmstp().s[80]++;
      if (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[16][0]++, segment.type === 'straight') && (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[16][1]++, !segment.length) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[16][2]++, segment.length <= 0))) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[15][0]++;
        cov_wvt0hmstp().s[81]++;
        throw new Error(`Straight segment ${segment.id} must have positive length`);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[15][1]++;
      }
      cov_wvt0hmstp().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[18][0]++, segment.type === 'fitting') &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[18][1]++, !segment.fittingConfig)) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[17][0]++;
        cov_wvt0hmstp().s[83]++;
        throw new Error(`Fitting segment ${segment.id} must have fitting configuration`);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[17][1]++;
      }
    }
  }
  /**
   * Validate system results
   */
  static validateSystemResults(data) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[10]++;
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[84]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[85]++, []);
    const velocityLimits =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[86]++, this.SYSTEM_VELOCITY_LIMITS[data.systemType]);
    const pressureLimits =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[87]++, this.SYSTEM_PRESSURE_LIMITS[data.systemType]);
    // Velocity compliance
    const velocityCompliant =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[88]++,
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[19][0]++, data.maxVelocity <= velocityLimits.max) &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[19][1]++, data.minVelocity >= velocityLimits.min));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[89]++;
    if (!velocityCompliant) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[20][0]++;
      cov_wvt0hmstp().s[90]++;
      warnings.push(`System velocities outside SMACNA limits (${velocityLimits.min}-${velocityLimits.max} FPM)`);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[91]++;
      recommendations.push('Resize ducts to achieve compliant velocities');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[20][1]++;
    }
    // Pressure compliance
    const pressureCompliant =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[92]++, data.totalPressureLoss <= pressureLimits.max);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[93]++;
    if (!pressureCompliant) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[21][0]++;
      cov_wvt0hmstp().s[94]++;
      warnings.push(`System pressure loss (${data.totalPressureLoss.toFixed(2)} in wg) exceeds SMACNA limit (${pressureLimits.max} in wg)`);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[95]++;
      recommendations.push('Reduce system pressure loss by optimizing duct sizes and minimizing fittings');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[21][1]++;
    }
    // Overall SMACNA compliance
    const smacnaCompliant =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[96]++,
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[22][0]++, velocityCompliant) &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[22][1]++, pressureCompliant));
    // Additional system-level checks
    /* istanbul ignore next */
    cov_wvt0hmstp().s[97]++;
    if (data.totalPressureLoss > pressureLimits.recommended) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[23][0]++;
      cov_wvt0hmstp().s[98]++;
      recommendations.push(`Consider reducing pressure loss below ${pressureLimits.recommended} in wg for optimal efficiency`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[23][1]++;
    }
    cov_wvt0hmstp().s[99]++;
    if (data.averageVelocity > velocityLimits.recommended) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[24][0]++;
      cov_wvt0hmstp().s[100]++;
      recommendations.push(`Consider reducing average velocity below ${velocityLimits.recommended} FPM for noise control`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[24][1]++;
    }
    cov_wvt0hmstp().s[101]++;
    return {
      warnings,
      recommendations,
      compliance: {
        velocityCompliant,
        pressureCompliant,
        smacnaCompliant
      }
    };
  }
  /**
   * Round number to specified precision
   */
  static roundToPrecision(value, precision) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[11]++;
    const factor =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[102]++, Math.pow(10, precision));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[103]++;
    return Math.round(value * factor) / factor;
  }
  /**
   * Get system pressure limits for a system type
   */
  static getSystemLimits(systemType) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[12]++;
    cov_wvt0hmstp().s[104]++;
    return {
      velocity:
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[25][0]++, this.SYSTEM_VELOCITY_LIMITS[systemType]) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[25][1]++, this.SYSTEM_VELOCITY_LIMITS.supply),
      pressure:
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[26][0]++, this.SYSTEM_PRESSURE_LIMITS[systemType]) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[26][1]++, this.SYSTEM_PRESSURE_LIMITS.supply)
    };
  }
  /**
   * Calculate enhanced system pressure with environmental corrections
   */
  static calculateEnhancedSystemPressure(inputs) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[13]++;
    const {
      segments,
      systemType,
      designConditions,
      calculationOptions
    } =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[105]++, inputs);
    // Validate inputs
    /* istanbul ignore next */
    cov_wvt0hmstp().s[106]++;
    this.validateSystemInputs(inputs);
    const results =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[107]++, []);
    let totalPressureLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[108]++, 0);
    let totalFrictionLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[109]++, 0);
    let totalFittingLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[110]++, 0);
    let totalElevationLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[111]++, 0);
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[112]++, []);
    const notes =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[113]++, []);
    // Process each segment with enhanced calculations
    /* istanbul ignore next */
    cov_wvt0hmstp().s[114]++;
    for (const segment of segments) {
      const segmentResult =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[115]++, this.calculateEnhancedSegmentPressure(segment, designConditions));
      /* istanbul ignore next */
      cov_wvt0hmstp().s[116]++;
      results.push(segmentResult);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[117]++;
      totalPressureLoss += segmentResult.pressureLoss;
      /* istanbul ignore next */
      cov_wvt0hmstp().s[118]++;
      if (segmentResult.type === 'friction') {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[27][0]++;
        cov_wvt0hmstp().s[119]++;
        totalFrictionLoss += segmentResult.pressureLoss;
      } else {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[27][1]++;
        cov_wvt0hmstp().s[120]++;
        if (segmentResult.type === 'fitting') {
          /* istanbul ignore next */
          cov_wvt0hmstp().b[28][0]++;
          cov_wvt0hmstp().s[121]++;
          totalFittingLoss += segmentResult.pressureLoss;
        } else
        /* istanbul ignore next */
        {
          cov_wvt0hmstp().b[28][1]++;
        }
      }
      // Add elevation effects if present
      /* istanbul ignore next */
      cov_wvt0hmstp().s[122]++;
      if (segment.elevation !== undefined) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[29][0]++;
        const elevationEffect =
        /* istanbul ignore next */
        (cov_wvt0hmstp().s[123]++, this.calculateElevationPressure(segment));
        /* istanbul ignore next */
        cov_wvt0hmstp().s[124]++;
        totalElevationLoss += elevationEffect.pressureChange;
        /* istanbul ignore next */
        cov_wvt0hmstp().s[125]++;
        if (elevationEffect.warnings.length > 0) {
          /* istanbul ignore next */
          cov_wvt0hmstp().b[30][0]++;
          cov_wvt0hmstp().s[126]++;
          warnings.push(...elevationEffect.warnings);
        } else
        /* istanbul ignore next */
        {
          cov_wvt0hmstp().b[30][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[29][1]++;
      }
      // Collect warnings and notes
      cov_wvt0hmstp().s[127]++;
      if (segmentResult.warnings) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[31][0]++;
        cov_wvt0hmstp().s[128]++;
        warnings.push(...segmentResult.warnings);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[31][1]++;
      }
      cov_wvt0hmstp().s[129]++;
      if (segmentResult.notes) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[32][0]++;
        cov_wvt0hmstp().s[130]++;
        notes.push(...segmentResult.notes);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[32][1]++;
      }
    }
    // Calculate system-level metrics
    const totalAirflow =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[131]++, Math.max(...segments.map(s => {
      /* istanbul ignore next */
      cov_wvt0hmstp().f[14]++;
      cov_wvt0hmstp().s[132]++;
      return s.airflow;
    })));
    const averageVelocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[133]++, this.calculateAverageVelocity(segments));
    // Add environmental condition warnings
    const envWarnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[134]++, this.validateEnvironmentalConditions(designConditions));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[135]++;
    warnings.push(...envWarnings);
    // Performance analysis with enhanced data
    const analysis =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[136]++, this.analyzeEnhancedSystemPerformance(results, totalPressureLoss, totalAirflow, systemType, designConditions));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[137]++;
    return {
      totalPressureLoss: this.roundToPrecision(totalPressureLoss + totalElevationLoss, 4),
      frictionLoss: this.roundToPrecision(totalFrictionLoss, 4),
      fittingLoss: this.roundToPrecision(totalFittingLoss, 4),
      elevationLoss: this.roundToPrecision(totalElevationLoss, 4),
      segments: results,
      systemMetrics: {
        totalAirflow,
        averageVelocity: this.roundToPrecision(averageVelocity, 1),
        frictionPercentage: this.roundToPrecision(totalFrictionLoss / totalPressureLoss * 100, 1),
        fittingPercentage: this.roundToPrecision(totalFittingLoss / totalPressureLoss * 100, 1),
        elevationPercentage: this.roundToPrecision(totalElevationLoss / totalPressureLoss * 100, 1),
        systemEfficiency: this.calculateSystemEfficiency(totalFrictionLoss, totalFittingLoss)
      },
      analysis,
      warnings,
      notes,
      calculationMethod: 'Enhanced with environmental corrections',
      timestamp: new Date().toISOString()
    };
  }
  /**
   * Calculate enhanced segment pressure with environmental corrections
   */
  static calculateEnhancedSegmentPressure(segment, designConditions) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[15]++;
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[138]++, []);
    const notes =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[139]++, []);
    // Determine air conditions for this segment
    const airConditions =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[140]++, {
      temperature:
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[33][0]++, segment.temperature) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[33][1]++, designConditions.temperature) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[33][2]++, 70),
      pressure:
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[34][0]++, segment.pressure) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[34][1]++, designConditions.barometricPressure),
      altitude:
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[35][0]++, segment.elevation) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[35][1]++, designConditions.altitude) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[35][2]++, 0),
      humidity:
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[36][0]++, segment.humidity) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[36][1]++, designConditions.humidity) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[36][2]++, 50)
    });
    // Get enhanced air properties
    const airProps =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[141]++, AirPropertiesCalculator_1.AirPropertiesCalculator.calculateAirProperties(airConditions));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[142]++;
    warnings.push(...airProps.warnings);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[143]++;
    notes.push(...airProps.notes);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[144]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[38][0]++, segment.type === 'straight') &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[38][1]++, segment.length)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[37][0]++;
      cov_wvt0hmstp().s[145]++;
      // Enhanced friction loss calculation
      return this.calculateEnhancedFrictionLoss(segment, airProps, warnings, notes);
    } else {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[37][1]++;
      cov_wvt0hmstp().s[146]++;
      if (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[40][0]++, segment.type === 'fitting') &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[40][1]++, segment.fittingConfig)) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[39][0]++;
        cov_wvt0hmstp().s[147]++;
        // Enhanced fitting loss calculation
        return this.calculateEnhancedFittingLoss(segment, airProps, warnings, notes);
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[39][1]++;
      }
    }
    // Fallback to basic calculation
    /* istanbul ignore next */
    cov_wvt0hmstp().s[148]++;
    return {
      segmentId: segment.id,
      type: 'unknown',
      pressureLoss: 0,
      velocity: 0,
      warnings: ['Unknown segment type'],
      notes: []
    };
  }
  /**
   * Calculate enhanced friction loss with material aging and environmental corrections
   */
  static calculateEnhancedFrictionLoss(segment, airProps, warnings, notes) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[16]++;
    // Get enhanced material roughness
    const materialData =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[149]++, AirPropertiesCalculator_1.AirPropertiesCalculator.getEnhancedMaterialRoughness(segment.material, segment.materialAge, segment.surfaceCondition));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[150]++;
    warnings.push(...materialData.warnings);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[151]++;
    notes.push(...materialData.notes);
    // Calculate velocity
    const area =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[152]++, segment.ductShape === 'round' ?
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[41][0]++, Math.PI * Math.pow((
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[42][0]++, segment.diameter) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[42][1]++, 12)) / 12, 2) / 4) :
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[41][1]++, (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[43][0]++, segment.width) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[43][1]++, 12)) * (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[44][0]++, segment.height) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[44][1]++, 12)) / 144));
    const velocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[153]++, segment.airflow / area);
    // Enhanced pressure loss calculation using corrected air properties
    const diameter =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[154]++, segment.ductShape === 'round' ?
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[45][0]++,
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[46][0]++, segment.diameter) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[46][1]++, 12)) :
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[45][1]++, AirDuctCalculator_1.AirDuctCalculator.calculateEquivalentDiameter(
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[47][0]++, segment.width) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[47][1]++, 12),
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[48][0]++, segment.height) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[48][1]++, 12))));
    // Use enhanced calculation with corrected air density and viscosity
    const pressureLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[155]++, this.calculateCorrectedPressureLoss(velocity,
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[49][0]++, segment.length) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[49][1]++, 0), diameter, materialData.roughness, airProps));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[156]++;
    return {
      segmentId: segment.id,
      type: 'friction',
      pressureLoss: this.roundToPrecision(pressureLoss, 4),
      velocity: this.roundToPrecision(velocity, 1),
      equivalentDiameter: this.roundToPrecision(diameter, 2),
      materialRoughness: materialData.roughness,
      airDensity: airProps.density,
      correctionFactors: airProps.correctionFactors,
      warnings,
      notes
    };
  }
  /**
   * Calculate enhanced fitting loss with environmental corrections
   */
  static calculateEnhancedFittingLoss(segment, airProps, warnings, notes) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[17]++;
    // Calculate velocity
    const area =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[157]++, segment.ductShape === 'round' ?
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[50][0]++, Math.PI * Math.pow((
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[51][0]++, segment.diameter) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[51][1]++, 12)) / 12, 2) / 4) :
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[50][1]++, (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[52][0]++, segment.width) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[52][1]++, 12)) * (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[53][0]++, segment.height) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[53][1]++, 12)) / 144));
    const velocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[158]++, segment.airflow / area);
    // Calculate velocity pressure with environmental corrections
    const vpParams =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[159]++, {
      velocity,
      airConditions: {
        temperature:
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[54][0]++, segment.temperature) ||
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[54][1]++, 70),
        pressure: segment.pressure,
        altitude:
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[55][0]++, segment.elevation) ||
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[55][1]++, 0),
        humidity:
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[56][0]++, segment.humidity) ||
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[56][1]++, 50)
      }
    });
    const vpResult =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[160]++, AirPropertiesCalculator_1.AirPropertiesCalculator.calculateVelocityPressure(vpParams));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[161]++;
    warnings.push(...vpResult.warnings);
    // Calculate fitting loss using enhanced velocity pressure
    const fittingResult =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[162]++, FittingLossCalculator_1.FittingLossCalculator.calculateFittingLoss(segment.fittingConfig, velocity, airProps.density));
    // Apply velocity pressure correction
    const correctedPressureLoss =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[163]++, fittingResult.pressureLoss * (vpResult.velocityPressure / Math.pow(velocity / 4005, 2)));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[164]++;
    return {
      segmentId: segment.id,
      type: 'fitting',
      pressureLoss: this.roundToPrecision(correctedPressureLoss, 4),
      velocity: this.roundToPrecision(velocity, 1),
      kFactor: fittingResult.kFactor,
      velocityPressure: vpResult.velocityPressure,
      airDensity: airProps.density,
      correctionFactors: vpResult.correctionFactors,
      warnings,
      notes
    };
  }
  /**
   * Calculate elevation pressure effects
   */
  static calculateElevationPressure(segment) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[18]++;
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[165]++, []);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[166]++;
    if (!segment.elevation) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[57][0]++;
      cov_wvt0hmstp().s[167]++;
      return {
        pressureChange: 0,
        warnings
      };
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[57][1]++;
    }
    // Calculate elevation effects using enhanced air properties
    const elevationEffects =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[168]++, AirPropertiesCalculator_1.AirPropertiesCalculator.calculateElevationEffects(segment.elevation));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[169]++;
    warnings.push(...elevationEffects.warnings);
    // Pressure change due to elevation (simplified)
    // ΔP = ρ × g × Δh / gc (converted to inches w.g.)
    const airDensity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[170]++, 0.075); // lb/ft³ at standard conditions
    const pressureChange =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[171]++, airDensity * segment.elevation / 5.2); // Convert to inches w.g.
    /* istanbul ignore next */
    cov_wvt0hmstp().s[172]++;
    return {
      pressureChange: pressureChange * elevationEffects.densityRatio,
      warnings
    };
  }
  /**
   * Calculate average velocity across all segments
   */
  static calculateAverageVelocity(segments) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[19]++;
    let totalVelocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[173]++, 0);
    let count =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[174]++, 0);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[175]++;
    for (const segment of segments) {
      const area =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[176]++, segment.ductShape === 'round' ?
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[58][0]++, Math.PI * Math.pow((
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[59][0]++, segment.diameter) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[59][1]++, 12)) / 12, 2) / 4) :
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[58][1]++, (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[60][0]++, segment.width) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[60][1]++, 12)) * (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[61][0]++, segment.height) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[61][1]++, 12)) / 144));
      const velocity =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[177]++, segment.airflow / area);
      /* istanbul ignore next */
      cov_wvt0hmstp().s[178]++;
      totalVelocity += velocity;
      /* istanbul ignore next */
      cov_wvt0hmstp().s[179]++;
      count++;
    }
    /* istanbul ignore next */
    cov_wvt0hmstp().s[180]++;
    return count > 0 ?
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[62][0]++, totalVelocity / count) :
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[62][1]++, 0);
  }
  /**
   * Validate environmental conditions
   */
  static validateEnvironmentalConditions(designConditions) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[20]++;
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[181]++, []);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[182]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[64][0]++, designConditions.temperature < 32) ||
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[64][1]++, designConditions.temperature > 200)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[63][0]++;
      cov_wvt0hmstp().s[183]++;
      warnings.push(`Temperature ${designConditions.temperature}°F is outside normal HVAC range`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[63][1]++;
    }
    cov_wvt0hmstp().s[184]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[66][0]++, designConditions.altitude) &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[66][1]++, designConditions.altitude > 5000)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[65][0]++;
      cov_wvt0hmstp().s[185]++;
      warnings.push(`High altitude (${designConditions.altitude} ft) requires density corrections`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[65][1]++;
    }
    cov_wvt0hmstp().s[186]++;
    if (
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[68][0]++, designConditions.humidity) &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[68][1]++, designConditions.humidity > 80)) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[67][0]++;
      cov_wvt0hmstp().s[187]++;
      warnings.push(`High humidity (${designConditions.humidity}% RH) may cause condensation`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[67][1]++;
    }
    cov_wvt0hmstp().s[188]++;
    return warnings;
  }
  /**
   * Analyze enhanced system performance
   */
  static analyzeEnhancedSystemPerformance(results, totalPressureLoss, totalAirflow, systemType, designConditions) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[21]++;
    const warnings =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[189]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[190]++, []);
    // Enhanced performance analysis
    const limits =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[191]++, this.getSystemLimits(systemType));
    const averageVelocity =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[192]++, results.reduce((sum, r) => {
      /* istanbul ignore next */
      cov_wvt0hmstp().f[22]++;
      cov_wvt0hmstp().s[193]++;
      return sum + (
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[69][0]++, r.velocity) ||
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[69][1]++, 0));
    }, 0) / results.length);
    // Velocity compliance check
    const velocityCompliant =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[194]++,
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[70][0]++, averageVelocity >= limits.velocity.min) &&
    /* istanbul ignore next */
    (cov_wvt0hmstp().b[70][1]++, averageVelocity <= limits.velocity.max));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[195]++;
    if (!velocityCompliant) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[71][0]++;
      cov_wvt0hmstp().s[196]++;
      warnings.push(`Average velocity ${averageVelocity.toFixed(0)} FPM is outside recommended range`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[71][1]++;
    }
    // Pressure compliance check
    const pressureCompliant =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[197]++, totalPressureLoss <= limits.pressure.max);
    /* istanbul ignore next */
    cov_wvt0hmstp().s[198]++;
    if (!pressureCompliant) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[72][0]++;
      cov_wvt0hmstp().s[199]++;
      warnings.push(`Total pressure loss ${totalPressureLoss.toFixed(3)} in wg exceeds maximum`);
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[72][1]++;
    }
    // Environmental impact analysis
    const hasEnvironmentalCorrections =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[200]++, results.some(r => {
      /* istanbul ignore next */
      cov_wvt0hmstp().f[23]++;
      cov_wvt0hmstp().s[201]++;
      return /* istanbul ignore next */(cov_wvt0hmstp().b[73][0]++, r.correctionFactors) &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[73][1]++, Math.abs(r.correctionFactors.combined - 1.0) > 0.05);
    }));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[202]++;
    if (hasEnvironmentalCorrections) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[74][0]++;
      cov_wvt0hmstp().s[203]++;
      recommendations.push('Environmental conditions significantly affect system performance');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[74][1]++;
    }
    // Material aging analysis
    const hasAgingEffects =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[204]++, results.some(r => {
      /* istanbul ignore next */
      cov_wvt0hmstp().f[24]++;
      cov_wvt0hmstp().s[205]++;
      return /* istanbul ignore next */(cov_wvt0hmstp().b[75][0]++, r.materialRoughness) &&
      /* istanbul ignore next */
      (cov_wvt0hmstp().b[75][1]++, r.materialRoughness > 0.0005);
    }));
    /* istanbul ignore next */
    cov_wvt0hmstp().s[206]++;
    if (hasAgingEffects) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[76][0]++;
      cov_wvt0hmstp().s[207]++;
      recommendations.push('Consider duct cleaning or replacement for aged materials');
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[76][1]++;
    }
    cov_wvt0hmstp().s[208]++;
    return {
      warnings,
      recommendations,
      compliance: {
        velocityCompliant,
        pressureCompliant,
        smacnaCompliant:
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[77][0]++, velocityCompliant) &&
        /* istanbul ignore next */
        (cov_wvt0hmstp().b[77][1]++, pressureCompliant)
      }
    };
  }
  /**
   * Calculate corrected pressure loss with enhanced air properties
   */
  static calculateCorrectedPressureLoss(velocity, length, diameter, roughness, airProps) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[25]++;
    // Convert units
    const velocityFps =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[209]++, velocity / 60); // FPM to FPS
    const diameterFt =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[210]++, diameter / 12); // inches to feet
    // Calculate Reynolds number with corrected viscosity
    const reynolds =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[211]++, velocityFps * diameterFt * airProps.density / airProps.viscosity);
    // Calculate friction factor using enhanced roughness
    const relativeRoughness =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[212]++, roughness / diameterFt);
    const frictionFactor =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[213]++, this.calculateEnhancedFrictionFactor(reynolds, relativeRoughness));
    // Darcy-Weisbach equation with corrected air density
    const pressureLossPsf =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[214]++, frictionFactor * (length / diameterFt) * (airProps.density * Math.pow(velocityFps, 2)) / (2 * 32.174));
    // Convert to inches w.g.
    /* istanbul ignore next */
    cov_wvt0hmstp().s[215]++;
    return pressureLossPsf / 5.2;
  }
  /**
   * Enhanced friction factor calculation
   */
  static calculateEnhancedFrictionFactor(reynolds, relativeRoughness) {
    /* istanbul ignore next */
    cov_wvt0hmstp().f[26]++;
    cov_wvt0hmstp().s[216]++;
    // For laminar flow
    if (reynolds < 2300) {
      /* istanbul ignore next */
      cov_wvt0hmstp().b[78][0]++;
      cov_wvt0hmstp().s[217]++;
      return 64 / reynolds;
    } else
    /* istanbul ignore next */
    {
      cov_wvt0hmstp().b[78][1]++;
    }
    // For turbulent flow - Colebrook-White equation (iterative solution)
    let f =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[218]++, 0.02); // Initial guess
    /* istanbul ignore next */
    cov_wvt0hmstp().s[219]++;
    for (let i =
    /* istanbul ignore next */
    (cov_wvt0hmstp().s[220]++, 0); i < 10; i++) {
      const fNew =
      /* istanbul ignore next */
      (cov_wvt0hmstp().s[221]++, 1 / Math.pow(-2 * Math.log10(relativeRoughness / 3.7 + 2.51 / (reynolds * Math.sqrt(f))), 2));
      /* istanbul ignore next */
      cov_wvt0hmstp().s[222]++;
      if (Math.abs(fNew - f) < 0.0001) {
        /* istanbul ignore next */
        cov_wvt0hmstp().b[79][0]++;
        cov_wvt0hmstp().s[223]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_wvt0hmstp().b[79][1]++;
      }
      cov_wvt0hmstp().s[224]++;
      f = fNew;
    }
    /* istanbul ignore next */
    cov_wvt0hmstp().s[225]++;
    return f;
  }
}
/* istanbul ignore next */
cov_wvt0hmstp().s[226]++;
exports.SystemPressureCalculator = SystemPressureCalculator;
// SMACNA system pressure limits (inches w.g.)
/* istanbul ignore next */
cov_wvt0hmstp().s[227]++;
SystemPressureCalculator.SYSTEM_PRESSURE_LIMITS = {
  supply: {
    max: 6.0,
    recommended: 4.0
  },
  return: {
    max: 4.0,
    recommended: 2.5
  },
  exhaust: {
    max: 8.0,
    recommended: 5.0
  }
};
// SMACNA velocity limits by system type (FPM)
/* istanbul ignore next */
cov_wvt0hmstp().s[228]++;
SystemPressureCalculator.SYSTEM_VELOCITY_LIMITS = {
  supply: {
    min: 400,
    max: 2500,
    recommended: 1500
  },
  return: {
    min: 300,
    max: 2000,
    recommended: 1200
  },
  exhaust: {
    min: 500,
    max: 3000,
    recommended: 1800
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,