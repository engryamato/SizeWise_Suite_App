{"version":3,"names":["cov_161daubuf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","SystemOptimizationTypes_1","require","ParticleSwarmOptimization","constructor","parameters","swarmState","bestSolution","history","populationHistory","evaluationCount","swarmSize","maxIterations","inertiaWeight","inertiaWeightMin","inertiaWeightMax","accelerationCoefficients","maxVelocity","velocityClampingFactor","topology","neighborhoodSize","boundaryHandling","constraintHandling","penaltyCoefficient","adaptiveParameters","diversityMaintenance","eliteSize","seedValue","random","createSeededRandom","Math","optimize","problem","objectiveFunction","constraintFunctions","startTime","performance","now","initializeAlgorithm","createInitialSwarm","shouldTerminate","updateSwarm","updateHistory","adaptParameters","maintainDiversity","createOptimizationResult","error","console","log","particles","i","particle","createRandomParticle","evaluateParticle","push","globalBest","findGlobalBest","iteration","averageFitness","calculateAverageFitness","diversityIndex","calculateDiversityIndex","convergenceRate","setupTopology","updateBestSolution","position","velocity","variable","variables","discreteValues","length","randomIndex","floor","min","bounds","minimum","max","maximum","pos","vel","id","generateParticleId","fitness","Number","MAX_VALUE","personalBest","neighbors","age","stagnationCount","particleToVariables","objectiveValue","constraintViolations","constraintFunction","violation","totalPenalty","filter","v","reduce","sum","variableTemplates","map","template","index","currentValue","updateParticleVelocity","updateParticlePosition","newGlobalBest","c1","c2","w","getCurrentInertiaWeight","neighborhoodBest","findNeighborhoodBest","currentPos","personalBestPos","neighborhoodBestPos","cognitive","social","maxVel","newPos","handleBoundary","best","current","particleId","neighborId","neighbor","find","p","prev","next","j","neighborIndex","bestParticle","includes","progress","newParticle","Object","assign","validFitnesses","totalDistance","pairCount","distance","calculateDistance","particle1","particle2","diff","sqrt","forEach","Date","objectiveValues","feasible","systemConfiguration","performanceMetrics","recentHistory","slice","fitnessImprovement","bestFitness","abs","convergenceCriteria","toleranceValue","feasibleParticles","fitnesses","worstFitness","diversity","timestamp","executionTime","statistics","totalIterations","totalEvaluations","convergenceIteration","bestFitnessHistory","h","averageFitnessHistory","diversityHistory","constraintViolationHistory","algorithmSpecificStats","finalInertiaWeight","finalDiversityIndex","optimizationHistory","iterations","parameterHistory","convergenceMetrics","problemId","status","OptimizationStatus","CONVERGED","analysis","recommendations","warnings","errors","toString","substr","seed","state","exports"],"sources":["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\algorithms\\ParticleSwarmOptimization.ts"],"sourcesContent":["/**\r\n * Particle Swarm Optimization Algorithm Implementation for System Optimization\r\n * \r\n * Implements particle swarm optimization with:\r\n * - Configurable swarm topology (global, local, ring, star)\r\n * - Adaptive inertia weight and acceleration coefficients\r\n * - Constraint handling with penalty methods\r\n * - Multi-objective optimization support\r\n * - Velocity clamping and boundary handling\r\n * \r\n * @version 3.0.0\r\n * @author SizeWise Suite Development Team\r\n */\r\n\r\nimport {\r\n  OptimizationSolution,\r\n  OptimizationVariable,\r\n  OptimizationProblem,\r\n  OptimizationResult,\r\n  OptimizationStatus,\r\n  OptimizationStatistics,\r\n  OptimizationHistory,\r\n  IterationHistory,\r\n  PopulationSnapshot,\r\n  SolutionPerformanceMetrics,\r\n  ObjectiveFunctionType,\r\n  ConstraintFunctionType\r\n} from '../types/SystemOptimizationTypes';\r\n\r\nexport interface ParticleSwarmParameters {\r\n  swarmSize: number;\r\n  maxIterations: number;\r\n  inertiaWeight: number;\r\n  inertiaWeightMin: number;\r\n  inertiaWeightMax: number;\r\n  accelerationCoefficients: [number, number]; // [c1, c2] - cognitive and social\r\n  maxVelocity: number;\r\n  velocityClampingFactor: number;\r\n  topology: 'global' | 'local' | 'ring' | 'star' | 'random';\r\n  neighborhoodSize: number;\r\n  boundaryHandling: 'reflect' | 'absorb' | 'invisible' | 'random';\r\n  constraintHandling: 'penalty' | 'repair' | 'death_penalty';\r\n  penaltyCoefficient: number;\r\n  adaptiveParameters: boolean;\r\n  diversityMaintenance: boolean;\r\n  eliteSize: number;\r\n  seedValue?: number;\r\n}\r\n\r\nexport interface Particle {\r\n  id: string;\r\n  position: (number | string)[];\r\n  velocity: number[];\r\n  fitness: number;\r\n  personalBest: {\r\n    position: (number | string)[];\r\n    fitness: number;\r\n  };\r\n  neighbors: string[];\r\n  age: number;\r\n  stagnationCount: number;\r\n}\r\n\r\nexport interface SwarmState {\r\n  particles: Particle[];\r\n  globalBest: {\r\n    position: (number | string)[];\r\n    fitness: number;\r\n    particleId: string;\r\n  };\r\n  iteration: number;\r\n  averageFitness: number;\r\n  diversityIndex: number;\r\n  convergenceRate: number;\r\n}\r\n\r\n/**\r\n * Particle Swarm Optimization algorithm for single and multi-objective optimization\r\n */\r\nexport class ParticleSwarmOptimization {\r\n  private parameters: ParticleSwarmParameters;\r\n  private swarmState: SwarmState | null = null;\r\n  private bestSolution: OptimizationSolution | null = null;\r\n  private history: IterationHistory[] = [];\r\n  private populationHistory: PopulationSnapshot[] = [];\r\n  private random: () => number;\r\n  private evaluationCount: number = 0;\r\n\r\n  constructor(parameters?: Partial<ParticleSwarmParameters>) {\r\n    this.parameters = {\r\n      swarmSize: 30,\r\n      maxIterations: 100,\r\n      inertiaWeight: 0.9,\r\n      inertiaWeightMin: 0.1,\r\n      inertiaWeightMax: 0.9,\r\n      accelerationCoefficients: [2.0, 2.0],\r\n      maxVelocity: 0.2,\r\n      velocityClampingFactor: 0.5,\r\n      topology: 'global',\r\n      neighborhoodSize: 3,\r\n      boundaryHandling: 'reflect',\r\n      constraintHandling: 'penalty',\r\n      penaltyCoefficient: 1000,\r\n      adaptiveParameters: true,\r\n      diversityMaintenance: true,\r\n      eliteSize: 2,\r\n      ...parameters\r\n    };\r\n\r\n    // Initialize random number generator\r\n    if (this.parameters.seedValue !== undefined) {\r\n      this.random = this.createSeededRandom(this.parameters.seedValue);\r\n    } else {\r\n      this.random = Math.random;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main optimization method\r\n   */\r\n  public async optimize(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<OptimizationResult> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Initialize algorithm\r\n      this.initializeAlgorithm(problem);\r\n      \r\n      // Create initial swarm\r\n      await this.createInitialSwarm(problem, objectiveFunction, constraintFunctions);\r\n      \r\n      // Main optimization loop\r\n      while (!this.shouldTerminate(problem)) {\r\n        await this.updateSwarm(problem, objectiveFunction, constraintFunctions);\r\n        this.updateHistory();\r\n        \r\n        if (this.parameters.adaptiveParameters) {\r\n          this.adaptParameters();\r\n        }\r\n        \r\n        if (this.parameters.diversityMaintenance) {\r\n          this.maintainDiversity(problem);\r\n        }\r\n      }\r\n      \r\n      // Create final result\r\n      return this.createOptimizationResult(problem, startTime);\r\n      \r\n    } catch (error) {\r\n      console.error('Particle swarm optimization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize algorithm state\r\n   */\r\n  private initializeAlgorithm(problem: OptimizationProblem): void {\r\n    this.swarmState = null;\r\n    this.bestSolution = null;\r\n    this.history = [];\r\n    this.populationHistory = [];\r\n    this.evaluationCount = 0;\r\n    \r\n    console.log(`Initializing Particle Swarm Optimization with swarm size: ${this.parameters.swarmSize}`);\r\n  }\r\n\r\n  /**\r\n   * Create initial swarm\r\n   */\r\n  private async createInitialSwarm(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    const particles: Particle[] = [];\r\n    \r\n    // Create particles\r\n    for (let i = 0; i < this.parameters.swarmSize; i++) {\r\n      const particle = this.createRandomParticle(problem);\r\n      await this.evaluateParticle(particle, problem, objectiveFunction, constraintFunctions);\r\n      particles.push(particle);\r\n    }\r\n    \r\n    // Initialize swarm state\r\n    this.swarmState = {\r\n      particles,\r\n      globalBest: this.findGlobalBest(particles),\r\n      iteration: 0,\r\n      averageFitness: this.calculateAverageFitness(particles),\r\n      diversityIndex: this.calculateDiversityIndex(particles),\r\n      convergenceRate: 0\r\n    };\r\n    \r\n    // Set up neighborhood topology\r\n    this.setupTopology();\r\n    \r\n    // Convert best particle to optimization solution\r\n    this.updateBestSolution(problem);\r\n  }\r\n\r\n  /**\r\n   * Create a random particle\r\n   */\r\n  private createRandomParticle(problem: OptimizationProblem): Particle {\r\n    const position: (number | string)[] = [];\r\n    const velocity: number[] = [];\r\n    \r\n    for (const variable of problem.variables) {\r\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n        // Discrete variable\r\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n        position.push(variable.discreteValues[randomIndex]);\r\n        velocity.push(0); // No velocity for discrete variables\r\n      } else {\r\n        // Continuous variable\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n        const pos = min + this.random() * (max - min);\r\n        const vel = (this.random() - 0.5) * this.parameters.maxVelocity * (max - min);\r\n        \r\n        position.push(pos);\r\n        velocity.push(vel);\r\n      }\r\n    }\r\n    \r\n    const particle: Particle = {\r\n      id: this.generateParticleId(),\r\n      position,\r\n      velocity,\r\n      fitness: Number.MAX_VALUE,\r\n      personalBest: {\r\n        position: [...position],\r\n        fitness: Number.MAX_VALUE\r\n      },\r\n      neighbors: [],\r\n      age: 0,\r\n      stagnationCount: 0\r\n    };\r\n    \r\n    return particle;\r\n  }\r\n\r\n  /**\r\n   * Evaluate particle fitness\r\n   */\r\n  private async evaluateParticle(\r\n    particle: Particle,\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    try {\r\n      // Convert particle position to optimization variables\r\n      const variables = this.particleToVariables(particle, problem.variables);\r\n      \r\n      // Evaluate objective function\r\n      const objectiveValue = objectiveFunction(variables);\r\n      particle.fitness = objectiveValue;\r\n      \r\n      // Evaluate constraints\r\n      const constraintViolations: number[] = [];\r\n      for (const constraintFunction of constraintFunctions) {\r\n        const violation = constraintFunction(variables);\r\n        constraintViolations.push(violation);\r\n      }\r\n      \r\n      // Apply constraint handling\r\n      if (this.parameters.constraintHandling === 'penalty') {\r\n        const totalPenalty = constraintViolations\r\n          .filter(v => v > 0)\r\n          .reduce((sum, v) => sum + v, 0) * this.parameters.penaltyCoefficient;\r\n        particle.fitness += totalPenalty;\r\n      }\r\n      \r\n      // Update personal best\r\n      if (particle.fitness < particle.personalBest.fitness) {\r\n        particle.personalBest.position = [...particle.position];\r\n        particle.personalBest.fitness = particle.fitness;\r\n        particle.stagnationCount = 0;\r\n      } else {\r\n        particle.stagnationCount++;\r\n      }\r\n      \r\n      this.evaluationCount++;\r\n      \r\n    } catch (error) {\r\n      console.error('Error evaluating particle:', error);\r\n      particle.fitness = Number.MAX_VALUE;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert particle to optimization variables\r\n   */\r\n  private particleToVariables(particle: Particle, variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\r\n    return variableTemplates.map((template, index) => ({\r\n      ...template,\r\n      currentValue: particle.position[index]\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Update swarm for one iteration\r\n   */\r\n  private async updateSwarm(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    if (!this.swarmState) return;\r\n    \r\n    // Update each particle\r\n    for (const particle of this.swarmState.particles) {\r\n      // Update velocity\r\n      this.updateParticleVelocity(particle, problem);\r\n      \r\n      // Update position\r\n      this.updateParticlePosition(particle, problem);\r\n      \r\n      // Evaluate new position\r\n      await this.evaluateParticle(particle, problem, objectiveFunction, constraintFunctions);\r\n      \r\n      // Update age\r\n      particle.age++;\r\n    }\r\n    \r\n    // Update global best\r\n    const newGlobalBest = this.findGlobalBest(this.swarmState.particles);\r\n    if (newGlobalBest.fitness < this.swarmState.globalBest.fitness) {\r\n      this.swarmState.globalBest = newGlobalBest;\r\n      this.updateBestSolution(problem);\r\n    }\r\n    \r\n    // Update swarm statistics\r\n    this.swarmState.averageFitness = this.calculateAverageFitness(this.swarmState.particles);\r\n    this.swarmState.diversityIndex = this.calculateDiversityIndex(this.swarmState.particles);\r\n    this.swarmState.iteration++;\r\n  }\r\n\r\n  /**\r\n   * Update particle velocity\r\n   */\r\n  private updateParticleVelocity(particle: Particle, problem: OptimizationProblem): void {\r\n    const [c1, c2] = this.parameters.accelerationCoefficients;\r\n    const w = this.getCurrentInertiaWeight();\r\n    \r\n    // Find neighborhood best\r\n    const neighborhoodBest = this.findNeighborhoodBest(particle);\r\n    \r\n    for (let i = 0; i < particle.velocity.length; i++) {\r\n      if (typeof particle.position[i] === 'number') {\r\n        const currentPos = particle.position[i] as number;\r\n        const personalBestPos = particle.personalBest.position[i] as number;\r\n        const neighborhoodBestPos = neighborhoodBest.position[i] as number;\r\n        \r\n        // PSO velocity update equation\r\n        const cognitive = c1 * this.random() * (personalBestPos - currentPos);\r\n        const social = c2 * this.random() * (neighborhoodBestPos - currentPos);\r\n        \r\n        particle.velocity[i] = w * particle.velocity[i] + cognitive + social;\r\n        \r\n        // Velocity clamping\r\n        const variable = problem.variables[i];\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n        const maxVel = this.parameters.maxVelocity * (max - min);\r\n        \r\n        particle.velocity[i] = Math.max(-maxVel, Math.min(maxVel, particle.velocity[i]));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update particle position\r\n   */\r\n  private updateParticlePosition(particle: Particle, problem: OptimizationProblem): void {\r\n    for (let i = 0; i < particle.position.length; i++) {\r\n      const variable = problem.variables[i];\r\n      \r\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n        // Discrete variable - probabilistic update\r\n        if (this.random() < 0.1) { // 10% chance to change\r\n          const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n          particle.position[i] = variable.discreteValues[randomIndex];\r\n        }\r\n      } else if (typeof particle.position[i] === 'number') {\r\n        // Continuous variable\r\n        const newPos = (particle.position[i] as number) + particle.velocity[i];\r\n        \r\n        // Boundary handling\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n        \r\n        particle.position[i] = this.handleBoundary(newPos, min, max, particle.velocity[i], i);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle boundary violations\r\n   */\r\n  private handleBoundary(position: number, min: number, max: number, velocity: number, index: number): number {\r\n    switch (this.parameters.boundaryHandling) {\r\n      case 'reflect':\r\n        if (position < min) {\r\n          return min + (min - position);\r\n        } else if (position > max) {\r\n          return max - (position - max);\r\n        }\r\n        return position;\r\n        \r\n      case 'absorb':\r\n        return Math.max(min, Math.min(max, position));\r\n        \r\n      case 'invisible':\r\n        // Keep position but set velocity to zero if boundary violated\r\n        if (position < min || position > max) {\r\n          return Math.max(min, Math.min(max, position));\r\n        }\r\n        return position;\r\n        \r\n      case 'random':\r\n        if (position < min || position > max) {\r\n          return min + this.random() * (max - min);\r\n        }\r\n        return position;\r\n        \r\n      default:\r\n        return Math.max(min, Math.min(max, position));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find global best particle\r\n   */\r\n  private findGlobalBest(particles: Particle[]): { position: (number | string)[]; fitness: number; particleId: string } {\r\n    const best = particles.reduce((best, current) => \r\n      current.fitness < best.fitness ? current : best\r\n    );\r\n    \r\n    return {\r\n      position: [...best.position],\r\n      fitness: best.fitness,\r\n      particleId: best.id\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find neighborhood best for a particle\r\n   */\r\n  private findNeighborhoodBest(particle: Particle): { position: (number | string)[]; fitness: number } {\r\n    if (!this.swarmState) return { position: particle.position, fitness: particle.fitness };\r\n    \r\n    switch (this.parameters.topology) {\r\n      case 'global':\r\n        return this.swarmState.globalBest;\r\n        \r\n      case 'local':\r\n      case 'ring':\r\n        // Find best among neighbors\r\n        let best = particle.personalBest;\r\n        for (const neighborId of particle.neighbors) {\r\n          const neighbor = this.swarmState.particles.find(p => p.id === neighborId);\r\n          if (neighbor && neighbor.personalBest.fitness < best.fitness) {\r\n            best = neighbor.personalBest;\r\n          }\r\n        }\r\n        return best;\r\n        \r\n      default:\r\n        return this.swarmState.globalBest;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup neighborhood topology\r\n   */\r\n  private setupTopology(): void {\r\n    if (!this.swarmState) return;\r\n    \r\n    const particles = this.swarmState.particles;\r\n    \r\n    switch (this.parameters.topology) {\r\n      case 'ring':\r\n        for (let i = 0; i < particles.length; i++) {\r\n          const prev = (i - 1 + particles.length) % particles.length;\r\n          const next = (i + 1) % particles.length;\r\n          particles[i].neighbors = [particles[prev].id, particles[next].id];\r\n        }\r\n        break;\r\n        \r\n      case 'local':\r\n        for (let i = 0; i < particles.length; i++) {\r\n          const neighbors: string[] = [];\r\n          for (let j = 0; j < this.parameters.neighborhoodSize && j < particles.length; j++) {\r\n            const neighborIndex = (i + j + 1) % particles.length;\r\n            if (neighborIndex !== i) {\r\n              neighbors.push(particles[neighborIndex].id);\r\n            }\r\n          }\r\n          particles[i].neighbors = neighbors;\r\n        }\r\n        break;\r\n        \r\n      case 'star':\r\n        // All particles connected to best particle\r\n        const bestParticle = this.findGlobalBest(particles);\r\n        for (const particle of particles) {\r\n          if (particle.id !== bestParticle.particleId) {\r\n            particle.neighbors = [bestParticle.particleId];\r\n          }\r\n        }\r\n        break;\r\n        \r\n      case 'random':\r\n        for (const particle of particles) {\r\n          const neighbors: string[] = [];\r\n          for (let j = 0; j < this.parameters.neighborhoodSize; j++) {\r\n            const randomIndex = Math.floor(this.random() * particles.length);\r\n            if (particles[randomIndex].id !== particle.id && \r\n                !neighbors.includes(particles[randomIndex].id)) {\r\n              neighbors.push(particles[randomIndex].id);\r\n            }\r\n          }\r\n          particle.neighbors = neighbors;\r\n        }\r\n        break;\r\n        \r\n      default: // global\r\n        // No explicit neighbors - all particles use global best\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current inertia weight (adaptive)\r\n   */\r\n  private getCurrentInertiaWeight(): number {\r\n    if (!this.parameters.adaptiveParameters || !this.swarmState) {\r\n      return this.parameters.inertiaWeight;\r\n    }\r\n    \r\n    // Linear decrease from max to min\r\n    const progress = this.swarmState.iteration / this.parameters.maxIterations;\r\n    return this.parameters.inertiaWeightMax - \r\n           progress * (this.parameters.inertiaWeightMax - this.parameters.inertiaWeightMin);\r\n  }\r\n\r\n  /**\r\n   * Adapt algorithm parameters\r\n   */\r\n  private adaptParameters(): void {\r\n    if (!this.swarmState) return;\r\n    \r\n    // Adapt based on diversity\r\n    if (this.swarmState.diversityIndex < 0.1) {\r\n      // Low diversity - increase exploration\r\n      this.parameters.inertiaWeight = Math.min(0.9, this.parameters.inertiaWeight * 1.1);\r\n      this.parameters.maxVelocity = Math.min(0.5, this.parameters.maxVelocity * 1.1);\r\n    } else if (this.swarmState.diversityIndex > 0.8) {\r\n      // High diversity - increase exploitation\r\n      this.parameters.inertiaWeight = Math.max(0.1, this.parameters.inertiaWeight * 0.9);\r\n      this.parameters.maxVelocity = Math.max(0.05, this.parameters.maxVelocity * 0.9);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Maintain swarm diversity\r\n   */\r\n  private maintainDiversity(problem: OptimizationProblem): void {\r\n    if (!this.swarmState) return;\r\n    \r\n    // Replace stagnant particles\r\n    for (const particle of this.swarmState.particles) {\r\n      if (particle.stagnationCount > 20) {\r\n        // Reinitialize particle\r\n        const newParticle = this.createRandomParticle(problem);\r\n        Object.assign(particle, newParticle);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate average fitness\r\n   */\r\n  private calculateAverageFitness(particles: Particle[]): number {\r\n    const validFitnesses = particles.map(p => p.fitness).filter(f => f !== Number.MAX_VALUE);\r\n    return validFitnesses.length > 0 ? \r\n           validFitnesses.reduce((sum, f) => sum + f, 0) / validFitnesses.length : \r\n           Number.MAX_VALUE;\r\n  }\r\n\r\n  /**\r\n   * Calculate diversity index\r\n   */\r\n  private calculateDiversityIndex(particles: Particle[]): number {\r\n    if (particles.length < 2) return 0;\r\n    \r\n    let totalDistance = 0;\r\n    let pairCount = 0;\r\n    \r\n    for (let i = 0; i < particles.length; i++) {\r\n      for (let j = i + 1; j < particles.length; j++) {\r\n        const distance = this.calculateDistance(particles[i], particles[j]);\r\n        totalDistance += distance;\r\n        pairCount++;\r\n      }\r\n    }\r\n    \r\n    return pairCount > 0 ? totalDistance / pairCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Calculate distance between particles\r\n   */\r\n  private calculateDistance(particle1: Particle, particle2: Particle): number {\r\n    let distance = 0;\r\n    \r\n    for (let i = 0; i < particle1.position.length; i++) {\r\n      if (typeof particle1.position[i] === 'number' && typeof particle2.position[i] === 'number') {\r\n        const diff = (particle1.position[i] as number) - (particle2.position[i] as number);\r\n        distance += diff * diff;\r\n      }\r\n    }\r\n    \r\n    return Math.sqrt(distance);\r\n  }\r\n\r\n  /**\r\n   * Update best solution\r\n   */\r\n  private updateBestSolution(problem: OptimizationProblem): void {\r\n    if (!this.swarmState) return;\r\n    \r\n    const bestParticle = this.swarmState.particles.find(p => p.id === this.swarmState!.globalBest.particleId);\r\n    if (!bestParticle) return;\r\n    \r\n    const variables: { [variableId: string]: number | string } = {};\r\n    problem.variables.forEach((variable, index) => {\r\n      variables[variable.id] = bestParticle.position[index];\r\n    });\r\n    \r\n    this.bestSolution = {\r\n      id: `pso_best_${Date.now()}`,\r\n      variables,\r\n      objectiveValues: {},\r\n      constraintViolations: [],\r\n      feasible: true,\r\n      fitness: bestParticle.fitness,\r\n      systemConfiguration: problem.systemConfiguration,\r\n      performanceMetrics: {} as SolutionPerformanceMetrics\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check termination criteria\r\n   */\r\n  private shouldTerminate(problem: OptimizationProblem): boolean {\r\n    if (!this.swarmState) return true;\r\n    \r\n    // Maximum iterations\r\n    if (this.swarmState.iteration >= this.parameters.maxIterations) {\r\n      return true;\r\n    }\r\n    \r\n    // Convergence check\r\n    if (this.history.length >= 20) {\r\n      const recentHistory = this.history.slice(-20);\r\n      const fitnessImprovement = recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness;\r\n      \r\n      if (Math.abs(fitnessImprovement) < problem.convergenceCriteria.toleranceValue) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Update optimization history\r\n   */\r\n  private updateHistory(): void {\r\n    if (!this.swarmState) return;\r\n    \r\n    const feasibleParticles = this.swarmState.particles.filter(p => p.fitness !== Number.MAX_VALUE);\r\n    const fitnesses = feasibleParticles.map(p => p.fitness);\r\n    \r\n    if (fitnesses.length === 0) {\r\n      fitnesses.push(Number.MAX_VALUE);\r\n    }\r\n    \r\n    const history: IterationHistory = {\r\n      iteration: this.swarmState.iteration,\r\n      bestFitness: Math.min(...fitnesses),\r\n      averageFitness: this.swarmState.averageFitness,\r\n      worstFitness: Math.max(...fitnesses),\r\n      diversity: this.swarmState.diversityIndex,\r\n      constraintViolations: this.swarmState.particles.filter(p => p.fitness === Number.MAX_VALUE).length,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    this.history.push(history);\r\n  }\r\n\r\n  /**\r\n   * Create optimization result\r\n   */\r\n  private createOptimizationResult(problem: OptimizationProblem, startTime: number): OptimizationResult {\r\n    const executionTime = performance.now() - startTime;\r\n    \r\n    const statistics: OptimizationStatistics = {\r\n      totalIterations: this.swarmState?.iteration || 0,\r\n      totalEvaluations: this.evaluationCount,\r\n      convergenceIteration: this.swarmState?.iteration || 0,\r\n      executionTime,\r\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\r\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\r\n      diversityHistory: this.history.map(h => h.diversity),\r\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\r\n      algorithmSpecificStats: {\r\n        swarmSize: this.parameters.swarmSize,\r\n        finalInertiaWeight: this.getCurrentInertiaWeight(),\r\n        finalDiversityIndex: this.swarmState?.diversityIndex || 0\r\n      }\r\n    };\r\n    \r\n    const optimizationHistory: OptimizationHistory = {\r\n      iterations: this.history,\r\n      populationHistory: this.populationHistory,\r\n      parameterHistory: [],\r\n      convergenceMetrics: []\r\n    };\r\n    \r\n    return {\r\n      problemId: problem.id,\r\n      status: OptimizationStatus.CONVERGED,\r\n      bestSolution: this.bestSolution!,\r\n      statistics,\r\n      history: optimizationHistory,\r\n      analysis: {},\r\n      recommendations: [],\r\n      warnings: [],\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  // Utility methods\r\n  private generateParticleId(): string {\r\n    return `pso_particle_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private createSeededRandom(seed: number): () => number {\r\n    let state = seed;\r\n    return () => {\r\n      state = (state * 9301 + 49297) % 233280;\r\n      return state / 233280;\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}