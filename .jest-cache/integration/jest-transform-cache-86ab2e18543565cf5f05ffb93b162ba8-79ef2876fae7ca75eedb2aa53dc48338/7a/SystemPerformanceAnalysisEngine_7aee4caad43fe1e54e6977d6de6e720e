003dc0d099d0eceecfa74d25bd980092
"use strict";

/**
 * System Performance Analysis Engine
 *
 * Comprehensive performance analysis service for Phase 3 Priority 3: Advanced System Analysis Tools
 * Provides real-time monitoring, trend analysis, efficiency calculations, and performance benchmarking
 * capabilities for HVAC duct systems.
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_20nkvyezxw() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPerformanceAnalysisEngine.ts";
  var hash = "fde316aef9473700c4f5f43bfecd1afc265bdd6e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPerformanceAnalysisEngine.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "2": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 68
        }
      },
      "3": {
        start: {
          line: 15,
          column: 35
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "4": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "5": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 78
        }
      },
      "6": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "7": {
        start: {
          line: 35,
          column: 39
        },
        end: {
          line: 35,
          column: 113
        }
      },
      "8": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "9": {
        start: {
          line: 41,
          column: 40
        },
        end: {
          line: 41,
          column: 118
        }
      },
      "10": {
        start: {
          line: 43,
          column: 39
        },
        end: {
          line: 43,
          column: 114
        }
      },
      "11": {
        start: {
          line: 45,
          column: 38
        },
        end: {
          line: 45,
          column: 108
        }
      },
      "12": {
        start: {
          line: 47,
          column: 36
        },
        end: {
          line: 47,
          column: 142
        }
      },
      "13": {
        start: {
          line: 49,
          column: 40
        },
        end: {
          line: 49,
          column: 118
        }
      },
      "14": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "15": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 58
        }
      },
      "16": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "17": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 127
        }
      },
      "18": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "19": {
        start: {
          line: 76,
          column: 37
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "20": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 120
        }
      },
      "21": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 80
        }
      },
      "22": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 86,
          column: 130
        }
      },
      "23": {
        start: {
          line: 88,
          column: 37
        },
        end: {
          line: 88,
          column: 108
        }
      },
      "24": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 90,
          column: 92
        }
      },
      "25": {
        start: {
          line: 91,
          column: 35
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "26": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 34
        }
      },
      "27": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "28": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "29": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 146,
          column: 82
        }
      },
      "30": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 149,
          column: 103
        }
      },
      "31": {
        start: {
          line: 150,
          column: 22
        },
        end: {
          line: 150,
          column: 76
        }
      },
      "32": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "33": {
        start: {
          line: 152,
          column: 22
        },
        end: {
          line: 152,
          column: 71
        }
      },
      "34": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "35": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "36": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 190,
          column: 80
        }
      },
      "37": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 193,
          column: 49
        }
      },
      "38": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 194,
          column: 63
        }
      },
      "39": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "40": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 209,
          column: 80
        }
      },
      "41": {
        start: {
          line: 210,
          column: 31
        },
        end: {
          line: 210,
          column: 82
        }
      },
      "42": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 212,
          column: 78
        }
      },
      "43": {
        start: {
          line: 213,
          column: 36
        },
        end: {
          line: 213,
          column: 118
        }
      },
      "44": {
        start: {
          line: 214,
          column: 39
        },
        end: {
          line: 214,
          column: 75
        }
      },
      "45": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "46": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 80
        }
      },
      "47": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 44
        }
      },
      "48": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 64
        }
      },
      "49": {
        start: {
          line: 229,
          column: 31
        },
        end: {
          line: 229,
          column: 61
        }
      },
      "50": {
        start: {
          line: 230,
          column: 32
        },
        end: {
          line: 230,
          column: 84
        }
      },
      "51": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "52": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 244,
          column: 34
        }
      },
      "53": {
        start: {
          line: 245,
          column: 34
        },
        end: {
          line: 245,
          column: 38
        }
      },
      "54": {
        start: {
          line: 246,
          column: 29
        },
        end: {
          line: 246,
          column: 89
        }
      },
      "55": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "56": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 72
        }
      },
      "57": {
        start: {
          line: 250,
          column: 13
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "58": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 67
        }
      },
      "59": {
        start: {
          line: 252,
          column: 13
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "60": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "61": {
        start: {
          line: 254,
          column: 13
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "62": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 67
        }
      },
      "63": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "64": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "65": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "66": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 278,
          column: 18
        }
      },
      "67": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 285,
          column: 18
        }
      },
      "68": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 291,
          column: 18
        }
      },
      "69": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 70
        }
      },
      "70": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 312,
          column: 10
        }
      },
      "71": {
        start: {
          line: 318,
          column: 26
        },
        end: {
          line: 318,
          column: 36
        }
      },
      "72": {
        start: {
          line: 319,
          column: 23
        },
        end: {
          line: 319,
          column: 65
        }
      },
      "73": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 61
        }
      },
      "74": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 368,
          column: 10
        }
      },
      "75": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "76": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 53
        }
      },
      "77": {
        start: {
          line: 378,
          column: 30
        },
        end: {
          line: 378,
          column: 74
        }
      },
      "78": {
        start: {
          line: 380,
          column: 33
        },
        end: {
          line: 380,
          column: 76
        }
      },
      "79": {
        start: {
          line: 382,
          column: 26
        },
        end: {
          line: 382,
          column: 78
        }
      },
      "80": {
        start: {
          line: 384,
          column: 35
        },
        end: {
          line: 384,
          column: 82
        }
      },
      "81": {
        start: {
          line: 386,
          column: 32
        },
        end: {
          line: 386,
          column: 77
        }
      },
      "82": {
        start: {
          line: 387,
          column: 26
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "83": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "84": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "85": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 92
        }
      },
      "86": {
        start: {
          line: 411,
          column: 33
        },
        end: {
          line: 411,
          column: 88
        }
      },
      "87": {
        start: {
          line: 411,
          column: 60
        },
        end: {
          line: 411,
          column: 87
        }
      },
      "88": {
        start: {
          line: 412,
          column: 18
        },
        end: {
          line: 412,
          column: 41
        }
      },
      "89": {
        start: {
          line: 413,
          column: 18
        },
        end: {
          line: 413,
          column: 56
        }
      },
      "90": {
        start: {
          line: 413,
          column: 54
        },
        end: {
          line: 413,
          column: 55
        }
      },
      "91": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 49
        }
      },
      "92": {
        start: {
          line: 414,
          column: 40
        },
        end: {
          line: 414,
          column: 45
        }
      },
      "93": {
        start: {
          line: 415,
          column: 21
        },
        end: {
          line: 415,
          column: 64
        }
      },
      "94": {
        start: {
          line: 415,
          column: 55
        },
        end: {
          line: 415,
          column: 60
        }
      },
      "95": {
        start: {
          line: 416,
          column: 22
        },
        end: {
          line: 416,
          column: 81
        }
      },
      "96": {
        start: {
          line: 416,
          column: 47
        },
        end: {
          line: 416,
          column: 77
        }
      },
      "97": {
        start: {
          line: 417,
          column: 22
        },
        end: {
          line: 417,
          column: 61
        }
      },
      "98": {
        start: {
          line: 417,
          column: 44
        },
        end: {
          line: 417,
          column: 57
        }
      },
      "99": {
        start: {
          line: 418,
          column: 22
        },
        end: {
          line: 418,
          column: 75
        }
      },
      "100": {
        start: {
          line: 419,
          column: 26
        },
        end: {
          line: 419,
          column: 41
        }
      },
      "101": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "102": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 68
        }
      },
      "103": {
        start: {
          line: 424,
          column: 13
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "104": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 71
        }
      },
      "105": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 71
        }
      },
      "106": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 40
        }
      },
      "107": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 451,
          column: 10
        }
      },
      "108": {
        start: {
          line: 457,
          column: 26
        },
        end: {
          line: 457,
          column: 28
        }
      },
      "109": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "110": {
        start: {
          line: 460,
          column: 35
        },
        end: {
          line: 460,
          column: 99
        }
      },
      "111": {
        start: {
          line: 461,
          column: 38
        },
        end: {
          line: 461,
          column: 75
        }
      },
      "112": {
        start: {
          line: 462,
          column: 35
        },
        end: {
          line: 462,
          column: 69
        }
      },
      "113": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 493,
          column: 13
        }
      },
      "114": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 492,
          column: 19
        }
      },
      "115": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 25
        }
      },
      "116": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 535,
          column: 10
        }
      },
      "117": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 580,
          column: 10
        }
      },
      "118": {
        start: {
          line: 588,
          column: 33
        },
        end: {
          line: 588,
          column: 74
        }
      },
      "119": {
        start: {
          line: 589,
          column: 32
        },
        end: {
          line: 589,
          column: 34
        }
      },
      "120": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 590,
          column: 30
        }
      },
      "121": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 614,
          column: 10
        }
      },
      "122": {
        start: {
          line: 622,
          column: 34
        },
        end: {
          line: 622,
          column: 35
        }
      },
      "123": {
        start: {
          line: 623,
          column: 23
        },
        end: {
          line: 623,
          column: 60
        }
      },
      "124": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 626,
          column: 22
        }
      },
      "125": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 22
        }
      },
      "126": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 628,
          column: 22
        }
      },
      "127": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 22
        }
      },
      "128": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 630,
          column: 38
        }
      },
      "129": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 38
        }
      },
      "130": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 632,
          column: 38
        }
      },
      "131": {
        start: {
          line: 632,
          column: 12
        },
        end: {
          line: 632,
          column: 38
        }
      },
      "132": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 634,
          column: 22
        }
      },
      "133": {
        start: {
          line: 634,
          column: 12
        },
        end: {
          line: 634,
          column: 22
        }
      },
      "134": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 17
        }
      },
      "135": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 673,
          column: 10
        }
      },
      "136": {
        start: {
          line: 679,
          column: 23
        },
        end: {
          line: 679,
          column: 25
        }
      },
      "137": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 698,
          column: 9
        }
      },
      "138": {
        start: {
          line: 682,
          column: 12
        },
        end: {
          line: 697,
          column: 15
        }
      },
      "139": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 717,
          column: 9
        }
      },
      "140": {
        start: {
          line: 701,
          column: 12
        },
        end: {
          line: 716,
          column: 15
        }
      },
      "141": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 718,
          column: 22
        }
      },
      "142": {
        start: {
          line: 724,
          column: 32
        },
        end: {
          line: 724,
          column: 34
        }
      },
      "143": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 750,
          column: 9
        }
      },
      "144": {
        start: {
          line: 727,
          column: 12
        },
        end: {
          line: 749,
          column: 15
        }
      },
      "145": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 751,
          column: 31
        }
      },
      "146": {
        start: {
          line: 758,
          column: 8
        },
        end: {
          line: 784,
          column: 10
        }
      },
      "147": {
        start: {
          line: 787,
          column: 0
        },
        end: {
          line: 787,
          column: 74
        }
      },
      "148": {
        start: {
          line: 788,
          column: 0
        },
        end: {
          line: 788,
          column: 50
        }
      },
      "149": {
        start: {
          line: 789,
          column: 0
        },
        end: {
          line: 789,
          column: 59
        }
      },
      "150": {
        start: {
          line: 790,
          column: 0
        },
        end: {
          line: 790,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 94
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 81
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 73
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 88
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 125
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 72
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 144
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 56
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 189
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 103
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 208
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 78
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 224
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 68
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 242
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 49
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 270
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 61
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 299
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 40
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 317
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 40
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 325
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 70
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 373
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 51
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 406
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 411,
            column: 52
          },
          end: {
            line: 411,
            column: 53
          }
        },
        loc: {
          start: {
            line: 411,
            column: 60
          },
          end: {
            line: 411,
            column: 87
          }
        },
        line: 411
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 413,
            column: 44
          },
          end: {
            line: 413,
            column: 45
          }
        },
        loc: {
          start: {
            line: 413,
            column: 54
          },
          end: {
            line: 413,
            column: 55
          }
        },
        line: 413
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 414,
            column: 30
          },
          end: {
            line: 414,
            column: 31
          }
        },
        loc: {
          start: {
            line: 414,
            column: 40
          },
          end: {
            line: 414,
            column: 45
          }
        },
        line: 414
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 415,
            column: 45
          },
          end: {
            line: 415,
            column: 46
          }
        },
        loc: {
          start: {
            line: 415,
            column: 55
          },
          end: {
            line: 415,
            column: 60
          }
        },
        line: 415
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 416,
            column: 31
          },
          end: {
            line: 416,
            column: 32
          }
        },
        loc: {
          start: {
            line: 416,
            column: 47
          },
          end: {
            line: 416,
            column: 77
          }
        },
        line: 416
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 417,
            column: 32
          }
        },
        loc: {
          start: {
            line: 417,
            column: 44
          },
          end: {
            line: 417,
            column: 57
          }
        },
        line: 417
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 50
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 435
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 59
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 456
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        },
        loc: {
          start: {
            line: 500,
            column: 54
          },
          end: {
            line: 536,
            column: 5
          }
        },
        line: 500
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 5
          }
        },
        loc: {
          start: {
            line: 540,
            column: 52
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 540
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 585,
            column: 4
          },
          end: {
            line: 585,
            column: 5
          }
        },
        loc: {
          start: {
            line: 585,
            column: 85
          },
          end: {
            line: 615,
            column: 5
          }
        },
        line: 585
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 619,
            column: 4
          },
          end: {
            line: 619,
            column: 5
          }
        },
        loc: {
          start: {
            line: 619,
            column: 47
          },
          end: {
            line: 636,
            column: 5
          }
        },
        line: 619
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 640,
            column: 4
          },
          end: {
            line: 640,
            column: 5
          }
        },
        loc: {
          start: {
            line: 640,
            column: 82
          },
          end: {
            line: 674,
            column: 5
          }
        },
        line: 640
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 678,
            column: 4
          },
          end: {
            line: 678,
            column: 5
          }
        },
        loc: {
          start: {
            line: 678,
            column: 77
          },
          end: {
            line: 719,
            column: 5
          }
        },
        line: 678
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 723,
            column: 4
          },
          end: {
            line: 723,
            column: 5
          }
        },
        loc: {
          start: {
            line: 723,
            column: 113
          },
          end: {
            line: 752,
            column: 5
          }
        },
        line: 723
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 756,
            column: 4
          },
          end: {
            line: 756,
            column: 5
          }
        },
        loc: {
          start: {
            line: 756,
            column: 85
          },
          end: {
            line: 785,
            column: 5
          }
        },
        line: 756
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 39,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 85
          }
        }, {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 39,
            column: 51
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 48
          }
        }, {
          start: {
            line: 37,
            column: 52
          },
          end: {
            line: 37,
            column: 77
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 67
          },
          end: {
            line: 67,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 92
          },
          end: {
            line: 67,
            column: 105
          }
        }, {
          start: {
            line: 67,
            column: 108
          },
          end: {
            line: 67,
            column: 123
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 86
          }
        }, {
          start: {
            line: 94,
            column: 90
          },
          end: {
            line: 94,
            column: 134
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 90
          }
        }, {
          start: {
            line: 95,
            column: 94
          },
          end: {
            line: 95,
            column: 138
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 71
          },
          end: {
            line: 125,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 82
          },
          end: {
            line: 125,
            column: 86
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 248
      },
      "7": {
        loc: {
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 250
      },
      "8": {
        loc: {
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 252
      },
      "9": {
        loc: {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 254
      },
      "10": {
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 90
          },
          end: {
            line: 263,
            column: 110
          }
        }, {
          start: {
            line: 263,
            column: 113
          },
          end: {
            line: 263,
            column: 115
          }
        }],
        line: 263
      },
      "11": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 278,
            column: 18
          }
        }, {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 285,
            column: 18
          }
        }, {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 291,
            column: 18
          }
        }, {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 293,
            column: 70
          }
        }],
        line: 271
      },
      "12": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "13": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "14": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: 424,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        }],
        line: 421
      },
      "15": {
        loc: {
          start: {
            line: 424,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: 427,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        }],
        line: 424
      },
      "16": {
        loc: {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "17": {
        loc: {
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 493,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 493,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "18": {
        loc: {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 468,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 52
          },
          end: {
            line: 468,
            column: 62
          }
        }, {
          start: {
            line: 468,
            column: 65
          },
          end: {
            line: 468,
            column: 71
          }
        }],
        line: 468
      },
      "19": {
        loc: {
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 626,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 626,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "20": {
        loc: {
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 628,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 628,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 627
      },
      "21": {
        loc: {
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 630,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 630,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "22": {
        loc: {
          start: {
            line: 631,
            column: 8
          },
          end: {
            line: 632,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 8
          },
          end: {
            line: 632,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "23": {
        loc: {
          start: {
            line: 633,
            column: 8
          },
          end: {
            line: 634,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 633,
            column: 8
          },
          end: {
            line: 634,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 633
      },
      "24": {
        loc: {
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 698,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 698,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 681
      },
      "25": {
        loc: {
          start: {
            line: 700,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 700,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 700
      },
      "26": {
        loc: {
          start: {
            line: 726,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 726,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 726
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPerformanceAnalysisEngine.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemPerformanceAnalysisEngine.ts"],
      sourcesContent: ["/**\n * System Performance Analysis Engine\n * \n * Comprehensive performance analysis service for Phase 3 Priority 3: Advanced System Analysis Tools\n * Provides real-time monitoring, trend analysis, efficiency calculations, and performance benchmarking\n * capabilities for HVAC duct systems.\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport {\n  SystemAnalysis,\n  PerformanceAnalysis,\n  PerformanceMetrics,\n  TrendAnalysis,\n  BenchmarkComparison,\n  EfficiencyAnalysis,\n  PerformanceAlert,\n  PerformanceRecommendation,\n  UncertaintyAnalysis,\n  SystemConfiguration,\n  AnalysisType,\n  AnalysisScope,\n  Measurement,\n  MeasurementSource,\n  QualityIndicator,\n  FanCurvePosition,\n  BalanceQuality,\n  BalanceGrade,\n  TrendDirection,\n  AlertType,\n  AlertSeverity,\n  RecommendationType,\n  RecommendationPriority,\n  BenchmarkType,\n  PerformanceAnomaly,\n  AnomalyType,\n  PredictiveAnalysis\n} from './types/SystemAnalysisTypes';\n\nimport { SystemPressureCalculator } from './SystemPressureCalculator';\nimport { FittingLossCalculator } from './FittingLossCalculator';\nimport { AdvancedFittingCalculator } from './AdvancedFittingCalculator';\nimport { AirPropertiesCalculator } from './AirPropertiesCalculator';\n\n/**\n * Main System Performance Analysis Engine\n * \n * Provides comprehensive performance analysis capabilities including:\n * - Real-time performance monitoring\n * - Trend analysis and forecasting\n * - Efficiency calculations and benchmarking\n * - Anomaly detection and alerting\n * - Performance recommendations\n */\nexport class SystemPerformanceAnalysisEngine {\n  private static readonly VERSION = '3.0.0';\n  private static readonly ANALYSIS_CACHE = new Map<string, PerformanceAnalysis>();\n  private static readonly BENCHMARK_DATABASE = new Map<string, BenchmarkComparison>();\n\n  /**\n   * Perform comprehensive system performance analysis\n   */\n  public static async analyzeSystemPerformance(\n    systemConfiguration: SystemConfiguration,\n    analysisScope: AnalysisScope,\n    historicalData?: PerformanceMetrics[]\n  ): Promise<PerformanceAnalysis> {\n    try {\n      const analysisId = this.generateAnalysisId(systemConfiguration.id);\n      const timestamp = new Date();\n\n      // Calculate current performance metrics\n      const performanceMetrics = await this.calculatePerformanceMetrics(\n        systemConfiguration,\n        analysisScope\n      );\n\n      // Perform trend analysis if historical data is available\n      const trendAnalysis = historicalData && historicalData.length > 0\n        ? await this.performTrendAnalysis(historicalData, performanceMetrics)\n        : this.createDefaultTrendAnalysis();\n\n      // Benchmark against similar systems\n      const benchmarkComparison = await this.performBenchmarkComparison(\n        systemConfiguration,\n        performanceMetrics\n      );\n\n      // Analyze system efficiency\n      const efficiencyAnalysis = await this.analyzeSystemEfficiency(\n        systemConfiguration,\n        performanceMetrics\n      );\n\n      // Detect performance alerts and anomalies\n      const alertsAndWarnings = await this.detectPerformanceAlerts(\n        performanceMetrics,\n        historicalData\n      );\n\n      // Generate performance recommendations\n      const recommendations = await this.generatePerformanceRecommendations(\n        performanceMetrics,\n        efficiencyAnalysis,\n        benchmarkComparison\n      );\n\n      // Perform uncertainty analysis\n      const uncertaintyAnalysis = await this.performUncertaintyAnalysis(\n        performanceMetrics,\n        systemConfiguration\n      );\n\n      const analysis: PerformanceAnalysis = {\n        id: analysisId,\n        systemId: systemConfiguration.id,\n        analysisTimestamp: timestamp,\n        performanceMetrics,\n        trendAnalysis,\n        benchmarkComparison,\n        efficiencyAnalysis,\n        alertsAndWarnings,\n        recommendations,\n        uncertaintyAnalysis\n      };\n\n      // Cache the analysis for future reference\n      this.ANALYSIS_CACHE.set(analysisId, analysis);\n\n      return analysis;\n\n    } catch (error) {\n      throw new Error(`System performance analysis failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Calculate comprehensive performance metrics for the system\n   */\n  private static async calculatePerformanceMetrics(\n    systemConfiguration: SystemConfiguration,\n    analysisScope: AnalysisScope\n  ): Promise<PerformanceMetrics> {\n    const timestamp = new Date();\n\n    // Calculate system pressure using existing calculators\n    const systemPressureResult = SystemPressureCalculator.calculateEnhancedSystemPressure({\n      segments: this.createDuctSegmentsFromConfig(systemConfiguration),\n      systemType: systemConfiguration.systemType,\n      designConditions: systemConfiguration.operatingConditions\n    });\n\n    // Calculate fan performance metrics\n    const fanPerformance = this.calculateFanPerformance(\n      systemConfiguration,\n      systemPressureResult.totalPressureLoss\n    );\n\n    // Calculate airflow metrics\n    const airflowMetrics = this.calculateAirflowMetrics(systemConfiguration);\n\n    // Calculate system efficiency metrics\n    const efficiencyMetrics = this.calculateSystemEfficiencyMetrics(\n      systemConfiguration,\n      fanPerformance,\n      systemPressureResult\n    );\n\n    // Calculate environmental metrics\n    const environmentalMetrics = this.calculateEnvironmentalMetrics(\n      systemConfiguration,\n      fanPerformance\n    );\n\n    // Calculate system balance quality\n    const balanceQuality = this.assessSystemBalance(\n      systemConfiguration,\n      airflowMetrics\n    );\n\n    const performanceMetrics: PerformanceMetrics = {\n      // Pressure and Flow Metrics\n      totalSystemPressure: this.createMeasurement(\n        systemPressureResult.totalPressureLoss,\n        'in wg',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      staticPressure: this.createMeasurement(\n        systemPressureResult.staticPressure || systemPressureResult.totalPressureLoss * 0.8,\n        'in wg',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      velocityPressure: this.createMeasurement(\n        systemPressureResult.velocityPressure || systemPressureResult.totalPressureLoss * 0.2,\n        'in wg',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      totalAirflow: this.createMeasurement(\n        airflowMetrics.totalAirflow,\n        'CFM',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      designAirflow: this.createMeasurement(\n        systemConfiguration.designParameters.designAirflow,\n        'CFM',\n        MeasurementSource.MANUFACTURER_DATA,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      airflowEfficiency: this.createMeasurement(\n        airflowMetrics.efficiency,\n        '%',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n\n      // Fan Performance\n      fanPower: this.createMeasurement(\n        fanPerformance.power,\n        'kW',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      fanEfficiency: this.createMeasurement(\n        fanPerformance.efficiency,\n        '%',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      fanSpeed: this.createMeasurement(\n        fanPerformance.speed,\n        'RPM',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n      fanCurvePosition: fanPerformance.curvePosition,\n\n      // System Efficiency\n      systemEfficiency: this.createMeasurement(\n        efficiencyMetrics.systemEfficiency,\n        '%',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      transportEfficiency: this.createMeasurement(\n        efficiencyMetrics.transportEfficiency,\n        '%',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.HIGH,\n        timestamp\n      ),\n      distributionEfficiency: this.createMeasurement(\n        efficiencyMetrics.distributionEfficiency,\n        '%',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n\n      // Environmental Metrics\n      noiseLevel: this.createMeasurement(\n        environmentalMetrics.noiseLevel,\n        'dBA',\n        MeasurementSource.ESTIMATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n      vibrationLevel: this.createMeasurement(\n        environmentalMetrics.vibrationLevel,\n        'mm/s',\n        MeasurementSource.ESTIMATED,\n        QualityIndicator.LOW,\n        timestamp\n      ),\n      temperatureRise: this.createMeasurement(\n        environmentalMetrics.temperatureRise,\n        '\xB0F',\n        MeasurementSource.CALCULATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n\n      // Filter and Component Performance\n      filterPressureDrop: this.createMeasurement(\n        environmentalMetrics.filterPressureDrop,\n        'in wg',\n        MeasurementSource.ESTIMATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n      coilPressureDrop: this.createMeasurement(\n        environmentalMetrics.coilPressureDrop,\n        'in wg',\n        MeasurementSource.ESTIMATED,\n        QualityIndicator.MEDIUM,\n        timestamp\n      ),\n      dampersPosition: [], // Would be populated from actual system data\n\n      // System Balance\n      balanceQuality,\n      flowDistribution: airflowMetrics.flowDistribution\n    };\n\n    return performanceMetrics;\n  }\n\n  /**\n   * Create a standardized measurement object\n   */\n  private static createMeasurement(\n    value: number,\n    units: string,\n    source: MeasurementSource,\n    quality: QualityIndicator,\n    timestamp: Date,\n    accuracy: number = 0.95\n  ): Measurement {\n    return {\n      value,\n      units,\n      accuracy,\n      timestamp,\n      source,\n      qualityIndicator: quality,\n      uncertaintyBounds: {\n        lowerBound: value * (1 - (1 - accuracy)),\n        upperBound: value * (1 + (1 - accuracy)),\n        confidenceLevel: accuracy * 100,\n        distributionType: 'normal' as const\n      }\n    };\n  }\n\n  /**\n   * Calculate fan performance metrics\n   */\n  private static calculateFanPerformance(\n    systemConfiguration: SystemConfiguration,\n    systemPressure: number\n  ): any {\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\n    const designPressure = systemConfiguration.designParameters.designPressure;\n\n    // Simplified fan performance calculation\n    // In practice, this would use actual fan curves and manufacturer data\n    const efficiency = Math.max(0.6, Math.min(0.9, 0.8 - (systemPressure - designPressure) * 0.05));\n    const power = (designAirflow * systemPressure) / (6356 * efficiency); // HP\n    const powerKW = power * 0.746; // Convert to kW\n    const speed = 1800 * Math.sqrt(systemPressure / designPressure); // Simplified speed calculation\n\n    const curvePosition: FanCurvePosition = {\n      operatingPoint: {\n        airflow: designAirflow,\n        pressure: systemPressure,\n        power: powerKW,\n        efficiency: efficiency * 100,\n        speed\n      },\n      designPoint: {\n        airflow: designAirflow,\n        pressure: designPressure,\n        power: (designAirflow * designPressure) / (6356 * 0.8) * 0.746,\n        efficiency: 80,\n        speed: 1800\n      },\n      efficiencyAtOperating: efficiency * 100,\n      efficiencyAtDesign: 80,\n      surgeMargin: Math.max(0, (designAirflow * 0.7 - designAirflow) / designAirflow * 100),\n      stallMargin: Math.max(0, (designAirflow * 1.3 - designAirflow) / designAirflow * 100),\n      recommendedOperatingRange: {\n        minAirflow: designAirflow * 0.7,\n        maxAirflow: designAirflow * 1.3,\n        minPressure: designPressure * 0.5,\n        maxPressure: designPressure * 1.5\n      }\n    };\n\n    return {\n      power: powerKW,\n      efficiency: efficiency * 100,\n      speed,\n      curvePosition\n    };\n  }\n\n  /**\n   * Calculate airflow metrics and distribution\n   */\n  private static calculateAirflowMetrics(systemConfiguration: SystemConfiguration): any {\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\n    \n    // Simplified airflow calculation\n    // In practice, this would consider actual system measurements\n    const totalAirflow = designAirflow * 0.95; // Assume 5% leakage\n    const efficiency = (totalAirflow / designAirflow) * 100;\n\n    return {\n      totalAirflow,\n      efficiency,\n      flowDistribution: {\n        uniformityIndex: 0.85, // Simplified\n        variationCoefficient: 0.15,\n        zones: []\n      }\n    };\n  }\n\n  /**\n   * Calculate system efficiency metrics\n   */\n  private static calculateSystemEfficiencyMetrics(\n    systemConfiguration: SystemConfiguration,\n    fanPerformance: any,\n    systemPressureResult: any\n  ): any {\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\n    const designPressure = systemConfiguration.designParameters.designPressure;\n\n    // Calculate various efficiency metrics\n    const systemEfficiency = Math.min(95, fanPerformance.efficiency * 0.9); // Account for system losses\n    const transportEfficiency = Math.min(90, 100 - (systemPressureResult.totalPressureLoss / designPressure) * 10);\n    const distributionEfficiency = Math.min(85, systemEfficiency * 0.9); // Account for distribution losses\n\n    return {\n      systemEfficiency,\n      transportEfficiency,\n      distributionEfficiency\n    };\n  }\n\n  /**\n   * Calculate environmental metrics\n   */\n  private static calculateEnvironmentalMetrics(\n    systemConfiguration: SystemConfiguration,\n    fanPerformance: any\n  ): any {\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\n\n    // Simplified environmental calculations\n    const velocity = designAirflow / 144; // Simplified velocity calculation\n    const noiseLevel = 40 + 20 * Math.log10(velocity / 1000); // Simplified noise model\n    const vibrationLevel = Math.max(0.5, velocity / 2000); // Simplified vibration model\n    const temperatureRise = fanPerformance.power * 3412 / (designAirflow * 1.08); // Fan heat rise\n\n    return {\n      noiseLevel: Math.max(35, Math.min(65, noiseLevel)),\n      vibrationLevel: Math.max(0.1, Math.min(5.0, vibrationLevel)),\n      temperatureRise: Math.max(0.5, Math.min(5.0, temperatureRise)),\n      filterPressureDrop: 0.5, // Typical clean filter\n      coilPressureDrop: 0.8 // Typical coil pressure drop\n    };\n  }\n\n  /**\n   * Assess system balance quality\n   */\n  private static assessSystemBalance(\n    systemConfiguration: SystemConfiguration,\n    airflowMetrics: any\n  ): BalanceQuality {\n    // Simplified balance assessment\n    const flowVariation = 0.15; // 15% variation\n    const pressureVariation = 0.12; // 12% variation\n    const overallScore = Math.max(0, 100 - (flowVariation + pressureVariation) * 200);\n\n    let balanceGrade: BalanceGrade;\n    if (overallScore >= 90) balanceGrade = BalanceGrade.EXCELLENT;\n    else if (overallScore >= 80) balanceGrade = BalanceGrade.GOOD;\n    else if (overallScore >= 70) balanceGrade = BalanceGrade.ACCEPTABLE;\n    else if (overallScore >= 60) balanceGrade = BalanceGrade.POOR;\n    else balanceGrade = BalanceGrade.CRITICAL;\n\n    return {\n      overallScore,\n      flowVariation,\n      pressureVariation,\n      balanceGrade,\n      criticalZones: balanceGrade === BalanceGrade.CRITICAL ? ['Zone 1', 'Zone 3'] : [],\n      balanceRecommendations: this.generateBalanceRecommendations(balanceGrade)\n    };\n  }\n\n  /**\n   * Generate balance recommendations based on grade\n   */\n  private static generateBalanceRecommendations(grade: BalanceGrade): string[] {\n    switch (grade) {\n      case BalanceGrade.CRITICAL:\n        return [\n          'Immediate system rebalancing required',\n          'Check for blocked dampers or ducts',\n          'Verify fan operation and capacity',\n          'Consider professional commissioning'\n        ];\n      case BalanceGrade.POOR:\n        return [\n          'System rebalancing recommended',\n          'Adjust damper positions',\n          'Check for duct leakage',\n          'Verify design calculations'\n        ];\n      case BalanceGrade.ACCEPTABLE:\n        return [\n          'Minor adjustments may improve performance',\n          'Monitor system performance trends',\n          'Consider seasonal adjustments'\n        ];\n      default:\n        return ['System balance is within acceptable limits'];\n    }\n  }\n\n  /**\n   * Create duct segments from system configuration\n   */\n  private static createDuctSegmentsFromConfig(systemConfiguration: SystemConfiguration): any[] {\n    // Simplified duct segment creation\n    // In practice, this would parse the actual system configuration\n    return [\n      {\n        id: 'main_supply',\n        length: 100,\n        diameter: 24,\n        material: 'galvanized_steel',\n        roughness: 0.0015,\n        airflow: systemConfiguration.designParameters.designAirflow,\n        fittings: []\n      }\n    ];\n  }\n\n  /**\n   * Generate unique analysis ID\n   */\n  private static generateAnalysisId(systemId: string): string {\n    const timestamp = Date.now();\n    const random = Math.random().toString(36).substring(2, 8);\n    return `analysis_${systemId}_${timestamp}_${random}`;\n  }\n\n  /**\n   * Create default trend analysis when no historical data is available\n   */\n  private static createDefaultTrendAnalysis(): TrendAnalysis {\n    return {\n      timeRange: {\n        startDate: new Date(),\n        endDate: new Date(),\n        duration: 0,\n        units: 'days' as const\n      },\n      trendDirection: TrendDirection.STABLE,\n      trendMagnitude: 0,\n      seasonalPatterns: [],\n      anomalies: [],\n      predictiveAnalysis: {\n        forecastHorizon: 12,\n        predictedPerformance: [],\n        confidenceInterval: { lowerBound: 0, upperBound: 0, confidenceLevel: 0 },\n        predictionModel: {\n          modelType: 'linear_regression' as const,\n          accuracy: 0,\n          lastTrainingDate: new Date(),\n          dataPoints: 0,\n          validationScore: 0\n        },\n        keyFactors: [],\n        scenarios: []\n      },\n      degradationRate: {\n        overallDegradationRate: 2.0, // 2% per year typical\n        componentDegradation: [],\n        degradationFactors: [],\n        maintenanceImpact: {\n          preventiveMaintenance: { performanceImpact: 5, lifespanImpact: 2, costImpact: 1000 },\n          correctiveMaintenance: { performanceImpact: -10, lifespanImpact: -1, costImpact: 5000 },\n          deferredMaintenance: { performanceImpact: -15, lifespanImpact: -3, costImpact: 10000 }\n        },\n        projectedLifespan: {\n          currentAge: 0,\n          designLife: 20,\n          projectedLife: 18,\n          confidenceLevel: 80,\n          keyAssumptions: ['Regular maintenance', 'Normal operating conditions']\n        }\n      }\n    };\n  }\n\n  /**\n   * Perform trend analysis on historical performance data\n   */\n  private static async performTrendAnalysis(\n    historicalData: PerformanceMetrics[],\n    currentMetrics: PerformanceMetrics\n  ): Promise<TrendAnalysis> {\n    if (historicalData.length < 2) {\n      return this.createDefaultTrendAnalysis();\n    }\n\n    // Calculate trend direction and magnitude\n    const trendAnalysis = this.calculateTrendDirection(historicalData);\n\n    // Detect seasonal patterns\n    const seasonalPatterns = this.detectSeasonalPatterns(historicalData);\n\n    // Detect anomalies\n    const anomalies = this.detectAnomalies(historicalData, currentMetrics);\n\n    // Generate predictive analysis\n    const predictiveAnalysis = this.generatePredictiveAnalysis(historicalData);\n\n    // Calculate degradation rate\n    const degradationRate = this.calculateDegradationRate(historicalData);\n\n    const timeRange = {\n      startDate: historicalData[0].totalSystemPressure.timestamp,\n      endDate: currentMetrics.totalSystemPressure.timestamp,\n      duration: historicalData.length,\n      units: 'days' as const\n    };\n\n    return {\n      timeRange,\n      trendDirection: trendAnalysis.direction,\n      trendMagnitude: trendAnalysis.magnitude,\n      seasonalPatterns,\n      anomalies,\n      predictiveAnalysis,\n      degradationRate\n    };\n  }\n\n  /**\n   * Calculate trend direction from historical data\n   */\n  private static calculateTrendDirection(historicalData: PerformanceMetrics[]): {\n    direction: TrendDirection;\n    magnitude: number;\n  } {\n    if (historicalData.length < 3) {\n      return { direction: TrendDirection.STABLE, magnitude: 0 };\n    }\n\n    // Simple linear regression on system efficiency\n    const efficiencyValues = historicalData.map(data => data.systemEfficiency.value);\n    const n = efficiencyValues.length;\n    const x = Array.from({ length: n }, (_, i) => i);\n\n    const sumX = x.reduce((a, b) => a + b, 0);\n    const sumY = efficiencyValues.reduce((a, b) => a + b, 0);\n    const sumXY = x.reduce((sum, xi, i) => sum + xi * efficiencyValues[i], 0);\n    const sumXX = x.reduce((sum, xi) => sum + xi * xi, 0);\n\n    const slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\n    const magnitude = Math.abs(slope);\n\n    let direction: TrendDirection;\n    if (magnitude < 0.1) {\n      direction = TrendDirection.STABLE;\n    } else if (slope > 0) {\n      direction = TrendDirection.IMPROVING;\n    } else {\n      direction = TrendDirection.DEGRADING;\n    }\n\n    return { direction, magnitude };\n  }\n\n  /**\n   * Detect seasonal patterns in performance data\n   */\n  private static detectSeasonalPatterns(historicalData: PerformanceMetrics[]): any[] {\n    // Simplified seasonal pattern detection\n    // In practice, this would use more sophisticated time series analysis\n    return [\n      {\n        season: 'summer' as const,\n        averagePerformance: 85,\n        performanceVariation: 5,\n        typicalIssues: ['Higher cooling loads', 'Increased fan power']\n      },\n      {\n        season: 'winter' as const,\n        averagePerformance: 88,\n        performanceVariation: 3,\n        typicalIssues: ['Filter loading', 'Heating coil pressure drop']\n      }\n    ];\n  }\n\n  /**\n   * Detect performance anomalies\n   */\n  private static detectAnomalies(\n    historicalData: PerformanceMetrics[],\n    currentMetrics: PerformanceMetrics\n  ): PerformanceAnomaly[] {\n    const anomalies: PerformanceAnomaly[] = [];\n\n    // Check for sudden efficiency drop\n    if (historicalData.length > 0) {\n      const lastEfficiency = historicalData[historicalData.length - 1].systemEfficiency.value;\n      const currentEfficiency = currentMetrics.systemEfficiency.value;\n      const efficiencyDrop = lastEfficiency - currentEfficiency;\n\n      if (efficiencyDrop > 5) { // 5% drop threshold\n        anomalies.push({\n          id: `anomaly_${Date.now()}`,\n          detectionTimestamp: new Date(),\n          anomalyType: AnomalyType.SUDDEN_CHANGE,\n          severity: efficiencyDrop > 10 ? 'critical' as const : 'high' as const,\n          affectedMetrics: ['systemEfficiency'],\n          deviationMagnitude: efficiencyDrop,\n          duration: 1,\n          possibleCauses: [\n            {\n              cause: 'Filter blockage',\n              probability: 60,\n              category: 'maintenance_issue' as const,\n              diagnosticSteps: ['Check filter pressure drop', 'Inspect filter condition']\n            },\n            {\n              cause: 'Fan belt slippage',\n              probability: 30,\n              category: 'equipment_failure' as const,\n              diagnosticSteps: ['Check fan belt tension', 'Inspect motor operation']\n            }\n          ],\n          recommendedActions: [\n            'Replace or clean filters',\n            'Check fan operation',\n            'Verify damper positions'\n          ],\n          resolved: false\n        });\n      }\n    }\n\n    return anomalies;\n  }\n\n  /**\n   * Generate predictive analysis\n   */\n  private static generatePredictiveAnalysis(historicalData: PerformanceMetrics[]): PredictiveAnalysis {\n    // Simplified predictive analysis\n    // In practice, this would use machine learning models\n    return {\n      forecastHorizon: 12,\n      predictedPerformance: [\n        {\n          metric: 'systemEfficiency',\n          currentValue: 85,\n          predictedValue: 83,\n          changePercent: -2.4,\n          timeToTarget: 6\n        }\n      ],\n      confidenceInterval: {\n        lowerBound: 80,\n        upperBound: 86,\n        confidenceLevel: 85\n      },\n      predictionModel: {\n        modelType: 'time_series' as const,\n        accuracy: 85,\n        lastTrainingDate: new Date(),\n        dataPoints: historicalData.length,\n        validationScore: 0.85\n      },\n      keyFactors: [\n        {\n          factor: 'Filter condition',\n          impact: 40,\n          controllable: true,\n          mitigationStrategies: ['Regular filter replacement', 'Pressure monitoring']\n        }\n      ],\n      scenarios: []\n    };\n  }\n\n  /**\n   * Calculate system degradation rate\n   */\n  private static calculateDegradationRate(historicalData: PerformanceMetrics[]): any {\n    // Simplified degradation calculation\n    return {\n      overallDegradationRate: 2.5, // 2.5% per year\n      componentDegradation: [\n        {\n          componentId: 'main_fan',\n          componentType: 'fan' as const,\n          degradationRate: 1.5,\n          currentCondition: 92,\n          estimatedRemainingLife: 12,\n          replacementThreshold: 70\n        }\n      ],\n      degradationFactors: [\n        {\n          factor: 'Operating hours',\n          impact: 50,\n          controllable: false,\n          mitigationStrategies: ['Optimize operating schedule']\n        },\n        {\n          factor: 'Maintenance quality',\n          impact: 30,\n          controllable: true,\n          mitigationStrategies: ['Preventive maintenance program', 'Staff training']\n        }\n      ],\n      maintenanceImpact: {\n        preventiveMaintenance: { performanceImpact: 5, lifespanImpact: 2, costImpact: 1000 },\n        correctiveMaintenance: { performanceImpact: -10, lifespanImpact: -1, costImpact: 5000 },\n        deferredMaintenance: { performanceImpact: -15, lifespanImpact: -3, costImpact: 10000 }\n      },\n      projectedLifespan: {\n        currentAge: 3,\n        designLife: 20,\n        projectedLife: 18,\n        confidenceLevel: 80,\n        keyAssumptions: ['Regular maintenance', 'Normal operating conditions']\n      }\n    };\n  }\n\n  /**\n   * Perform benchmark comparison against similar systems\n   */\n  private static async performBenchmarkComparison(\n    systemConfiguration: SystemConfiguration,\n    performanceMetrics: PerformanceMetrics\n  ): Promise<BenchmarkComparison> {\n    // Simplified benchmark comparison\n    // In practice, this would query a database of similar systems\n    const systemEfficiency = performanceMetrics.systemEfficiency.value;\n    const industryAverage = 82; // Typical industry average\n    const bestInClass = 92; // Best in class performance\n\n    return {\n      benchmarkType: BenchmarkType.INDUSTRY_AVERAGE,\n      benchmarkSource: 'ASHRAE Performance Database',\n      systemPerformance: systemEfficiency,\n      benchmarkValue: industryAverage,\n      percentile: this.calculatePercentile(systemEfficiency, industryAverage),\n      performanceGap: industryAverage - systemEfficiency,\n      improvementPotential: bestInClass - systemEfficiency,\n      similarSystems: [\n        {\n          systemId: 'similar_system_1',\n          systemName: 'Office Building HVAC',\n          performanceMetric: 84,\n          systemCharacteristics: {\n            size: 'medium' as const,\n            age: 5,\n            buildingType: 'office' as const,\n            climateZone: '4A',\n            operatingHours: 2500\n          },\n          performanceDifference: 84 - systemEfficiency\n        }\n      ]\n    };\n  }\n\n  /**\n   * Calculate percentile ranking\n   */\n  private static calculatePercentile(value: number, average: number): number {\n    // Simplified percentile calculation\n    // Assumes normal distribution with standard deviation of 8\n    const standardDeviation = 8;\n    const zScore = (value - average) / standardDeviation;\n\n    // Convert z-score to percentile (simplified)\n    if (zScore >= 2) return 97;\n    if (zScore >= 1) return 84;\n    if (zScore >= 0) return 50 + (zScore * 34);\n    if (zScore >= -1) return 50 + (zScore * 34);\n    if (zScore >= -2) return 16;\n    return 3;\n  }\n\n  /**\n   * Analyze system efficiency in detail\n   */\n  private static async analyzeSystemEfficiency(\n    systemConfiguration: SystemConfiguration,\n    performanceMetrics: PerformanceMetrics\n  ): Promise<EfficiencyAnalysis> {\n    // Simplified efficiency analysis\n    return {\n      overallEfficiency: {\n        value: performanceMetrics.systemEfficiency.value,\n        units: '%',\n        calculationMethod: 'calculated' as const,\n        accuracy: 0.9,\n        timestamp: new Date()\n      },\n      componentEfficiencies: [\n        {\n          componentId: 'main_fan',\n          componentType: 'fan' as const,\n          efficiency: performanceMetrics.fanEfficiency.value,\n          ratedEfficiency: 85,\n          degradationFactor: 0.95,\n          maintenanceStatus: 'good' as const\n        }\n      ],\n      efficiencyTrends: [],\n      efficiencyLosses: [],\n      improvementOpportunities: [],\n      benchmarkComparison: {\n        benchmarkType: BenchmarkType.INDUSTRY_AVERAGE,\n        benchmarkSource: 'Industry Standards',\n        systemPerformance: performanceMetrics.systemEfficiency.value,\n        benchmarkValue: 82,\n        percentile: 65,\n        performanceGap: 0,\n        improvementPotential: 10,\n        similarSystems: []\n      }\n    };\n  }\n\n  /**\n   * Detect performance alerts and warnings\n   */\n  private static async detectPerformanceAlerts(\n    performanceMetrics: PerformanceMetrics,\n    historicalData?: PerformanceMetrics[]\n  ): Promise<PerformanceAlert[]> {\n    const alerts: PerformanceAlert[] = [];\n\n    // Check efficiency threshold\n    if (performanceMetrics.systemEfficiency.value < 75) {\n      alerts.push({\n        id: `alert_${Date.now()}_efficiency`,\n        alertType: AlertType.THRESHOLD_EXCEEDED,\n        severity: AlertSeverity.HIGH,\n        metric: 'systemEfficiency',\n        currentValue: performanceMetrics.systemEfficiency.value,\n        thresholdValue: 75,\n        message: 'System efficiency below acceptable threshold',\n        timestamp: new Date(),\n        acknowledged: false,\n        recommendedActions: [\n          'Check filter condition',\n          'Verify fan operation',\n          'Inspect ductwork for leaks'\n        ]\n      });\n    }\n\n    // Check pressure threshold\n    if (performanceMetrics.totalSystemPressure.value > 4.0) {\n      alerts.push({\n        id: `alert_${Date.now()}_pressure`,\n        alertType: AlertType.THRESHOLD_EXCEEDED,\n        severity: AlertSeverity.MEDIUM,\n        metric: 'totalSystemPressure',\n        currentValue: performanceMetrics.totalSystemPressure.value,\n        thresholdValue: 4.0,\n        message: 'System pressure higher than expected',\n        timestamp: new Date(),\n        acknowledged: false,\n        recommendedActions: [\n          'Check for blocked ducts',\n          'Verify damper positions',\n          'Inspect filters'\n        ]\n      });\n    }\n\n    return alerts;\n  }\n\n  /**\n   * Generate performance recommendations\n   */\n  private static async generatePerformanceRecommendations(\n    performanceMetrics: PerformanceMetrics,\n    efficiencyAnalysis: EfficiencyAnalysis,\n    benchmarkComparison: BenchmarkComparison\n  ): Promise<PerformanceRecommendation[]> {\n    const recommendations: PerformanceRecommendation[] = [];\n\n    // Efficiency improvement recommendation\n    if (performanceMetrics.systemEfficiency.value < 85) {\n      recommendations.push({\n        id: `rec_${Date.now()}_efficiency`,\n        type: RecommendationType.OPTIMIZATION,\n        priority: RecommendationPriority.HIGH,\n        title: 'Improve System Efficiency',\n        description: 'System efficiency is below optimal levels. Consider implementing efficiency improvements.',\n        expectedImpact: {\n          energySavings: 15,\n          costSavings: 2500,\n          performanceImprovement: 10,\n          emissionReduction: 1200,\n          reliabilityImprovement: 5\n        },\n        implementationCost: 5000,\n        paybackPeriod: 24,\n        implementationComplexity: 'moderate' as const,\n        requiredActions: [\n          'Replace filters with high-efficiency models',\n          'Seal ductwork leaks',\n          'Optimize fan speed control'\n        ],\n        timeline: '2-4 weeks'\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Perform uncertainty analysis on performance metrics\n   */\n  private static async performUncertaintyAnalysis(\n    performanceMetrics: PerformanceMetrics,\n    systemConfiguration: SystemConfiguration\n  ): Promise<UncertaintyAnalysis> {\n    // Simplified uncertainty analysis\n    return {\n      overallUncertainty: 0.1, // 10% overall uncertainty\n      metricUncertainties: [\n        {\n          metric: 'systemEfficiency',\n          uncertainty: 0.05,\n          sources: ['measurement error', 'calculation assumptions'],\n          confidenceLevel: 90\n        }\n      ],\n      sensitivityAnalysis: {\n        parameters: [\n          {\n            parameter: 'airflow',\n            sensitivity: 0.8,\n            impact: 'high' as const\n          }\n        ],\n        keyDrivers: ['airflow', 'pressure'],\n        uncertaintyContributors: ['measurement accuracy', 'model assumptions']\n      },\n      recommendations: [\n        'Improve measurement accuracy',\n        'Calibrate sensors regularly',\n        'Validate calculation models'\n      ]\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fde316aef9473700c4f5f43bfecd1afc265bdd6e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20nkvyezxw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20nkvyezxw();
cov_20nkvyezxw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_20nkvyezxw().s[1]++;
exports.SystemPerformanceAnalysisEngine = void 0;
const SystemAnalysisTypes_1 =
/* istanbul ignore next */
(cov_20nkvyezxw().s[2]++, require("./types/SystemAnalysisTypes"));
const SystemPressureCalculator_1 =
/* istanbul ignore next */
(cov_20nkvyezxw().s[3]++, require("./SystemPressureCalculator"));
/**
 * Main System Performance Analysis Engine
 *
 * Provides comprehensive performance analysis capabilities including:
 * - Real-time performance monitoring
 * - Trend analysis and forecasting
 * - Efficiency calculations and benchmarking
 * - Anomaly detection and alerting
 * - Performance recommendations
 */
class SystemPerformanceAnalysisEngine {
  /**
   * Perform comprehensive system performance analysis
   */
  static async analyzeSystemPerformance(systemConfiguration, analysisScope, historicalData) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[0]++;
    cov_20nkvyezxw().s[4]++;
    try {
      const analysisId =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[5]++, this.generateAnalysisId(systemConfiguration.id));
      const timestamp =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[6]++, new Date());
      // Calculate current performance metrics
      const performanceMetrics =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[7]++, await this.calculatePerformanceMetrics(systemConfiguration, analysisScope));
      // Perform trend analysis if historical data is available
      const trendAnalysis =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[8]++,
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[1][0]++, historicalData) &&
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[1][1]++, historicalData.length > 0) ?
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[0][0]++, await this.performTrendAnalysis(historicalData, performanceMetrics)) :
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[0][1]++, this.createDefaultTrendAnalysis()));
      // Benchmark against similar systems
      const benchmarkComparison =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[9]++, await this.performBenchmarkComparison(systemConfiguration, performanceMetrics));
      // Analyze system efficiency
      const efficiencyAnalysis =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[10]++, await this.analyzeSystemEfficiency(systemConfiguration, performanceMetrics));
      // Detect performance alerts and anomalies
      const alertsAndWarnings =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[11]++, await this.detectPerformanceAlerts(performanceMetrics, historicalData));
      // Generate performance recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[12]++, await this.generatePerformanceRecommendations(performanceMetrics, efficiencyAnalysis, benchmarkComparison));
      // Perform uncertainty analysis
      const uncertaintyAnalysis =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[13]++, await this.performUncertaintyAnalysis(performanceMetrics, systemConfiguration));
      const analysis =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[14]++, {
        id: analysisId,
        systemId: systemConfiguration.id,
        analysisTimestamp: timestamp,
        performanceMetrics,
        trendAnalysis,
        benchmarkComparison,
        efficiencyAnalysis,
        alertsAndWarnings,
        recommendations,
        uncertaintyAnalysis
      });
      // Cache the analysis for future reference
      /* istanbul ignore next */
      cov_20nkvyezxw().s[15]++;
      this.ANALYSIS_CACHE.set(analysisId, analysis);
      /* istanbul ignore next */
      cov_20nkvyezxw().s[16]++;
      return analysis;
    } catch (error) {
      /* istanbul ignore next */
      cov_20nkvyezxw().s[17]++;
      throw new Error(`System performance analysis failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[2][1]++, 'Unknown error')}`);
    }
  }
  /**
   * Calculate comprehensive performance metrics for the system
   */
  static async calculatePerformanceMetrics(systemConfiguration, analysisScope) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[1]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[18]++, new Date());
    // Calculate system pressure using existing calculators
    const systemPressureResult =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[19]++, SystemPressureCalculator_1.SystemPressureCalculator.calculateEnhancedSystemPressure({
      segments: this.createDuctSegmentsFromConfig(systemConfiguration),
      systemType: systemConfiguration.systemType,
      designConditions: systemConfiguration.operatingConditions
    }));
    // Calculate fan performance metrics
    const fanPerformance =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[20]++, this.calculateFanPerformance(systemConfiguration, systemPressureResult.totalPressureLoss));
    // Calculate airflow metrics
    const airflowMetrics =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[21]++, this.calculateAirflowMetrics(systemConfiguration));
    // Calculate system efficiency metrics
    const efficiencyMetrics =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[22]++, this.calculateSystemEfficiencyMetrics(systemConfiguration, fanPerformance, systemPressureResult));
    // Calculate environmental metrics
    const environmentalMetrics =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[23]++, this.calculateEnvironmentalMetrics(systemConfiguration, fanPerformance));
    // Calculate system balance quality
    const balanceQuality =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[24]++, this.assessSystemBalance(systemConfiguration, airflowMetrics));
    const performanceMetrics =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[25]++, {
      // Pressure and Flow Metrics
      totalSystemPressure: this.createMeasurement(systemPressureResult.totalPressureLoss, 'in wg', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      staticPressure: this.createMeasurement(
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[3][0]++, systemPressureResult.staticPressure) ||
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[3][1]++, systemPressureResult.totalPressureLoss * 0.8), 'in wg', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      velocityPressure: this.createMeasurement(
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[4][0]++, systemPressureResult.velocityPressure) ||
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[4][1]++, systemPressureResult.totalPressureLoss * 0.2), 'in wg', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      totalAirflow: this.createMeasurement(airflowMetrics.totalAirflow, 'CFM', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      designAirflow: this.createMeasurement(systemConfiguration.designParameters.designAirflow, 'CFM', SystemAnalysisTypes_1.MeasurementSource.MANUFACTURER_DATA, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      airflowEfficiency: this.createMeasurement(airflowMetrics.efficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      // Fan Performance
      fanPower: this.createMeasurement(fanPerformance.power, 'kW', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      fanEfficiency: this.createMeasurement(fanPerformance.efficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      fanSpeed: this.createMeasurement(fanPerformance.speed, 'RPM', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      fanCurvePosition: fanPerformance.curvePosition,
      // System Efficiency
      systemEfficiency: this.createMeasurement(efficiencyMetrics.systemEfficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      transportEfficiency: this.createMeasurement(efficiencyMetrics.transportEfficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      distributionEfficiency: this.createMeasurement(efficiencyMetrics.distributionEfficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      // Environmental Metrics
      noiseLevel: this.createMeasurement(environmentalMetrics.noiseLevel, 'dBA', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      vibrationLevel: this.createMeasurement(environmentalMetrics.vibrationLevel, 'mm/s', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.LOW, timestamp),
      temperatureRise: this.createMeasurement(environmentalMetrics.temperatureRise, '°F', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      // Filter and Component Performance
      filterPressureDrop: this.createMeasurement(environmentalMetrics.filterPressureDrop, 'in wg', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      coilPressureDrop: this.createMeasurement(environmentalMetrics.coilPressureDrop, 'in wg', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      dampersPosition: [],
      // Would be populated from actual system data
      // System Balance
      balanceQuality,
      flowDistribution: airflowMetrics.flowDistribution
    });
    /* istanbul ignore next */
    cov_20nkvyezxw().s[26]++;
    return performanceMetrics;
  }
  /**
   * Create a standardized measurement object
   */
  static createMeasurement(value, units, source, quality, timestamp, accuracy =
  /* istanbul ignore next */
  (cov_20nkvyezxw().b[5][0]++, 0.95)) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[2]++;
    cov_20nkvyezxw().s[27]++;
    return {
      value,
      units,
      accuracy,
      timestamp,
      source,
      qualityIndicator: quality,
      uncertaintyBounds: {
        lowerBound: value * (1 - (1 - accuracy)),
        upperBound: value * (1 + (1 - accuracy)),
        confidenceLevel: accuracy * 100,
        distributionType: 'normal'
      }
    };
  }
  /**
   * Calculate fan performance metrics
   */
  static calculateFanPerformance(systemConfiguration, systemPressure) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[3]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[28]++, systemConfiguration.designParameters.designAirflow);
    const designPressure =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[29]++, systemConfiguration.designParameters.designPressure);
    // Simplified fan performance calculation
    // In practice, this would use actual fan curves and manufacturer data
    const efficiency =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[30]++, Math.max(0.6, Math.min(0.9, 0.8 - (systemPressure - designPressure) * 0.05)));
    const power =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[31]++, designAirflow * systemPressure / (6356 * efficiency)); // HP
    const powerKW =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[32]++, power * 0.746); // Convert to kW
    const speed =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[33]++, 1800 * Math.sqrt(systemPressure / designPressure)); // Simplified speed calculation
    const curvePosition =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[34]++, {
      operatingPoint: {
        airflow: designAirflow,
        pressure: systemPressure,
        power: powerKW,
        efficiency: efficiency * 100,
        speed
      },
      designPoint: {
        airflow: designAirflow,
        pressure: designPressure,
        power: designAirflow * designPressure / (6356 * 0.8) * 0.746,
        efficiency: 80,
        speed: 1800
      },
      efficiencyAtOperating: efficiency * 100,
      efficiencyAtDesign: 80,
      surgeMargin: Math.max(0, (designAirflow * 0.7 - designAirflow) / designAirflow * 100),
      stallMargin: Math.max(0, (designAirflow * 1.3 - designAirflow) / designAirflow * 100),
      recommendedOperatingRange: {
        minAirflow: designAirflow * 0.7,
        maxAirflow: designAirflow * 1.3,
        minPressure: designPressure * 0.5,
        maxPressure: designPressure * 1.5
      }
    });
    /* istanbul ignore next */
    cov_20nkvyezxw().s[35]++;
    return {
      power: powerKW,
      efficiency: efficiency * 100,
      speed,
      curvePosition
    };
  }
  /**
   * Calculate airflow metrics and distribution
   */
  static calculateAirflowMetrics(systemConfiguration) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[4]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[36]++, systemConfiguration.designParameters.designAirflow);
    // Simplified airflow calculation
    // In practice, this would consider actual system measurements
    const totalAirflow =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[37]++, designAirflow * 0.95); // Assume 5% leakage
    const efficiency =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[38]++, totalAirflow / designAirflow * 100);
    /* istanbul ignore next */
    cov_20nkvyezxw().s[39]++;
    return {
      totalAirflow,
      efficiency,
      flowDistribution: {
        uniformityIndex: 0.85,
        // Simplified
        variationCoefficient: 0.15,
        zones: []
      }
    };
  }
  /**
   * Calculate system efficiency metrics
   */
  static calculateSystemEfficiencyMetrics(systemConfiguration, fanPerformance, systemPressureResult) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[5]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[40]++, systemConfiguration.designParameters.designAirflow);
    const designPressure =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[41]++, systemConfiguration.designParameters.designPressure);
    // Calculate various efficiency metrics
    const systemEfficiency =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[42]++, Math.min(95, fanPerformance.efficiency * 0.9)); // Account for system losses
    const transportEfficiency =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[43]++, Math.min(90, 100 - systemPressureResult.totalPressureLoss / designPressure * 10));
    const distributionEfficiency =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[44]++, Math.min(85, systemEfficiency * 0.9)); // Account for distribution losses
    /* istanbul ignore next */
    cov_20nkvyezxw().s[45]++;
    return {
      systemEfficiency,
      transportEfficiency,
      distributionEfficiency
    };
  }
  /**
   * Calculate environmental metrics
   */
  static calculateEnvironmentalMetrics(systemConfiguration, fanPerformance) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[6]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[46]++, systemConfiguration.designParameters.designAirflow);
    // Simplified environmental calculations
    const velocity =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[47]++, designAirflow / 144); // Simplified velocity calculation
    const noiseLevel =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[48]++, 40 + 20 * Math.log10(velocity / 1000)); // Simplified noise model
    const vibrationLevel =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[49]++, Math.max(0.5, velocity / 2000)); // Simplified vibration model
    const temperatureRise =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[50]++, fanPerformance.power * 3412 / (designAirflow * 1.08)); // Fan heat rise
    /* istanbul ignore next */
    cov_20nkvyezxw().s[51]++;
    return {
      noiseLevel: Math.max(35, Math.min(65, noiseLevel)),
      vibrationLevel: Math.max(0.1, Math.min(5.0, vibrationLevel)),
      temperatureRise: Math.max(0.5, Math.min(5.0, temperatureRise)),
      filterPressureDrop: 0.5,
      // Typical clean filter
      coilPressureDrop: 0.8 // Typical coil pressure drop
    };
  }
  /**
   * Assess system balance quality
   */
  static assessSystemBalance(systemConfiguration, airflowMetrics) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[7]++;
    // Simplified balance assessment
    const flowVariation =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[52]++, 0.15); // 15% variation
    const pressureVariation =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[53]++, 0.12); // 12% variation
    const overallScore =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[54]++, Math.max(0, 100 - (flowVariation + pressureVariation) * 200));
    let balanceGrade;
    /* istanbul ignore next */
    cov_20nkvyezxw().s[55]++;
    if (overallScore >= 90) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[6][0]++;
      cov_20nkvyezxw().s[56]++;
      balanceGrade = SystemAnalysisTypes_1.BalanceGrade.EXCELLENT;
    } else {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[6][1]++;
      cov_20nkvyezxw().s[57]++;
      if (overallScore >= 80) {
        /* istanbul ignore next */
        cov_20nkvyezxw().b[7][0]++;
        cov_20nkvyezxw().s[58]++;
        balanceGrade = SystemAnalysisTypes_1.BalanceGrade.GOOD;
      } else {
        /* istanbul ignore next */
        cov_20nkvyezxw().b[7][1]++;
        cov_20nkvyezxw().s[59]++;
        if (overallScore >= 70) {
          /* istanbul ignore next */
          cov_20nkvyezxw().b[8][0]++;
          cov_20nkvyezxw().s[60]++;
          balanceGrade = SystemAnalysisTypes_1.BalanceGrade.ACCEPTABLE;
        } else {
          /* istanbul ignore next */
          cov_20nkvyezxw().b[8][1]++;
          cov_20nkvyezxw().s[61]++;
          if (overallScore >= 60) {
            /* istanbul ignore next */
            cov_20nkvyezxw().b[9][0]++;
            cov_20nkvyezxw().s[62]++;
            balanceGrade = SystemAnalysisTypes_1.BalanceGrade.POOR;
          } else {
            /* istanbul ignore next */
            cov_20nkvyezxw().b[9][1]++;
            cov_20nkvyezxw().s[63]++;
            balanceGrade = SystemAnalysisTypes_1.BalanceGrade.CRITICAL;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_20nkvyezxw().s[64]++;
    return {
      overallScore,
      flowVariation,
      pressureVariation,
      balanceGrade,
      criticalZones: balanceGrade === SystemAnalysisTypes_1.BalanceGrade.CRITICAL ?
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[10][0]++, ['Zone 1', 'Zone 3']) :
      /* istanbul ignore next */
      (cov_20nkvyezxw().b[10][1]++, []),
      balanceRecommendations: this.generateBalanceRecommendations(balanceGrade)
    };
  }
  /**
   * Generate balance recommendations based on grade
   */
  static generateBalanceRecommendations(grade) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[8]++;
    cov_20nkvyezxw().s[65]++;
    switch (grade) {
      case SystemAnalysisTypes_1.BalanceGrade.CRITICAL:
        /* istanbul ignore next */
        cov_20nkvyezxw().b[11][0]++;
        cov_20nkvyezxw().s[66]++;
        return ['Immediate system rebalancing required', 'Check for blocked dampers or ducts', 'Verify fan operation and capacity', 'Consider professional commissioning'];
      case SystemAnalysisTypes_1.BalanceGrade.POOR:
        /* istanbul ignore next */
        cov_20nkvyezxw().b[11][1]++;
        cov_20nkvyezxw().s[67]++;
        return ['System rebalancing recommended', 'Adjust damper positions', 'Check for duct leakage', 'Verify design calculations'];
      case SystemAnalysisTypes_1.BalanceGrade.ACCEPTABLE:
        /* istanbul ignore next */
        cov_20nkvyezxw().b[11][2]++;
        cov_20nkvyezxw().s[68]++;
        return ['Minor adjustments may improve performance', 'Monitor system performance trends', 'Consider seasonal adjustments'];
      default:
        /* istanbul ignore next */
        cov_20nkvyezxw().b[11][3]++;
        cov_20nkvyezxw().s[69]++;
        return ['System balance is within acceptable limits'];
    }
  }
  /**
   * Create duct segments from system configuration
   */
  static createDuctSegmentsFromConfig(systemConfiguration) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[9]++;
    cov_20nkvyezxw().s[70]++;
    // Simplified duct segment creation
    // In practice, this would parse the actual system configuration
    return [{
      id: 'main_supply',
      length: 100,
      diameter: 24,
      material: 'galvanized_steel',
      roughness: 0.0015,
      airflow: systemConfiguration.designParameters.designAirflow,
      fittings: []
    }];
  }
  /**
   * Generate unique analysis ID
   */
  static generateAnalysisId(systemId) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[10]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[71]++, Date.now());
    const random =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[72]++, Math.random().toString(36).substring(2, 8));
    /* istanbul ignore next */
    cov_20nkvyezxw().s[73]++;
    return `analysis_${systemId}_${timestamp}_${random}`;
  }
  /**
   * Create default trend analysis when no historical data is available
   */
  static createDefaultTrendAnalysis() {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[11]++;
    cov_20nkvyezxw().s[74]++;
    return {
      timeRange: {
        startDate: new Date(),
        endDate: new Date(),
        duration: 0,
        units: 'days'
      },
      trendDirection: SystemAnalysisTypes_1.TrendDirection.STABLE,
      trendMagnitude: 0,
      seasonalPatterns: [],
      anomalies: [],
      predictiveAnalysis: {
        forecastHorizon: 12,
        predictedPerformance: [],
        confidenceInterval: {
          lowerBound: 0,
          upperBound: 0,
          confidenceLevel: 0
        },
        predictionModel: {
          modelType: 'linear_regression',
          accuracy: 0,
          lastTrainingDate: new Date(),
          dataPoints: 0,
          validationScore: 0
        },
        keyFactors: [],
        scenarios: []
      },
      degradationRate: {
        overallDegradationRate: 2.0,
        // 2% per year typical
        componentDegradation: [],
        degradationFactors: [],
        maintenanceImpact: {
          preventiveMaintenance: {
            performanceImpact: 5,
            lifespanImpact: 2,
            costImpact: 1000
          },
          correctiveMaintenance: {
            performanceImpact: -10,
            lifespanImpact: -1,
            costImpact: 5000
          },
          deferredMaintenance: {
            performanceImpact: -15,
            lifespanImpact: -3,
            costImpact: 10000
          }
        },
        projectedLifespan: {
          currentAge: 0,
          designLife: 20,
          projectedLife: 18,
          confidenceLevel: 80,
          keyAssumptions: ['Regular maintenance', 'Normal operating conditions']
        }
      }
    };
  }
  /**
   * Perform trend analysis on historical performance data
   */
  static async performTrendAnalysis(historicalData, currentMetrics) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[12]++;
    cov_20nkvyezxw().s[75]++;
    if (historicalData.length < 2) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[12][0]++;
      cov_20nkvyezxw().s[76]++;
      return this.createDefaultTrendAnalysis();
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[12][1]++;
    }
    // Calculate trend direction and magnitude
    const trendAnalysis =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[77]++, this.calculateTrendDirection(historicalData));
    // Detect seasonal patterns
    const seasonalPatterns =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[78]++, this.detectSeasonalPatterns(historicalData));
    // Detect anomalies
    const anomalies =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[79]++, this.detectAnomalies(historicalData, currentMetrics));
    // Generate predictive analysis
    const predictiveAnalysis =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[80]++, this.generatePredictiveAnalysis(historicalData));
    // Calculate degradation rate
    const degradationRate =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[81]++, this.calculateDegradationRate(historicalData));
    const timeRange =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[82]++, {
      startDate: historicalData[0].totalSystemPressure.timestamp,
      endDate: currentMetrics.totalSystemPressure.timestamp,
      duration: historicalData.length,
      units: 'days'
    });
    /* istanbul ignore next */
    cov_20nkvyezxw().s[83]++;
    return {
      timeRange,
      trendDirection: trendAnalysis.direction,
      trendMagnitude: trendAnalysis.magnitude,
      seasonalPatterns,
      anomalies,
      predictiveAnalysis,
      degradationRate
    };
  }
  /**
   * Calculate trend direction from historical data
   */
  static calculateTrendDirection(historicalData) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[13]++;
    cov_20nkvyezxw().s[84]++;
    if (historicalData.length < 3) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[13][0]++;
      cov_20nkvyezxw().s[85]++;
      return {
        direction: SystemAnalysisTypes_1.TrendDirection.STABLE,
        magnitude: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[13][1]++;
    }
    // Simple linear regression on system efficiency
    const efficiencyValues =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[86]++, historicalData.map(data => {
      /* istanbul ignore next */
      cov_20nkvyezxw().f[14]++;
      cov_20nkvyezxw().s[87]++;
      return data.systemEfficiency.value;
    }));
    const n =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[88]++, efficiencyValues.length);
    const x =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[89]++, Array.from({
      length: n
    }, (_, i) => {
      /* istanbul ignore next */
      cov_20nkvyezxw().f[15]++;
      cov_20nkvyezxw().s[90]++;
      return i;
    }));
    const sumX =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[91]++, x.reduce((a, b) => {
      /* istanbul ignore next */
      cov_20nkvyezxw().f[16]++;
      cov_20nkvyezxw().s[92]++;
      return a + b;
    }, 0));
    const sumY =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[93]++, efficiencyValues.reduce((a, b) => {
      /* istanbul ignore next */
      cov_20nkvyezxw().f[17]++;
      cov_20nkvyezxw().s[94]++;
      return a + b;
    }, 0));
    const sumXY =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[95]++, x.reduce((sum, xi, i) => {
      /* istanbul ignore next */
      cov_20nkvyezxw().f[18]++;
      cov_20nkvyezxw().s[96]++;
      return sum + xi * efficiencyValues[i];
    }, 0));
    const sumXX =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[97]++, x.reduce((sum, xi) => {
      /* istanbul ignore next */
      cov_20nkvyezxw().f[19]++;
      cov_20nkvyezxw().s[98]++;
      return sum + xi * xi;
    }, 0));
    const slope =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[99]++, (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX));
    const magnitude =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[100]++, Math.abs(slope));
    let direction;
    /* istanbul ignore next */
    cov_20nkvyezxw().s[101]++;
    if (magnitude < 0.1) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[14][0]++;
      cov_20nkvyezxw().s[102]++;
      direction = SystemAnalysisTypes_1.TrendDirection.STABLE;
    } else {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[14][1]++;
      cov_20nkvyezxw().s[103]++;
      if (slope > 0) {
        /* istanbul ignore next */
        cov_20nkvyezxw().b[15][0]++;
        cov_20nkvyezxw().s[104]++;
        direction = SystemAnalysisTypes_1.TrendDirection.IMPROVING;
      } else {
        /* istanbul ignore next */
        cov_20nkvyezxw().b[15][1]++;
        cov_20nkvyezxw().s[105]++;
        direction = SystemAnalysisTypes_1.TrendDirection.DEGRADING;
      }
    }
    /* istanbul ignore next */
    cov_20nkvyezxw().s[106]++;
    return {
      direction,
      magnitude
    };
  }
  /**
   * Detect seasonal patterns in performance data
   */
  static detectSeasonalPatterns(historicalData) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[20]++;
    cov_20nkvyezxw().s[107]++;
    // Simplified seasonal pattern detection
    // In practice, this would use more sophisticated time series analysis
    return [{
      season: 'summer',
      averagePerformance: 85,
      performanceVariation: 5,
      typicalIssues: ['Higher cooling loads', 'Increased fan power']
    }, {
      season: 'winter',
      averagePerformance: 88,
      performanceVariation: 3,
      typicalIssues: ['Filter loading', 'Heating coil pressure drop']
    }];
  }
  /**
   * Detect performance anomalies
   */
  static detectAnomalies(historicalData, currentMetrics) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[21]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[108]++, []);
    // Check for sudden efficiency drop
    /* istanbul ignore next */
    cov_20nkvyezxw().s[109]++;
    if (historicalData.length > 0) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[16][0]++;
      const lastEfficiency =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[110]++, historicalData[historicalData.length - 1].systemEfficiency.value);
      const currentEfficiency =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[111]++, currentMetrics.systemEfficiency.value);
      const efficiencyDrop =
      /* istanbul ignore next */
      (cov_20nkvyezxw().s[112]++, lastEfficiency - currentEfficiency);
      /* istanbul ignore next */
      cov_20nkvyezxw().s[113]++;
      if (efficiencyDrop > 5) {
        /* istanbul ignore next */
        cov_20nkvyezxw().b[17][0]++;
        cov_20nkvyezxw().s[114]++;
        // 5% drop threshold
        anomalies.push({
          id: `anomaly_${Date.now()}`,
          detectionTimestamp: new Date(),
          anomalyType: SystemAnalysisTypes_1.AnomalyType.SUDDEN_CHANGE,
          severity: efficiencyDrop > 10 ?
          /* istanbul ignore next */
          (cov_20nkvyezxw().b[18][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_20nkvyezxw().b[18][1]++, 'high'),
          affectedMetrics: ['systemEfficiency'],
          deviationMagnitude: efficiencyDrop,
          duration: 1,
          possibleCauses: [{
            cause: 'Filter blockage',
            probability: 60,
            category: 'maintenance_issue',
            diagnosticSteps: ['Check filter pressure drop', 'Inspect filter condition']
          }, {
            cause: 'Fan belt slippage',
            probability: 30,
            category: 'equipment_failure',
            diagnosticSteps: ['Check fan belt tension', 'Inspect motor operation']
          }],
          recommendedActions: ['Replace or clean filters', 'Check fan operation', 'Verify damper positions'],
          resolved: false
        });
      } else
      /* istanbul ignore next */
      {
        cov_20nkvyezxw().b[17][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[16][1]++;
    }
    cov_20nkvyezxw().s[115]++;
    return anomalies;
  }
  /**
   * Generate predictive analysis
   */
  static generatePredictiveAnalysis(historicalData) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[22]++;
    cov_20nkvyezxw().s[116]++;
    // Simplified predictive analysis
    // In practice, this would use machine learning models
    return {
      forecastHorizon: 12,
      predictedPerformance: [{
        metric: 'systemEfficiency',
        currentValue: 85,
        predictedValue: 83,
        changePercent: -2.4,
        timeToTarget: 6
      }],
      confidenceInterval: {
        lowerBound: 80,
        upperBound: 86,
        confidenceLevel: 85
      },
      predictionModel: {
        modelType: 'time_series',
        accuracy: 85,
        lastTrainingDate: new Date(),
        dataPoints: historicalData.length,
        validationScore: 0.85
      },
      keyFactors: [{
        factor: 'Filter condition',
        impact: 40,
        controllable: true,
        mitigationStrategies: ['Regular filter replacement', 'Pressure monitoring']
      }],
      scenarios: []
    };
  }
  /**
   * Calculate system degradation rate
   */
  static calculateDegradationRate(historicalData) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[23]++;
    cov_20nkvyezxw().s[117]++;
    // Simplified degradation calculation
    return {
      overallDegradationRate: 2.5,
      // 2.5% per year
      componentDegradation: [{
        componentId: 'main_fan',
        componentType: 'fan',
        degradationRate: 1.5,
        currentCondition: 92,
        estimatedRemainingLife: 12,
        replacementThreshold: 70
      }],
      degradationFactors: [{
        factor: 'Operating hours',
        impact: 50,
        controllable: false,
        mitigationStrategies: ['Optimize operating schedule']
      }, {
        factor: 'Maintenance quality',
        impact: 30,
        controllable: true,
        mitigationStrategies: ['Preventive maintenance program', 'Staff training']
      }],
      maintenanceImpact: {
        preventiveMaintenance: {
          performanceImpact: 5,
          lifespanImpact: 2,
          costImpact: 1000
        },
        correctiveMaintenance: {
          performanceImpact: -10,
          lifespanImpact: -1,
          costImpact: 5000
        },
        deferredMaintenance: {
          performanceImpact: -15,
          lifespanImpact: -3,
          costImpact: 10000
        }
      },
      projectedLifespan: {
        currentAge: 3,
        designLife: 20,
        projectedLife: 18,
        confidenceLevel: 80,
        keyAssumptions: ['Regular maintenance', 'Normal operating conditions']
      }
    };
  }
  /**
   * Perform benchmark comparison against similar systems
   */
  static async performBenchmarkComparison(systemConfiguration, performanceMetrics) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[24]++;
    // Simplified benchmark comparison
    // In practice, this would query a database of similar systems
    const systemEfficiency =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[118]++, performanceMetrics.systemEfficiency.value);
    const industryAverage =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[119]++, 82); // Typical industry average
    const bestInClass =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[120]++, 92); // Best in class performance
    /* istanbul ignore next */
    cov_20nkvyezxw().s[121]++;
    return {
      benchmarkType: SystemAnalysisTypes_1.BenchmarkType.INDUSTRY_AVERAGE,
      benchmarkSource: 'ASHRAE Performance Database',
      systemPerformance: systemEfficiency,
      benchmarkValue: industryAverage,
      percentile: this.calculatePercentile(systemEfficiency, industryAverage),
      performanceGap: industryAverage - systemEfficiency,
      improvementPotential: bestInClass - systemEfficiency,
      similarSystems: [{
        systemId: 'similar_system_1',
        systemName: 'Office Building HVAC',
        performanceMetric: 84,
        systemCharacteristics: {
          size: 'medium',
          age: 5,
          buildingType: 'office',
          climateZone: '4A',
          operatingHours: 2500
        },
        performanceDifference: 84 - systemEfficiency
      }]
    };
  }
  /**
   * Calculate percentile ranking
   */
  static calculatePercentile(value, average) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[25]++;
    // Simplified percentile calculation
    // Assumes normal distribution with standard deviation of 8
    const standardDeviation =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[122]++, 8);
    const zScore =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[123]++, (value - average) / standardDeviation);
    // Convert z-score to percentile (simplified)
    /* istanbul ignore next */
    cov_20nkvyezxw().s[124]++;
    if (zScore >= 2) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[19][0]++;
      cov_20nkvyezxw().s[125]++;
      return 97;
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[19][1]++;
    }
    cov_20nkvyezxw().s[126]++;
    if (zScore >= 1) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[20][0]++;
      cov_20nkvyezxw().s[127]++;
      return 84;
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[20][1]++;
    }
    cov_20nkvyezxw().s[128]++;
    if (zScore >= 0) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[21][0]++;
      cov_20nkvyezxw().s[129]++;
      return 50 + zScore * 34;
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[21][1]++;
    }
    cov_20nkvyezxw().s[130]++;
    if (zScore >= -1) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[22][0]++;
      cov_20nkvyezxw().s[131]++;
      return 50 + zScore * 34;
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[22][1]++;
    }
    cov_20nkvyezxw().s[132]++;
    if (zScore >= -2) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[23][0]++;
      cov_20nkvyezxw().s[133]++;
      return 16;
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[23][1]++;
    }
    cov_20nkvyezxw().s[134]++;
    return 3;
  }
  /**
   * Analyze system efficiency in detail
   */
  static async analyzeSystemEfficiency(systemConfiguration, performanceMetrics) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[26]++;
    cov_20nkvyezxw().s[135]++;
    // Simplified efficiency analysis
    return {
      overallEfficiency: {
        value: performanceMetrics.systemEfficiency.value,
        units: '%',
        calculationMethod: 'calculated',
        accuracy: 0.9,
        timestamp: new Date()
      },
      componentEfficiencies: [{
        componentId: 'main_fan',
        componentType: 'fan',
        efficiency: performanceMetrics.fanEfficiency.value,
        ratedEfficiency: 85,
        degradationFactor: 0.95,
        maintenanceStatus: 'good'
      }],
      efficiencyTrends: [],
      efficiencyLosses: [],
      improvementOpportunities: [],
      benchmarkComparison: {
        benchmarkType: SystemAnalysisTypes_1.BenchmarkType.INDUSTRY_AVERAGE,
        benchmarkSource: 'Industry Standards',
        systemPerformance: performanceMetrics.systemEfficiency.value,
        benchmarkValue: 82,
        percentile: 65,
        performanceGap: 0,
        improvementPotential: 10,
        similarSystems: []
      }
    };
  }
  /**
   * Detect performance alerts and warnings
   */
  static async detectPerformanceAlerts(performanceMetrics, historicalData) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[27]++;
    const alerts =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[136]++, []);
    // Check efficiency threshold
    /* istanbul ignore next */
    cov_20nkvyezxw().s[137]++;
    if (performanceMetrics.systemEfficiency.value < 75) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[24][0]++;
      cov_20nkvyezxw().s[138]++;
      alerts.push({
        id: `alert_${Date.now()}_efficiency`,
        alertType: SystemAnalysisTypes_1.AlertType.THRESHOLD_EXCEEDED,
        severity: SystemAnalysisTypes_1.AlertSeverity.HIGH,
        metric: 'systemEfficiency',
        currentValue: performanceMetrics.systemEfficiency.value,
        thresholdValue: 75,
        message: 'System efficiency below acceptable threshold',
        timestamp: new Date(),
        acknowledged: false,
        recommendedActions: ['Check filter condition', 'Verify fan operation', 'Inspect ductwork for leaks']
      });
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[24][1]++;
    }
    // Check pressure threshold
    cov_20nkvyezxw().s[139]++;
    if (performanceMetrics.totalSystemPressure.value > 4.0) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[25][0]++;
      cov_20nkvyezxw().s[140]++;
      alerts.push({
        id: `alert_${Date.now()}_pressure`,
        alertType: SystemAnalysisTypes_1.AlertType.THRESHOLD_EXCEEDED,
        severity: SystemAnalysisTypes_1.AlertSeverity.MEDIUM,
        metric: 'totalSystemPressure',
        currentValue: performanceMetrics.totalSystemPressure.value,
        thresholdValue: 4.0,
        message: 'System pressure higher than expected',
        timestamp: new Date(),
        acknowledged: false,
        recommendedActions: ['Check for blocked ducts', 'Verify damper positions', 'Inspect filters']
      });
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[25][1]++;
    }
    cov_20nkvyezxw().s[141]++;
    return alerts;
  }
  /**
   * Generate performance recommendations
   */
  static async generatePerformanceRecommendations(performanceMetrics, efficiencyAnalysis, benchmarkComparison) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[28]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_20nkvyezxw().s[142]++, []);
    // Efficiency improvement recommendation
    /* istanbul ignore next */
    cov_20nkvyezxw().s[143]++;
    if (performanceMetrics.systemEfficiency.value < 85) {
      /* istanbul ignore next */
      cov_20nkvyezxw().b[26][0]++;
      cov_20nkvyezxw().s[144]++;
      recommendations.push({
        id: `rec_${Date.now()}_efficiency`,
        type: SystemAnalysisTypes_1.RecommendationType.OPTIMIZATION,
        priority: SystemAnalysisTypes_1.RecommendationPriority.HIGH,
        title: 'Improve System Efficiency',
        description: 'System efficiency is below optimal levels. Consider implementing efficiency improvements.',
        expectedImpact: {
          energySavings: 15,
          costSavings: 2500,
          performanceImprovement: 10,
          emissionReduction: 1200,
          reliabilityImprovement: 5
        },
        implementationCost: 5000,
        paybackPeriod: 24,
        implementationComplexity: 'moderate',
        requiredActions: ['Replace filters with high-efficiency models', 'Seal ductwork leaks', 'Optimize fan speed control'],
        timeline: '2-4 weeks'
      });
    } else
    /* istanbul ignore next */
    {
      cov_20nkvyezxw().b[26][1]++;
    }
    cov_20nkvyezxw().s[145]++;
    return recommendations;
  }
  /**
   * Perform uncertainty analysis on performance metrics
   */
  static async performUncertaintyAnalysis(performanceMetrics, systemConfiguration) {
    /* istanbul ignore next */
    cov_20nkvyezxw().f[29]++;
    cov_20nkvyezxw().s[146]++;
    // Simplified uncertainty analysis
    return {
      overallUncertainty: 0.1,
      // 10% overall uncertainty
      metricUncertainties: [{
        metric: 'systemEfficiency',
        uncertainty: 0.05,
        sources: ['measurement error', 'calculation assumptions'],
        confidenceLevel: 90
      }],
      sensitivityAnalysis: {
        parameters: [{
          parameter: 'airflow',
          sensitivity: 0.8,
          impact: 'high'
        }],
        keyDrivers: ['airflow', 'pressure'],
        uncertaintyContributors: ['measurement accuracy', 'model assumptions']
      },
      recommendations: ['Improve measurement accuracy', 'Calibrate sensors regularly', 'Validate calculation models']
    };
  }
}
/* istanbul ignore next */
cov_20nkvyezxw().s[147]++;
exports.SystemPerformanceAnalysisEngine = SystemPerformanceAnalysisEngine;
/* istanbul ignore next */
cov_20nkvyezxw().s[148]++;
SystemPerformanceAnalysisEngine.VERSION = '3.0.0';
/* istanbul ignore next */
cov_20nkvyezxw().s[149]++;
SystemPerformanceAnalysisEngine.ANALYSIS_CACHE = new Map();
/* istanbul ignore next */
cov_20nkvyezxw().s[150]++;
SystemPerformanceAnalysisEngine.BENCHMARK_DATABASE = new Map();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,