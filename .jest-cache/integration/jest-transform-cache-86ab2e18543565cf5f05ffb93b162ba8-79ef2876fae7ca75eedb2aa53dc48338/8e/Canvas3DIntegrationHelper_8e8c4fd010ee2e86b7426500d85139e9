e28be80e77455d70fda654c7e4d9c419
"use strict";

/**
 * 3D Canvas Integration Helper for SizeWise Suite
 *
 * Provides data transformation and formatting services to prepare calculation
 * results for 3D canvas visualization and interaction.
 *
 * @version 5.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_gplx4bxac() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/Canvas3DIntegrationHelper.ts";
  var hash = "66f5d03854683013e1e133378e99391ce9beb738";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/Canvas3DIntegrationHelper.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "2": {
        start: {
          line: 13,
          column: 35
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "3": {
        start: {
          line: 14,
          column: 37
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "4": {
        start: {
          line: 15,
          column: 37
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "5": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 117
        }
      },
      "6": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "7": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "8": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 93
        }
      },
      "9": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 43,
          column: 86
        }
      },
      "10": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 89
        }
      },
      "11": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "12": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 68
        }
      },
      "13": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "14": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "15": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 79,
          column: 85
        }
      },
      "16": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "17": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 22
        }
      },
      "18": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "19": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 35
        }
      },
      "20": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 24
        }
      },
      "21": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 29
        }
      },
      "22": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "23": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "24": {
        start: {
          line: 115,
          column: 29
        },
        end: {
          line: 115,
          column: 85
        }
      },
      "25": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "26": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 39
        }
      },
      "27": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 26
        }
      },
      "28": {
        start: {
          line: 142,
          column: 26
        },
        end: {
          line: 142,
          column: 28
        }
      },
      "29": {
        start: {
          line: 143,
          column: 30
        },
        end: {
          line: 143,
          column: 32
        }
      },
      "30": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 27
        }
      },
      "31": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "32": {
        start: {
          line: 147,
          column: 23
        },
        end: {
          line: 147,
          column: 64
        }
      },
      "33": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 148,
          column: 64
        }
      },
      "34": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 64
        }
      },
      "35": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 150,
          column: 65
        }
      },
      "36": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "37": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 41
        }
      },
      "38": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 48
        }
      },
      "39": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 163,
          column: 10
        }
      },
      "40": {
        start: {
          line: 169,
          column: 31
        },
        end: {
          line: 169,
          column: 107
        }
      },
      "41": {
        start: {
          line: 169,
          column: 53
        },
        end: {
          line: 169,
          column: 67
        }
      },
      "42": {
        start: {
          line: 169,
          column: 91
        },
        end: {
          line: 169,
          column: 105
        }
      },
      "43": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 60
        }
      },
      "44": {
        start: {
          line: 170,
          column: 49
        },
        end: {
          line: 170,
          column: 59
        }
      },
      "45": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "46": {
        start: {
          line: 182,
          column: 25
        },
        end: {
          line: 182,
          column: 61
        }
      },
      "47": {
        start: {
          line: 183,
          column: 23
        },
        end: {
          line: 183,
          column: 25
        }
      },
      "48": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "49": {
        start: {
          line: 184,
          column: 21
        },
        end: {
          line: 184,
          column: 22
        }
      },
      "50": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 189,
          column: 15
        }
      },
      "51": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 22
        }
      },
      "52": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 195,
          column: 29
        }
      },
      "53": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 29
        }
      },
      "54": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 197,
          column: 29
        }
      },
      "55": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 29
        }
      },
      "56": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 199,
          column: 29
        }
      },
      "57": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 29
        }
      },
      "58": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 25
        }
      },
      "59": {
        start: {
          line: 203,
          column: 25
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "60": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 50
        }
      },
      "61": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "62": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 50
        }
      },
      "63": {
        start: {
          line: 231,
          column: 20
        },
        end: {
          line: 231,
          column: 39
        }
      },
      "64": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 39
        }
      },
      "65": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "66": {
        start: {
          line: 239,
          column: 23
        },
        end: {
          line: 239,
          column: 66
        }
      },
      "67": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "68": {
        start: {
          line: 243,
          column: 50
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "69": {
        start: {
          line: 251,
          column: 30
        },
        end: {
          line: 251,
          column: 59
        }
      },
      "70": {
        start: {
          line: 252,
          column: 31
        },
        end: {
          line: 252,
          column: 61
        }
      },
      "71": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 76
        }
      },
      "72": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 257,
          column: 33
        }
      },
      "73": {
        start: {
          line: 258,
          column: 32
        },
        end: {
          line: 258,
          column: 35
        }
      },
      "74": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 101
        }
      },
      "75": {
        start: {
          line: 263,
          column: 0
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "76": {
        start: {
          line: 264,
          column: 0
        },
        end: {
          line: 264,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 71
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 75
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 76
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 110
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 112,
            column: 26
          }
        },
        loc: {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 112
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 60
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 141
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 26
          }
        },
        loc: {
          start: {
            line: 145,
            column: 36
          },
          end: {
            line: 158,
            column: 9
          }
        },
        line: 145
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 49
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 169,
            column: 48
          },
          end: {
            line: 169,
            column: 49
          }
        },
        loc: {
          start: {
            line: 169,
            column: 53
          },
          end: {
            line: 169,
            column: 67
          }
        },
        line: 169
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 169,
            column: 86
          },
          end: {
            line: 169,
            column: 87
          }
        },
        loc: {
          start: {
            line: 169,
            column: 91
          },
          end: {
            line: 169,
            column: 105
          }
        },
        line: 169
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 170,
            column: 44
          },
          end: {
            line: 170,
            column: 45
          }
        },
        loc: {
          start: {
            line: 170,
            column: 49
          },
          end: {
            line: 170,
            column: 59
          }
        },
        line: 170
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 41
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 181
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 37
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 193
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 33
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 202
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 33
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 216
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 40
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 230
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 243,
            column: 31
          },
          end: {
            line: 243,
            column: 32
          }
        },
        loc: {
          start: {
            line: 243,
            column: 50
          },
          end: {
            line: 246,
            column: 13
          }
        },
        line: 243
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 51
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 249
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 60
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 255
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 49
          },
          end: {
            line: 43,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 49
          },
          end: {
            line: 43,
            column: 69
          }
        }, {
          start: {
            line: 43,
            column: 73
          },
          end: {
            line: 43,
            column: 75
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 35
          }
        }, {
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 79,
            column: 85
          }
        }],
        line: 79
      },
      "2": {
        loc: {
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 115,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 115,
            column: 61
          }
        }, {
          start: {
            line: 115,
            column: 65
          },
          end: {
            line: 115,
            column: 85
          }
        }],
        line: 115
      },
      "3": {
        loc: {
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 50
          }
        }, {
          start: {
            line: 125,
            column: 54
          },
          end: {
            line: 125,
            column: 55
          }
        }],
        line: 125
      },
      "4": {
        loc: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 40
          }
        }, {
          start: {
            line: 126,
            column: 44
          },
          end: {
            line: 126,
            column: 45
          }
        }],
        line: 126
      },
      "5": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 195,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 195,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "6": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 197,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 197,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "7": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 199,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 199,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "8": {
        loc: {
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 29
          }
        }, {
          start: {
            line: 214,
            column: 33
          },
          end: {
            line: 214,
            column: 49
          }
        }],
        line: 214
      },
      "9": {
        loc: {
          start: {
            line: 228,
            column: 15
          },
          end: {
            line: 228,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 15
          },
          end: {
            line: 228,
            column: 29
          }
        }, {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 49
          }
        }],
        line: 228
      },
      "10": {
        loc: {
          start: {
            line: 239,
            column: 23
          },
          end: {
            line: 239,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 23
          },
          end: {
            line: 239,
            column: 41
          }
        }, {
          start: {
            line: 239,
            column: 45
          },
          end: {
            line: 239,
            column: 66
          }
        }],
        line: 239
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/Canvas3DIntegrationHelper.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/Canvas3DIntegrationHelper.ts"],
      sourcesContent: ["/**\n * 3D Canvas Integration Helper for SizeWise Suite\n * \n * Provides data transformation and formatting services to prepare calculation\n * results for 3D canvas visualization and interaction.\n * \n * @version 5.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport { SystemPressureCalculator } from './SystemPressureCalculator';\nimport { VelocityPressureCalculator, VelocityPressureMethod } from './VelocityPressureCalculator';\nimport { EnhancedFrictionCalculator, FrictionMethod } from './EnhancedFrictionCalculator';\nimport { AirPropertiesCalculator } from './AirPropertiesCalculator';\n\nimport type {\n  SystemPressureInput,\n  SystemPressureResult,\n  VelocityPressureInput,\n  FrictionCalculationInput,\n  AirConditions\n} from './types';\n\n/**\n * 3D Visualization Data Structures\n */\nexport interface Point3D {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface DuctSegment3D {\n  id: string;\n  startPoint: Point3D;\n  endPoint: Point3D;\n  diameter: number;\n  crossSection: 'circular' | 'rectangular';\n  dimensions?: {\n    width?: number;\n    height?: number;\n    diameter?: number;\n  };\n  material: string;\n  velocity: number;\n  pressureLoss: number;\n  frictionRate: number;\n  reynoldsNumber: number;\n  flowRegime: string;\n  visualProperties: {\n    color: string;\n    opacity: number;\n    highlighted: boolean;\n  };\n}\n\nexport interface Fitting3D {\n  id: string;\n  type: string;\n  position: Point3D;\n  orientation: {\n    rotation: Point3D;\n    direction: Point3D;\n  };\n  connections: string[]; // Connected segment IDs\n  pressureLoss: number;\n  kFactor: number;\n  visualProperties: {\n    color: string;\n    opacity: number;\n    highlighted: boolean;\n    model: string; // 3D model reference\n  };\n}\n\nexport interface SystemVisualization3D {\n  segments: DuctSegment3D[];\n  fittings: Fitting3D[];\n  airflow: {\n    direction: Point3D[];\n    velocity: number[];\n    pressure: number[];\n  };\n  performance: {\n    totalPressureLoss: number;\n    systemEfficiency: number;\n    energyConsumption: number;\n  };\n  colorMaps: {\n    pressure: ColorMap;\n    velocity: ColorMap;\n    efficiency: ColorMap;\n    temperature: ColorMap;\n  };\n  metadata: {\n    calculationTime: string;\n    accuracy: number;\n    version: string;\n    units: {\n      length: string;\n      pressure: string;\n      velocity: string;\n      temperature: string;\n    };\n  };\n}\n\nexport interface ColorMap {\n  min: number;\n  max: number;\n  colors: {\n    value: number;\n    color: string;\n  }[];\n}\n\n/**\n * Canvas 3D Integration Helper Service\n */\nexport class Canvas3DIntegrationHelper {\n  private static readonly VERSION = '5.0.0';\n\n  /**\n   * Convert system calculation results to 3D visualization format\n   */\n  static async prepareSystemVisualization(\n    systemInput: SystemPressureInput,\n    layoutPoints?: Point3D[]\n  ): Promise<SystemVisualization3D> {\n    // Calculate system pressure and performance\n    const systemResult = SystemPressureCalculator.calculateSystemPressure(systemInput);\n    \n    // Calculate detailed component results\n    const vpResult = VelocityPressureCalculator.calculateVelocityPressure({\n      velocity: systemInput.velocity,\n      method: VelocityPressureMethod.ENHANCED_FORMULA,\n      airConditions: systemInput.airConditions\n    });\n\n    const frictionResult = EnhancedFrictionCalculator.calculateFrictionLoss({\n      velocity: systemInput.velocity,\n      hydraulicDiameter: systemInput.hydraulicDiameter,\n      length: systemInput.length,\n      material: systemInput.material,\n      method: FrictionMethod.ENHANCED_DARCY,\n      airConditions: systemInput.airConditions\n    });\n\n    // Generate 3D segments\n    const segments = this.generateDuctSegments(systemInput, frictionResult, layoutPoints);\n    \n    // Generate 3D fittings\n    const fittings = this.generateFittings3D(systemInput.fittings || [], segments);\n    \n    // Generate airflow visualization data\n    const airflow = this.generateAirflowVisualization(segments, systemInput.velocity);\n    \n    // Generate performance data\n    const performance = {\n      totalPressureLoss: systemResult.totalPressureLoss,\n      systemEfficiency: this.calculateSystemEfficiency(systemResult),\n      energyConsumption: this.estimateEnergyConsumption(systemResult, systemInput.airflow)\n    };\n\n    // Generate color maps\n    const colorMaps = this.generateColorMaps(segments, fittings);\n\n    return {\n      segments,\n      fittings,\n      airflow,\n      performance,\n      colorMaps,\n      metadata: {\n        calculationTime: new Date().toISOString(),\n        accuracy: Math.min(vpResult.accuracy, frictionResult.accuracy),\n        version: this.VERSION,\n        units: {\n          length: 'inches',\n          pressure: 'in. w.g.',\n          velocity: 'FPM',\n          temperature: '\xB0F'\n        }\n      }\n    };\n  }\n\n  /**\n   * Generate 3D duct segments from system input\n   */\n  private static generateDuctSegments(\n    systemInput: SystemPressureInput,\n    frictionResult: any,\n    layoutPoints?: Point3D[]\n  ): DuctSegment3D[] {\n    const segments: DuctSegment3D[] = [];\n    \n    // Default linear layout if no points provided\n    const points = layoutPoints || this.generateDefaultLayout(systemInput.length);\n    \n    // Create segments between consecutive points\n    for (let i = 0; i < points.length - 1; i++) {\n      const segment: DuctSegment3D = {\n        id: `segment_${i}`,\n        startPoint: points[i],\n        endPoint: points[i + 1],\n        diameter: systemInput.hydraulicDiameter,\n        crossSection: 'circular',\n        dimensions: {\n          diameter: systemInput.hydraulicDiameter\n        },\n        material: systemInput.material,\n        velocity: systemInput.velocity,\n        pressureLoss: frictionResult.frictionLoss / points.length,\n        frictionRate: frictionResult.frictionRate,\n        reynoldsNumber: frictionResult.reynoldsNumber,\n        flowRegime: frictionResult.flowRegime,\n        visualProperties: {\n          color: this.getSegmentColor(systemInput.velocity),\n          opacity: 0.8,\n          highlighted: false\n        }\n      };\n      segments.push(segment);\n    }\n\n    return segments;\n  }\n\n  /**\n   * Generate 3D fittings from fitting input\n   */\n  private static generateFittings3D(\n    fittings: any[],\n    segments: DuctSegment3D[]\n  ): Fitting3D[] {\n    const fittings3D: Fitting3D[] = [];\n    \n    fittings.forEach((fitting, index) => {\n      // Place fitting at segment connection points\n      const segmentIndex = Math.min(index, segments.length - 1);\n      const position = segments[segmentIndex]?.endPoint || { x: 0, y: 0, z: 0 };\n      \n      const fitting3D: Fitting3D = {\n        id: `fitting_${index}`,\n        type: fitting.type,\n        position,\n        orientation: {\n          rotation: { x: 0, y: 0, z: 0 },\n          direction: { x: 1, y: 0, z: 0 }\n        },\n        connections: [`segment_${segmentIndex}`, `segment_${segmentIndex + 1}`].filter(Boolean),\n        pressureLoss: fitting.pressureLoss || 0,\n        kFactor: fitting.kFactor || 0,\n        visualProperties: {\n          color: this.getFittingColor(fitting.type),\n          opacity: 0.9,\n          highlighted: false,\n          model: this.getFittingModel(fitting.type)\n        }\n      };\n      fittings3D.push(fitting3D);\n    });\n\n    return fittings3D;\n  }\n\n  /**\n   * Generate airflow visualization data\n   */\n  private static generateAirflowVisualization(\n    segments: DuctSegment3D[],\n    velocity: number\n  ): SystemVisualization3D['airflow'] {\n    const direction: Point3D[] = [];\n    const velocityArray: number[] = [];\n    const pressure: number[] = [];\n\n    segments.forEach(segment => {\n      // Calculate flow direction vector\n      const dx = segment.endPoint.x - segment.startPoint.x;\n      const dy = segment.endPoint.y - segment.startPoint.y;\n      const dz = segment.endPoint.z - segment.startPoint.z;\n      const length = Math.sqrt(dx * dx + dy * dy + dz * dz);\n      \n      direction.push({\n        x: dx / length,\n        y: dy / length,\n        z: dz / length\n      });\n      \n      velocityArray.push(velocity);\n      pressure.push(segment.pressureLoss);\n    });\n\n    return {\n      direction,\n      velocity: velocityArray,\n      pressure\n    };\n  }\n\n  /**\n   * Generate color maps for visualization\n   */\n  private static generateColorMaps(\n    segments: DuctSegment3D[],\n    fittings: Fitting3D[]\n  ): SystemVisualization3D['colorMaps'] {\n    const pressureValues = [...segments.map(s => s.pressureLoss), ...fittings.map(f => f.pressureLoss)];\n    const velocityValues = segments.map(s => s.velocity);\n    \n    return {\n      pressure: this.createColorMap(pressureValues, 'pressure'),\n      velocity: this.createColorMap(velocityValues, 'velocity'),\n      efficiency: this.createColorMap([0.7, 0.8, 0.9, 1.0], 'efficiency'),\n      temperature: this.createColorMap([60, 70, 80, 90], 'temperature')\n    };\n  }\n\n  /**\n   * Helper methods\n   */\n  private static generateDefaultLayout(length: number): Point3D[] {\n    const segments = Math.max(2, Math.floor(length / 10));\n    const points: Point3D[] = [];\n    \n    for (let i = 0; i <= segments; i++) {\n      points.push({\n        x: (i * length) / segments,\n        y: 0,\n        z: 0\n      });\n    }\n    \n    return points;\n  }\n\n  private static getSegmentColor(velocity: number): string {\n    if (velocity < 1000) return '#4CAF50'; // Green - low velocity\n    if (velocity < 2500) return '#FFC107'; // Yellow - medium velocity\n    if (velocity < 4000) return '#FF9800'; // Orange - high velocity\n    return '#F44336'; // Red - very high velocity\n  }\n\n  private static getFittingColor(type: string): string {\n    const colorMap: Record<string, string> = {\n      'elbow_90_smooth': '#2196F3',\n      'elbow_90_mitered': '#3F51B5',\n      'tee_branch': '#9C27B0',\n      'tee_straight': '#673AB7',\n      'damper_butterfly': '#FF5722',\n      'damper_blade': '#795548',\n      'transition': '#607D8B',\n      'diffuser': '#009688',\n      'default': '#757575'\n    };\n    return colorMap[type] || colorMap.default;\n  }\n\n  private static getFittingModel(type: string): string {\n    const modelMap: Record<string, string> = {\n      'elbow_90_smooth': 'elbow_90_smooth.obj',\n      'elbow_90_mitered': 'elbow_90_mitered.obj',\n      'tee_branch': 'tee_branch.obj',\n      'tee_straight': 'tee_straight.obj',\n      'damper_butterfly': 'damper_butterfly.obj',\n      'damper_blade': 'damper_blade.obj',\n      'transition': 'transition.obj',\n      'diffuser': 'diffuser.obj',\n      'default': 'generic_fitting.obj'\n    };\n    return modelMap[type] || modelMap.default;\n  }\n\n  private static createColorMap(values: number[], type: string): ColorMap {\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    \n    const colorSchemes: Record<string, string[]> = {\n      pressure: ['#4CAF50', '#FFC107', '#FF9800', '#F44336'],\n      velocity: ['#2196F3', '#00BCD4', '#4CAF50', '#FFC107'],\n      efficiency: ['#F44336', '#FF9800', '#FFC107', '#4CAF50'],\n      temperature: ['#2196F3', '#00BCD4', '#FFC107', '#FF5722']\n    };\n    \n    const colors = colorSchemes[type] || colorSchemes.pressure;\n    \n    return {\n      min,\n      max,\n      colors: colors.map((color, index) => ({\n        value: min + (max - min) * (index / (colors.length - 1)),\n        color\n      }))\n    };\n  }\n\n  private static calculateSystemEfficiency(systemResult: SystemPressureResult): number {\n    // Simple efficiency calculation based on pressure losses\n    const idealPressure = systemResult.velocityPressure;\n    const actualPressure = systemResult.totalPressureLoss;\n    return Math.max(0.1, Math.min(1.0, idealPressure / actualPressure));\n  }\n\n  private static estimateEnergyConsumption(\n    systemResult: SystemPressureResult,\n    airflow: number\n  ): number {\n    // Estimate fan power in watts\n    const fanEfficiency = 0.7; // Typical fan efficiency\n    const motorEfficiency = 0.9; // Typical motor efficiency\n    \n    // Power = (CFM \xD7 Total Pressure) / (6356 \xD7 Fan Efficiency \xD7 Motor Efficiency)\n    return (airflow * systemResult.totalPressureLoss) / (6356 * fanEfficiency * motorEfficiency);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66f5d03854683013e1e133378e99391ce9beb738"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gplx4bxac = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gplx4bxac();
cov_gplx4bxac().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gplx4bxac().s[1]++;
exports.Canvas3DIntegrationHelper = void 0;
const SystemPressureCalculator_1 =
/* istanbul ignore next */
(cov_gplx4bxac().s[2]++, require("./SystemPressureCalculator"));
const VelocityPressureCalculator_1 =
/* istanbul ignore next */
(cov_gplx4bxac().s[3]++, require("./VelocityPressureCalculator"));
const EnhancedFrictionCalculator_1 =
/* istanbul ignore next */
(cov_gplx4bxac().s[4]++, require("./EnhancedFrictionCalculator"));
/**
 * Canvas 3D Integration Helper Service
 */
class Canvas3DIntegrationHelper {
  /**
   * Convert system calculation results to 3D visualization format
   */
  static async prepareSystemVisualization(systemInput, layoutPoints) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[0]++;
    // Calculate system pressure and performance
    const systemResult =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[5]++, SystemPressureCalculator_1.SystemPressureCalculator.calculateSystemPressure(systemInput));
    // Calculate detailed component results
    const vpResult =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[6]++, VelocityPressureCalculator_1.VelocityPressureCalculator.calculateVelocityPressure({
      velocity: systemInput.velocity,
      method: VelocityPressureCalculator_1.VelocityPressureMethod.ENHANCED_FORMULA,
      airConditions: systemInput.airConditions
    }));
    const frictionResult =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[7]++, EnhancedFrictionCalculator_1.EnhancedFrictionCalculator.calculateFrictionLoss({
      velocity: systemInput.velocity,
      hydraulicDiameter: systemInput.hydraulicDiameter,
      length: systemInput.length,
      material: systemInput.material,
      method: EnhancedFrictionCalculator_1.FrictionMethod.ENHANCED_DARCY,
      airConditions: systemInput.airConditions
    }));
    // Generate 3D segments
    const segments =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[8]++, this.generateDuctSegments(systemInput, frictionResult, layoutPoints));
    // Generate 3D fittings
    const fittings =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[9]++, this.generateFittings3D(
    /* istanbul ignore next */
    (cov_gplx4bxac().b[0][0]++, systemInput.fittings) ||
    /* istanbul ignore next */
    (cov_gplx4bxac().b[0][1]++, []), segments));
    // Generate airflow visualization data
    const airflow =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[10]++, this.generateAirflowVisualization(segments, systemInput.velocity));
    // Generate performance data
    const performance =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[11]++, {
      totalPressureLoss: systemResult.totalPressureLoss,
      systemEfficiency: this.calculateSystemEfficiency(systemResult),
      energyConsumption: this.estimateEnergyConsumption(systemResult, systemInput.airflow)
    });
    // Generate color maps
    const colorMaps =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[12]++, this.generateColorMaps(segments, fittings));
    /* istanbul ignore next */
    cov_gplx4bxac().s[13]++;
    return {
      segments,
      fittings,
      airflow,
      performance,
      colorMaps,
      metadata: {
        calculationTime: new Date().toISOString(),
        accuracy: Math.min(vpResult.accuracy, frictionResult.accuracy),
        version: this.VERSION,
        units: {
          length: 'inches',
          pressure: 'in. w.g.',
          velocity: 'FPM',
          temperature: '°F'
        }
      }
    };
  }
  /**
   * Generate 3D duct segments from system input
   */
  static generateDuctSegments(systemInput, frictionResult, layoutPoints) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[1]++;
    const segments =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[14]++, []);
    // Default linear layout if no points provided
    const points =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[15]++,
    /* istanbul ignore next */
    (cov_gplx4bxac().b[1][0]++, layoutPoints) ||
    /* istanbul ignore next */
    (cov_gplx4bxac().b[1][1]++, this.generateDefaultLayout(systemInput.length)));
    // Create segments between consecutive points
    /* istanbul ignore next */
    cov_gplx4bxac().s[16]++;
    for (let i =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[17]++, 0); i < points.length - 1; i++) {
      const segment =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[18]++, {
        id: `segment_${i}`,
        startPoint: points[i],
        endPoint: points[i + 1],
        diameter: systemInput.hydraulicDiameter,
        crossSection: 'circular',
        dimensions: {
          diameter: systemInput.hydraulicDiameter
        },
        material: systemInput.material,
        velocity: systemInput.velocity,
        pressureLoss: frictionResult.frictionLoss / points.length,
        frictionRate: frictionResult.frictionRate,
        reynoldsNumber: frictionResult.reynoldsNumber,
        flowRegime: frictionResult.flowRegime,
        visualProperties: {
          color: this.getSegmentColor(systemInput.velocity),
          opacity: 0.8,
          highlighted: false
        }
      });
      /* istanbul ignore next */
      cov_gplx4bxac().s[19]++;
      segments.push(segment);
    }
    /* istanbul ignore next */
    cov_gplx4bxac().s[20]++;
    return segments;
  }
  /**
   * Generate 3D fittings from fitting input
   */
  static generateFittings3D(fittings, segments) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[2]++;
    const fittings3D =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[21]++, []);
    /* istanbul ignore next */
    cov_gplx4bxac().s[22]++;
    fittings.forEach((fitting, index) => {
      /* istanbul ignore next */
      cov_gplx4bxac().f[3]++;
      // Place fitting at segment connection points
      const segmentIndex =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[23]++, Math.min(index, segments.length - 1));
      const position =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[24]++,
      /* istanbul ignore next */
      (cov_gplx4bxac().b[2][0]++, segments[segmentIndex]?.endPoint) ||
      /* istanbul ignore next */
      (cov_gplx4bxac().b[2][1]++, {
        x: 0,
        y: 0,
        z: 0
      }));
      const fitting3D =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[25]++, {
        id: `fitting_${index}`,
        type: fitting.type,
        position,
        orientation: {
          rotation: {
            x: 0,
            y: 0,
            z: 0
          },
          direction: {
            x: 1,
            y: 0,
            z: 0
          }
        },
        connections: [`segment_${segmentIndex}`, `segment_${segmentIndex + 1}`].filter(Boolean),
        pressureLoss:
        /* istanbul ignore next */
        (cov_gplx4bxac().b[3][0]++, fitting.pressureLoss) ||
        /* istanbul ignore next */
        (cov_gplx4bxac().b[3][1]++, 0),
        kFactor:
        /* istanbul ignore next */
        (cov_gplx4bxac().b[4][0]++, fitting.kFactor) ||
        /* istanbul ignore next */
        (cov_gplx4bxac().b[4][1]++, 0),
        visualProperties: {
          color: this.getFittingColor(fitting.type),
          opacity: 0.9,
          highlighted: false,
          model: this.getFittingModel(fitting.type)
        }
      });
      /* istanbul ignore next */
      cov_gplx4bxac().s[26]++;
      fittings3D.push(fitting3D);
    });
    /* istanbul ignore next */
    cov_gplx4bxac().s[27]++;
    return fittings3D;
  }
  /**
   * Generate airflow visualization data
   */
  static generateAirflowVisualization(segments, velocity) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[4]++;
    const direction =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[28]++, []);
    const velocityArray =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[29]++, []);
    const pressure =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[30]++, []);
    /* istanbul ignore next */
    cov_gplx4bxac().s[31]++;
    segments.forEach(segment => {
      /* istanbul ignore next */
      cov_gplx4bxac().f[5]++;
      // Calculate flow direction vector
      const dx =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[32]++, segment.endPoint.x - segment.startPoint.x);
      const dy =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[33]++, segment.endPoint.y - segment.startPoint.y);
      const dz =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[34]++, segment.endPoint.z - segment.startPoint.z);
      const length =
      /* istanbul ignore next */
      (cov_gplx4bxac().s[35]++, Math.sqrt(dx * dx + dy * dy + dz * dz));
      /* istanbul ignore next */
      cov_gplx4bxac().s[36]++;
      direction.push({
        x: dx / length,
        y: dy / length,
        z: dz / length
      });
      /* istanbul ignore next */
      cov_gplx4bxac().s[37]++;
      velocityArray.push(velocity);
      /* istanbul ignore next */
      cov_gplx4bxac().s[38]++;
      pressure.push(segment.pressureLoss);
    });
    /* istanbul ignore next */
    cov_gplx4bxac().s[39]++;
    return {
      direction,
      velocity: velocityArray,
      pressure
    };
  }
  /**
   * Generate color maps for visualization
   */
  static generateColorMaps(segments, fittings) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[6]++;
    const pressureValues =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[40]++, [...segments.map(s => {
      /* istanbul ignore next */
      cov_gplx4bxac().f[7]++;
      cov_gplx4bxac().s[41]++;
      return s.pressureLoss;
    }), ...fittings.map(f => {
      /* istanbul ignore next */
      cov_gplx4bxac().f[8]++;
      cov_gplx4bxac().s[42]++;
      return f.pressureLoss;
    })]);
    const velocityValues =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[43]++, segments.map(s => {
      /* istanbul ignore next */
      cov_gplx4bxac().f[9]++;
      cov_gplx4bxac().s[44]++;
      return s.velocity;
    }));
    /* istanbul ignore next */
    cov_gplx4bxac().s[45]++;
    return {
      pressure: this.createColorMap(pressureValues, 'pressure'),
      velocity: this.createColorMap(velocityValues, 'velocity'),
      efficiency: this.createColorMap([0.7, 0.8, 0.9, 1.0], 'efficiency'),
      temperature: this.createColorMap([60, 70, 80, 90], 'temperature')
    };
  }
  /**
   * Helper methods
   */
  static generateDefaultLayout(length) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[10]++;
    const segments =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[46]++, Math.max(2, Math.floor(length / 10)));
    const points =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[47]++, []);
    /* istanbul ignore next */
    cov_gplx4bxac().s[48]++;
    for (let i =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[49]++, 0); i <= segments; i++) {
      /* istanbul ignore next */
      cov_gplx4bxac().s[50]++;
      points.push({
        x: i * length / segments,
        y: 0,
        z: 0
      });
    }
    /* istanbul ignore next */
    cov_gplx4bxac().s[51]++;
    return points;
  }
  static getSegmentColor(velocity) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[11]++;
    cov_gplx4bxac().s[52]++;
    if (velocity < 1000) {
      /* istanbul ignore next */
      cov_gplx4bxac().b[5][0]++;
      cov_gplx4bxac().s[53]++;
      return '#4CAF50';
    } else
    /* istanbul ignore next */
    {
      cov_gplx4bxac().b[5][1]++;
    } // Green - low velocity
    cov_gplx4bxac().s[54]++;
    if (velocity < 2500) {
      /* istanbul ignore next */
      cov_gplx4bxac().b[6][0]++;
      cov_gplx4bxac().s[55]++;
      return '#FFC107';
    } else
    /* istanbul ignore next */
    {
      cov_gplx4bxac().b[6][1]++;
    } // Yellow - medium velocity
    cov_gplx4bxac().s[56]++;
    if (velocity < 4000) {
      /* istanbul ignore next */
      cov_gplx4bxac().b[7][0]++;
      cov_gplx4bxac().s[57]++;
      return '#FF9800';
    } else
    /* istanbul ignore next */
    {
      cov_gplx4bxac().b[7][1]++;
    } // Orange - high velocity
    cov_gplx4bxac().s[58]++;
    return '#F44336'; // Red - very high velocity
  }
  static getFittingColor(type) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[12]++;
    const colorMap =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[59]++, {
      'elbow_90_smooth': '#2196F3',
      'elbow_90_mitered': '#3F51B5',
      'tee_branch': '#9C27B0',
      'tee_straight': '#673AB7',
      'damper_butterfly': '#FF5722',
      'damper_blade': '#795548',
      'transition': '#607D8B',
      'diffuser': '#009688',
      'default': '#757575'
    });
    /* istanbul ignore next */
    cov_gplx4bxac().s[60]++;
    return /* istanbul ignore next */(cov_gplx4bxac().b[8][0]++, colorMap[type]) ||
    /* istanbul ignore next */
    (cov_gplx4bxac().b[8][1]++, colorMap.default);
  }
  static getFittingModel(type) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[13]++;
    const modelMap =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[61]++, {
      'elbow_90_smooth': 'elbow_90_smooth.obj',
      'elbow_90_mitered': 'elbow_90_mitered.obj',
      'tee_branch': 'tee_branch.obj',
      'tee_straight': 'tee_straight.obj',
      'damper_butterfly': 'damper_butterfly.obj',
      'damper_blade': 'damper_blade.obj',
      'transition': 'transition.obj',
      'diffuser': 'diffuser.obj',
      'default': 'generic_fitting.obj'
    });
    /* istanbul ignore next */
    cov_gplx4bxac().s[62]++;
    return /* istanbul ignore next */(cov_gplx4bxac().b[9][0]++, modelMap[type]) ||
    /* istanbul ignore next */
    (cov_gplx4bxac().b[9][1]++, modelMap.default);
  }
  static createColorMap(values, type) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[14]++;
    const min =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[63]++, Math.min(...values));
    const max =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[64]++, Math.max(...values));
    const colorSchemes =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[65]++, {
      pressure: ['#4CAF50', '#FFC107', '#FF9800', '#F44336'],
      velocity: ['#2196F3', '#00BCD4', '#4CAF50', '#FFC107'],
      efficiency: ['#F44336', '#FF9800', '#FFC107', '#4CAF50'],
      temperature: ['#2196F3', '#00BCD4', '#FFC107', '#FF5722']
    });
    const colors =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[66]++,
    /* istanbul ignore next */
    (cov_gplx4bxac().b[10][0]++, colorSchemes[type]) ||
    /* istanbul ignore next */
    (cov_gplx4bxac().b[10][1]++, colorSchemes.pressure));
    /* istanbul ignore next */
    cov_gplx4bxac().s[67]++;
    return {
      min,
      max,
      colors: colors.map((color, index) => {
        /* istanbul ignore next */
        cov_gplx4bxac().f[15]++;
        cov_gplx4bxac().s[68]++;
        return {
          value: min + (max - min) * (index / (colors.length - 1)),
          color
        };
      })
    };
  }
  static calculateSystemEfficiency(systemResult) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[16]++;
    // Simple efficiency calculation based on pressure losses
    const idealPressure =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[69]++, systemResult.velocityPressure);
    const actualPressure =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[70]++, systemResult.totalPressureLoss);
    /* istanbul ignore next */
    cov_gplx4bxac().s[71]++;
    return Math.max(0.1, Math.min(1.0, idealPressure / actualPressure));
  }
  static estimateEnergyConsumption(systemResult, airflow) {
    /* istanbul ignore next */
    cov_gplx4bxac().f[17]++;
    // Estimate fan power in watts
    const fanEfficiency =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[72]++, 0.7); // Typical fan efficiency
    const motorEfficiency =
    /* istanbul ignore next */
    (cov_gplx4bxac().s[73]++, 0.9); // Typical motor efficiency
    // Power = (CFM × Total Pressure) / (6356 × Fan Efficiency × Motor Efficiency)
    /* istanbul ignore next */
    cov_gplx4bxac().s[74]++;
    return airflow * systemResult.totalPressureLoss / (6356 * fanEfficiency * motorEfficiency);
  }
}
/* istanbul ignore next */
cov_gplx4bxac().s[75]++;
exports.Canvas3DIntegrationHelper = Canvas3DIntegrationHelper;
/* istanbul ignore next */
cov_gplx4bxac().s[76]++;
Canvas3DIntegrationHelper.VERSION = '5.0.0';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,