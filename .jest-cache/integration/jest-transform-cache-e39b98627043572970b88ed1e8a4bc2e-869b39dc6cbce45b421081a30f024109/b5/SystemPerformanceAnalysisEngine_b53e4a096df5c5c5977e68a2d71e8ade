38757b4a0fe06afb9a8ce192592066a1
"use strict";

/**
 * System Performance Analysis Engine
 *
 * Comprehensive performance analysis service for Phase 3 Priority 3: Advanced System Analysis Tools
 * Provides real-time monitoring, trend analysis, efficiency calculations, and performance benchmarking
 * capabilities for HVAC duct systems.
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_sd8kdgqk0() {
  var path = "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\SystemPerformanceAnalysisEngine.ts";
  var hash = "0ab3351d35486dd2fc51b40b60c8eeb191be70fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\SystemPerformanceAnalysisEngine.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "2": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 68
        }
      },
      "3": {
        start: {
          line: 15,
          column: 35
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "4": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "5": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 78
        }
      },
      "6": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "7": {
        start: {
          line: 35,
          column: 39
        },
        end: {
          line: 35,
          column: 113
        }
      },
      "8": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "9": {
        start: {
          line: 41,
          column: 40
        },
        end: {
          line: 41,
          column: 118
        }
      },
      "10": {
        start: {
          line: 43,
          column: 39
        },
        end: {
          line: 43,
          column: 114
        }
      },
      "11": {
        start: {
          line: 45,
          column: 38
        },
        end: {
          line: 45,
          column: 108
        }
      },
      "12": {
        start: {
          line: 47,
          column: 36
        },
        end: {
          line: 47,
          column: 142
        }
      },
      "13": {
        start: {
          line: 49,
          column: 40
        },
        end: {
          line: 49,
          column: 118
        }
      },
      "14": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "15": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 58
        }
      },
      "16": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "17": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 127
        }
      },
      "18": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "19": {
        start: {
          line: 76,
          column: 37
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "20": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 120
        }
      },
      "21": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 80
        }
      },
      "22": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 86,
          column: 130
        }
      },
      "23": {
        start: {
          line: 88,
          column: 37
        },
        end: {
          line: 88,
          column: 108
        }
      },
      "24": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 90,
          column: 92
        }
      },
      "25": {
        start: {
          line: 91,
          column: 35
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "26": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 34
        }
      },
      "27": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "28": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "29": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 146,
          column: 82
        }
      },
      "30": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 149,
          column: 103
        }
      },
      "31": {
        start: {
          line: 150,
          column: 22
        },
        end: {
          line: 150,
          column: 76
        }
      },
      "32": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "33": {
        start: {
          line: 152,
          column: 22
        },
        end: {
          line: 152,
          column: 71
        }
      },
      "34": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "35": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "36": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 190,
          column: 80
        }
      },
      "37": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 193,
          column: 49
        }
      },
      "38": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 194,
          column: 63
        }
      },
      "39": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "40": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 209,
          column: 80
        }
      },
      "41": {
        start: {
          line: 210,
          column: 31
        },
        end: {
          line: 210,
          column: 82
        }
      },
      "42": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 212,
          column: 78
        }
      },
      "43": {
        start: {
          line: 213,
          column: 36
        },
        end: {
          line: 213,
          column: 118
        }
      },
      "44": {
        start: {
          line: 214,
          column: 39
        },
        end: {
          line: 214,
          column: 75
        }
      },
      "45": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "46": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 80
        }
      },
      "47": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 44
        }
      },
      "48": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 64
        }
      },
      "49": {
        start: {
          line: 229,
          column: 31
        },
        end: {
          line: 229,
          column: 61
        }
      },
      "50": {
        start: {
          line: 230,
          column: 32
        },
        end: {
          line: 230,
          column: 84
        }
      },
      "51": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "52": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 244,
          column: 34
        }
      },
      "53": {
        start: {
          line: 245,
          column: 34
        },
        end: {
          line: 245,
          column: 38
        }
      },
      "54": {
        start: {
          line: 246,
          column: 29
        },
        end: {
          line: 246,
          column: 89
        }
      },
      "55": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "56": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 72
        }
      },
      "57": {
        start: {
          line: 250,
          column: 13
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "58": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 67
        }
      },
      "59": {
        start: {
          line: 252,
          column: 13
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "60": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "61": {
        start: {
          line: 254,
          column: 13
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "62": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 67
        }
      },
      "63": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "64": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "65": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "66": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 278,
          column: 18
        }
      },
      "67": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 285,
          column: 18
        }
      },
      "68": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 291,
          column: 18
        }
      },
      "69": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 70
        }
      },
      "70": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 312,
          column: 10
        }
      },
      "71": {
        start: {
          line: 318,
          column: 26
        },
        end: {
          line: 318,
          column: 36
        }
      },
      "72": {
        start: {
          line: 319,
          column: 23
        },
        end: {
          line: 319,
          column: 65
        }
      },
      "73": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 61
        }
      },
      "74": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 368,
          column: 10
        }
      },
      "75": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "76": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 53
        }
      },
      "77": {
        start: {
          line: 378,
          column: 30
        },
        end: {
          line: 378,
          column: 74
        }
      },
      "78": {
        start: {
          line: 380,
          column: 33
        },
        end: {
          line: 380,
          column: 76
        }
      },
      "79": {
        start: {
          line: 382,
          column: 26
        },
        end: {
          line: 382,
          column: 78
        }
      },
      "80": {
        start: {
          line: 384,
          column: 35
        },
        end: {
          line: 384,
          column: 82
        }
      },
      "81": {
        start: {
          line: 386,
          column: 32
        },
        end: {
          line: 386,
          column: 77
        }
      },
      "82": {
        start: {
          line: 387,
          column: 26
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "83": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "84": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "85": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 92
        }
      },
      "86": {
        start: {
          line: 411,
          column: 33
        },
        end: {
          line: 411,
          column: 88
        }
      },
      "87": {
        start: {
          line: 411,
          column: 60
        },
        end: {
          line: 411,
          column: 87
        }
      },
      "88": {
        start: {
          line: 412,
          column: 18
        },
        end: {
          line: 412,
          column: 41
        }
      },
      "89": {
        start: {
          line: 413,
          column: 18
        },
        end: {
          line: 413,
          column: 56
        }
      },
      "90": {
        start: {
          line: 413,
          column: 54
        },
        end: {
          line: 413,
          column: 55
        }
      },
      "91": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 49
        }
      },
      "92": {
        start: {
          line: 414,
          column: 40
        },
        end: {
          line: 414,
          column: 45
        }
      },
      "93": {
        start: {
          line: 415,
          column: 21
        },
        end: {
          line: 415,
          column: 64
        }
      },
      "94": {
        start: {
          line: 415,
          column: 55
        },
        end: {
          line: 415,
          column: 60
        }
      },
      "95": {
        start: {
          line: 416,
          column: 22
        },
        end: {
          line: 416,
          column: 81
        }
      },
      "96": {
        start: {
          line: 416,
          column: 47
        },
        end: {
          line: 416,
          column: 77
        }
      },
      "97": {
        start: {
          line: 417,
          column: 22
        },
        end: {
          line: 417,
          column: 61
        }
      },
      "98": {
        start: {
          line: 417,
          column: 44
        },
        end: {
          line: 417,
          column: 57
        }
      },
      "99": {
        start: {
          line: 418,
          column: 22
        },
        end: {
          line: 418,
          column: 75
        }
      },
      "100": {
        start: {
          line: 419,
          column: 26
        },
        end: {
          line: 419,
          column: 41
        }
      },
      "101": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "102": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 68
        }
      },
      "103": {
        start: {
          line: 424,
          column: 13
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "104": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 71
        }
      },
      "105": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 71
        }
      },
      "106": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 40
        }
      },
      "107": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 451,
          column: 10
        }
      },
      "108": {
        start: {
          line: 457,
          column: 26
        },
        end: {
          line: 457,
          column: 28
        }
      },
      "109": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "110": {
        start: {
          line: 460,
          column: 35
        },
        end: {
          line: 460,
          column: 99
        }
      },
      "111": {
        start: {
          line: 461,
          column: 38
        },
        end: {
          line: 461,
          column: 75
        }
      },
      "112": {
        start: {
          line: 462,
          column: 35
        },
        end: {
          line: 462,
          column: 69
        }
      },
      "113": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 493,
          column: 13
        }
      },
      "114": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 492,
          column: 19
        }
      },
      "115": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 25
        }
      },
      "116": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 535,
          column: 10
        }
      },
      "117": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 580,
          column: 10
        }
      },
      "118": {
        start: {
          line: 588,
          column: 33
        },
        end: {
          line: 588,
          column: 74
        }
      },
      "119": {
        start: {
          line: 589,
          column: 32
        },
        end: {
          line: 589,
          column: 34
        }
      },
      "120": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 590,
          column: 30
        }
      },
      "121": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 614,
          column: 10
        }
      },
      "122": {
        start: {
          line: 622,
          column: 34
        },
        end: {
          line: 622,
          column: 35
        }
      },
      "123": {
        start: {
          line: 623,
          column: 23
        },
        end: {
          line: 623,
          column: 60
        }
      },
      "124": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 626,
          column: 22
        }
      },
      "125": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 22
        }
      },
      "126": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 628,
          column: 22
        }
      },
      "127": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 22
        }
      },
      "128": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 630,
          column: 38
        }
      },
      "129": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 38
        }
      },
      "130": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 632,
          column: 38
        }
      },
      "131": {
        start: {
          line: 632,
          column: 12
        },
        end: {
          line: 632,
          column: 38
        }
      },
      "132": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 634,
          column: 22
        }
      },
      "133": {
        start: {
          line: 634,
          column: 12
        },
        end: {
          line: 634,
          column: 22
        }
      },
      "134": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 17
        }
      },
      "135": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 673,
          column: 10
        }
      },
      "136": {
        start: {
          line: 679,
          column: 23
        },
        end: {
          line: 679,
          column: 25
        }
      },
      "137": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 698,
          column: 9
        }
      },
      "138": {
        start: {
          line: 682,
          column: 12
        },
        end: {
          line: 697,
          column: 15
        }
      },
      "139": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 717,
          column: 9
        }
      },
      "140": {
        start: {
          line: 701,
          column: 12
        },
        end: {
          line: 716,
          column: 15
        }
      },
      "141": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 718,
          column: 22
        }
      },
      "142": {
        start: {
          line: 724,
          column: 32
        },
        end: {
          line: 724,
          column: 34
        }
      },
      "143": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 750,
          column: 9
        }
      },
      "144": {
        start: {
          line: 727,
          column: 12
        },
        end: {
          line: 749,
          column: 15
        }
      },
      "145": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 751,
          column: 31
        }
      },
      "146": {
        start: {
          line: 758,
          column: 8
        },
        end: {
          line: 784,
          column: 10
        }
      },
      "147": {
        start: {
          line: 787,
          column: 0
        },
        end: {
          line: 787,
          column: 74
        }
      },
      "148": {
        start: {
          line: 788,
          column: 0
        },
        end: {
          line: 788,
          column: 50
        }
      },
      "149": {
        start: {
          line: 789,
          column: 0
        },
        end: {
          line: 789,
          column: 59
        }
      },
      "150": {
        start: {
          line: 790,
          column: 0
        },
        end: {
          line: 790,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 94
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 81
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 73
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 88
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 125
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 72
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 144
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 56
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 189
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 103
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 208
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 78
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 224
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 68
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 242
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 49
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 270
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 61
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 299
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 40
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 317
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 40
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 325
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 70
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 373
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 51
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 406
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 411,
            column: 52
          },
          end: {
            line: 411,
            column: 53
          }
        },
        loc: {
          start: {
            line: 411,
            column: 60
          },
          end: {
            line: 411,
            column: 87
          }
        },
        line: 411
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 413,
            column: 44
          },
          end: {
            line: 413,
            column: 45
          }
        },
        loc: {
          start: {
            line: 413,
            column: 54
          },
          end: {
            line: 413,
            column: 55
          }
        },
        line: 413
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 414,
            column: 30
          },
          end: {
            line: 414,
            column: 31
          }
        },
        loc: {
          start: {
            line: 414,
            column: 40
          },
          end: {
            line: 414,
            column: 45
          }
        },
        line: 414
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 415,
            column: 45
          },
          end: {
            line: 415,
            column: 46
          }
        },
        loc: {
          start: {
            line: 415,
            column: 55
          },
          end: {
            line: 415,
            column: 60
          }
        },
        line: 415
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 416,
            column: 31
          },
          end: {
            line: 416,
            column: 32
          }
        },
        loc: {
          start: {
            line: 416,
            column: 47
          },
          end: {
            line: 416,
            column: 77
          }
        },
        line: 416
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 417,
            column: 32
          }
        },
        loc: {
          start: {
            line: 417,
            column: 44
          },
          end: {
            line: 417,
            column: 57
          }
        },
        line: 417
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 50
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 435
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 59
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 456
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        },
        loc: {
          start: {
            line: 500,
            column: 54
          },
          end: {
            line: 536,
            column: 5
          }
        },
        line: 500
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 5
          }
        },
        loc: {
          start: {
            line: 540,
            column: 52
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 540
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 585,
            column: 4
          },
          end: {
            line: 585,
            column: 5
          }
        },
        loc: {
          start: {
            line: 585,
            column: 85
          },
          end: {
            line: 615,
            column: 5
          }
        },
        line: 585
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 619,
            column: 4
          },
          end: {
            line: 619,
            column: 5
          }
        },
        loc: {
          start: {
            line: 619,
            column: 47
          },
          end: {
            line: 636,
            column: 5
          }
        },
        line: 619
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 640,
            column: 4
          },
          end: {
            line: 640,
            column: 5
          }
        },
        loc: {
          start: {
            line: 640,
            column: 82
          },
          end: {
            line: 674,
            column: 5
          }
        },
        line: 640
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 678,
            column: 4
          },
          end: {
            line: 678,
            column: 5
          }
        },
        loc: {
          start: {
            line: 678,
            column: 77
          },
          end: {
            line: 719,
            column: 5
          }
        },
        line: 678
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 723,
            column: 4
          },
          end: {
            line: 723,
            column: 5
          }
        },
        loc: {
          start: {
            line: 723,
            column: 113
          },
          end: {
            line: 752,
            column: 5
          }
        },
        line: 723
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 756,
            column: 4
          },
          end: {
            line: 756,
            column: 5
          }
        },
        loc: {
          start: {
            line: 756,
            column: 85
          },
          end: {
            line: 785,
            column: 5
          }
        },
        line: 756
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 39,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 85
          }
        }, {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 39,
            column: 51
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 48
          }
        }, {
          start: {
            line: 37,
            column: 52
          },
          end: {
            line: 37,
            column: 77
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 67
          },
          end: {
            line: 67,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 92
          },
          end: {
            line: 67,
            column: 105
          }
        }, {
          start: {
            line: 67,
            column: 108
          },
          end: {
            line: 67,
            column: 123
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 86
          }
        }, {
          start: {
            line: 94,
            column: 90
          },
          end: {
            line: 94,
            column: 134
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 90
          }
        }, {
          start: {
            line: 95,
            column: 94
          },
          end: {
            line: 95,
            column: 138
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 71
          },
          end: {
            line: 125,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 82
          },
          end: {
            line: 125,
            column: 86
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 248
      },
      "7": {
        loc: {
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 250
      },
      "8": {
        loc: {
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 252
      },
      "9": {
        loc: {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 257,
            column: 71
          }
        }, {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 257,
            column: 71
          }
        }],
        line: 254
      },
      "10": {
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 90
          },
          end: {
            line: 263,
            column: 110
          }
        }, {
          start: {
            line: 263,
            column: 113
          },
          end: {
            line: 263,
            column: 115
          }
        }],
        line: 263
      },
      "11": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 278,
            column: 18
          }
        }, {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 285,
            column: 18
          }
        }, {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 291,
            column: 18
          }
        }, {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 293,
            column: 70
          }
        }],
        line: 271
      },
      "12": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "13": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "14": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: 424,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        }],
        line: 421
      },
      "15": {
        loc: {
          start: {
            line: 424,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: 427,
            column: 13
          },
          end: {
            line: 429,
            column: 9
          }
        }],
        line: 424
      },
      "16": {
        loc: {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "17": {
        loc: {
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 493,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 493,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "18": {
        loc: {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 468,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 52
          },
          end: {
            line: 468,
            column: 62
          }
        }, {
          start: {
            line: 468,
            column: 65
          },
          end: {
            line: 468,
            column: 71
          }
        }],
        line: 468
      },
      "19": {
        loc: {
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 626,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 626,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "20": {
        loc: {
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 628,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 628,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 627
      },
      "21": {
        loc: {
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 630,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 630,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "22": {
        loc: {
          start: {
            line: 631,
            column: 8
          },
          end: {
            line: 632,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 8
          },
          end: {
            line: 632,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "23": {
        loc: {
          start: {
            line: 633,
            column: 8
          },
          end: {
            line: 634,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 633,
            column: 8
          },
          end: {
            line: 634,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 633
      },
      "24": {
        loc: {
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 698,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 698,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 681
      },
      "25": {
        loc: {
          start: {
            line: 700,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 700,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 700
      },
      "26": {
        loc: {
          start: {
            line: 726,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 726,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 726
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\SystemPerformanceAnalysisEngine.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\SystemPerformanceAnalysisEngine.ts"],
      sourcesContent: ["/**\r\n * System Performance Analysis Engine\r\n * \r\n * Comprehensive performance analysis service for Phase 3 Priority 3: Advanced System Analysis Tools\r\n * Provides real-time monitoring, trend analysis, efficiency calculations, and performance benchmarking\r\n * capabilities for HVAC duct systems.\r\n * \r\n * @version 3.0.0\r\n * @author SizeWise Suite Development Team\r\n */\r\n\r\nimport {\r\n  SystemAnalysis,\r\n  PerformanceAnalysis,\r\n  PerformanceMetrics,\r\n  TrendAnalysis,\r\n  BenchmarkComparison,\r\n  EfficiencyAnalysis,\r\n  PerformanceAlert,\r\n  PerformanceRecommendation,\r\n  UncertaintyAnalysis,\r\n  SystemConfiguration,\r\n  AnalysisType,\r\n  AnalysisScope,\r\n  Measurement,\r\n  MeasurementSource,\r\n  QualityIndicator,\r\n  FanCurvePosition,\r\n  BalanceQuality,\r\n  BalanceGrade,\r\n  TrendDirection,\r\n  AlertType,\r\n  AlertSeverity,\r\n  RecommendationType,\r\n  RecommendationPriority,\r\n  BenchmarkType,\r\n  PerformanceAnomaly,\r\n  AnomalyType,\r\n  PredictiveAnalysis\r\n} from './types/SystemAnalysisTypes';\r\n\r\nimport { SystemPressureCalculator } from './SystemPressureCalculator';\r\nimport { FittingLossCalculator } from './FittingLossCalculator';\r\nimport { AdvancedFittingCalculator } from './AdvancedFittingCalculator';\r\nimport { AirPropertiesCalculator } from './AirPropertiesCalculator';\r\n\r\n/**\r\n * Main System Performance Analysis Engine\r\n * \r\n * Provides comprehensive performance analysis capabilities including:\r\n * - Real-time performance monitoring\r\n * - Trend analysis and forecasting\r\n * - Efficiency calculations and benchmarking\r\n * - Anomaly detection and alerting\r\n * - Performance recommendations\r\n */\r\nexport class SystemPerformanceAnalysisEngine {\r\n  private static readonly VERSION = '3.0.0';\r\n  private static readonly ANALYSIS_CACHE = new Map<string, PerformanceAnalysis>();\r\n  private static readonly BENCHMARK_DATABASE = new Map<string, BenchmarkComparison>();\r\n\r\n  /**\r\n   * Perform comprehensive system performance analysis\r\n   */\r\n  public static async analyzeSystemPerformance(\r\n    systemConfiguration: SystemConfiguration,\r\n    analysisScope: AnalysisScope,\r\n    historicalData?: PerformanceMetrics[]\r\n  ): Promise<PerformanceAnalysis> {\r\n    try {\r\n      const analysisId = this.generateAnalysisId(systemConfiguration.id);\r\n      const timestamp = new Date();\r\n\r\n      // Calculate current performance metrics\r\n      const performanceMetrics = await this.calculatePerformanceMetrics(\r\n        systemConfiguration,\r\n        analysisScope\r\n      );\r\n\r\n      // Perform trend analysis if historical data is available\r\n      const trendAnalysis = historicalData && historicalData.length > 0\r\n        ? await this.performTrendAnalysis(historicalData, performanceMetrics)\r\n        : this.createDefaultTrendAnalysis();\r\n\r\n      // Benchmark against similar systems\r\n      const benchmarkComparison = await this.performBenchmarkComparison(\r\n        systemConfiguration,\r\n        performanceMetrics\r\n      );\r\n\r\n      // Analyze system efficiency\r\n      const efficiencyAnalysis = await this.analyzeSystemEfficiency(\r\n        systemConfiguration,\r\n        performanceMetrics\r\n      );\r\n\r\n      // Detect performance alerts and anomalies\r\n      const alertsAndWarnings = await this.detectPerformanceAlerts(\r\n        performanceMetrics,\r\n        historicalData\r\n      );\r\n\r\n      // Generate performance recommendations\r\n      const recommendations = await this.generatePerformanceRecommendations(\r\n        performanceMetrics,\r\n        efficiencyAnalysis,\r\n        benchmarkComparison\r\n      );\r\n\r\n      // Perform uncertainty analysis\r\n      const uncertaintyAnalysis = await this.performUncertaintyAnalysis(\r\n        performanceMetrics,\r\n        systemConfiguration\r\n      );\r\n\r\n      const analysis: PerformanceAnalysis = {\r\n        id: analysisId,\r\n        systemId: systemConfiguration.id,\r\n        analysisTimestamp: timestamp,\r\n        performanceMetrics,\r\n        trendAnalysis,\r\n        benchmarkComparison,\r\n        efficiencyAnalysis,\r\n        alertsAndWarnings,\r\n        recommendations,\r\n        uncertaintyAnalysis\r\n      };\r\n\r\n      // Cache the analysis for future reference\r\n      this.ANALYSIS_CACHE.set(analysisId, analysis);\r\n\r\n      return analysis;\r\n\r\n    } catch (error) {\r\n      throw new Error(`System performance analysis failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate comprehensive performance metrics for the system\r\n   */\r\n  private static async calculatePerformanceMetrics(\r\n    systemConfiguration: SystemConfiguration,\r\n    analysisScope: AnalysisScope\r\n  ): Promise<PerformanceMetrics> {\r\n    const timestamp = new Date();\r\n\r\n    // Calculate system pressure using existing calculators\r\n    const systemPressureResult = SystemPressureCalculator.calculateEnhancedSystemPressure({\r\n      segments: this.createDuctSegmentsFromConfig(systemConfiguration),\r\n      systemType: systemConfiguration.systemType,\r\n      designConditions: systemConfiguration.operatingConditions\r\n    });\r\n\r\n    // Calculate fan performance metrics\r\n    const fanPerformance = this.calculateFanPerformance(\r\n      systemConfiguration,\r\n      systemPressureResult.totalPressureLoss\r\n    );\r\n\r\n    // Calculate airflow metrics\r\n    const airflowMetrics = this.calculateAirflowMetrics(systemConfiguration);\r\n\r\n    // Calculate system efficiency metrics\r\n    const efficiencyMetrics = this.calculateSystemEfficiencyMetrics(\r\n      systemConfiguration,\r\n      fanPerformance,\r\n      systemPressureResult\r\n    );\r\n\r\n    // Calculate environmental metrics\r\n    const environmentalMetrics = this.calculateEnvironmentalMetrics(\r\n      systemConfiguration,\r\n      fanPerformance\r\n    );\r\n\r\n    // Calculate system balance quality\r\n    const balanceQuality = this.assessSystemBalance(\r\n      systemConfiguration,\r\n      airflowMetrics\r\n    );\r\n\r\n    const performanceMetrics: PerformanceMetrics = {\r\n      // Pressure and Flow Metrics\r\n      totalSystemPressure: this.createMeasurement(\r\n        systemPressureResult.totalPressureLoss,\r\n        'in wg',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      staticPressure: this.createMeasurement(\r\n        systemPressureResult.staticPressure || systemPressureResult.totalPressureLoss * 0.8,\r\n        'in wg',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      velocityPressure: this.createMeasurement(\r\n        systemPressureResult.velocityPressure || systemPressureResult.totalPressureLoss * 0.2,\r\n        'in wg',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      totalAirflow: this.createMeasurement(\r\n        airflowMetrics.totalAirflow,\r\n        'CFM',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      designAirflow: this.createMeasurement(\r\n        systemConfiguration.designParameters.designAirflow,\r\n        'CFM',\r\n        MeasurementSource.MANUFACTURER_DATA,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      airflowEfficiency: this.createMeasurement(\r\n        airflowMetrics.efficiency,\r\n        '%',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n\r\n      // Fan Performance\r\n      fanPower: this.createMeasurement(\r\n        fanPerformance.power,\r\n        'kW',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      fanEfficiency: this.createMeasurement(\r\n        fanPerformance.efficiency,\r\n        '%',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      fanSpeed: this.createMeasurement(\r\n        fanPerformance.speed,\r\n        'RPM',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n      fanCurvePosition: fanPerformance.curvePosition,\r\n\r\n      // System Efficiency\r\n      systemEfficiency: this.createMeasurement(\r\n        efficiencyMetrics.systemEfficiency,\r\n        '%',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      transportEfficiency: this.createMeasurement(\r\n        efficiencyMetrics.transportEfficiency,\r\n        '%',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.HIGH,\r\n        timestamp\r\n      ),\r\n      distributionEfficiency: this.createMeasurement(\r\n        efficiencyMetrics.distributionEfficiency,\r\n        '%',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n\r\n      // Environmental Metrics\r\n      noiseLevel: this.createMeasurement(\r\n        environmentalMetrics.noiseLevel,\r\n        'dBA',\r\n        MeasurementSource.ESTIMATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n      vibrationLevel: this.createMeasurement(\r\n        environmentalMetrics.vibrationLevel,\r\n        'mm/s',\r\n        MeasurementSource.ESTIMATED,\r\n        QualityIndicator.LOW,\r\n        timestamp\r\n      ),\r\n      temperatureRise: this.createMeasurement(\r\n        environmentalMetrics.temperatureRise,\r\n        '\xB0F',\r\n        MeasurementSource.CALCULATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n\r\n      // Filter and Component Performance\r\n      filterPressureDrop: this.createMeasurement(\r\n        environmentalMetrics.filterPressureDrop,\r\n        'in wg',\r\n        MeasurementSource.ESTIMATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n      coilPressureDrop: this.createMeasurement(\r\n        environmentalMetrics.coilPressureDrop,\r\n        'in wg',\r\n        MeasurementSource.ESTIMATED,\r\n        QualityIndicator.MEDIUM,\r\n        timestamp\r\n      ),\r\n      dampersPosition: [], // Would be populated from actual system data\r\n\r\n      // System Balance\r\n      balanceQuality,\r\n      flowDistribution: airflowMetrics.flowDistribution\r\n    };\r\n\r\n    return performanceMetrics;\r\n  }\r\n\r\n  /**\r\n   * Create a standardized measurement object\r\n   */\r\n  private static createMeasurement(\r\n    value: number,\r\n    units: string,\r\n    source: MeasurementSource,\r\n    quality: QualityIndicator,\r\n    timestamp: Date,\r\n    accuracy: number = 0.95\r\n  ): Measurement {\r\n    return {\r\n      value,\r\n      units,\r\n      accuracy,\r\n      timestamp,\r\n      source,\r\n      qualityIndicator: quality,\r\n      uncertaintyBounds: {\r\n        lowerBound: value * (1 - (1 - accuracy)),\r\n        upperBound: value * (1 + (1 - accuracy)),\r\n        confidenceLevel: accuracy * 100,\r\n        distributionType: 'normal' as const\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate fan performance metrics\r\n   */\r\n  private static calculateFanPerformance(\r\n    systemConfiguration: SystemConfiguration,\r\n    systemPressure: number\r\n  ): any {\r\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\r\n    const designPressure = systemConfiguration.designParameters.designPressure;\r\n\r\n    // Simplified fan performance calculation\r\n    // In practice, this would use actual fan curves and manufacturer data\r\n    const efficiency = Math.max(0.6, Math.min(0.9, 0.8 - (systemPressure - designPressure) * 0.05));\r\n    const power = (designAirflow * systemPressure) / (6356 * efficiency); // HP\r\n    const powerKW = power * 0.746; // Convert to kW\r\n    const speed = 1800 * Math.sqrt(systemPressure / designPressure); // Simplified speed calculation\r\n\r\n    const curvePosition: FanCurvePosition = {\r\n      operatingPoint: {\r\n        airflow: designAirflow,\r\n        pressure: systemPressure,\r\n        power: powerKW,\r\n        efficiency: efficiency * 100,\r\n        speed\r\n      },\r\n      designPoint: {\r\n        airflow: designAirflow,\r\n        pressure: designPressure,\r\n        power: (designAirflow * designPressure) / (6356 * 0.8) * 0.746,\r\n        efficiency: 80,\r\n        speed: 1800\r\n      },\r\n      efficiencyAtOperating: efficiency * 100,\r\n      efficiencyAtDesign: 80,\r\n      surgeMargin: Math.max(0, (designAirflow * 0.7 - designAirflow) / designAirflow * 100),\r\n      stallMargin: Math.max(0, (designAirflow * 1.3 - designAirflow) / designAirflow * 100),\r\n      recommendedOperatingRange: {\r\n        minAirflow: designAirflow * 0.7,\r\n        maxAirflow: designAirflow * 1.3,\r\n        minPressure: designPressure * 0.5,\r\n        maxPressure: designPressure * 1.5\r\n      }\r\n    };\r\n\r\n    return {\r\n      power: powerKW,\r\n      efficiency: efficiency * 100,\r\n      speed,\r\n      curvePosition\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate airflow metrics and distribution\r\n   */\r\n  private static calculateAirflowMetrics(systemConfiguration: SystemConfiguration): any {\r\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\r\n    \r\n    // Simplified airflow calculation\r\n    // In practice, this would consider actual system measurements\r\n    const totalAirflow = designAirflow * 0.95; // Assume 5% leakage\r\n    const efficiency = (totalAirflow / designAirflow) * 100;\r\n\r\n    return {\r\n      totalAirflow,\r\n      efficiency,\r\n      flowDistribution: {\r\n        uniformityIndex: 0.85, // Simplified\r\n        variationCoefficient: 0.15,\r\n        zones: []\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate system efficiency metrics\r\n   */\r\n  private static calculateSystemEfficiencyMetrics(\r\n    systemConfiguration: SystemConfiguration,\r\n    fanPerformance: any,\r\n    systemPressureResult: any\r\n  ): any {\r\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\r\n    const designPressure = systemConfiguration.designParameters.designPressure;\r\n\r\n    // Calculate various efficiency metrics\r\n    const systemEfficiency = Math.min(95, fanPerformance.efficiency * 0.9); // Account for system losses\r\n    const transportEfficiency = Math.min(90, 100 - (systemPressureResult.totalPressureLoss / designPressure) * 10);\r\n    const distributionEfficiency = Math.min(85, systemEfficiency * 0.9); // Account for distribution losses\r\n\r\n    return {\r\n      systemEfficiency,\r\n      transportEfficiency,\r\n      distributionEfficiency\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate environmental metrics\r\n   */\r\n  private static calculateEnvironmentalMetrics(\r\n    systemConfiguration: SystemConfiguration,\r\n    fanPerformance: any\r\n  ): any {\r\n    const designAirflow = systemConfiguration.designParameters.designAirflow;\r\n\r\n    // Simplified environmental calculations\r\n    const velocity = designAirflow / 144; // Simplified velocity calculation\r\n    const noiseLevel = 40 + 20 * Math.log10(velocity / 1000); // Simplified noise model\r\n    const vibrationLevel = Math.max(0.5, velocity / 2000); // Simplified vibration model\r\n    const temperatureRise = fanPerformance.power * 3412 / (designAirflow * 1.08); // Fan heat rise\r\n\r\n    return {\r\n      noiseLevel: Math.max(35, Math.min(65, noiseLevel)),\r\n      vibrationLevel: Math.max(0.1, Math.min(5.0, vibrationLevel)),\r\n      temperatureRise: Math.max(0.5, Math.min(5.0, temperatureRise)),\r\n      filterPressureDrop: 0.5, // Typical clean filter\r\n      coilPressureDrop: 0.8 // Typical coil pressure drop\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Assess system balance quality\r\n   */\r\n  private static assessSystemBalance(\r\n    systemConfiguration: SystemConfiguration,\r\n    airflowMetrics: any\r\n  ): BalanceQuality {\r\n    // Simplified balance assessment\r\n    const flowVariation = 0.15; // 15% variation\r\n    const pressureVariation = 0.12; // 12% variation\r\n    const overallScore = Math.max(0, 100 - (flowVariation + pressureVariation) * 200);\r\n\r\n    let balanceGrade: BalanceGrade;\r\n    if (overallScore >= 90) balanceGrade = BalanceGrade.EXCELLENT;\r\n    else if (overallScore >= 80) balanceGrade = BalanceGrade.GOOD;\r\n    else if (overallScore >= 70) balanceGrade = BalanceGrade.ACCEPTABLE;\r\n    else if (overallScore >= 60) balanceGrade = BalanceGrade.POOR;\r\n    else balanceGrade = BalanceGrade.CRITICAL;\r\n\r\n    return {\r\n      overallScore,\r\n      flowVariation,\r\n      pressureVariation,\r\n      balanceGrade,\r\n      criticalZones: balanceGrade === BalanceGrade.CRITICAL ? ['Zone 1', 'Zone 3'] : [],\r\n      balanceRecommendations: this.generateBalanceRecommendations(balanceGrade)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate balance recommendations based on grade\r\n   */\r\n  private static generateBalanceRecommendations(grade: BalanceGrade): string[] {\r\n    switch (grade) {\r\n      case BalanceGrade.CRITICAL:\r\n        return [\r\n          'Immediate system rebalancing required',\r\n          'Check for blocked dampers or ducts',\r\n          'Verify fan operation and capacity',\r\n          'Consider professional commissioning'\r\n        ];\r\n      case BalanceGrade.POOR:\r\n        return [\r\n          'System rebalancing recommended',\r\n          'Adjust damper positions',\r\n          'Check for duct leakage',\r\n          'Verify design calculations'\r\n        ];\r\n      case BalanceGrade.ACCEPTABLE:\r\n        return [\r\n          'Minor adjustments may improve performance',\r\n          'Monitor system performance trends',\r\n          'Consider seasonal adjustments'\r\n        ];\r\n      default:\r\n        return ['System balance is within acceptable limits'];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create duct segments from system configuration\r\n   */\r\n  private static createDuctSegmentsFromConfig(systemConfiguration: SystemConfiguration): any[] {\r\n    // Simplified duct segment creation\r\n    // In practice, this would parse the actual system configuration\r\n    return [\r\n      {\r\n        id: 'main_supply',\r\n        length: 100,\r\n        diameter: 24,\r\n        material: 'galvanized_steel',\r\n        roughness: 0.0015,\r\n        airflow: systemConfiguration.designParameters.designAirflow,\r\n        fittings: []\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Generate unique analysis ID\r\n   */\r\n  private static generateAnalysisId(systemId: string): string {\r\n    const timestamp = Date.now();\r\n    const random = Math.random().toString(36).substring(2, 8);\r\n    return `analysis_${systemId}_${timestamp}_${random}`;\r\n  }\r\n\r\n  /**\r\n   * Create default trend analysis when no historical data is available\r\n   */\r\n  private static createDefaultTrendAnalysis(): TrendAnalysis {\r\n    return {\r\n      timeRange: {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        duration: 0,\r\n        units: 'days' as const\r\n      },\r\n      trendDirection: TrendDirection.STABLE,\r\n      trendMagnitude: 0,\r\n      seasonalPatterns: [],\r\n      anomalies: [],\r\n      predictiveAnalysis: {\r\n        forecastHorizon: 12,\r\n        predictedPerformance: [],\r\n        confidenceInterval: { lowerBound: 0, upperBound: 0, confidenceLevel: 0 },\r\n        predictionModel: {\r\n          modelType: 'linear_regression' as const,\r\n          accuracy: 0,\r\n          lastTrainingDate: new Date(),\r\n          dataPoints: 0,\r\n          validationScore: 0\r\n        },\r\n        keyFactors: [],\r\n        scenarios: []\r\n      },\r\n      degradationRate: {\r\n        overallDegradationRate: 2.0, // 2% per year typical\r\n        componentDegradation: [],\r\n        degradationFactors: [],\r\n        maintenanceImpact: {\r\n          preventiveMaintenance: { performanceImpact: 5, lifespanImpact: 2, costImpact: 1000 },\r\n          correctiveMaintenance: { performanceImpact: -10, lifespanImpact: -1, costImpact: 5000 },\r\n          deferredMaintenance: { performanceImpact: -15, lifespanImpact: -3, costImpact: 10000 }\r\n        },\r\n        projectedLifespan: {\r\n          currentAge: 0,\r\n          designLife: 20,\r\n          projectedLife: 18,\r\n          confidenceLevel: 80,\r\n          keyAssumptions: ['Regular maintenance', 'Normal operating conditions']\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Perform trend analysis on historical performance data\r\n   */\r\n  private static async performTrendAnalysis(\r\n    historicalData: PerformanceMetrics[],\r\n    currentMetrics: PerformanceMetrics\r\n  ): Promise<TrendAnalysis> {\r\n    if (historicalData.length < 2) {\r\n      return this.createDefaultTrendAnalysis();\r\n    }\r\n\r\n    // Calculate trend direction and magnitude\r\n    const trendAnalysis = this.calculateTrendDirection(historicalData);\r\n\r\n    // Detect seasonal patterns\r\n    const seasonalPatterns = this.detectSeasonalPatterns(historicalData);\r\n\r\n    // Detect anomalies\r\n    const anomalies = this.detectAnomalies(historicalData, currentMetrics);\r\n\r\n    // Generate predictive analysis\r\n    const predictiveAnalysis = this.generatePredictiveAnalysis(historicalData);\r\n\r\n    // Calculate degradation rate\r\n    const degradationRate = this.calculateDegradationRate(historicalData);\r\n\r\n    const timeRange = {\r\n      startDate: historicalData[0].totalSystemPressure.timestamp,\r\n      endDate: currentMetrics.totalSystemPressure.timestamp,\r\n      duration: historicalData.length,\r\n      units: 'days' as const\r\n    };\r\n\r\n    return {\r\n      timeRange,\r\n      trendDirection: trendAnalysis.direction,\r\n      trendMagnitude: trendAnalysis.magnitude,\r\n      seasonalPatterns,\r\n      anomalies,\r\n      predictiveAnalysis,\r\n      degradationRate\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate trend direction from historical data\r\n   */\r\n  private static calculateTrendDirection(historicalData: PerformanceMetrics[]): {\r\n    direction: TrendDirection;\r\n    magnitude: number;\r\n  } {\r\n    if (historicalData.length < 3) {\r\n      return { direction: TrendDirection.STABLE, magnitude: 0 };\r\n    }\r\n\r\n    // Simple linear regression on system efficiency\r\n    const efficiencyValues = historicalData.map(data => data.systemEfficiency.value);\r\n    const n = efficiencyValues.length;\r\n    const x = Array.from({ length: n }, (_, i) => i);\r\n\r\n    const sumX = x.reduce((a, b) => a + b, 0);\r\n    const sumY = efficiencyValues.reduce((a, b) => a + b, 0);\r\n    const sumXY = x.reduce((sum, xi, i) => sum + xi * efficiencyValues[i], 0);\r\n    const sumXX = x.reduce((sum, xi) => sum + xi * xi, 0);\r\n\r\n    const slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\r\n    const magnitude = Math.abs(slope);\r\n\r\n    let direction: TrendDirection;\r\n    if (magnitude < 0.1) {\r\n      direction = TrendDirection.STABLE;\r\n    } else if (slope > 0) {\r\n      direction = TrendDirection.IMPROVING;\r\n    } else {\r\n      direction = TrendDirection.DEGRADING;\r\n    }\r\n\r\n    return { direction, magnitude };\r\n  }\r\n\r\n  /**\r\n   * Detect seasonal patterns in performance data\r\n   */\r\n  private static detectSeasonalPatterns(historicalData: PerformanceMetrics[]): any[] {\r\n    // Simplified seasonal pattern detection\r\n    // In practice, this would use more sophisticated time series analysis\r\n    return [\r\n      {\r\n        season: 'summer' as const,\r\n        averagePerformance: 85,\r\n        performanceVariation: 5,\r\n        typicalIssues: ['Higher cooling loads', 'Increased fan power']\r\n      },\r\n      {\r\n        season: 'winter' as const,\r\n        averagePerformance: 88,\r\n        performanceVariation: 3,\r\n        typicalIssues: ['Filter loading', 'Heating coil pressure drop']\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Detect performance anomalies\r\n   */\r\n  private static detectAnomalies(\r\n    historicalData: PerformanceMetrics[],\r\n    currentMetrics: PerformanceMetrics\r\n  ): PerformanceAnomaly[] {\r\n    const anomalies: PerformanceAnomaly[] = [];\r\n\r\n    // Check for sudden efficiency drop\r\n    if (historicalData.length > 0) {\r\n      const lastEfficiency = historicalData[historicalData.length - 1].systemEfficiency.value;\r\n      const currentEfficiency = currentMetrics.systemEfficiency.value;\r\n      const efficiencyDrop = lastEfficiency - currentEfficiency;\r\n\r\n      if (efficiencyDrop > 5) { // 5% drop threshold\r\n        anomalies.push({\r\n          id: `anomaly_${Date.now()}`,\r\n          detectionTimestamp: new Date(),\r\n          anomalyType: AnomalyType.SUDDEN_CHANGE,\r\n          severity: efficiencyDrop > 10 ? 'critical' as const : 'high' as const,\r\n          affectedMetrics: ['systemEfficiency'],\r\n          deviationMagnitude: efficiencyDrop,\r\n          duration: 1,\r\n          possibleCauses: [\r\n            {\r\n              cause: 'Filter blockage',\r\n              probability: 60,\r\n              category: 'maintenance_issue' as const,\r\n              diagnosticSteps: ['Check filter pressure drop', 'Inspect filter condition']\r\n            },\r\n            {\r\n              cause: 'Fan belt slippage',\r\n              probability: 30,\r\n              category: 'equipment_failure' as const,\r\n              diagnosticSteps: ['Check fan belt tension', 'Inspect motor operation']\r\n            }\r\n          ],\r\n          recommendedActions: [\r\n            'Replace or clean filters',\r\n            'Check fan operation',\r\n            'Verify damper positions'\r\n          ],\r\n          resolved: false\r\n        });\r\n      }\r\n    }\r\n\r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Generate predictive analysis\r\n   */\r\n  private static generatePredictiveAnalysis(historicalData: PerformanceMetrics[]): PredictiveAnalysis {\r\n    // Simplified predictive analysis\r\n    // In practice, this would use machine learning models\r\n    return {\r\n      forecastHorizon: 12,\r\n      predictedPerformance: [\r\n        {\r\n          metric: 'systemEfficiency',\r\n          currentValue: 85,\r\n          predictedValue: 83,\r\n          changePercent: -2.4,\r\n          timeToTarget: 6\r\n        }\r\n      ],\r\n      confidenceInterval: {\r\n        lowerBound: 80,\r\n        upperBound: 86,\r\n        confidenceLevel: 85\r\n      },\r\n      predictionModel: {\r\n        modelType: 'time_series' as const,\r\n        accuracy: 85,\r\n        lastTrainingDate: new Date(),\r\n        dataPoints: historicalData.length,\r\n        validationScore: 0.85\r\n      },\r\n      keyFactors: [\r\n        {\r\n          factor: 'Filter condition',\r\n          impact: 40,\r\n          controllable: true,\r\n          mitigationStrategies: ['Regular filter replacement', 'Pressure monitoring']\r\n        }\r\n      ],\r\n      scenarios: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate system degradation rate\r\n   */\r\n  private static calculateDegradationRate(historicalData: PerformanceMetrics[]): any {\r\n    // Simplified degradation calculation\r\n    return {\r\n      overallDegradationRate: 2.5, // 2.5% per year\r\n      componentDegradation: [\r\n        {\r\n          componentId: 'main_fan',\r\n          componentType: 'fan' as const,\r\n          degradationRate: 1.5,\r\n          currentCondition: 92,\r\n          estimatedRemainingLife: 12,\r\n          replacementThreshold: 70\r\n        }\r\n      ],\r\n      degradationFactors: [\r\n        {\r\n          factor: 'Operating hours',\r\n          impact: 50,\r\n          controllable: false,\r\n          mitigationStrategies: ['Optimize operating schedule']\r\n        },\r\n        {\r\n          factor: 'Maintenance quality',\r\n          impact: 30,\r\n          controllable: true,\r\n          mitigationStrategies: ['Preventive maintenance program', 'Staff training']\r\n        }\r\n      ],\r\n      maintenanceImpact: {\r\n        preventiveMaintenance: { performanceImpact: 5, lifespanImpact: 2, costImpact: 1000 },\r\n        correctiveMaintenance: { performanceImpact: -10, lifespanImpact: -1, costImpact: 5000 },\r\n        deferredMaintenance: { performanceImpact: -15, lifespanImpact: -3, costImpact: 10000 }\r\n      },\r\n      projectedLifespan: {\r\n        currentAge: 3,\r\n        designLife: 20,\r\n        projectedLife: 18,\r\n        confidenceLevel: 80,\r\n        keyAssumptions: ['Regular maintenance', 'Normal operating conditions']\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Perform benchmark comparison against similar systems\r\n   */\r\n  private static async performBenchmarkComparison(\r\n    systemConfiguration: SystemConfiguration,\r\n    performanceMetrics: PerformanceMetrics\r\n  ): Promise<BenchmarkComparison> {\r\n    // Simplified benchmark comparison\r\n    // In practice, this would query a database of similar systems\r\n    const systemEfficiency = performanceMetrics.systemEfficiency.value;\r\n    const industryAverage = 82; // Typical industry average\r\n    const bestInClass = 92; // Best in class performance\r\n\r\n    return {\r\n      benchmarkType: BenchmarkType.INDUSTRY_AVERAGE,\r\n      benchmarkSource: 'ASHRAE Performance Database',\r\n      systemPerformance: systemEfficiency,\r\n      benchmarkValue: industryAverage,\r\n      percentile: this.calculatePercentile(systemEfficiency, industryAverage),\r\n      performanceGap: industryAverage - systemEfficiency,\r\n      improvementPotential: bestInClass - systemEfficiency,\r\n      similarSystems: [\r\n        {\r\n          systemId: 'similar_system_1',\r\n          systemName: 'Office Building HVAC',\r\n          performanceMetric: 84,\r\n          systemCharacteristics: {\r\n            size: 'medium' as const,\r\n            age: 5,\r\n            buildingType: 'office' as const,\r\n            climateZone: '4A',\r\n            operatingHours: 2500\r\n          },\r\n          performanceDifference: 84 - systemEfficiency\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate percentile ranking\r\n   */\r\n  private static calculatePercentile(value: number, average: number): number {\r\n    // Simplified percentile calculation\r\n    // Assumes normal distribution with standard deviation of 8\r\n    const standardDeviation = 8;\r\n    const zScore = (value - average) / standardDeviation;\r\n\r\n    // Convert z-score to percentile (simplified)\r\n    if (zScore >= 2) return 97;\r\n    if (zScore >= 1) return 84;\r\n    if (zScore >= 0) return 50 + (zScore * 34);\r\n    if (zScore >= -1) return 50 + (zScore * 34);\r\n    if (zScore >= -2) return 16;\r\n    return 3;\r\n  }\r\n\r\n  /**\r\n   * Analyze system efficiency in detail\r\n   */\r\n  private static async analyzeSystemEfficiency(\r\n    systemConfiguration: SystemConfiguration,\r\n    performanceMetrics: PerformanceMetrics\r\n  ): Promise<EfficiencyAnalysis> {\r\n    // Simplified efficiency analysis\r\n    return {\r\n      overallEfficiency: {\r\n        value: performanceMetrics.systemEfficiency.value,\r\n        units: '%',\r\n        calculationMethod: 'calculated' as const,\r\n        accuracy: 0.9,\r\n        timestamp: new Date()\r\n      },\r\n      componentEfficiencies: [\r\n        {\r\n          componentId: 'main_fan',\r\n          componentType: 'fan' as const,\r\n          efficiency: performanceMetrics.fanEfficiency.value,\r\n          ratedEfficiency: 85,\r\n          degradationFactor: 0.95,\r\n          maintenanceStatus: 'good' as const\r\n        }\r\n      ],\r\n      efficiencyTrends: [],\r\n      efficiencyLosses: [],\r\n      improvementOpportunities: [],\r\n      benchmarkComparison: {\r\n        benchmarkType: BenchmarkType.INDUSTRY_AVERAGE,\r\n        benchmarkSource: 'Industry Standards',\r\n        systemPerformance: performanceMetrics.systemEfficiency.value,\r\n        benchmarkValue: 82,\r\n        percentile: 65,\r\n        performanceGap: 0,\r\n        improvementPotential: 10,\r\n        similarSystems: []\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Detect performance alerts and warnings\r\n   */\r\n  private static async detectPerformanceAlerts(\r\n    performanceMetrics: PerformanceMetrics,\r\n    historicalData?: PerformanceMetrics[]\r\n  ): Promise<PerformanceAlert[]> {\r\n    const alerts: PerformanceAlert[] = [];\r\n\r\n    // Check efficiency threshold\r\n    if (performanceMetrics.systemEfficiency.value < 75) {\r\n      alerts.push({\r\n        id: `alert_${Date.now()}_efficiency`,\r\n        alertType: AlertType.THRESHOLD_EXCEEDED,\r\n        severity: AlertSeverity.HIGH,\r\n        metric: 'systemEfficiency',\r\n        currentValue: performanceMetrics.systemEfficiency.value,\r\n        thresholdValue: 75,\r\n        message: 'System efficiency below acceptable threshold',\r\n        timestamp: new Date(),\r\n        acknowledged: false,\r\n        recommendedActions: [\r\n          'Check filter condition',\r\n          'Verify fan operation',\r\n          'Inspect ductwork for leaks'\r\n        ]\r\n      });\r\n    }\r\n\r\n    // Check pressure threshold\r\n    if (performanceMetrics.totalSystemPressure.value > 4.0) {\r\n      alerts.push({\r\n        id: `alert_${Date.now()}_pressure`,\r\n        alertType: AlertType.THRESHOLD_EXCEEDED,\r\n        severity: AlertSeverity.MEDIUM,\r\n        metric: 'totalSystemPressure',\r\n        currentValue: performanceMetrics.totalSystemPressure.value,\r\n        thresholdValue: 4.0,\r\n        message: 'System pressure higher than expected',\r\n        timestamp: new Date(),\r\n        acknowledged: false,\r\n        recommendedActions: [\r\n          'Check for blocked ducts',\r\n          'Verify damper positions',\r\n          'Inspect filters'\r\n        ]\r\n      });\r\n    }\r\n\r\n    return alerts;\r\n  }\r\n\r\n  /**\r\n   * Generate performance recommendations\r\n   */\r\n  private static async generatePerformanceRecommendations(\r\n    performanceMetrics: PerformanceMetrics,\r\n    efficiencyAnalysis: EfficiencyAnalysis,\r\n    benchmarkComparison: BenchmarkComparison\r\n  ): Promise<PerformanceRecommendation[]> {\r\n    const recommendations: PerformanceRecommendation[] = [];\r\n\r\n    // Efficiency improvement recommendation\r\n    if (performanceMetrics.systemEfficiency.value < 85) {\r\n      recommendations.push({\r\n        id: `rec_${Date.now()}_efficiency`,\r\n        type: RecommendationType.OPTIMIZATION,\r\n        priority: RecommendationPriority.HIGH,\r\n        title: 'Improve System Efficiency',\r\n        description: 'System efficiency is below optimal levels. Consider implementing efficiency improvements.',\r\n        expectedImpact: {\r\n          energySavings: 15,\r\n          costSavings: 2500,\r\n          performanceImprovement: 10,\r\n          emissionReduction: 1200,\r\n          reliabilityImprovement: 5\r\n        },\r\n        implementationCost: 5000,\r\n        paybackPeriod: 24,\r\n        implementationComplexity: 'moderate' as const,\r\n        requiredActions: [\r\n          'Replace filters with high-efficiency models',\r\n          'Seal ductwork leaks',\r\n          'Optimize fan speed control'\r\n        ],\r\n        timeline: '2-4 weeks'\r\n      });\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Perform uncertainty analysis on performance metrics\r\n   */\r\n  private static async performUncertaintyAnalysis(\r\n    performanceMetrics: PerformanceMetrics,\r\n    systemConfiguration: SystemConfiguration\r\n  ): Promise<UncertaintyAnalysis> {\r\n    // Simplified uncertainty analysis\r\n    return {\r\n      overallUncertainty: 0.1, // 10% overall uncertainty\r\n      metricUncertainties: [\r\n        {\r\n          metric: 'systemEfficiency',\r\n          uncertainty: 0.05,\r\n          sources: ['measurement error', 'calculation assumptions'],\r\n          confidenceLevel: 90\r\n        }\r\n      ],\r\n      sensitivityAnalysis: {\r\n        parameters: [\r\n          {\r\n            parameter: 'airflow',\r\n            sensitivity: 0.8,\r\n            impact: 'high' as const\r\n          }\r\n        ],\r\n        keyDrivers: ['airflow', 'pressure'],\r\n        uncertaintyContributors: ['measurement accuracy', 'model assumptions']\r\n      },\r\n      recommendations: [\r\n        'Improve measurement accuracy',\r\n        'Calibrate sensors regularly',\r\n        'Validate calculation models'\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0ab3351d35486dd2fc51b40b60c8eeb191be70fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_sd8kdgqk0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sd8kdgqk0();
cov_sd8kdgqk0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_sd8kdgqk0().s[1]++;
exports.SystemPerformanceAnalysisEngine = void 0;
const SystemAnalysisTypes_1 =
/* istanbul ignore next */
(cov_sd8kdgqk0().s[2]++, require("./types/SystemAnalysisTypes"));
const SystemPressureCalculator_1 =
/* istanbul ignore next */
(cov_sd8kdgqk0().s[3]++, require("./SystemPressureCalculator"));
/**
 * Main System Performance Analysis Engine
 *
 * Provides comprehensive performance analysis capabilities including:
 * - Real-time performance monitoring
 * - Trend analysis and forecasting
 * - Efficiency calculations and benchmarking
 * - Anomaly detection and alerting
 * - Performance recommendations
 */
class SystemPerformanceAnalysisEngine {
  /**
   * Perform comprehensive system performance analysis
   */
  static async analyzeSystemPerformance(systemConfiguration, analysisScope, historicalData) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[0]++;
    cov_sd8kdgqk0().s[4]++;
    try {
      const analysisId =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[5]++, this.generateAnalysisId(systemConfiguration.id));
      const timestamp =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[6]++, new Date());
      // Calculate current performance metrics
      const performanceMetrics =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[7]++, await this.calculatePerformanceMetrics(systemConfiguration, analysisScope));
      // Perform trend analysis if historical data is available
      const trendAnalysis =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[8]++,
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[1][0]++, historicalData) &&
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[1][1]++, historicalData.length > 0) ?
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[0][0]++, await this.performTrendAnalysis(historicalData, performanceMetrics)) :
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[0][1]++, this.createDefaultTrendAnalysis()));
      // Benchmark against similar systems
      const benchmarkComparison =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[9]++, await this.performBenchmarkComparison(systemConfiguration, performanceMetrics));
      // Analyze system efficiency
      const efficiencyAnalysis =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[10]++, await this.analyzeSystemEfficiency(systemConfiguration, performanceMetrics));
      // Detect performance alerts and anomalies
      const alertsAndWarnings =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[11]++, await this.detectPerformanceAlerts(performanceMetrics, historicalData));
      // Generate performance recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[12]++, await this.generatePerformanceRecommendations(performanceMetrics, efficiencyAnalysis, benchmarkComparison));
      // Perform uncertainty analysis
      const uncertaintyAnalysis =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[13]++, await this.performUncertaintyAnalysis(performanceMetrics, systemConfiguration));
      const analysis =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[14]++, {
        id: analysisId,
        systemId: systemConfiguration.id,
        analysisTimestamp: timestamp,
        performanceMetrics,
        trendAnalysis,
        benchmarkComparison,
        efficiencyAnalysis,
        alertsAndWarnings,
        recommendations,
        uncertaintyAnalysis
      });
      // Cache the analysis for future reference
      /* istanbul ignore next */
      cov_sd8kdgqk0().s[15]++;
      this.ANALYSIS_CACHE.set(analysisId, analysis);
      /* istanbul ignore next */
      cov_sd8kdgqk0().s[16]++;
      return analysis;
    } catch (error) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().s[17]++;
      throw new Error(`System performance analysis failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[2][1]++, 'Unknown error')}`);
    }
  }
  /**
   * Calculate comprehensive performance metrics for the system
   */
  static async calculatePerformanceMetrics(systemConfiguration, analysisScope) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[1]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[18]++, new Date());
    // Calculate system pressure using existing calculators
    const systemPressureResult =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[19]++, SystemPressureCalculator_1.SystemPressureCalculator.calculateEnhancedSystemPressure({
      segments: this.createDuctSegmentsFromConfig(systemConfiguration),
      systemType: systemConfiguration.systemType,
      designConditions: systemConfiguration.operatingConditions
    }));
    // Calculate fan performance metrics
    const fanPerformance =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[20]++, this.calculateFanPerformance(systemConfiguration, systemPressureResult.totalPressureLoss));
    // Calculate airflow metrics
    const airflowMetrics =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[21]++, this.calculateAirflowMetrics(systemConfiguration));
    // Calculate system efficiency metrics
    const efficiencyMetrics =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[22]++, this.calculateSystemEfficiencyMetrics(systemConfiguration, fanPerformance, systemPressureResult));
    // Calculate environmental metrics
    const environmentalMetrics =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[23]++, this.calculateEnvironmentalMetrics(systemConfiguration, fanPerformance));
    // Calculate system balance quality
    const balanceQuality =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[24]++, this.assessSystemBalance(systemConfiguration, airflowMetrics));
    const performanceMetrics =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[25]++, {
      // Pressure and Flow Metrics
      totalSystemPressure: this.createMeasurement(systemPressureResult.totalPressureLoss, 'in wg', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      staticPressure: this.createMeasurement(
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[3][0]++, systemPressureResult.staticPressure) ||
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[3][1]++, systemPressureResult.totalPressureLoss * 0.8), 'in wg', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      velocityPressure: this.createMeasurement(
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[4][0]++, systemPressureResult.velocityPressure) ||
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[4][1]++, systemPressureResult.totalPressureLoss * 0.2), 'in wg', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      totalAirflow: this.createMeasurement(airflowMetrics.totalAirflow, 'CFM', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      designAirflow: this.createMeasurement(systemConfiguration.designParameters.designAirflow, 'CFM', SystemAnalysisTypes_1.MeasurementSource.MANUFACTURER_DATA, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      airflowEfficiency: this.createMeasurement(airflowMetrics.efficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      // Fan Performance
      fanPower: this.createMeasurement(fanPerformance.power, 'kW', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      fanEfficiency: this.createMeasurement(fanPerformance.efficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      fanSpeed: this.createMeasurement(fanPerformance.speed, 'RPM', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      fanCurvePosition: fanPerformance.curvePosition,
      // System Efficiency
      systemEfficiency: this.createMeasurement(efficiencyMetrics.systemEfficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      transportEfficiency: this.createMeasurement(efficiencyMetrics.transportEfficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.HIGH, timestamp),
      distributionEfficiency: this.createMeasurement(efficiencyMetrics.distributionEfficiency, '%', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      // Environmental Metrics
      noiseLevel: this.createMeasurement(environmentalMetrics.noiseLevel, 'dBA', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      vibrationLevel: this.createMeasurement(environmentalMetrics.vibrationLevel, 'mm/s', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.LOW, timestamp),
      temperatureRise: this.createMeasurement(environmentalMetrics.temperatureRise, '°F', SystemAnalysisTypes_1.MeasurementSource.CALCULATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      // Filter and Component Performance
      filterPressureDrop: this.createMeasurement(environmentalMetrics.filterPressureDrop, 'in wg', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      coilPressureDrop: this.createMeasurement(environmentalMetrics.coilPressureDrop, 'in wg', SystemAnalysisTypes_1.MeasurementSource.ESTIMATED, SystemAnalysisTypes_1.QualityIndicator.MEDIUM, timestamp),
      dampersPosition: [],
      // Would be populated from actual system data
      // System Balance
      balanceQuality,
      flowDistribution: airflowMetrics.flowDistribution
    });
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[26]++;
    return performanceMetrics;
  }
  /**
   * Create a standardized measurement object
   */
  static createMeasurement(value, units, source, quality, timestamp, accuracy =
  /* istanbul ignore next */
  (cov_sd8kdgqk0().b[5][0]++, 0.95)) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[2]++;
    cov_sd8kdgqk0().s[27]++;
    return {
      value,
      units,
      accuracy,
      timestamp,
      source,
      qualityIndicator: quality,
      uncertaintyBounds: {
        lowerBound: value * (1 - (1 - accuracy)),
        upperBound: value * (1 + (1 - accuracy)),
        confidenceLevel: accuracy * 100,
        distributionType: 'normal'
      }
    };
  }
  /**
   * Calculate fan performance metrics
   */
  static calculateFanPerformance(systemConfiguration, systemPressure) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[3]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[28]++, systemConfiguration.designParameters.designAirflow);
    const designPressure =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[29]++, systemConfiguration.designParameters.designPressure);
    // Simplified fan performance calculation
    // In practice, this would use actual fan curves and manufacturer data
    const efficiency =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[30]++, Math.max(0.6, Math.min(0.9, 0.8 - (systemPressure - designPressure) * 0.05)));
    const power =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[31]++, designAirflow * systemPressure / (6356 * efficiency)); // HP
    const powerKW =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[32]++, power * 0.746); // Convert to kW
    const speed =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[33]++, 1800 * Math.sqrt(systemPressure / designPressure)); // Simplified speed calculation
    const curvePosition =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[34]++, {
      operatingPoint: {
        airflow: designAirflow,
        pressure: systemPressure,
        power: powerKW,
        efficiency: efficiency * 100,
        speed
      },
      designPoint: {
        airflow: designAirflow,
        pressure: designPressure,
        power: designAirflow * designPressure / (6356 * 0.8) * 0.746,
        efficiency: 80,
        speed: 1800
      },
      efficiencyAtOperating: efficiency * 100,
      efficiencyAtDesign: 80,
      surgeMargin: Math.max(0, (designAirflow * 0.7 - designAirflow) / designAirflow * 100),
      stallMargin: Math.max(0, (designAirflow * 1.3 - designAirflow) / designAirflow * 100),
      recommendedOperatingRange: {
        minAirflow: designAirflow * 0.7,
        maxAirflow: designAirflow * 1.3,
        minPressure: designPressure * 0.5,
        maxPressure: designPressure * 1.5
      }
    });
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[35]++;
    return {
      power: powerKW,
      efficiency: efficiency * 100,
      speed,
      curvePosition
    };
  }
  /**
   * Calculate airflow metrics and distribution
   */
  static calculateAirflowMetrics(systemConfiguration) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[4]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[36]++, systemConfiguration.designParameters.designAirflow);
    // Simplified airflow calculation
    // In practice, this would consider actual system measurements
    const totalAirflow =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[37]++, designAirflow * 0.95); // Assume 5% leakage
    const efficiency =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[38]++, totalAirflow / designAirflow * 100);
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[39]++;
    return {
      totalAirflow,
      efficiency,
      flowDistribution: {
        uniformityIndex: 0.85,
        // Simplified
        variationCoefficient: 0.15,
        zones: []
      }
    };
  }
  /**
   * Calculate system efficiency metrics
   */
  static calculateSystemEfficiencyMetrics(systemConfiguration, fanPerformance, systemPressureResult) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[5]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[40]++, systemConfiguration.designParameters.designAirflow);
    const designPressure =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[41]++, systemConfiguration.designParameters.designPressure);
    // Calculate various efficiency metrics
    const systemEfficiency =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[42]++, Math.min(95, fanPerformance.efficiency * 0.9)); // Account for system losses
    const transportEfficiency =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[43]++, Math.min(90, 100 - systemPressureResult.totalPressureLoss / designPressure * 10));
    const distributionEfficiency =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[44]++, Math.min(85, systemEfficiency * 0.9)); // Account for distribution losses
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[45]++;
    return {
      systemEfficiency,
      transportEfficiency,
      distributionEfficiency
    };
  }
  /**
   * Calculate environmental metrics
   */
  static calculateEnvironmentalMetrics(systemConfiguration, fanPerformance) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[6]++;
    const designAirflow =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[46]++, systemConfiguration.designParameters.designAirflow);
    // Simplified environmental calculations
    const velocity =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[47]++, designAirflow / 144); // Simplified velocity calculation
    const noiseLevel =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[48]++, 40 + 20 * Math.log10(velocity / 1000)); // Simplified noise model
    const vibrationLevel =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[49]++, Math.max(0.5, velocity / 2000)); // Simplified vibration model
    const temperatureRise =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[50]++, fanPerformance.power * 3412 / (designAirflow * 1.08)); // Fan heat rise
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[51]++;
    return {
      noiseLevel: Math.max(35, Math.min(65, noiseLevel)),
      vibrationLevel: Math.max(0.1, Math.min(5.0, vibrationLevel)),
      temperatureRise: Math.max(0.5, Math.min(5.0, temperatureRise)),
      filterPressureDrop: 0.5,
      // Typical clean filter
      coilPressureDrop: 0.8 // Typical coil pressure drop
    };
  }
  /**
   * Assess system balance quality
   */
  static assessSystemBalance(systemConfiguration, airflowMetrics) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[7]++;
    // Simplified balance assessment
    const flowVariation =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[52]++, 0.15); // 15% variation
    const pressureVariation =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[53]++, 0.12); // 12% variation
    const overallScore =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[54]++, Math.max(0, 100 - (flowVariation + pressureVariation) * 200));
    let balanceGrade;
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[55]++;
    if (overallScore >= 90) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[6][0]++;
      cov_sd8kdgqk0().s[56]++;
      balanceGrade = SystemAnalysisTypes_1.BalanceGrade.EXCELLENT;
    } else {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[6][1]++;
      cov_sd8kdgqk0().s[57]++;
      if (overallScore >= 80) {
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[7][0]++;
        cov_sd8kdgqk0().s[58]++;
        balanceGrade = SystemAnalysisTypes_1.BalanceGrade.GOOD;
      } else {
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[7][1]++;
        cov_sd8kdgqk0().s[59]++;
        if (overallScore >= 70) {
          /* istanbul ignore next */
          cov_sd8kdgqk0().b[8][0]++;
          cov_sd8kdgqk0().s[60]++;
          balanceGrade = SystemAnalysisTypes_1.BalanceGrade.ACCEPTABLE;
        } else {
          /* istanbul ignore next */
          cov_sd8kdgqk0().b[8][1]++;
          cov_sd8kdgqk0().s[61]++;
          if (overallScore >= 60) {
            /* istanbul ignore next */
            cov_sd8kdgqk0().b[9][0]++;
            cov_sd8kdgqk0().s[62]++;
            balanceGrade = SystemAnalysisTypes_1.BalanceGrade.POOR;
          } else {
            /* istanbul ignore next */
            cov_sd8kdgqk0().b[9][1]++;
            cov_sd8kdgqk0().s[63]++;
            balanceGrade = SystemAnalysisTypes_1.BalanceGrade.CRITICAL;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[64]++;
    return {
      overallScore,
      flowVariation,
      pressureVariation,
      balanceGrade,
      criticalZones: balanceGrade === SystemAnalysisTypes_1.BalanceGrade.CRITICAL ?
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[10][0]++, ['Zone 1', 'Zone 3']) :
      /* istanbul ignore next */
      (cov_sd8kdgqk0().b[10][1]++, []),
      balanceRecommendations: this.generateBalanceRecommendations(balanceGrade)
    };
  }
  /**
   * Generate balance recommendations based on grade
   */
  static generateBalanceRecommendations(grade) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[8]++;
    cov_sd8kdgqk0().s[65]++;
    switch (grade) {
      case SystemAnalysisTypes_1.BalanceGrade.CRITICAL:
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[11][0]++;
        cov_sd8kdgqk0().s[66]++;
        return ['Immediate system rebalancing required', 'Check for blocked dampers or ducts', 'Verify fan operation and capacity', 'Consider professional commissioning'];
      case SystemAnalysisTypes_1.BalanceGrade.POOR:
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[11][1]++;
        cov_sd8kdgqk0().s[67]++;
        return ['System rebalancing recommended', 'Adjust damper positions', 'Check for duct leakage', 'Verify design calculations'];
      case SystemAnalysisTypes_1.BalanceGrade.ACCEPTABLE:
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[11][2]++;
        cov_sd8kdgqk0().s[68]++;
        return ['Minor adjustments may improve performance', 'Monitor system performance trends', 'Consider seasonal adjustments'];
      default:
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[11][3]++;
        cov_sd8kdgqk0().s[69]++;
        return ['System balance is within acceptable limits'];
    }
  }
  /**
   * Create duct segments from system configuration
   */
  static createDuctSegmentsFromConfig(systemConfiguration) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[9]++;
    cov_sd8kdgqk0().s[70]++;
    // Simplified duct segment creation
    // In practice, this would parse the actual system configuration
    return [{
      id: 'main_supply',
      length: 100,
      diameter: 24,
      material: 'galvanized_steel',
      roughness: 0.0015,
      airflow: systemConfiguration.designParameters.designAirflow,
      fittings: []
    }];
  }
  /**
   * Generate unique analysis ID
   */
  static generateAnalysisId(systemId) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[10]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[71]++, Date.now());
    const random =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[72]++, Math.random().toString(36).substring(2, 8));
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[73]++;
    return `analysis_${systemId}_${timestamp}_${random}`;
  }
  /**
   * Create default trend analysis when no historical data is available
   */
  static createDefaultTrendAnalysis() {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[11]++;
    cov_sd8kdgqk0().s[74]++;
    return {
      timeRange: {
        startDate: new Date(),
        endDate: new Date(),
        duration: 0,
        units: 'days'
      },
      trendDirection: SystemAnalysisTypes_1.TrendDirection.STABLE,
      trendMagnitude: 0,
      seasonalPatterns: [],
      anomalies: [],
      predictiveAnalysis: {
        forecastHorizon: 12,
        predictedPerformance: [],
        confidenceInterval: {
          lowerBound: 0,
          upperBound: 0,
          confidenceLevel: 0
        },
        predictionModel: {
          modelType: 'linear_regression',
          accuracy: 0,
          lastTrainingDate: new Date(),
          dataPoints: 0,
          validationScore: 0
        },
        keyFactors: [],
        scenarios: []
      },
      degradationRate: {
        overallDegradationRate: 2.0,
        // 2% per year typical
        componentDegradation: [],
        degradationFactors: [],
        maintenanceImpact: {
          preventiveMaintenance: {
            performanceImpact: 5,
            lifespanImpact: 2,
            costImpact: 1000
          },
          correctiveMaintenance: {
            performanceImpact: -10,
            lifespanImpact: -1,
            costImpact: 5000
          },
          deferredMaintenance: {
            performanceImpact: -15,
            lifespanImpact: -3,
            costImpact: 10000
          }
        },
        projectedLifespan: {
          currentAge: 0,
          designLife: 20,
          projectedLife: 18,
          confidenceLevel: 80,
          keyAssumptions: ['Regular maintenance', 'Normal operating conditions']
        }
      }
    };
  }
  /**
   * Perform trend analysis on historical performance data
   */
  static async performTrendAnalysis(historicalData, currentMetrics) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[12]++;
    cov_sd8kdgqk0().s[75]++;
    if (historicalData.length < 2) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[12][0]++;
      cov_sd8kdgqk0().s[76]++;
      return this.createDefaultTrendAnalysis();
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[12][1]++;
    }
    // Calculate trend direction and magnitude
    const trendAnalysis =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[77]++, this.calculateTrendDirection(historicalData));
    // Detect seasonal patterns
    const seasonalPatterns =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[78]++, this.detectSeasonalPatterns(historicalData));
    // Detect anomalies
    const anomalies =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[79]++, this.detectAnomalies(historicalData, currentMetrics));
    // Generate predictive analysis
    const predictiveAnalysis =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[80]++, this.generatePredictiveAnalysis(historicalData));
    // Calculate degradation rate
    const degradationRate =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[81]++, this.calculateDegradationRate(historicalData));
    const timeRange =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[82]++, {
      startDate: historicalData[0].totalSystemPressure.timestamp,
      endDate: currentMetrics.totalSystemPressure.timestamp,
      duration: historicalData.length,
      units: 'days'
    });
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[83]++;
    return {
      timeRange,
      trendDirection: trendAnalysis.direction,
      trendMagnitude: trendAnalysis.magnitude,
      seasonalPatterns,
      anomalies,
      predictiveAnalysis,
      degradationRate
    };
  }
  /**
   * Calculate trend direction from historical data
   */
  static calculateTrendDirection(historicalData) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[13]++;
    cov_sd8kdgqk0().s[84]++;
    if (historicalData.length < 3) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[13][0]++;
      cov_sd8kdgqk0().s[85]++;
      return {
        direction: SystemAnalysisTypes_1.TrendDirection.STABLE,
        magnitude: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[13][1]++;
    }
    // Simple linear regression on system efficiency
    const efficiencyValues =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[86]++, historicalData.map(data => {
      /* istanbul ignore next */
      cov_sd8kdgqk0().f[14]++;
      cov_sd8kdgqk0().s[87]++;
      return data.systemEfficiency.value;
    }));
    const n =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[88]++, efficiencyValues.length);
    const x =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[89]++, Array.from({
      length: n
    }, (_, i) => {
      /* istanbul ignore next */
      cov_sd8kdgqk0().f[15]++;
      cov_sd8kdgqk0().s[90]++;
      return i;
    }));
    const sumX =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[91]++, x.reduce((a, b) => {
      /* istanbul ignore next */
      cov_sd8kdgqk0().f[16]++;
      cov_sd8kdgqk0().s[92]++;
      return a + b;
    }, 0));
    const sumY =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[93]++, efficiencyValues.reduce((a, b) => {
      /* istanbul ignore next */
      cov_sd8kdgqk0().f[17]++;
      cov_sd8kdgqk0().s[94]++;
      return a + b;
    }, 0));
    const sumXY =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[95]++, x.reduce((sum, xi, i) => {
      /* istanbul ignore next */
      cov_sd8kdgqk0().f[18]++;
      cov_sd8kdgqk0().s[96]++;
      return sum + xi * efficiencyValues[i];
    }, 0));
    const sumXX =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[97]++, x.reduce((sum, xi) => {
      /* istanbul ignore next */
      cov_sd8kdgqk0().f[19]++;
      cov_sd8kdgqk0().s[98]++;
      return sum + xi * xi;
    }, 0));
    const slope =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[99]++, (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX));
    const magnitude =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[100]++, Math.abs(slope));
    let direction;
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[101]++;
    if (magnitude < 0.1) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[14][0]++;
      cov_sd8kdgqk0().s[102]++;
      direction = SystemAnalysisTypes_1.TrendDirection.STABLE;
    } else {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[14][1]++;
      cov_sd8kdgqk0().s[103]++;
      if (slope > 0) {
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[15][0]++;
        cov_sd8kdgqk0().s[104]++;
        direction = SystemAnalysisTypes_1.TrendDirection.IMPROVING;
      } else {
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[15][1]++;
        cov_sd8kdgqk0().s[105]++;
        direction = SystemAnalysisTypes_1.TrendDirection.DEGRADING;
      }
    }
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[106]++;
    return {
      direction,
      magnitude
    };
  }
  /**
   * Detect seasonal patterns in performance data
   */
  static detectSeasonalPatterns(historicalData) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[20]++;
    cov_sd8kdgqk0().s[107]++;
    // Simplified seasonal pattern detection
    // In practice, this would use more sophisticated time series analysis
    return [{
      season: 'summer',
      averagePerformance: 85,
      performanceVariation: 5,
      typicalIssues: ['Higher cooling loads', 'Increased fan power']
    }, {
      season: 'winter',
      averagePerformance: 88,
      performanceVariation: 3,
      typicalIssues: ['Filter loading', 'Heating coil pressure drop']
    }];
  }
  /**
   * Detect performance anomalies
   */
  static detectAnomalies(historicalData, currentMetrics) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[21]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[108]++, []);
    // Check for sudden efficiency drop
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[109]++;
    if (historicalData.length > 0) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[16][0]++;
      const lastEfficiency =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[110]++, historicalData[historicalData.length - 1].systemEfficiency.value);
      const currentEfficiency =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[111]++, currentMetrics.systemEfficiency.value);
      const efficiencyDrop =
      /* istanbul ignore next */
      (cov_sd8kdgqk0().s[112]++, lastEfficiency - currentEfficiency);
      /* istanbul ignore next */
      cov_sd8kdgqk0().s[113]++;
      if (efficiencyDrop > 5) {
        /* istanbul ignore next */
        cov_sd8kdgqk0().b[17][0]++;
        cov_sd8kdgqk0().s[114]++;
        // 5% drop threshold
        anomalies.push({
          id: `anomaly_${Date.now()}`,
          detectionTimestamp: new Date(),
          anomalyType: SystemAnalysisTypes_1.AnomalyType.SUDDEN_CHANGE,
          severity: efficiencyDrop > 10 ?
          /* istanbul ignore next */
          (cov_sd8kdgqk0().b[18][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_sd8kdgqk0().b[18][1]++, 'high'),
          affectedMetrics: ['systemEfficiency'],
          deviationMagnitude: efficiencyDrop,
          duration: 1,
          possibleCauses: [{
            cause: 'Filter blockage',
            probability: 60,
            category: 'maintenance_issue',
            diagnosticSteps: ['Check filter pressure drop', 'Inspect filter condition']
          }, {
            cause: 'Fan belt slippage',
            probability: 30,
            category: 'equipment_failure',
            diagnosticSteps: ['Check fan belt tension', 'Inspect motor operation']
          }],
          recommendedActions: ['Replace or clean filters', 'Check fan operation', 'Verify damper positions'],
          resolved: false
        });
      } else
      /* istanbul ignore next */
      {
        cov_sd8kdgqk0().b[17][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[16][1]++;
    }
    cov_sd8kdgqk0().s[115]++;
    return anomalies;
  }
  /**
   * Generate predictive analysis
   */
  static generatePredictiveAnalysis(historicalData) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[22]++;
    cov_sd8kdgqk0().s[116]++;
    // Simplified predictive analysis
    // In practice, this would use machine learning models
    return {
      forecastHorizon: 12,
      predictedPerformance: [{
        metric: 'systemEfficiency',
        currentValue: 85,
        predictedValue: 83,
        changePercent: -2.4,
        timeToTarget: 6
      }],
      confidenceInterval: {
        lowerBound: 80,
        upperBound: 86,
        confidenceLevel: 85
      },
      predictionModel: {
        modelType: 'time_series',
        accuracy: 85,
        lastTrainingDate: new Date(),
        dataPoints: historicalData.length,
        validationScore: 0.85
      },
      keyFactors: [{
        factor: 'Filter condition',
        impact: 40,
        controllable: true,
        mitigationStrategies: ['Regular filter replacement', 'Pressure monitoring']
      }],
      scenarios: []
    };
  }
  /**
   * Calculate system degradation rate
   */
  static calculateDegradationRate(historicalData) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[23]++;
    cov_sd8kdgqk0().s[117]++;
    // Simplified degradation calculation
    return {
      overallDegradationRate: 2.5,
      // 2.5% per year
      componentDegradation: [{
        componentId: 'main_fan',
        componentType: 'fan',
        degradationRate: 1.5,
        currentCondition: 92,
        estimatedRemainingLife: 12,
        replacementThreshold: 70
      }],
      degradationFactors: [{
        factor: 'Operating hours',
        impact: 50,
        controllable: false,
        mitigationStrategies: ['Optimize operating schedule']
      }, {
        factor: 'Maintenance quality',
        impact: 30,
        controllable: true,
        mitigationStrategies: ['Preventive maintenance program', 'Staff training']
      }],
      maintenanceImpact: {
        preventiveMaintenance: {
          performanceImpact: 5,
          lifespanImpact: 2,
          costImpact: 1000
        },
        correctiveMaintenance: {
          performanceImpact: -10,
          lifespanImpact: -1,
          costImpact: 5000
        },
        deferredMaintenance: {
          performanceImpact: -15,
          lifespanImpact: -3,
          costImpact: 10000
        }
      },
      projectedLifespan: {
        currentAge: 3,
        designLife: 20,
        projectedLife: 18,
        confidenceLevel: 80,
        keyAssumptions: ['Regular maintenance', 'Normal operating conditions']
      }
    };
  }
  /**
   * Perform benchmark comparison against similar systems
   */
  static async performBenchmarkComparison(systemConfiguration, performanceMetrics) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[24]++;
    // Simplified benchmark comparison
    // In practice, this would query a database of similar systems
    const systemEfficiency =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[118]++, performanceMetrics.systemEfficiency.value);
    const industryAverage =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[119]++, 82); // Typical industry average
    const bestInClass =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[120]++, 92); // Best in class performance
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[121]++;
    return {
      benchmarkType: SystemAnalysisTypes_1.BenchmarkType.INDUSTRY_AVERAGE,
      benchmarkSource: 'ASHRAE Performance Database',
      systemPerformance: systemEfficiency,
      benchmarkValue: industryAverage,
      percentile: this.calculatePercentile(systemEfficiency, industryAverage),
      performanceGap: industryAverage - systemEfficiency,
      improvementPotential: bestInClass - systemEfficiency,
      similarSystems: [{
        systemId: 'similar_system_1',
        systemName: 'Office Building HVAC',
        performanceMetric: 84,
        systemCharacteristics: {
          size: 'medium',
          age: 5,
          buildingType: 'office',
          climateZone: '4A',
          operatingHours: 2500
        },
        performanceDifference: 84 - systemEfficiency
      }]
    };
  }
  /**
   * Calculate percentile ranking
   */
  static calculatePercentile(value, average) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[25]++;
    // Simplified percentile calculation
    // Assumes normal distribution with standard deviation of 8
    const standardDeviation =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[122]++, 8);
    const zScore =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[123]++, (value - average) / standardDeviation);
    // Convert z-score to percentile (simplified)
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[124]++;
    if (zScore >= 2) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[19][0]++;
      cov_sd8kdgqk0().s[125]++;
      return 97;
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[19][1]++;
    }
    cov_sd8kdgqk0().s[126]++;
    if (zScore >= 1) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[20][0]++;
      cov_sd8kdgqk0().s[127]++;
      return 84;
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[20][1]++;
    }
    cov_sd8kdgqk0().s[128]++;
    if (zScore >= 0) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[21][0]++;
      cov_sd8kdgqk0().s[129]++;
      return 50 + zScore * 34;
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[21][1]++;
    }
    cov_sd8kdgqk0().s[130]++;
    if (zScore >= -1) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[22][0]++;
      cov_sd8kdgqk0().s[131]++;
      return 50 + zScore * 34;
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[22][1]++;
    }
    cov_sd8kdgqk0().s[132]++;
    if (zScore >= -2) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[23][0]++;
      cov_sd8kdgqk0().s[133]++;
      return 16;
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[23][1]++;
    }
    cov_sd8kdgqk0().s[134]++;
    return 3;
  }
  /**
   * Analyze system efficiency in detail
   */
  static async analyzeSystemEfficiency(systemConfiguration, performanceMetrics) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[26]++;
    cov_sd8kdgqk0().s[135]++;
    // Simplified efficiency analysis
    return {
      overallEfficiency: {
        value: performanceMetrics.systemEfficiency.value,
        units: '%',
        calculationMethod: 'calculated',
        accuracy: 0.9,
        timestamp: new Date()
      },
      componentEfficiencies: [{
        componentId: 'main_fan',
        componentType: 'fan',
        efficiency: performanceMetrics.fanEfficiency.value,
        ratedEfficiency: 85,
        degradationFactor: 0.95,
        maintenanceStatus: 'good'
      }],
      efficiencyTrends: [],
      efficiencyLosses: [],
      improvementOpportunities: [],
      benchmarkComparison: {
        benchmarkType: SystemAnalysisTypes_1.BenchmarkType.INDUSTRY_AVERAGE,
        benchmarkSource: 'Industry Standards',
        systemPerformance: performanceMetrics.systemEfficiency.value,
        benchmarkValue: 82,
        percentile: 65,
        performanceGap: 0,
        improvementPotential: 10,
        similarSystems: []
      }
    };
  }
  /**
   * Detect performance alerts and warnings
   */
  static async detectPerformanceAlerts(performanceMetrics, historicalData) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[27]++;
    const alerts =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[136]++, []);
    // Check efficiency threshold
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[137]++;
    if (performanceMetrics.systemEfficiency.value < 75) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[24][0]++;
      cov_sd8kdgqk0().s[138]++;
      alerts.push({
        id: `alert_${Date.now()}_efficiency`,
        alertType: SystemAnalysisTypes_1.AlertType.THRESHOLD_EXCEEDED,
        severity: SystemAnalysisTypes_1.AlertSeverity.HIGH,
        metric: 'systemEfficiency',
        currentValue: performanceMetrics.systemEfficiency.value,
        thresholdValue: 75,
        message: 'System efficiency below acceptable threshold',
        timestamp: new Date(),
        acknowledged: false,
        recommendedActions: ['Check filter condition', 'Verify fan operation', 'Inspect ductwork for leaks']
      });
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[24][1]++;
    }
    // Check pressure threshold
    cov_sd8kdgqk0().s[139]++;
    if (performanceMetrics.totalSystemPressure.value > 4.0) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[25][0]++;
      cov_sd8kdgqk0().s[140]++;
      alerts.push({
        id: `alert_${Date.now()}_pressure`,
        alertType: SystemAnalysisTypes_1.AlertType.THRESHOLD_EXCEEDED,
        severity: SystemAnalysisTypes_1.AlertSeverity.MEDIUM,
        metric: 'totalSystemPressure',
        currentValue: performanceMetrics.totalSystemPressure.value,
        thresholdValue: 4.0,
        message: 'System pressure higher than expected',
        timestamp: new Date(),
        acknowledged: false,
        recommendedActions: ['Check for blocked ducts', 'Verify damper positions', 'Inspect filters']
      });
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[25][1]++;
    }
    cov_sd8kdgqk0().s[141]++;
    return alerts;
  }
  /**
   * Generate performance recommendations
   */
  static async generatePerformanceRecommendations(performanceMetrics, efficiencyAnalysis, benchmarkComparison) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[28]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_sd8kdgqk0().s[142]++, []);
    // Efficiency improvement recommendation
    /* istanbul ignore next */
    cov_sd8kdgqk0().s[143]++;
    if (performanceMetrics.systemEfficiency.value < 85) {
      /* istanbul ignore next */
      cov_sd8kdgqk0().b[26][0]++;
      cov_sd8kdgqk0().s[144]++;
      recommendations.push({
        id: `rec_${Date.now()}_efficiency`,
        type: SystemAnalysisTypes_1.RecommendationType.OPTIMIZATION,
        priority: SystemAnalysisTypes_1.RecommendationPriority.HIGH,
        title: 'Improve System Efficiency',
        description: 'System efficiency is below optimal levels. Consider implementing efficiency improvements.',
        expectedImpact: {
          energySavings: 15,
          costSavings: 2500,
          performanceImprovement: 10,
          emissionReduction: 1200,
          reliabilityImprovement: 5
        },
        implementationCost: 5000,
        paybackPeriod: 24,
        implementationComplexity: 'moderate',
        requiredActions: ['Replace filters with high-efficiency models', 'Seal ductwork leaks', 'Optimize fan speed control'],
        timeline: '2-4 weeks'
      });
    } else
    /* istanbul ignore next */
    {
      cov_sd8kdgqk0().b[26][1]++;
    }
    cov_sd8kdgqk0().s[145]++;
    return recommendations;
  }
  /**
   * Perform uncertainty analysis on performance metrics
   */
  static async performUncertaintyAnalysis(performanceMetrics, systemConfiguration) {
    /* istanbul ignore next */
    cov_sd8kdgqk0().f[29]++;
    cov_sd8kdgqk0().s[146]++;
    // Simplified uncertainty analysis
    return {
      overallUncertainty: 0.1,
      // 10% overall uncertainty
      metricUncertainties: [{
        metric: 'systemEfficiency',
        uncertainty: 0.05,
        sources: ['measurement error', 'calculation assumptions'],
        confidenceLevel: 90
      }],
      sensitivityAnalysis: {
        parameters: [{
          parameter: 'airflow',
          sensitivity: 0.8,
          impact: 'high'
        }],
        keyDrivers: ['airflow', 'pressure'],
        uncertaintyContributors: ['measurement accuracy', 'model assumptions']
      },
      recommendations: ['Improve measurement accuracy', 'Calibrate sensors regularly', 'Validate calculation models']
    };
  }
}
/* istanbul ignore next */
cov_sd8kdgqk0().s[147]++;
exports.SystemPerformanceAnalysisEngine = SystemPerformanceAnalysisEngine;
/* istanbul ignore next */
cov_sd8kdgqk0().s[148]++;
SystemPerformanceAnalysisEngine.VERSION = '3.0.0';
/* istanbul ignore next */
cov_sd8kdgqk0().s[149]++;
SystemPerformanceAnalysisEngine.ANALYSIS_CACHE = new Map();
/* istanbul ignore next */
cov_sd8kdgqk0().s[150]++;
SystemPerformanceAnalysisEngine.BENCHMARK_DATABASE = new Map();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,