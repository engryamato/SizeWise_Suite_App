b015ff935554ebcd08a3cca4c82b43f2
"use strict";

/**
 * System Optimization Type Definitions for Phase 3 Priority 2
 *
 * Comprehensive TypeScript interfaces for dynamic system optimization including:
 * - Multi-objective optimization problems
 * - Constraint handling and validation
 * - Optimization algorithms and parameters
 * - System configuration and variables
 * - Performance metrics and results
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_7m72j7cf8() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/types/SystemOptimizationTypes.ts";
  var hash = "df6937a81319633b23d254a2c6bdc13c535a12d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/types/SystemOptimizationTypes.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 148
        }
      },
      "2": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 30,
          column: 90
        }
      },
      "3": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 79
        }
      },
      "4": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 89
        }
      },
      "5": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 73
        }
      },
      "6": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 75
        }
      },
      "7": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 73
        }
      },
      "8": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 75
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 87
        }
      },
      "11": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 41,
          column: 90
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 73
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 67
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 79
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "19": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "20": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 52,
          column: 69
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 56
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 56
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "24": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 60
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 58
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 70
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 74
        }
      },
      "29": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "30": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 44
        }
      },
      "31": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 50
        }
      },
      "32": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "33": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 56
        }
      },
      "34": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 44
        }
      },
      "35": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 66
        }
      },
      "36": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 50
        }
      },
      "37": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 66
        }
      },
      "38": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 74,
          column: 81
        }
      },
      "39": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 54
        }
      },
      "40": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 56
        }
      },
      "41": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "42": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 50
        }
      },
      "43": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "44": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 72
        }
      },
      "45": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 42
        }
      },
      "46": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 1
          },
          end: {
            line: 21,
            column: 2
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 1
          },
          end: {
            line: 32,
            column: 2
          }
        },
        loc: {
          start: {
            line: 32,
            column: 34
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 1
          },
          end: {
            line: 43,
            column: 2
          }
        },
        loc: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 1
          },
          end: {
            line: 54,
            column: 2
          }
        },
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 1
          },
          end: {
            line: 65,
            column: 2
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 65
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 3
          },
          end: {
            line: 30,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 3
          },
          end: {
            line: 30,
            column: 24
          }
        }, {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 87
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 3
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 3
          },
          end: {
            line: 41,
            column: 24
          }
        }, {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 41,
            column: 87
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 3
          },
          end: {
            line: 52,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 3
          },
          end: {
            line: 52,
            column: 17
          }
        }, {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 66
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 3
          },
          end: {
            line: 63,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 3
          },
          end: {
            line: 63,
            column: 15
          }
        }, {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 63,
            column: 60
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 3
          },
          end: {
            line: 74,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 3
          },
          end: {
            line: 74,
            column: 21
          }
        }, {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 78
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/types/SystemOptimizationTypes.ts",
      mappings: ";AAAA;;;;;;;;;;;;GAYG;;;AAEH,+EAA+E;AAC/E,0BAA0B;AAC1B,+EAA+E;AAE/E,IAAY,qBASX;AATD,WAAY,qBAAqB;IAC/B,0EAAiD,CAAA;IACjD,oFAA2D,CAAA;IAC3D,oEAA2C,CAAA;IAC3C,sEAA6C,CAAA;IAC7C,oEAA2C,CAAA;IAC3C,sEAA6C,CAAA;IAC7C,0EAAiD,CAAA;IACjD,kFAAyD,CAAA;AAC3D,CAAC,EATW,qBAAqB,qCAArB,qBAAqB,QAShC;AAED,IAAY,qBASX;AATD,WAAY,qBAAqB;IAC/B,gEAAuC,CAAA;IACvC,oEAA2C,CAAA;IAC3C,0DAAiC,CAAA;IACjC,8DAAqC,CAAA;IACrC,0EAAiD,CAAA;IACjD,kEAAyC,CAAA;IACzC,4CAAmB,CAAA;IACnB,oEAA2C,CAAA;AAC7C,CAAC,EATW,qBAAqB,qCAArB,qBAAqB,QAShC;AAED,IAAY,cASX;AATD,WAAY,cAAc;IACxB,mDAAiC,CAAA;IACjC,mDAAiC,CAAA;IACjC,6CAA2B,CAAA;IAC3B,uDAAqC,CAAA;IACrC,qDAAmC,CAAA;IACnC,qDAAmC,CAAA;IACnC,iEAA+C,CAAA;IAC/C,qEAAmD,CAAA;AACrD,CAAC,EATW,cAAc,8BAAd,cAAc,QASzB;AAED,IAAY,YASX;AATD,WAAY,YAAY;IACtB,uCAAuB,CAAA;IACvB,6CAA6B,CAAA;IAC7B,+CAA+B,CAAA;IAC/B,mDAAmC,CAAA;IACnC,uCAAuB,CAAA;IACvB,6DAA6C,CAAA;IAC7C,6CAA6B,CAAA;IAC7B,6DAA6C,CAAA;AAC/C,CAAC,EATW,YAAY,4BAAZ,YAAY,QASvB;AAED,IAAY,kBASX;AATD,WAAY,kBAAkB;IAC5B,iDAA2B,CAAA;IAC3B,mDAA6B,CAAA;IAC7B,yCAAmB,CAAA;IACnB,6CAAuB,CAAA;IACvB,uDAAiC,CAAA;IACjC,mEAA6C,CAAA;IAC7C,qCAAe,CAAA;IACf,6CAAuB,CAAA;AACzB,CAAC,EATW,kBAAkB,kCAAlB,kBAAkB,QAS7B",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/types/SystemOptimizationTypes.ts"],
      sourcesContent: ["/**\n * System Optimization Type Definitions for Phase 3 Priority 2\n * \n * Comprehensive TypeScript interfaces for dynamic system optimization including:\n * - Multi-objective optimization problems\n * - Constraint handling and validation\n * - Optimization algorithms and parameters\n * - System configuration and variables\n * - Performance metrics and results\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\n// ============================================================================\n// Core Optimization Enums\n// ============================================================================\n\nexport enum OptimizationObjective {\n  MINIMIZE_PRESSURE_LOSS = 'minimize_pressure_loss',\n  MINIMIZE_ENERGY_CONSUMPTION = 'minimize_energy_consumption',\n  MINIMIZE_TOTAL_COST = 'minimize_total_cost',\n  MINIMIZE_NOISE_LEVEL = 'minimize_noise_level',\n  MAXIMIZE_EFFICIENCY = 'maximize_efficiency',\n  MINIMIZE_SPACE_USAGE = 'minimize_space_usage',\n  MINIMIZE_MATERIAL_COST = 'minimize_material_cost',\n  MINIMIZE_INSTALLATION_TIME = 'minimize_installation_time'\n}\n\nexport enum OptimizationAlgorithm {\n  GENETIC_ALGORITHM = 'genetic_algorithm',\n  SIMULATED_ANNEALING = 'simulated_annealing',\n  PARTICLE_SWARM = 'particle_swarm',\n  GRADIENT_DESCENT = 'gradient_descent',\n  DIFFERENTIAL_EVOLUTION = 'differential_evolution',\n  MULTI_OBJECTIVE_GA = 'multi_objective_ga',\n  NSGA_II = 'nsga_ii',\n  HYBRID_OPTIMIZATION = 'hybrid_optimization'\n}\n\nexport enum ConstraintType {\n  VELOCITY_LIMIT = 'velocity_limit',\n  PRESSURE_LIMIT = 'pressure_limit',\n  NOISE_LIMIT = 'noise_limit',\n  SPACE_CONSTRAINT = 'space_constraint',\n  COST_CONSTRAINT = 'cost_constraint',\n  CODE_COMPLIANCE = 'code_compliance',\n  MATERIAL_AVAILABILITY = 'material_availability',\n  INSTALLATION_CONSTRAINT = 'installation_constraint'\n}\n\nexport enum VariableType {\n  DUCT_SIZE = 'duct_size',\n  FITTING_TYPE = 'fitting_type',\n  MATERIAL_TYPE = 'material_type',\n  DAMPER_POSITION = 'damper_position',\n  FAN_SPEED = 'fan_speed',\n  SYSTEM_CONFIGURATION = 'system_configuration',\n  ROUTING_PATH = 'routing_path',\n  INSULATION_THICKNESS = 'insulation_thickness'\n}\n\nexport enum OptimizationStatus {\n  NOT_STARTED = 'not_started',\n  INITIALIZING = 'initializing',\n  RUNNING = 'running',\n  CONVERGED = 'converged',\n  MAX_ITERATIONS = 'max_iterations',\n  CONSTRAINT_VIOLATION = 'constraint_violation',\n  ERROR = 'error',\n  CANCELLED = 'cancelled'\n}\n\n// ============================================================================\n// Optimization Variables and Bounds\n// ============================================================================\n\nexport interface OptimizationVariable {\n  id: string;\n  name: string;\n  type: VariableType;\n  description: string;\n  currentValue: number | string;\n  bounds: VariableBounds;\n  discreteValues?: (number | string)[];\n  units?: string;\n  precision?: number;\n  dependencies?: VariableDependency[];\n}\n\nexport interface VariableBounds {\n  minimum: number | string;\n  maximum: number | string;\n  step?: number;\n  allowedValues?: (number | string)[];\n  constraints?: BoundConstraint[];\n}\n\nexport interface BoundConstraint {\n  condition: string;\n  minValue?: number | string;\n  maxValue?: number | string;\n  description: string;\n}\n\nexport interface VariableDependency {\n  dependentVariableId: string;\n  relationship: 'linear' | 'inverse' | 'custom';\n  coefficient?: number;\n  customFunction?: string;\n  description: string;\n}\n\n// ============================================================================\n// Optimization Constraints\n// ============================================================================\n\nexport interface OptimizationConstraint {\n  id: string;\n  name: string;\n  type: ConstraintType;\n  description: string;\n  constraintFunction: ConstraintFunction;\n  tolerance: number;\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  penalty?: number;\n  active: boolean;\n}\n\nexport interface ConstraintFunction {\n  expression: string;\n  variables: string[];\n  parameters?: { [key: string]: number };\n  evaluationMethod: 'analytical' | 'numerical' | 'simulation';\n}\n\nexport interface ConstraintViolation {\n  constraintId: string;\n  violationType: 'boundary' | 'equality' | 'inequality';\n  currentValue: number;\n  requiredValue: number;\n  severity: 'minor' | 'major' | 'critical';\n  penalty: number;\n}\n\n// ============================================================================\n// Objective Functions\n// ============================================================================\n\nexport interface ObjectiveFunction {\n  id: string;\n  objective: OptimizationObjective;\n  weight: number;\n  description: string;\n  evaluationFunction: (variables: OptimizationVariable[]) => number;\n  units: string;\n  targetValue?: number;\n  tolerance?: number;\n}\n\nexport interface MultiObjectiveFunction {\n  objectives: ObjectiveFunction[];\n  aggregationMethod: 'weighted_sum' | 'pareto_optimal' | 'lexicographic' | 'goal_programming';\n  weights?: number[];\n  paretoSettings?: ParetoSettings;\n}\n\nexport interface ParetoSettings {\n  populationSize: number;\n  maxGenerations: number;\n  crossoverRate: number;\n  mutationRate: number;\n  eliteSize: number;\n  diversityMaintenance: boolean;\n}\n\n// ============================================================================\n// System Configuration\n// ============================================================================\n\nexport interface SystemConfiguration {\n  id: string;\n  name: string;\n  description: string;\n  systemType: 'supply' | 'return' | 'exhaust' | 'mixed';\n  segments: SystemSegment[];\n  designConditions: DesignConditions;\n  performanceRequirements: PerformanceRequirements;\n  constraints: SystemConstraints;\n}\n\nexport interface SystemSegment {\n  id: string;\n  segmentType: 'duct' | 'fitting' | 'equipment' | 'terminal';\n  geometry: SegmentGeometry;\n  material: MaterialProperties;\n  flowConditions: FlowConditions;\n  optimizationVariables: string[];\n  fixedParameters: { [key: string]: any };\n}\n\nexport interface SegmentGeometry {\n  shape: 'rectangular' | 'round' | 'oval' | 'custom';\n  dimensions: DimensionSet;\n  length?: number;\n  orientation?: number;\n  position?: Position3D;\n}\n\nexport interface DimensionSet {\n  width?: number;\n  height?: number;\n  diameter?: number;\n  majorAxis?: number;\n  minorAxis?: number;\n  customDimensions?: { [key: string]: number };\n}\n\nexport interface Position3D {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface MaterialProperties {\n  type: string;\n  roughness: number;\n  density: number;\n  thermalConductivity?: number;\n  cost?: number;\n  availability?: 'standard' | 'special_order' | 'custom';\n}\n\nexport interface FlowConditions {\n  volumeFlow: number;\n  velocity: number;\n  pressure: number;\n  temperature: number;\n  density: number;\n  viscosity: number;\n}\n\nexport interface DesignConditions {\n  temperature: number;\n  pressure: number;\n  humidity: number;\n  elevation: number;\n  seasonalVariation?: boolean;\n  operatingSchedule?: OperatingSchedule;\n}\n\nexport interface OperatingSchedule {\n  dailyProfile: HourlyProfile[];\n  weeklyPattern: DailyPattern[];\n  seasonalAdjustments: SeasonalAdjustment[];\n}\n\nexport interface HourlyProfile {\n  hour: number;\n  loadFactor: number;\n  temperatureAdjustment: number;\n}\n\nexport interface DailyPattern {\n  dayOfWeek: number;\n  profileId: string;\n  specialConditions?: string[];\n}\n\nexport interface SeasonalAdjustment {\n  season: 'spring' | 'summer' | 'fall' | 'winter';\n  temperatureRange: [number, number];\n  humidityRange: [number, number];\n  loadAdjustment: number;\n}\n\nexport interface PerformanceRequirements {\n  maxPressureLoss: number;\n  maxVelocity: number;\n  maxNoiseLevel: number;\n  minEfficiency: number;\n  targetFlowRates: { [zoneId: string]: number };\n  balancingTolerance: number;\n}\n\nexport interface SystemConstraints {\n  spaceConstraints: SpaceConstraint[];\n  codeRequirements: CodeRequirement[];\n  budgetConstraints: BudgetConstraint[];\n  installationConstraints: InstallationConstraint[];\n}\n\nexport interface SpaceConstraint {\n  area: BoundingBox;\n  maxDuctSize: DimensionSet;\n  clearanceRequirements: number;\n  accessRequirements: AccessRequirement[];\n}\n\nexport interface BoundingBox {\n  minX: number;\n  maxX: number;\n  minY: number;\n  maxY: number;\n  minZ: number;\n  maxZ: number;\n}\n\nexport interface AccessRequirement {\n  purpose: 'maintenance' | 'inspection' | 'installation';\n  minimumClearance: number;\n  frequency: 'daily' | 'weekly' | 'monthly' | 'annual';\n}\n\nexport interface CodeRequirement {\n  code: 'SMACNA' | 'ASHRAE' | 'IMC' | 'UMC' | 'local';\n  section: string;\n  requirement: string;\n  complianceCheck: (system: SystemConfiguration) => boolean;\n}\n\nexport interface BudgetConstraint {\n  category: 'material' | 'labor' | 'equipment' | 'total';\n  maxCost: number;\n  currency: string;\n  contingency: number;\n}\n\nexport interface InstallationConstraint {\n  sequenceRequirements: string[];\n  equipmentRequirements: string[];\n  timeConstraints: TimeConstraint[];\n  skillRequirements: SkillRequirement[];\n}\n\nexport interface TimeConstraint {\n  phase: string;\n  maxDuration: number;\n  dependencies: string[];\n  criticalPath: boolean;\n}\n\nexport interface SkillRequirement {\n  skill: string;\n  level: 'apprentice' | 'journeyman' | 'master';\n  certification?: string;\n  availability: number;\n}\n\n// ============================================================================\n// Optimization Problem Definition\n// ============================================================================\n\nexport interface OptimizationProblem {\n  id: string;\n  name: string;\n  description: string;\n  systemConfiguration: SystemConfiguration;\n  variables: OptimizationVariable[];\n  objectives: MultiObjectiveFunction;\n  constraints: OptimizationConstraint[];\n  algorithmSettings: AlgorithmSettings;\n  convergenceCriteria: ConvergenceCriteria;\n  outputRequirements: OutputRequirements;\n}\n\nexport interface AlgorithmSettings {\n  algorithm: OptimizationAlgorithm;\n  parameters: AlgorithmParameters;\n  parallelization: ParallelizationSettings;\n  seedValue?: number;\n  restartStrategy?: RestartStrategy;\n}\n\nexport interface AlgorithmParameters {\n  populationSize?: number;\n  maxIterations?: number;\n  maxEvaluations?: number;\n  crossoverRate?: number;\n  mutationRate?: number;\n  selectionMethod?: string;\n  coolingSchedule?: CoolingSchedule;\n  inertiaWeight?: number;\n  accelerationCoefficients?: number[];\n  stepSize?: number;\n  gradientTolerance?: number;\n  customParameters?: { [key: string]: any };\n}\n\nexport interface CoolingSchedule {\n  initialTemperature: number;\n  finalTemperature: number;\n  coolingRate: number;\n  method: 'linear' | 'exponential' | 'logarithmic' | 'adaptive';\n}\n\nexport interface ParallelizationSettings {\n  enabled: boolean;\n  maxWorkers?: number;\n  chunkSize?: number;\n  loadBalancing?: 'static' | 'dynamic';\n}\n\nexport interface RestartStrategy {\n  enabled: boolean;\n  maxRestarts: number;\n  restartCondition: 'stagnation' | 'diversity_loss' | 'time_limit';\n  restartParameters: { [key: string]: any };\n}\n\nexport interface ConvergenceCriteria {\n  maxIterations: number;\n  toleranceValue: number;\n  stagnationLimit: number;\n  improvementThreshold: number;\n  timeLimit?: number;\n  customCriteria?: ConvergenceFunction[];\n}\n\nexport interface ConvergenceFunction {\n  name: string;\n  function: (history: OptimizationHistory) => boolean;\n  description: string;\n}\n\nexport interface OutputRequirements {\n  includeHistory: boolean;\n  detailedAnalysis: boolean;\n  sensitivityAnalysis: boolean;\n  uncertaintyAnalysis: boolean;\n  visualizations: VisualizationRequest[];\n  reportFormat: 'json' | 'pdf' | 'excel' | 'html';\n}\n\nexport interface VisualizationRequest {\n  type: 'convergence' | 'pareto_front' | 'variable_history' | 'constraint_violations' | 'sensitivity';\n  parameters: { [key: string]: any };\n}\n\n// ============================================================================\n// Optimization Results\n// ============================================================================\n\nexport interface OptimizationResult {\n  problemId: string;\n  status: OptimizationStatus;\n  bestSolution: OptimizationSolution;\n  paretoFront?: OptimizationSolution[];\n  statistics: OptimizationStatistics;\n  history: OptimizationHistory;\n  analysis: ResultAnalysis;\n  recommendations: OptimizationRecommendation[];\n  warnings: string[];\n  errors: string[];\n}\n\nexport interface OptimizationSolution {\n  id: string;\n  variables: { [variableId: string]: number | string };\n  objectiveValues: { [objectiveId: string]: number };\n  constraintViolations: ConstraintViolation[];\n  feasible: boolean;\n  dominationRank?: number;\n  crowdingDistance?: number;\n  fitness: number;\n  systemConfiguration: SystemConfiguration;\n  performanceMetrics: SolutionPerformanceMetrics;\n}\n\nexport interface SolutionPerformanceMetrics {\n  totalPressureLoss: number;\n  energyConsumption: number;\n  totalCost: number;\n  noiseLevel: number;\n  efficiency: number;\n  spaceUtilization: number;\n  installationComplexity: number;\n  maintenanceRequirements: number;\n}\n\nexport interface OptimizationStatistics {\n  totalIterations: number;\n  totalEvaluations: number;\n  convergenceIteration: number;\n  executionTime: number;\n  bestFitnessHistory: number[];\n  averageFitnessHistory: number[];\n  diversityHistory: number[];\n  constraintViolationHistory: number[];\n  algorithmSpecificStats: { [key: string]: any };\n}\n\nexport interface OptimizationHistory {\n  iterations: IterationHistory[];\n  populationHistory?: PopulationSnapshot[];\n  parameterHistory: ParameterHistory[];\n  convergenceMetrics: ConvergenceMetrics[];\n}\n\nexport interface IterationHistory {\n  iteration: number;\n  bestFitness: number;\n  averageFitness: number;\n  worstFitness: number;\n  diversity: number;\n  constraintViolations: number;\n  timestamp: Date;\n}\n\nexport interface PopulationSnapshot {\n  iteration: number;\n  population: OptimizationSolution[];\n  statistics: PopulationStatistics;\n}\n\nexport interface PopulationStatistics {\n  size: number;\n  feasibleSolutions: number;\n  averageFitness: number;\n  fitnessStandardDeviation: number;\n  diversityIndex: number;\n}\n\nexport interface ParameterHistory {\n  iteration: number;\n  parameters: { [parameterName: string]: any };\n  adaptiveChanges: string[];\n}\n\nexport interface ConvergenceMetrics {\n  iteration: number;\n  improvement: number;\n  stagnationCount: number;\n  convergenceIndicator: number;\n  estimatedRemainingIterations?: number;\n}\n\nexport interface ResultAnalysis {\n  sensitivityAnalysis?: SensitivityAnalysis;\n  uncertaintyAnalysis?: UncertaintyAnalysis;\n  tradeoffAnalysis?: TradeoffAnalysis;\n  robustnessAnalysis?: RobustnessAnalysis;\n}\n\nexport interface SensitivityAnalysis {\n  variableSensitivities: VariableSensitivity[];\n  parameterSensitivities: ParameterSensitivity[];\n  globalSensitivityIndices: { [variableId: string]: number };\n}\n\nexport interface VariableSensitivity {\n  variableId: string;\n  sensitivityIndex: number;\n  localSensitivity: number;\n  interactionEffects: InteractionEffect[];\n}\n\nexport interface InteractionEffect {\n  variableIds: string[];\n  interactionStrength: number;\n  description: string;\n}\n\nexport interface ParameterSensitivity {\n  parameterId: string;\n  sensitivityIndex: number;\n  recommendedRange: [number, number];\n}\n\nexport interface UncertaintyAnalysis {\n  inputUncertainties: InputUncertainty[];\n  outputUncertainties: OutputUncertainty[];\n  confidenceIntervals: ConfidenceInterval[];\n  robustnessMeasures: RobustnessMeasure[];\n}\n\nexport interface InputUncertainty {\n  variableId: string;\n  uncertaintyType: 'normal' | 'uniform' | 'triangular' | 'custom';\n  parameters: { [key: string]: number };\n  correlations?: { [variableId: string]: number };\n}\n\nexport interface OutputUncertainty {\n  objectiveId: string;\n  mean: number;\n  standardDeviation: number;\n  distribution: 'normal' | 'lognormal' | 'custom';\n  percentiles: { [percentile: string]: number };\n}\n\nexport interface ConfidenceInterval {\n  objectiveId: string;\n  confidenceLevel: number;\n  lowerBound: number;\n  upperBound: number;\n}\n\nexport interface RobustnessMeasure {\n  name: string;\n  value: number;\n  interpretation: string;\n}\n\nexport interface TradeoffAnalysis {\n  objectivePairs: ObjectivePair[];\n  paretoEfficiency: number;\n  kneePoints: OptimizationSolution[];\n  tradeoffRecommendations: TradeoffRecommendation[];\n}\n\nexport interface ObjectivePair {\n  objective1Id: string;\n  objective2Id: string;\n  correlationCoefficient: number;\n  tradeoffStrength: 'weak' | 'moderate' | 'strong';\n  conflictLevel: number;\n}\n\nexport interface TradeoffRecommendation {\n  description: string;\n  recommendedSolution: OptimizationSolution;\n  tradeoffJustification: string;\n  alternativeSolutions: OptimizationSolution[];\n}\n\nexport interface RobustnessAnalysis {\n  robustSolutions: OptimizationSolution[];\n  robustnessMetrics: RobustnessMetric[];\n  scenarioAnalysis: ScenarioAnalysis[];\n}\n\nexport interface RobustnessMetric {\n  name: string;\n  value: number;\n  threshold: number;\n  passed: boolean;\n}\n\nexport interface ScenarioAnalysis {\n  scenarioName: string;\n  scenarioParameters: { [key: string]: any };\n  solutionPerformance: SolutionPerformanceMetrics;\n  performanceDegradation: number;\n}\n\nexport interface OptimizationRecommendation {\n  type: 'improvement' | 'alternative' | 'caution' | 'validation';\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  title: string;\n  description: string;\n  expectedBenefit: string;\n  implementationEffort: 'low' | 'medium' | 'high';\n  riskLevel: 'low' | 'medium' | 'high';\n  actionItems: string[];\n  relatedSolutions?: OptimizationSolution[];\n}\n\n// ============================================================================\n// Utility Types\n// ============================================================================\n\nexport type ObjectiveFunctionType = (variables: OptimizationVariable[]) => number;\nexport type ConstraintFunctionType = (variables: OptimizationVariable[]) => number;\nexport type FitnessFunction = (solution: OptimizationSolution) => number;\nexport type SelectionFunction = (population: OptimizationSolution[], count: number) => OptimizationSolution[];\nexport type CrossoverFunction = (parent1: OptimizationSolution, parent2: OptimizationSolution) => OptimizationSolution[];\nexport type MutationFunction = (solution: OptimizationSolution, rate: number) => OptimizationSolution;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df6937a81319633b23d254a2c6bdc13c535a12d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7m72j7cf8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7m72j7cf8();
cov_7m72j7cf8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7m72j7cf8().s[1]++;
exports.OptimizationStatus = exports.VariableType = exports.ConstraintType = exports.OptimizationAlgorithm = exports.OptimizationObjective = void 0;
// ============================================================================
// Core Optimization Enums
// ============================================================================
var OptimizationObjective;
/* istanbul ignore next */
cov_7m72j7cf8().s[2]++;
(function (OptimizationObjective) {
  /* istanbul ignore next */
  cov_7m72j7cf8().f[0]++;
  cov_7m72j7cf8().s[3]++;
  OptimizationObjective["MINIMIZE_PRESSURE_LOSS"] = "minimize_pressure_loss";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[4]++;
  OptimizationObjective["MINIMIZE_ENERGY_CONSUMPTION"] = "minimize_energy_consumption";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[5]++;
  OptimizationObjective["MINIMIZE_TOTAL_COST"] = "minimize_total_cost";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[6]++;
  OptimizationObjective["MINIMIZE_NOISE_LEVEL"] = "minimize_noise_level";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[7]++;
  OptimizationObjective["MAXIMIZE_EFFICIENCY"] = "maximize_efficiency";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[8]++;
  OptimizationObjective["MINIMIZE_SPACE_USAGE"] = "minimize_space_usage";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[9]++;
  OptimizationObjective["MINIMIZE_MATERIAL_COST"] = "minimize_material_cost";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[10]++;
  OptimizationObjective["MINIMIZE_INSTALLATION_TIME"] = "minimize_installation_time";
})(
/* istanbul ignore next */
(cov_7m72j7cf8().b[0][0]++, OptimizationObjective) ||
/* istanbul ignore next */
(cov_7m72j7cf8().b[0][1]++, exports.OptimizationObjective = OptimizationObjective = {}));
var OptimizationAlgorithm;
/* istanbul ignore next */
cov_7m72j7cf8().s[11]++;
(function (OptimizationAlgorithm) {
  /* istanbul ignore next */
  cov_7m72j7cf8().f[1]++;
  cov_7m72j7cf8().s[12]++;
  OptimizationAlgorithm["GENETIC_ALGORITHM"] = "genetic_algorithm";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[13]++;
  OptimizationAlgorithm["SIMULATED_ANNEALING"] = "simulated_annealing";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[14]++;
  OptimizationAlgorithm["PARTICLE_SWARM"] = "particle_swarm";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[15]++;
  OptimizationAlgorithm["GRADIENT_DESCENT"] = "gradient_descent";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[16]++;
  OptimizationAlgorithm["DIFFERENTIAL_EVOLUTION"] = "differential_evolution";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[17]++;
  OptimizationAlgorithm["MULTI_OBJECTIVE_GA"] = "multi_objective_ga";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[18]++;
  OptimizationAlgorithm["NSGA_II"] = "nsga_ii";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[19]++;
  OptimizationAlgorithm["HYBRID_OPTIMIZATION"] = "hybrid_optimization";
})(
/* istanbul ignore next */
(cov_7m72j7cf8().b[1][0]++, OptimizationAlgorithm) ||
/* istanbul ignore next */
(cov_7m72j7cf8().b[1][1]++, exports.OptimizationAlgorithm = OptimizationAlgorithm = {}));
var ConstraintType;
/* istanbul ignore next */
cov_7m72j7cf8().s[20]++;
(function (ConstraintType) {
  /* istanbul ignore next */
  cov_7m72j7cf8().f[2]++;
  cov_7m72j7cf8().s[21]++;
  ConstraintType["VELOCITY_LIMIT"] = "velocity_limit";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[22]++;
  ConstraintType["PRESSURE_LIMIT"] = "pressure_limit";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[23]++;
  ConstraintType["NOISE_LIMIT"] = "noise_limit";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[24]++;
  ConstraintType["SPACE_CONSTRAINT"] = "space_constraint";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[25]++;
  ConstraintType["COST_CONSTRAINT"] = "cost_constraint";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[26]++;
  ConstraintType["CODE_COMPLIANCE"] = "code_compliance";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[27]++;
  ConstraintType["MATERIAL_AVAILABILITY"] = "material_availability";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[28]++;
  ConstraintType["INSTALLATION_CONSTRAINT"] = "installation_constraint";
})(
/* istanbul ignore next */
(cov_7m72j7cf8().b[2][0]++, ConstraintType) ||
/* istanbul ignore next */
(cov_7m72j7cf8().b[2][1]++, exports.ConstraintType = ConstraintType = {}));
var VariableType;
/* istanbul ignore next */
cov_7m72j7cf8().s[29]++;
(function (VariableType) {
  /* istanbul ignore next */
  cov_7m72j7cf8().f[3]++;
  cov_7m72j7cf8().s[30]++;
  VariableType["DUCT_SIZE"] = "duct_size";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[31]++;
  VariableType["FITTING_TYPE"] = "fitting_type";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[32]++;
  VariableType["MATERIAL_TYPE"] = "material_type";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[33]++;
  VariableType["DAMPER_POSITION"] = "damper_position";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[34]++;
  VariableType["FAN_SPEED"] = "fan_speed";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[35]++;
  VariableType["SYSTEM_CONFIGURATION"] = "system_configuration";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[36]++;
  VariableType["ROUTING_PATH"] = "routing_path";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[37]++;
  VariableType["INSULATION_THICKNESS"] = "insulation_thickness";
})(
/* istanbul ignore next */
(cov_7m72j7cf8().b[3][0]++, VariableType) ||
/* istanbul ignore next */
(cov_7m72j7cf8().b[3][1]++, exports.VariableType = VariableType = {}));
var OptimizationStatus;
/* istanbul ignore next */
cov_7m72j7cf8().s[38]++;
(function (OptimizationStatus) {
  /* istanbul ignore next */
  cov_7m72j7cf8().f[4]++;
  cov_7m72j7cf8().s[39]++;
  OptimizationStatus["NOT_STARTED"] = "not_started";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[40]++;
  OptimizationStatus["INITIALIZING"] = "initializing";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[41]++;
  OptimizationStatus["RUNNING"] = "running";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[42]++;
  OptimizationStatus["CONVERGED"] = "converged";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[43]++;
  OptimizationStatus["MAX_ITERATIONS"] = "max_iterations";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[44]++;
  OptimizationStatus["CONSTRAINT_VIOLATION"] = "constraint_violation";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[45]++;
  OptimizationStatus["ERROR"] = "error";
  /* istanbul ignore next */
  cov_7m72j7cf8().s[46]++;
  OptimizationStatus["CANCELLED"] = "cancelled";
})(
/* istanbul ignore next */
(cov_7m72j7cf8().b[4][0]++, OptimizationStatus) ||
/* istanbul ignore next */
(cov_7m72j7cf8().b[4][1]++, exports.OptimizationStatus = OptimizationStatus = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,