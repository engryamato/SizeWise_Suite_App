e19b0248b4a5a4937464fe0589fd32af
"use strict";

/**
 * Particle Swarm Optimization Algorithm Implementation for System Optimization
 *
 * Implements particle swarm optimization with:
 * - Configurable swarm topology (global, local, ring, star)
 * - Adaptive inertia weight and acceleration coefficients
 * - Constraint handling with penalty methods
 * - Multi-objective optimization support
 * - Velocity clamping and boundary handling
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_uuovm1r7k() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/ParticleSwarmOptimization.ts";
  var hash = "0c6802797150d5659affa59b9d9ae3baf10eb6ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/ParticleSwarmOptimization.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "2": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 77
        }
      },
      "3": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "6": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "9": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "10": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 77
        }
      },
      "11": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "12": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 43
        }
      },
      "13": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "14": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 46
        }
      },
      "15": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 91
        }
      },
      "16": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "17": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 88
        }
      },
      "18": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "19": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "20": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 43
        }
      },
      "21": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "22": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 52
        }
      },
      "23": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "24": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "25": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "26": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 31
        }
      },
      "27": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 33
        }
      },
      "28": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 26
        }
      },
      "29": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 36
        }
      },
      "30": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 33
        }
      },
      "31": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 110
        }
      },
      "32": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 99,
          column: 28
        }
      },
      "33": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "34": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 22
        }
      },
      "35": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 102,
          column: 63
        }
      },
      "36": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 99
        }
      },
      "37": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 37
        }
      },
      "38": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 114,
          column: 10
        }
      },
      "39": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 29
        }
      },
      "40": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 41
        }
      },
      "41": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 27
        }
      },
      "42": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 125,
          column: 27
        }
      },
      "43": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "44": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "45": {
        start: {
          line: 129,
          column: 36
        },
        end: {
          line: 129,
          column: 94
        }
      },
      "46": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 68
        }
      },
      "47": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 33
        }
      },
      "48": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 101
        }
      },
      "49": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 101
        }
      },
      "50": {
        start: {
          line: 137,
          column: 28
        },
        end: {
          line: 137,
          column: 61
        }
      },
      "51": {
        start: {
          line: 138,
          column: 28
        },
        end: {
          line: 138,
          column: 93
        }
      },
      "52": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "53": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 35
        }
      },
      "54": {
        start: {
          line: 143,
          column: 25
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "55": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 24
        }
      },
      "56": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "57": {
        start: {
          line: 164,
          column: 30
        },
        end: {
          line: 164,
          column: 83
        }
      },
      "58": {
        start: {
          line: 166,
          column: 35
        },
        end: {
          line: 166,
          column: 63
        }
      },
      "59": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 46
        }
      },
      "60": {
        start: {
          line: 169,
          column: 41
        },
        end: {
          line: 169,
          column: 43
        }
      },
      "61": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "62": {
        start: {
          line: 171,
          column: 34
        },
        end: {
          line: 171,
          column: 63
        }
      },
      "63": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 53
        }
      },
      "64": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "65": {
        start: {
          line: 176,
          column: 37
        },
        end: {
          line: 178,
          column: 88
        }
      },
      "66": {
        start: {
          line: 177,
          column: 33
        },
        end: {
          line: 177,
          column: 38
        }
      },
      "67": {
        start: {
          line: 178,
          column: 40
        },
        end: {
          line: 178,
          column: 47
        }
      },
      "68": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 49
        }
      },
      "69": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "70": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 72
        }
      },
      "71": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "72": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 45
        }
      },
      "73": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 43
        }
      },
      "74": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "75": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 63
        }
      },
      "76": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 48
        }
      },
      "77": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 204,
          column: 12
        }
      },
      "78": {
        start: {
          line: 201,
          column: 59
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "79": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 211,
          column: 19
        }
      },
      "80": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 19
        }
      },
      "81": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "82": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 59
        }
      },
      "83": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 59
        }
      },
      "84": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 99
        }
      },
      "85": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 27
        }
      },
      "86": {
        start: {
          line: 224,
          column: 30
        },
        end: {
          line: 224,
          column: 76
        }
      },
      "87": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "88": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 55
        }
      },
      "89": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 45
        }
      },
      "90": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 97
        }
      },
      "91": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 97
        }
      },
      "92": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 36
        }
      },
      "93": {
        start: {
          line: 238,
          column: 25
        },
        end: {
          line: 238,
          column: 65
        }
      },
      "94": {
        start: {
          line: 239,
          column: 18
        },
        end: {
          line: 239,
          column: 48
        }
      },
      "95": {
        start: {
          line: 241,
          column: 33
        },
        end: {
          line: 241,
          column: 68
        }
      },
      "96": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "97": {
        start: {
          line: 242,
          column: 21
        },
        end: {
          line: 242,
          column: 22
        }
      },
      "98": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "99": {
        start: {
          line: 244,
          column: 35
        },
        end: {
          line: 244,
          column: 55
        }
      },
      "100": {
        start: {
          line: 245,
          column: 40
        },
        end: {
          line: 245,
          column: 73
        }
      },
      "101": {
        start: {
          line: 246,
          column: 44
        },
        end: {
          line: 246,
          column: 72
        }
      },
      "102": {
        start: {
          line: 248,
          column: 34
        },
        end: {
          line: 248,
          column: 85
        }
      },
      "103": {
        start: {
          line: 249,
          column: 31
        },
        end: {
          line: 249,
          column: 86
        }
      },
      "104": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 85
        }
      },
      "105": {
        start: {
          line: 252,
          column: 33
        },
        end: {
          line: 252,
          column: 53
        }
      },
      "106": {
        start: {
          line: 253,
          column: 28
        },
        end: {
          line: 253,
          column: 101
        }
      },
      "107": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 101
        }
      },
      "108": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 255,
          column: 72
        }
      },
      "109": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 97
        }
      },
      "110": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "111": {
        start: {
          line: 264,
          column: 21
        },
        end: {
          line: 264,
          column: 22
        }
      },
      "112": {
        start: {
          line: 265,
          column: 29
        },
        end: {
          line: 265,
          column: 49
        }
      },
      "113": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "114": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 271,
          column: 17
        }
      },
      "115": {
        start: {
          line: 269,
          column: 40
        },
        end: {
          line: 269,
          column: 98
        }
      },
      "116": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 80
        }
      },
      "117": {
        start: {
          line: 273,
          column: 17
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "118": {
        start: {
          line: 275,
          column: 31
        },
        end: {
          line: 275,
          column: 74
        }
      },
      "119": {
        start: {
          line: 277,
          column: 28
        },
        end: {
          line: 277,
          column: 101
        }
      },
      "120": {
        start: {
          line: 278,
          column: 28
        },
        end: {
          line: 278,
          column: 101
        }
      },
      "121": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 102
        }
      },
      "122": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "123": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 294,
          column: 17
        }
      },
      "124": {
        start: {
          line: 290,
          column: 20
        },
        end: {
          line: 290,
          column: 50
        }
      },
      "125": {
        start: {
          line: 292,
          column: 21
        },
        end: {
          line: 294,
          column: 17
        }
      },
      "126": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 50
        }
      },
      "127": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 32
        }
      },
      "128": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 62
        }
      },
      "129": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "130": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 301,
          column: 66
        }
      },
      "131": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 32
        }
      },
      "132": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 307,
          column: 17
        }
      },
      "133": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 306,
          column: 61
        }
      },
      "134": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 32
        }
      },
      "135": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 62
        }
      },
      "136": {
        start: {
          line: 317,
          column: 21
        },
        end: {
          line: 317,
          column: 105
        }
      },
      "137": {
        start: {
          line: 317,
          column: 57
        },
        end: {
          line: 317,
          column: 104
        }
      },
      "138": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 322,
          column: 10
        }
      },
      "139": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 329,
          column: 78
        }
      },
      "140": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 78
        }
      },
      "141": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "142": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 50
        }
      },
      "143": {
        start: {
          line: 336,
          column: 27
        },
        end: {
          line: 336,
          column: 48
        }
      },
      "144": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 342,
          column: 17
        }
      },
      "145": {
        start: {
          line: 338,
          column: 37
        },
        end: {
          line: 338,
          column: 93
        }
      },
      "146": {
        start: {
          line: 338,
          column: 73
        },
        end: {
          line: 338,
          column: 92
        }
      },
      "147": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 341,
          column: 21
        }
      },
      "148": {
        start: {
          line: 340,
          column: 24
        },
        end: {
          line: 340,
          column: 53
        }
      },
      "149": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 28
        }
      },
      "150": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 50
        }
      },
      "151": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 353,
          column: 19
        }
      },
      "152": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 19
        }
      },
      "153": {
        start: {
          line: 354,
          column: 26
        },
        end: {
          line: 354,
          column: 51
        }
      },
      "154": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "155": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 361,
          column: 17
        }
      },
      "156": {
        start: {
          line: 357,
          column: 29
        },
        end: {
          line: 357,
          column: 30
        }
      },
      "157": {
        start: {
          line: 358,
          column: 33
        },
        end: {
          line: 358,
          column: 78
        }
      },
      "158": {
        start: {
          line: 359,
          column: 33
        },
        end: {
          line: 359,
          column: 59
        }
      },
      "159": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 86
        }
      },
      "160": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 22
        }
      },
      "161": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 373,
          column: 17
        }
      },
      "162": {
        start: {
          line: 364,
          column: 29
        },
        end: {
          line: 364,
          column: 30
        }
      },
      "163": {
        start: {
          line: 365,
          column: 38
        },
        end: {
          line: 365,
          column: 40
        }
      },
      "164": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 371,
          column: 21
        }
      },
      "165": {
        start: {
          line: 366,
          column: 33
        },
        end: {
          line: 366,
          column: 34
        }
      },
      "166": {
        start: {
          line: 367,
          column: 46
        },
        end: {
          line: 367,
          column: 76
        }
      },
      "167": {
        start: {
          line: 368,
          column: 24
        },
        end: {
          line: 370,
          column: 25
        }
      },
      "168": {
        start: {
          line: 369,
          column: 28
        },
        end: {
          line: 369,
          column: 72
        }
      },
      "169": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 55
        }
      },
      "170": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 374,
          column: 22
        }
      },
      "171": {
        start: {
          line: 377,
          column: 37
        },
        end: {
          line: 377,
          column: 67
        }
      },
      "172": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 382,
          column: 17
        }
      },
      "173": {
        start: {
          line: 379,
          column: 20
        },
        end: {
          line: 381,
          column: 21
        }
      },
      "174": {
        start: {
          line: 380,
          column: 24
        },
        end: {
          line: 380,
          column: 71
        }
      },
      "175": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 22
        }
      },
      "176": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 395,
          column: 17
        }
      },
      "177": {
        start: {
          line: 386,
          column: 38
        },
        end: {
          line: 386,
          column: 40
        }
      },
      "178": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 393,
          column: 21
        }
      },
      "179": {
        start: {
          line: 387,
          column: 33
        },
        end: {
          line: 387,
          column: 34
        }
      },
      "180": {
        start: {
          line: 388,
          column: 44
        },
        end: {
          line: 388,
          column: 88
        }
      },
      "181": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 392,
          column: 25
        }
      },
      "182": {
        start: {
          line: 391,
          column: 28
        },
        end: {
          line: 391,
          column: 70
        }
      },
      "183": {
        start: {
          line: 394,
          column: 20
        },
        end: {
          line: 394,
          column: 51
        }
      },
      "184": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 396,
          column: 22
        }
      },
      "185": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 22
        }
      },
      "186": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "187": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 49
        }
      },
      "188": {
        start: {
          line: 410,
          column: 25
        },
        end: {
          line: 410,
          column: 82
        }
      },
      "189": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 412,
          column: 93
        }
      },
      "190": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 419,
          column: 19
        }
      },
      "191": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 19
        }
      },
      "192": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "193": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 95
        }
      },
      "194": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 91
        }
      },
      "195": {
        start: {
          line: 426,
          column: 13
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "196": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 95
        }
      },
      "197": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 92
        }
      },
      "198": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 437,
          column: 19
        }
      },
      "199": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 19
        }
      },
      "200": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "201": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 444,
          column: 13
        }
      },
      "202": {
        start: {
          line: 442,
          column: 36
        },
        end: {
          line: 442,
          column: 70
        }
      },
      "203": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 443,
          column: 53
        }
      },
      "204": {
        start: {
          line: 451,
          column: 31
        },
        end: {
          line: 451,
          column: 96
        }
      },
      "205": {
        start: {
          line: 451,
          column: 50
        },
        end: {
          line: 451,
          column: 59
        }
      },
      "206": {
        start: {
          line: 451,
          column: 73
        },
        end: {
          line: 451,
          column: 95
        }
      },
      "207": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 454,
          column: 29
        }
      },
      "208": {
        start: {
          line: 453,
          column: 46
        },
        end: {
          line: 453,
          column: 53
        }
      },
      "209": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 461,
          column: 21
        }
      },
      "210": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 21
        }
      },
      "211": {
        start: {
          line: 462,
          column: 28
        },
        end: {
          line: 462,
          column: 29
        }
      },
      "212": {
        start: {
          line: 463,
          column: 24
        },
        end: {
          line: 463,
          column: 25
        }
      },
      "213": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "214": {
        start: {
          line: 464,
          column: 21
        },
        end: {
          line: 464,
          column: 22
        }
      },
      "215": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 469,
          column: 13
        }
      },
      "216": {
        start: {
          line: 465,
          column: 25
        },
        end: {
          line: 465,
          column: 30
        }
      },
      "217": {
        start: {
          line: 466,
          column: 33
        },
        end: {
          line: 466,
          column: 83
        }
      },
      "218": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 42
        }
      },
      "219": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 28
        }
      },
      "220": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 61
        }
      },
      "221": {
        start: {
          line: 477,
          column: 23
        },
        end: {
          line: 477,
          column: 24
        }
      },
      "222": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "223": {
        start: {
          line: 478,
          column: 21
        },
        end: {
          line: 478,
          column: 22
        }
      },
      "224": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 482,
          column: 13
        }
      },
      "225": {
        start: {
          line: 480,
          column: 29
        },
        end: {
          line: 480,
          column: 74
        }
      },
      "226": {
        start: {
          line: 481,
          column: 16
        },
        end: {
          line: 481,
          column: 40
        }
      },
      "227": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 35
        }
      },
      "228": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 491,
          column: 19
        }
      },
      "229": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 19
        }
      },
      "230": {
        start: {
          line: 492,
          column: 29
        },
        end: {
          line: 492,
          column: 112
        }
      },
      "231": {
        start: {
          line: 492,
          column: 65
        },
        end: {
          line: 492,
          column: 111
        }
      },
      "232": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 494,
          column: 19
        }
      },
      "233": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 19
        }
      },
      "234": {
        start: {
          line: 495,
          column: 26
        },
        end: {
          line: 495,
          column: 28
        }
      },
      "235": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 498,
          column: 11
        }
      },
      "236": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 66
        }
      },
      "237": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 508,
          column: 10
        }
      },
      "238": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 515,
          column: 24
        }
      },
      "239": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 24
        }
      },
      "240": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "241": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 24
        }
      },
      "242": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 527,
          column: 9
        }
      },
      "243": {
        start: {
          line: 522,
          column: 34
        },
        end: {
          line: 522,
          column: 57
        }
      },
      "244": {
        start: {
          line: 523,
          column: 39
        },
        end: {
          line: 523,
          column: 121
        }
      },
      "245": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 526,
          column: 13
        }
      },
      "246": {
        start: {
          line: 525,
          column: 16
        },
        end: {
          line: 525,
          column: 28
        }
      },
      "247": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 21
        }
      },
      "248": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 535,
          column: 19
        }
      },
      "249": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 19
        }
      },
      "250": {
        start: {
          line: 536,
          column: 34
        },
        end: {
          line: 536,
          column: 103
        }
      },
      "251": {
        start: {
          line: 536,
          column: 72
        },
        end: {
          line: 536,
          column: 102
        }
      },
      "252": {
        start: {
          line: 537,
          column: 26
        },
        end: {
          line: 537,
          column: 63
        }
      },
      "253": {
        start: {
          line: 537,
          column: 53
        },
        end: {
          line: 537,
          column: 62
        }
      },
      "254": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 540,
          column: 9
        }
      },
      "255": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 45
        }
      },
      "256": {
        start: {
          line: 541,
          column: 24
        },
        end: {
          line: 549,
          column: 9
        }
      },
      "257": {
        start: {
          line: 547,
          column: 72
        },
        end: {
          line: 547,
          column: 102
        }
      },
      "258": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 550,
          column: 35
        }
      },
      "259": {
        start: {
          line: 556,
          column: 30
        },
        end: {
          line: 556,
          column: 59
        }
      },
      "260": {
        start: {
          line: 557,
          column: 27
        },
        end: {
          line: 571,
          column: 9
        }
      },
      "261": {
        start: {
          line: 562,
          column: 54
        },
        end: {
          line: 562,
          column: 67
        }
      },
      "262": {
        start: {
          line: 563,
          column: 57
        },
        end: {
          line: 563,
          column: 73
        }
      },
      "263": {
        start: {
          line: 564,
          column: 52
        },
        end: {
          line: 564,
          column: 63
        }
      },
      "264": {
        start: {
          line: 565,
          column: 62
        },
        end: {
          line: 565,
          column: 84
        }
      },
      "265": {
        start: {
          line: 572,
          column: 36
        },
        end: {
          line: 577,
          column: 9
        }
      },
      "266": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 588,
          column: 10
        }
      },
      "267": {
        start: {
          line: 592,
          column: 8
        },
        end: {
          line: 592,
          column: 87
        }
      },
      "268": {
        start: {
          line: 595,
          column: 20
        },
        end: {
          line: 595,
          column: 24
        }
      },
      "269": {
        start: {
          line: 596,
          column: 8
        },
        end: {
          line: 599,
          column: 10
        }
      },
      "270": {
        start: {
          line: 597,
          column: 12
        },
        end: {
          line: 597,
          column: 52
        }
      },
      "271": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 598,
          column: 34
        }
      },
      "272": {
        start: {
          line: 602,
          column: 0
        },
        end: {
          line: 602,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 68
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 58
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 33
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 87
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 78
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 98
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 34
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 123
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 86
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 161
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 177,
            column: 29
          }
        },
        loc: {
          start: {
            line: 177,
            column: 33
          },
          end: {
            line: 177,
            column: 38
          }
        },
        line: 177
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 29
          }
        },
        loc: {
          start: {
            line: 178,
            column: 40
          },
          end: {
            line: 178,
            column: 47
          }
        },
        line: 178
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 53
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 200
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 201,
            column: 37
          },
          end: {
            line: 201,
            column: 38
          }
        },
        loc: {
          start: {
            line: 201,
            column: 59
          },
          end: {
            line: 204,
            column: 9
          }
        },
        line: 201
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 71
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 209
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 46
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 237
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 46
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 263
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 56
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 286
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 30
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 316
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 317,
            column: 38
          },
          end: {
            line: 317,
            column: 39
          }
        },
        loc: {
          start: {
            line: 317,
            column: 57
          },
          end: {
            line: 317,
            column: 104
          }
        },
        line: 317
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        loc: {
          start: {
            line: 327,
            column: 35
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 327
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 338,
            column: 68
          },
          end: {
            line: 338,
            column: 69
          }
        },
        loc: {
          start: {
            line: 338,
            column: 73
          },
          end: {
            line: 338,
            column: 92
          }
        },
        line: 338
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        loc: {
          start: {
            line: 351,
            column: 20
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 351
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 30
          },
          end: {
            line: 413,
            column: 5
          }
        },
        line: 405
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 22
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 417
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 31
          },
          end: {
            line: 446,
            column: 5
          }
        },
        line: 435
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 39
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 450
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 451,
            column: 45
          },
          end: {
            line: 451,
            column: 46
          }
        },
        loc: {
          start: {
            line: 451,
            column: 50
          },
          end: {
            line: 451,
            column: 59
          }
        },
        line: 451
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 451,
            column: 68
          },
          end: {
            line: 451,
            column: 69
          }
        },
        loc: {
          start: {
            line: 451,
            column: 73
          },
          end: {
            line: 451,
            column: 95
          }
        },
        line: 451
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 453,
            column: 34
          },
          end: {
            line: 453,
            column: 35
          }
        },
        loc: {
          start: {
            line: 453,
            column: 46
          },
          end: {
            line: 453,
            column: 53
          }
        },
        line: 453
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 39
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 459
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        },
        loc: {
          start: {
            line: 476,
            column: 44
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 476
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        },
        loc: {
          start: {
            line: 489,
            column: 32
          },
          end: {
            line: 509,
            column: 5
          }
        },
        line: 489
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 492,
            column: 60
          },
          end: {
            line: 492,
            column: 61
          }
        },
        loc: {
          start: {
            line: 492,
            column: 65
          },
          end: {
            line: 492,
            column: 111
          }
        },
        line: 492
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 496,
            column: 34
          },
          end: {
            line: 496,
            column: 35
          }
        },
        loc: {
          start: {
            line: 496,
            column: 55
          },
          end: {
            line: 498,
            column: 9
          }
        },
        line: 496
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 513,
            column: 5
          }
        },
        loc: {
          start: {
            line: 513,
            column: 29
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 513
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 533,
            column: 4
          },
          end: {
            line: 533,
            column: 5
          }
        },
        loc: {
          start: {
            line: 533,
            column: 20
          },
          end: {
            line: 551,
            column: 5
          }
        },
        line: 533
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 536,
            column: 67
          },
          end: {
            line: 536,
            column: 68
          }
        },
        loc: {
          start: {
            line: 536,
            column: 72
          },
          end: {
            line: 536,
            column: 102
          }
        },
        line: 536
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 537,
            column: 48
          },
          end: {
            line: 537,
            column: 49
          }
        },
        loc: {
          start: {
            line: 537,
            column: 53
          },
          end: {
            line: 537,
            column: 62
          }
        },
        line: 537
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 547,
            column: 67
          },
          end: {
            line: 547,
            column: 68
          }
        },
        loc: {
          start: {
            line: 547,
            column: 72
          },
          end: {
            line: 547,
            column: 102
          }
        },
        line: 547
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 5
          }
        },
        loc: {
          start: {
            line: 555,
            column: 49
          },
          end: {
            line: 589,
            column: 5
          }
        },
        line: 555
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 562,
            column: 49
          },
          end: {
            line: 562,
            column: 50
          }
        },
        loc: {
          start: {
            line: 562,
            column: 54
          },
          end: {
            line: 562,
            column: 67
          }
        },
        line: 562
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 563,
            column: 52
          },
          end: {
            line: 563,
            column: 53
          }
        },
        loc: {
          start: {
            line: 563,
            column: 57
          },
          end: {
            line: 563,
            column: 73
          }
        },
        line: 563
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 564,
            column: 47
          },
          end: {
            line: 564,
            column: 48
          }
        },
        loc: {
          start: {
            line: 564,
            column: 52
          },
          end: {
            line: 564,
            column: 63
          }
        },
        line: 564
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 565,
            column: 57
          },
          end: {
            line: 565,
            column: 58
          }
        },
        loc: {
          start: {
            line: 565,
            column: 62
          },
          end: {
            line: 565,
            column: 84
          }
        },
        line: 565
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 591,
            column: 4
          },
          end: {
            line: 591,
            column: 5
          }
        },
        loc: {
          start: {
            line: 591,
            column: 25
          },
          end: {
            line: 593,
            column: 5
          }
        },
        line: 591
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 594,
            column: 4
          },
          end: {
            line: 594,
            column: 5
          }
        },
        loc: {
          start: {
            line: 594,
            column: 29
          },
          end: {
            line: 600,
            column: 5
          }
        },
        line: 594
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 596,
            column: 15
          },
          end: {
            line: 596,
            column: 16
          }
        },
        loc: {
          start: {
            line: 596,
            column: 21
          },
          end: {
            line: 599,
            column: 9
          }
        },
        line: 596
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: 51,
            column: 13
          },
          end: {
            line: 53,
            column: 9
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: 133,
            column: 17
          },
          end: {
            line: 141,
            column: 13
          }
        }],
        line: 127
      },
      "4": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 39
          }
        }, {
          start: {
            line: 127,
            column: 43
          },
          end: {
            line: 127,
            column: 77
          }
        }],
        line: 127
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 28
          },
          end: {
            line: 135,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 74
          },
          end: {
            line: 135,
            column: 97
          }
        }, {
          start: {
            line: 135,
            column: 100
          },
          end: {
            line: 135,
            column: 101
          }
        }],
        line: 135
      },
      "6": {
        loc: {
          start: {
            line: 136,
            column: 28
          },
          end: {
            line: 136,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 74
          },
          end: {
            line: 136,
            column: 97
          }
        }, {
          start: {
            line: 136,
            column: 100
          },
          end: {
            line: 136,
            column: 101
          }
        }],
        line: 136
      },
      "7": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "8": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 189,
            column: 13
          }
        }],
        line: 182
      },
      "9": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 211,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 211,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "10": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "11": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "12": {
        loc: {
          start: {
            line: 253,
            column: 28
          },
          end: {
            line: 253,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 74
          },
          end: {
            line: 253,
            column: 97
          }
        }, {
          start: {
            line: 253,
            column: 100
          },
          end: {
            line: 253,
            column: 101
          }
        }],
        line: 253
      },
      "13": {
        loc: {
          start: {
            line: 254,
            column: 28
          },
          end: {
            line: 254,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 74
          },
          end: {
            line: 254,
            column: 97
          }
        }, {
          start: {
            line: 254,
            column: 100
          },
          end: {
            line: 254,
            column: 101
          }
        }],
        line: 254
      },
      "14": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        }, {
          start: {
            line: 273,
            column: 17
          },
          end: {
            line: 280,
            column: 13
          }
        }],
        line: 266
      },
      "15": {
        loc: {
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 266,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 266,
            column: 39
          }
        }, {
          start: {
            line: 266,
            column: 43
          },
          end: {
            line: 266,
            column: 77
          }
        }],
        line: 266
      },
      "16": {
        loc: {
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 271,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 271,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "17": {
        loc: {
          start: {
            line: 273,
            column: 17
          },
          end: {
            line: 280,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 17
          },
          end: {
            line: 280,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "18": {
        loc: {
          start: {
            line: 277,
            column: 28
          },
          end: {
            line: 277,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 74
          },
          end: {
            line: 277,
            column: 97
          }
        }, {
          start: {
            line: 277,
            column: 100
          },
          end: {
            line: 277,
            column: 101
          }
        }],
        line: 277
      },
      "19": {
        loc: {
          start: {
            line: 278,
            column: 28
          },
          end: {
            line: 278,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 278,
            column: 74
          },
          end: {
            line: 278,
            column: 97
          }
        }, {
          start: {
            line: 278,
            column: 100
          },
          end: {
            line: 278,
            column: 101
          }
        }],
        line: 278
      },
      "20": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 295,
            column: 32
          }
        }, {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 297,
            column: 62
          }
        }, {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 303,
            column: 32
          }
        }, {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 308,
            column: 32
          }
        }, {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 310,
            column: 62
          }
        }],
        line: 287
      },
      "21": {
        loc: {
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 294,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 294,
            column: 17
          }
        }, {
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 294,
            column: 17
          }
        }],
        line: 289
      },
      "22": {
        loc: {
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 294,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 294,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "23": {
        loc: {
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "24": {
        loc: {
          start: {
            line: 300,
            column: 20
          },
          end: {
            line: 300,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 20
          },
          end: {
            line: 300,
            column: 34
          }
        }, {
          start: {
            line: 300,
            column: 38
          },
          end: {
            line: 300,
            column: 52
          }
        }],
        line: 300
      },
      "25": {
        loc: {
          start: {
            line: 305,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "26": {
        loc: {
          start: {
            line: 305,
            column: 20
          },
          end: {
            line: 305,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 20
          },
          end: {
            line: 305,
            column: 34
          }
        }, {
          start: {
            line: 305,
            column: 38
          },
          end: {
            line: 305,
            column: 52
          }
        }],
        line: 305
      },
      "27": {
        loc: {
          start: {
            line: 317,
            column: 57
          },
          end: {
            line: 317,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 317,
            column: 90
          },
          end: {
            line: 317,
            column: 97
          }
        }, {
          start: {
            line: 317,
            column: 100
          },
          end: {
            line: 317,
            column: 104
          }
        }],
        line: 317
      },
      "28": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 329,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 329,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "29": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 332,
            column: 50
          }
        }, {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 25
          }
        }, {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 343,
            column: 28
          }
        }, {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 345,
            column: 50
          }
        }],
        line: 330
      },
      "30": {
        loc: {
          start: {
            line: 339,
            column: 20
          },
          end: {
            line: 341,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 20
          },
          end: {
            line: 341,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "31": {
        loc: {
          start: {
            line: 339,
            column: 24
          },
          end: {
            line: 339,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 24
          },
          end: {
            line: 339,
            column: 32
          }
        }, {
          start: {
            line: 339,
            column: 36
          },
          end: {
            line: 339,
            column: 80
          }
        }],
        line: 339
      },
      "32": {
        loc: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 353,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 353,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "33": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 400,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 362,
            column: 22
          }
        }, {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 374,
            column: 22
          }
        }, {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 383,
            column: 22
          }
        }, {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 396,
            column: 22
          }
        }, {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 399,
            column: 22
          }
        }],
        line: 355
      },
      "34": {
        loc: {
          start: {
            line: 366,
            column: 36
          },
          end: {
            line: 366,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 36
          },
          end: {
            line: 366,
            column: 72
          }
        }, {
          start: {
            line: 366,
            column: 76
          },
          end: {
            line: 366,
            column: 96
          }
        }],
        line: 366
      },
      "35": {
        loc: {
          start: {
            line: 368,
            column: 24
          },
          end: {
            line: 370,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 24
          },
          end: {
            line: 370,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "36": {
        loc: {
          start: {
            line: 379,
            column: 20
          },
          end: {
            line: 381,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 20
          },
          end: {
            line: 381,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "37": {
        loc: {
          start: {
            line: 389,
            column: 24
          },
          end: {
            line: 392,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 24
          },
          end: {
            line: 392,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "38": {
        loc: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 390,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 389,
            column: 69
          }
        }, {
          start: {
            line: 390,
            column: 28
          },
          end: {
            line: 390,
            column: 74
          }
        }],
        line: 389
      },
      "39": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "40": {
        loc: {
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 406,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 406,
            column: 47
          }
        }, {
          start: {
            line: 406,
            column: 51
          },
          end: {
            line: 406,
            column: 67
          }
        }],
        line: 406
      },
      "41": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 419,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 419,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "42": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: 426,
            column: 13
          },
          end: {
            line: 430,
            column: 9
          }
        }],
        line: 421
      },
      "43": {
        loc: {
          start: {
            line: 426,
            column: 13
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 13
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "44": {
        loc: {
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 437,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 437,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "45": {
        loc: {
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 444,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 444,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "46": {
        loc: {
          start: {
            line: 452,
            column: 15
          },
          end: {
            line: 454,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 453,
            column: 81
          }
        }, {
          start: {
            line: 454,
            column: 12
          },
          end: {
            line: 454,
            column: 28
          }
        }],
        line: 452
      },
      "47": {
        loc: {
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 461,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 461,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "48": {
        loc: {
          start: {
            line: 471,
            column: 15
          },
          end: {
            line: 471,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 471,
            column: 31
          },
          end: {
            line: 471,
            column: 56
          }
        }, {
          start: {
            line: 471,
            column: 59
          },
          end: {
            line: 471,
            column: 60
          }
        }],
        line: 471
      },
      "49": {
        loc: {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "50": {
        loc: {
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 479,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 479,
            column: 57
          }
        }, {
          start: {
            line: 479,
            column: 61
          },
          end: {
            line: 479,
            column: 102
          }
        }],
        line: 479
      },
      "51": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 491,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 491,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "52": {
        loc: {
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 494,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 494,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "53": {
        loc: {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 515,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 515,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "54": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "55": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "56": {
        loc: {
          start: {
            line: 524,
            column: 12
          },
          end: {
            line: 526,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 12
          },
          end: {
            line: 526,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "57": {
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 535,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 535,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "58": {
        loc: {
          start: {
            line: 538,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 538,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 538
      },
      "59": {
        loc: {
          start: {
            line: 558,
            column: 29
          },
          end: {
            line: 558,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 29
          },
          end: {
            line: 558,
            column: 55
          }
        }, {
          start: {
            line: 558,
            column: 59
          },
          end: {
            line: 558,
            column: 60
          }
        }],
        line: 558
      },
      "60": {
        loc: {
          start: {
            line: 560,
            column: 34
          },
          end: {
            line: 560,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 560,
            column: 34
          },
          end: {
            line: 560,
            column: 60
          }
        }, {
          start: {
            line: 560,
            column: 64
          },
          end: {
            line: 560,
            column: 65
          }
        }],
        line: 560
      },
      "61": {
        loc: {
          start: {
            line: 569,
            column: 37
          },
          end: {
            line: 569,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 37
          },
          end: {
            line: 569,
            column: 68
          }
        }, {
          start: {
            line: 569,
            column: 72
          },
          end: {
            line: 569,
            column: 73
          }
        }],
        line: 569
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/ParticleSwarmOptimization.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/ParticleSwarmOptimization.ts"],
      sourcesContent: ["/**\n * Particle Swarm Optimization Algorithm Implementation for System Optimization\n * \n * Implements particle swarm optimization with:\n * - Configurable swarm topology (global, local, ring, star)\n * - Adaptive inertia weight and acceleration coefficients\n * - Constraint handling with penalty methods\n * - Multi-objective optimization support\n * - Velocity clamping and boundary handling\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport {\n  OptimizationSolution,\n  OptimizationVariable,\n  OptimizationProblem,\n  OptimizationResult,\n  OptimizationStatus,\n  OptimizationStatistics,\n  OptimizationHistory,\n  IterationHistory,\n  PopulationSnapshot,\n  SolutionPerformanceMetrics,\n  ObjectiveFunctionType,\n  ConstraintFunctionType\n} from '../types/SystemOptimizationTypes';\n\nexport interface ParticleSwarmParameters {\n  swarmSize: number;\n  maxIterations: number;\n  inertiaWeight: number;\n  inertiaWeightMin: number;\n  inertiaWeightMax: number;\n  accelerationCoefficients: [number, number]; // [c1, c2] - cognitive and social\n  maxVelocity: number;\n  velocityClampingFactor: number;\n  topology: 'global' | 'local' | 'ring' | 'star' | 'random';\n  neighborhoodSize: number;\n  boundaryHandling: 'reflect' | 'absorb' | 'invisible' | 'random';\n  constraintHandling: 'penalty' | 'repair' | 'death_penalty';\n  penaltyCoefficient: number;\n  adaptiveParameters: boolean;\n  diversityMaintenance: boolean;\n  eliteSize: number;\n  seedValue?: number;\n}\n\nexport interface Particle {\n  id: string;\n  position: (number | string)[];\n  velocity: number[];\n  fitness: number;\n  personalBest: {\n    position: (number | string)[];\n    fitness: number;\n  };\n  neighbors: string[];\n  age: number;\n  stagnationCount: number;\n}\n\nexport interface SwarmState {\n  particles: Particle[];\n  globalBest: {\n    position: (number | string)[];\n    fitness: number;\n    particleId: string;\n  };\n  iteration: number;\n  averageFitness: number;\n  diversityIndex: number;\n  convergenceRate: number;\n}\n\n/**\n * Particle Swarm Optimization algorithm for single and multi-objective optimization\n */\nexport class ParticleSwarmOptimization {\n  private parameters: ParticleSwarmParameters;\n  private swarmState: SwarmState | null = null;\n  private bestSolution: OptimizationSolution | null = null;\n  private history: IterationHistory[] = [];\n  private populationHistory: PopulationSnapshot[] = [];\n  private random: () => number;\n  private evaluationCount: number = 0;\n\n  constructor(parameters?: Partial<ParticleSwarmParameters>) {\n    this.parameters = {\n      swarmSize: 30,\n      maxIterations: 100,\n      inertiaWeight: 0.9,\n      inertiaWeightMin: 0.1,\n      inertiaWeightMax: 0.9,\n      accelerationCoefficients: [2.0, 2.0],\n      maxVelocity: 0.2,\n      velocityClampingFactor: 0.5,\n      topology: 'global',\n      neighborhoodSize: 3,\n      boundaryHandling: 'reflect',\n      constraintHandling: 'penalty',\n      penaltyCoefficient: 1000,\n      adaptiveParameters: true,\n      diversityMaintenance: true,\n      eliteSize: 2,\n      ...parameters\n    };\n\n    // Initialize random number generator\n    if (this.parameters.seedValue !== undefined) {\n      this.random = this.createSeededRandom(this.parameters.seedValue);\n    } else {\n      this.random = Math.random;\n    }\n  }\n\n  /**\n   * Main optimization method\n   */\n  public async optimize(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<OptimizationResult> {\n    const startTime = performance.now();\n    \n    try {\n      // Initialize algorithm\n      this.initializeAlgorithm(problem);\n      \n      // Create initial swarm\n      await this.createInitialSwarm(problem, objectiveFunction, constraintFunctions);\n      \n      // Main optimization loop\n      while (!this.shouldTerminate(problem)) {\n        await this.updateSwarm(problem, objectiveFunction, constraintFunctions);\n        this.updateHistory();\n        \n        if (this.parameters.adaptiveParameters) {\n          this.adaptParameters();\n        }\n        \n        if (this.parameters.diversityMaintenance) {\n          this.maintainDiversity(problem);\n        }\n      }\n      \n      // Create final result\n      return this.createOptimizationResult(problem, startTime);\n      \n    } catch (error) {\n      console.error('Particle swarm optimization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize algorithm state\n   */\n  private initializeAlgorithm(problem: OptimizationProblem): void {\n    this.swarmState = null;\n    this.bestSolution = null;\n    this.history = [];\n    this.populationHistory = [];\n    this.evaluationCount = 0;\n    \n    console.log(`Initializing Particle Swarm Optimization with swarm size: ${this.parameters.swarmSize}`);\n  }\n\n  /**\n   * Create initial swarm\n   */\n  private async createInitialSwarm(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    const particles: Particle[] = [];\n    \n    // Create particles\n    for (let i = 0; i < this.parameters.swarmSize; i++) {\n      const particle = this.createRandomParticle(problem);\n      await this.evaluateParticle(particle, problem, objectiveFunction, constraintFunctions);\n      particles.push(particle);\n    }\n    \n    // Initialize swarm state\n    this.swarmState = {\n      particles,\n      globalBest: this.findGlobalBest(particles),\n      iteration: 0,\n      averageFitness: this.calculateAverageFitness(particles),\n      diversityIndex: this.calculateDiversityIndex(particles),\n      convergenceRate: 0\n    };\n    \n    // Set up neighborhood topology\n    this.setupTopology();\n    \n    // Convert best particle to optimization solution\n    this.updateBestSolution(problem);\n  }\n\n  /**\n   * Create a random particle\n   */\n  private createRandomParticle(problem: OptimizationProblem): Particle {\n    const position: (number | string)[] = [];\n    const velocity: number[] = [];\n    \n    for (const variable of problem.variables) {\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        // Discrete variable\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n        position.push(variable.discreteValues[randomIndex]);\n        velocity.push(0); // No velocity for discrete variables\n      } else {\n        // Continuous variable\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n        const pos = min + this.random() * (max - min);\n        const vel = (this.random() - 0.5) * this.parameters.maxVelocity * (max - min);\n        \n        position.push(pos);\n        velocity.push(vel);\n      }\n    }\n    \n    const particle: Particle = {\n      id: this.generateParticleId(),\n      position,\n      velocity,\n      fitness: Number.MAX_VALUE,\n      personalBest: {\n        position: [...position],\n        fitness: Number.MAX_VALUE\n      },\n      neighbors: [],\n      age: 0,\n      stagnationCount: 0\n    };\n    \n    return particle;\n  }\n\n  /**\n   * Evaluate particle fitness\n   */\n  private async evaluateParticle(\n    particle: Particle,\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    try {\n      // Convert particle position to optimization variables\n      const variables = this.particleToVariables(particle, problem.variables);\n      \n      // Evaluate objective function\n      const objectiveValue = objectiveFunction(variables);\n      particle.fitness = objectiveValue;\n      \n      // Evaluate constraints\n      const constraintViolations: number[] = [];\n      for (const constraintFunction of constraintFunctions) {\n        const violation = constraintFunction(variables);\n        constraintViolations.push(violation);\n      }\n      \n      // Apply constraint handling\n      if (this.parameters.constraintHandling === 'penalty') {\n        const totalPenalty = constraintViolations\n          .filter(v => v > 0)\n          .reduce((sum, v) => sum + v, 0) * this.parameters.penaltyCoefficient;\n        particle.fitness += totalPenalty;\n      }\n      \n      // Update personal best\n      if (particle.fitness < particle.personalBest.fitness) {\n        particle.personalBest.position = [...particle.position];\n        particle.personalBest.fitness = particle.fitness;\n        particle.stagnationCount = 0;\n      } else {\n        particle.stagnationCount++;\n      }\n      \n      this.evaluationCount++;\n      \n    } catch (error) {\n      console.error('Error evaluating particle:', error);\n      particle.fitness = Number.MAX_VALUE;\n    }\n  }\n\n  /**\n   * Convert particle to optimization variables\n   */\n  private particleToVariables(particle: Particle, variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\n    return variableTemplates.map((template, index) => ({\n      ...template,\n      currentValue: particle.position[index]\n    }));\n  }\n\n  /**\n   * Update swarm for one iteration\n   */\n  private async updateSwarm(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    if (!this.swarmState) return;\n    \n    // Update each particle\n    for (const particle of this.swarmState.particles) {\n      // Update velocity\n      this.updateParticleVelocity(particle, problem);\n      \n      // Update position\n      this.updateParticlePosition(particle, problem);\n      \n      // Evaluate new position\n      await this.evaluateParticle(particle, problem, objectiveFunction, constraintFunctions);\n      \n      // Update age\n      particle.age++;\n    }\n    \n    // Update global best\n    const newGlobalBest = this.findGlobalBest(this.swarmState.particles);\n    if (newGlobalBest.fitness < this.swarmState.globalBest.fitness) {\n      this.swarmState.globalBest = newGlobalBest;\n      this.updateBestSolution(problem);\n    }\n    \n    // Update swarm statistics\n    this.swarmState.averageFitness = this.calculateAverageFitness(this.swarmState.particles);\n    this.swarmState.diversityIndex = this.calculateDiversityIndex(this.swarmState.particles);\n    this.swarmState.iteration++;\n  }\n\n  /**\n   * Update particle velocity\n   */\n  private updateParticleVelocity(particle: Particle, problem: OptimizationProblem): void {\n    const [c1, c2] = this.parameters.accelerationCoefficients;\n    const w = this.getCurrentInertiaWeight();\n    \n    // Find neighborhood best\n    const neighborhoodBest = this.findNeighborhoodBest(particle);\n    \n    for (let i = 0; i < particle.velocity.length; i++) {\n      if (typeof particle.position[i] === 'number') {\n        const currentPos = particle.position[i] as number;\n        const personalBestPos = particle.personalBest.position[i] as number;\n        const neighborhoodBestPos = neighborhoodBest.position[i] as number;\n        \n        // PSO velocity update equation\n        const cognitive = c1 * this.random() * (personalBestPos - currentPos);\n        const social = c2 * this.random() * (neighborhoodBestPos - currentPos);\n        \n        particle.velocity[i] = w * particle.velocity[i] + cognitive + social;\n        \n        // Velocity clamping\n        const variable = problem.variables[i];\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n        const maxVel = this.parameters.maxVelocity * (max - min);\n        \n        particle.velocity[i] = Math.max(-maxVel, Math.min(maxVel, particle.velocity[i]));\n      }\n    }\n  }\n\n  /**\n   * Update particle position\n   */\n  private updateParticlePosition(particle: Particle, problem: OptimizationProblem): void {\n    for (let i = 0; i < particle.position.length; i++) {\n      const variable = problem.variables[i];\n      \n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        // Discrete variable - probabilistic update\n        if (this.random() < 0.1) { // 10% chance to change\n          const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n          particle.position[i] = variable.discreteValues[randomIndex];\n        }\n      } else if (typeof particle.position[i] === 'number') {\n        // Continuous variable\n        const newPos = (particle.position[i] as number) + particle.velocity[i];\n        \n        // Boundary handling\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n        \n        particle.position[i] = this.handleBoundary(newPos, min, max, particle.velocity[i], i);\n      }\n    }\n  }\n\n  /**\n   * Handle boundary violations\n   */\n  private handleBoundary(position: number, min: number, max: number, velocity: number, index: number): number {\n    switch (this.parameters.boundaryHandling) {\n      case 'reflect':\n        if (position < min) {\n          return min + (min - position);\n        } else if (position > max) {\n          return max - (position - max);\n        }\n        return position;\n        \n      case 'absorb':\n        return Math.max(min, Math.min(max, position));\n        \n      case 'invisible':\n        // Keep position but set velocity to zero if boundary violated\n        if (position < min || position > max) {\n          return Math.max(min, Math.min(max, position));\n        }\n        return position;\n        \n      case 'random':\n        if (position < min || position > max) {\n          return min + this.random() * (max - min);\n        }\n        return position;\n        \n      default:\n        return Math.max(min, Math.min(max, position));\n    }\n  }\n\n  /**\n   * Find global best particle\n   */\n  private findGlobalBest(particles: Particle[]): { position: (number | string)[]; fitness: number; particleId: string } {\n    const best = particles.reduce((best, current) => \n      current.fitness < best.fitness ? current : best\n    );\n    \n    return {\n      position: [...best.position],\n      fitness: best.fitness,\n      particleId: best.id\n    };\n  }\n\n  /**\n   * Find neighborhood best for a particle\n   */\n  private findNeighborhoodBest(particle: Particle): { position: (number | string)[]; fitness: number } {\n    if (!this.swarmState) return { position: particle.position, fitness: particle.fitness };\n    \n    switch (this.parameters.topology) {\n      case 'global':\n        return this.swarmState.globalBest;\n        \n      case 'local':\n      case 'ring':\n        // Find best among neighbors\n        let best = particle.personalBest;\n        for (const neighborId of particle.neighbors) {\n          const neighbor = this.swarmState.particles.find(p => p.id === neighborId);\n          if (neighbor && neighbor.personalBest.fitness < best.fitness) {\n            best = neighbor.personalBest;\n          }\n        }\n        return best;\n        \n      default:\n        return this.swarmState.globalBest;\n    }\n  }\n\n  /**\n   * Setup neighborhood topology\n   */\n  private setupTopology(): void {\n    if (!this.swarmState) return;\n    \n    const particles = this.swarmState.particles;\n    \n    switch (this.parameters.topology) {\n      case 'ring':\n        for (let i = 0; i < particles.length; i++) {\n          const prev = (i - 1 + particles.length) % particles.length;\n          const next = (i + 1) % particles.length;\n          particles[i].neighbors = [particles[prev].id, particles[next].id];\n        }\n        break;\n        \n      case 'local':\n        for (let i = 0; i < particles.length; i++) {\n          const neighbors: string[] = [];\n          for (let j = 0; j < this.parameters.neighborhoodSize && j < particles.length; j++) {\n            const neighborIndex = (i + j + 1) % particles.length;\n            if (neighborIndex !== i) {\n              neighbors.push(particles[neighborIndex].id);\n            }\n          }\n          particles[i].neighbors = neighbors;\n        }\n        break;\n        \n      case 'star':\n        // All particles connected to best particle\n        const bestParticle = this.findGlobalBest(particles);\n        for (const particle of particles) {\n          if (particle.id !== bestParticle.particleId) {\n            particle.neighbors = [bestParticle.particleId];\n          }\n        }\n        break;\n        \n      case 'random':\n        for (const particle of particles) {\n          const neighbors: string[] = [];\n          for (let j = 0; j < this.parameters.neighborhoodSize; j++) {\n            const randomIndex = Math.floor(this.random() * particles.length);\n            if (particles[randomIndex].id !== particle.id && \n                !neighbors.includes(particles[randomIndex].id)) {\n              neighbors.push(particles[randomIndex].id);\n            }\n          }\n          particle.neighbors = neighbors;\n        }\n        break;\n        \n      default: // global\n        // No explicit neighbors - all particles use global best\n        break;\n    }\n  }\n\n  /**\n   * Get current inertia weight (adaptive)\n   */\n  private getCurrentInertiaWeight(): number {\n    if (!this.parameters.adaptiveParameters || !this.swarmState) {\n      return this.parameters.inertiaWeight;\n    }\n    \n    // Linear decrease from max to min\n    const progress = this.swarmState.iteration / this.parameters.maxIterations;\n    return this.parameters.inertiaWeightMax - \n           progress * (this.parameters.inertiaWeightMax - this.parameters.inertiaWeightMin);\n  }\n\n  /**\n   * Adapt algorithm parameters\n   */\n  private adaptParameters(): void {\n    if (!this.swarmState) return;\n    \n    // Adapt based on diversity\n    if (this.swarmState.diversityIndex < 0.1) {\n      // Low diversity - increase exploration\n      this.parameters.inertiaWeight = Math.min(0.9, this.parameters.inertiaWeight * 1.1);\n      this.parameters.maxVelocity = Math.min(0.5, this.parameters.maxVelocity * 1.1);\n    } else if (this.swarmState.diversityIndex > 0.8) {\n      // High diversity - increase exploitation\n      this.parameters.inertiaWeight = Math.max(0.1, this.parameters.inertiaWeight * 0.9);\n      this.parameters.maxVelocity = Math.max(0.05, this.parameters.maxVelocity * 0.9);\n    }\n  }\n\n  /**\n   * Maintain swarm diversity\n   */\n  private maintainDiversity(problem: OptimizationProblem): void {\n    if (!this.swarmState) return;\n    \n    // Replace stagnant particles\n    for (const particle of this.swarmState.particles) {\n      if (particle.stagnationCount > 20) {\n        // Reinitialize particle\n        const newParticle = this.createRandomParticle(problem);\n        Object.assign(particle, newParticle);\n      }\n    }\n  }\n\n  /**\n   * Calculate average fitness\n   */\n  private calculateAverageFitness(particles: Particle[]): number {\n    const validFitnesses = particles.map(p => p.fitness).filter(f => f !== Number.MAX_VALUE);\n    return validFitnesses.length > 0 ? \n           validFitnesses.reduce((sum, f) => sum + f, 0) / validFitnesses.length : \n           Number.MAX_VALUE;\n  }\n\n  /**\n   * Calculate diversity index\n   */\n  private calculateDiversityIndex(particles: Particle[]): number {\n    if (particles.length < 2) return 0;\n    \n    let totalDistance = 0;\n    let pairCount = 0;\n    \n    for (let i = 0; i < particles.length; i++) {\n      for (let j = i + 1; j < particles.length; j++) {\n        const distance = this.calculateDistance(particles[i], particles[j]);\n        totalDistance += distance;\n        pairCount++;\n      }\n    }\n    \n    return pairCount > 0 ? totalDistance / pairCount : 0;\n  }\n\n  /**\n   * Calculate distance between particles\n   */\n  private calculateDistance(particle1: Particle, particle2: Particle): number {\n    let distance = 0;\n    \n    for (let i = 0; i < particle1.position.length; i++) {\n      if (typeof particle1.position[i] === 'number' && typeof particle2.position[i] === 'number') {\n        const diff = (particle1.position[i] as number) - (particle2.position[i] as number);\n        distance += diff * diff;\n      }\n    }\n    \n    return Math.sqrt(distance);\n  }\n\n  /**\n   * Update best solution\n   */\n  private updateBestSolution(problem: OptimizationProblem): void {\n    if (!this.swarmState) return;\n    \n    const bestParticle = this.swarmState.particles.find(p => p.id === this.swarmState!.globalBest.particleId);\n    if (!bestParticle) return;\n    \n    const variables: { [variableId: string]: number | string } = {};\n    problem.variables.forEach((variable, index) => {\n      variables[variable.id] = bestParticle.position[index];\n    });\n    \n    this.bestSolution = {\n      id: `pso_best_${Date.now()}`,\n      variables,\n      objectiveValues: {},\n      constraintViolations: [],\n      feasible: true,\n      fitness: bestParticle.fitness,\n      systemConfiguration: problem.systemConfiguration,\n      performanceMetrics: {} as SolutionPerformanceMetrics\n    };\n  }\n\n  /**\n   * Check termination criteria\n   */\n  private shouldTerminate(problem: OptimizationProblem): boolean {\n    if (!this.swarmState) return true;\n    \n    // Maximum iterations\n    if (this.swarmState.iteration >= this.parameters.maxIterations) {\n      return true;\n    }\n    \n    // Convergence check\n    if (this.history.length >= 20) {\n      const recentHistory = this.history.slice(-20);\n      const fitnessImprovement = recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness;\n      \n      if (Math.abs(fitnessImprovement) < problem.convergenceCriteria.toleranceValue) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n\n  /**\n   * Update optimization history\n   */\n  private updateHistory(): void {\n    if (!this.swarmState) return;\n    \n    const feasibleParticles = this.swarmState.particles.filter(p => p.fitness !== Number.MAX_VALUE);\n    const fitnesses = feasibleParticles.map(p => p.fitness);\n    \n    if (fitnesses.length === 0) {\n      fitnesses.push(Number.MAX_VALUE);\n    }\n    \n    const history: IterationHistory = {\n      iteration: this.swarmState.iteration,\n      bestFitness: Math.min(...fitnesses),\n      averageFitness: this.swarmState.averageFitness,\n      worstFitness: Math.max(...fitnesses),\n      diversity: this.swarmState.diversityIndex,\n      constraintViolations: this.swarmState.particles.filter(p => p.fitness === Number.MAX_VALUE).length,\n      timestamp: new Date()\n    };\n    \n    this.history.push(history);\n  }\n\n  /**\n   * Create optimization result\n   */\n  private createOptimizationResult(problem: OptimizationProblem, startTime: number): OptimizationResult {\n    const executionTime = performance.now() - startTime;\n    \n    const statistics: OptimizationStatistics = {\n      totalIterations: this.swarmState?.iteration || 0,\n      totalEvaluations: this.evaluationCount,\n      convergenceIteration: this.swarmState?.iteration || 0,\n      executionTime,\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\n      diversityHistory: this.history.map(h => h.diversity),\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\n      algorithmSpecificStats: {\n        swarmSize: this.parameters.swarmSize,\n        finalInertiaWeight: this.getCurrentInertiaWeight(),\n        finalDiversityIndex: this.swarmState?.diversityIndex || 0\n      }\n    };\n    \n    const optimizationHistory: OptimizationHistory = {\n      iterations: this.history,\n      populationHistory: this.populationHistory,\n      parameterHistory: [],\n      convergenceMetrics: []\n    };\n    \n    return {\n      problemId: problem.id,\n      status: OptimizationStatus.CONVERGED,\n      bestSolution: this.bestSolution!,\n      statistics,\n      history: optimizationHistory,\n      analysis: {},\n      recommendations: [],\n      warnings: [],\n      errors: []\n    };\n  }\n\n  // Utility methods\n  private generateParticleId(): string {\n    return `pso_particle_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private createSeededRandom(seed: number): () => number {\n    let state = seed;\n    return () => {\n      state = (state * 9301 + 49297) % 233280;\n      return state / 233280;\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c6802797150d5659affa59b9d9ae3baf10eb6ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uuovm1r7k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uuovm1r7k();
cov_uuovm1r7k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uuovm1r7k().s[1]++;
exports.ParticleSwarmOptimization = void 0;
const SystemOptimizationTypes_1 =
/* istanbul ignore next */
(cov_uuovm1r7k().s[2]++, require("../types/SystemOptimizationTypes"));
/**
 * Particle Swarm Optimization algorithm for single and multi-objective optimization
 */
class ParticleSwarmOptimization {
  constructor(parameters) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[0]++;
    cov_uuovm1r7k().s[3]++;
    this.swarmState = null;
    /* istanbul ignore next */
    cov_uuovm1r7k().s[4]++;
    this.bestSolution = null;
    /* istanbul ignore next */
    cov_uuovm1r7k().s[5]++;
    this.history = [];
    /* istanbul ignore next */
    cov_uuovm1r7k().s[6]++;
    this.populationHistory = [];
    /* istanbul ignore next */
    cov_uuovm1r7k().s[7]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_uuovm1r7k().s[8]++;
    this.parameters = {
      swarmSize: 30,
      maxIterations: 100,
      inertiaWeight: 0.9,
      inertiaWeightMin: 0.1,
      inertiaWeightMax: 0.9,
      accelerationCoefficients: [2.0, 2.0],
      maxVelocity: 0.2,
      velocityClampingFactor: 0.5,
      topology: 'global',
      neighborhoodSize: 3,
      boundaryHandling: 'reflect',
      constraintHandling: 'penalty',
      penaltyCoefficient: 1000,
      adaptiveParameters: true,
      diversityMaintenance: true,
      eliteSize: 2,
      ...parameters
    };
    // Initialize random number generator
    /* istanbul ignore next */
    cov_uuovm1r7k().s[9]++;
    if (this.parameters.seedValue !== undefined) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[0][0]++;
      cov_uuovm1r7k().s[10]++;
      this.random = this.createSeededRandom(this.parameters.seedValue);
    } else {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[0][1]++;
      cov_uuovm1r7k().s[11]++;
      this.random = Math.random;
    }
  }
  /**
   * Main optimization method
   */
  async optimize(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[12]++, performance.now());
    /* istanbul ignore next */
    cov_uuovm1r7k().s[13]++;
    try {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[14]++;
      // Initialize algorithm
      this.initializeAlgorithm(problem);
      // Create initial swarm
      /* istanbul ignore next */
      cov_uuovm1r7k().s[15]++;
      await this.createInitialSwarm(problem, objectiveFunction, constraintFunctions);
      // Main optimization loop
      /* istanbul ignore next */
      cov_uuovm1r7k().s[16]++;
      while (!this.shouldTerminate(problem)) {
        /* istanbul ignore next */
        cov_uuovm1r7k().s[17]++;
        await this.updateSwarm(problem, objectiveFunction, constraintFunctions);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[18]++;
        this.updateHistory();
        /* istanbul ignore next */
        cov_uuovm1r7k().s[19]++;
        if (this.parameters.adaptiveParameters) {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[1][0]++;
          cov_uuovm1r7k().s[20]++;
          this.adaptParameters();
        } else
        /* istanbul ignore next */
        {
          cov_uuovm1r7k().b[1][1]++;
        }
        cov_uuovm1r7k().s[21]++;
        if (this.parameters.diversityMaintenance) {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[2][0]++;
          cov_uuovm1r7k().s[22]++;
          this.maintainDiversity(problem);
        } else
        /* istanbul ignore next */
        {
          cov_uuovm1r7k().b[2][1]++;
        }
      }
      // Create final result
      /* istanbul ignore next */
      cov_uuovm1r7k().s[23]++;
      return this.createOptimizationResult(problem, startTime);
    } catch (error) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[24]++;
      console.error('Particle swarm optimization failed:', error);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[25]++;
      throw error;
    }
  }
  /**
   * Initialize algorithm state
   */
  initializeAlgorithm(problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[2]++;
    cov_uuovm1r7k().s[26]++;
    this.swarmState = null;
    /* istanbul ignore next */
    cov_uuovm1r7k().s[27]++;
    this.bestSolution = null;
    /* istanbul ignore next */
    cov_uuovm1r7k().s[28]++;
    this.history = [];
    /* istanbul ignore next */
    cov_uuovm1r7k().s[29]++;
    this.populationHistory = [];
    /* istanbul ignore next */
    cov_uuovm1r7k().s[30]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_uuovm1r7k().s[31]++;
    console.log(`Initializing Particle Swarm Optimization with swarm size: ${this.parameters.swarmSize}`);
  }
  /**
   * Create initial swarm
   */
  async createInitialSwarm(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[3]++;
    const particles =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[32]++, []);
    // Create particles
    /* istanbul ignore next */
    cov_uuovm1r7k().s[33]++;
    for (let i =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[34]++, 0); i < this.parameters.swarmSize; i++) {
      const particle =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[35]++, this.createRandomParticle(problem));
      /* istanbul ignore next */
      cov_uuovm1r7k().s[36]++;
      await this.evaluateParticle(particle, problem, objectiveFunction, constraintFunctions);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[37]++;
      particles.push(particle);
    }
    // Initialize swarm state
    /* istanbul ignore next */
    cov_uuovm1r7k().s[38]++;
    this.swarmState = {
      particles,
      globalBest: this.findGlobalBest(particles),
      iteration: 0,
      averageFitness: this.calculateAverageFitness(particles),
      diversityIndex: this.calculateDiversityIndex(particles),
      convergenceRate: 0
    };
    // Set up neighborhood topology
    /* istanbul ignore next */
    cov_uuovm1r7k().s[39]++;
    this.setupTopology();
    // Convert best particle to optimization solution
    /* istanbul ignore next */
    cov_uuovm1r7k().s[40]++;
    this.updateBestSolution(problem);
  }
  /**
   * Create a random particle
   */
  createRandomParticle(problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[4]++;
    const position =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[41]++, []);
    const velocity =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[42]++, []);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[43]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[44]++;
      if (
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[4][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[4][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[3][0]++;
        // Discrete variable
        const randomIndex =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[45]++, Math.floor(this.random() * variable.discreteValues.length));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[46]++;
        position.push(variable.discreteValues[randomIndex]);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[47]++;
        velocity.push(0); // No velocity for discrete variables
      } else {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[3][1]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[48]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[5][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[5][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[49]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[6][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[6][1]++, 1));
        const pos =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[50]++, min + this.random() * (max - min));
        const vel =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[51]++, (this.random() - 0.5) * this.parameters.maxVelocity * (max - min));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[52]++;
        position.push(pos);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[53]++;
        velocity.push(vel);
      }
    }
    const particle =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[54]++, {
      id: this.generateParticleId(),
      position,
      velocity,
      fitness: Number.MAX_VALUE,
      personalBest: {
        position: [...position],
        fitness: Number.MAX_VALUE
      },
      neighbors: [],
      age: 0,
      stagnationCount: 0
    });
    /* istanbul ignore next */
    cov_uuovm1r7k().s[55]++;
    return particle;
  }
  /**
   * Evaluate particle fitness
   */
  async evaluateParticle(particle, problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[5]++;
    cov_uuovm1r7k().s[56]++;
    try {
      // Convert particle position to optimization variables
      const variables =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[57]++, this.particleToVariables(particle, problem.variables));
      // Evaluate objective function
      const objectiveValue =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[58]++, objectiveFunction(variables));
      /* istanbul ignore next */
      cov_uuovm1r7k().s[59]++;
      particle.fitness = objectiveValue;
      // Evaluate constraints
      const constraintViolations =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[60]++, []);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[61]++;
      for (const constraintFunction of constraintFunctions) {
        const violation =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[62]++, constraintFunction(variables));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[63]++;
        constraintViolations.push(violation);
      }
      // Apply constraint handling
      /* istanbul ignore next */
      cov_uuovm1r7k().s[64]++;
      if (this.parameters.constraintHandling === 'penalty') {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[7][0]++;
        const totalPenalty =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[65]++, constraintViolations.filter(v => {
          /* istanbul ignore next */
          cov_uuovm1r7k().f[6]++;
          cov_uuovm1r7k().s[66]++;
          return v > 0;
        }).reduce((sum, v) => {
          /* istanbul ignore next */
          cov_uuovm1r7k().f[7]++;
          cov_uuovm1r7k().s[67]++;
          return sum + v;
        }, 0) * this.parameters.penaltyCoefficient);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[68]++;
        particle.fitness += totalPenalty;
      } else
      /* istanbul ignore next */
      {
        cov_uuovm1r7k().b[7][1]++;
      }
      // Update personal best
      cov_uuovm1r7k().s[69]++;
      if (particle.fitness < particle.personalBest.fitness) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[8][0]++;
        cov_uuovm1r7k().s[70]++;
        particle.personalBest.position = [...particle.position];
        /* istanbul ignore next */
        cov_uuovm1r7k().s[71]++;
        particle.personalBest.fitness = particle.fitness;
        /* istanbul ignore next */
        cov_uuovm1r7k().s[72]++;
        particle.stagnationCount = 0;
      } else {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[8][1]++;
        cov_uuovm1r7k().s[73]++;
        particle.stagnationCount++;
      }
      /* istanbul ignore next */
      cov_uuovm1r7k().s[74]++;
      this.evaluationCount++;
    } catch (error) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[75]++;
      console.error('Error evaluating particle:', error);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[76]++;
      particle.fitness = Number.MAX_VALUE;
    }
  }
  /**
   * Convert particle to optimization variables
   */
  particleToVariables(particle, variableTemplates) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[8]++;
    cov_uuovm1r7k().s[77]++;
    return variableTemplates.map((template, index) => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[9]++;
      cov_uuovm1r7k().s[78]++;
      return {
        ...template,
        currentValue: particle.position[index]
      };
    });
  }
  /**
   * Update swarm for one iteration
   */
  async updateSwarm(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[10]++;
    cov_uuovm1r7k().s[79]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[9][0]++;
      cov_uuovm1r7k().s[80]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[9][1]++;
    }
    // Update each particle
    cov_uuovm1r7k().s[81]++;
    for (const particle of this.swarmState.particles) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[82]++;
      // Update velocity
      this.updateParticleVelocity(particle, problem);
      // Update position
      /* istanbul ignore next */
      cov_uuovm1r7k().s[83]++;
      this.updateParticlePosition(particle, problem);
      // Evaluate new position
      /* istanbul ignore next */
      cov_uuovm1r7k().s[84]++;
      await this.evaluateParticle(particle, problem, objectiveFunction, constraintFunctions);
      // Update age
      /* istanbul ignore next */
      cov_uuovm1r7k().s[85]++;
      particle.age++;
    }
    // Update global best
    const newGlobalBest =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[86]++, this.findGlobalBest(this.swarmState.particles));
    /* istanbul ignore next */
    cov_uuovm1r7k().s[87]++;
    if (newGlobalBest.fitness < this.swarmState.globalBest.fitness) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[10][0]++;
      cov_uuovm1r7k().s[88]++;
      this.swarmState.globalBest = newGlobalBest;
      /* istanbul ignore next */
      cov_uuovm1r7k().s[89]++;
      this.updateBestSolution(problem);
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[10][1]++;
    }
    // Update swarm statistics
    cov_uuovm1r7k().s[90]++;
    this.swarmState.averageFitness = this.calculateAverageFitness(this.swarmState.particles);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[91]++;
    this.swarmState.diversityIndex = this.calculateDiversityIndex(this.swarmState.particles);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[92]++;
    this.swarmState.iteration++;
  }
  /**
   * Update particle velocity
   */
  updateParticleVelocity(particle, problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[11]++;
    const [c1, c2] =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[93]++, this.parameters.accelerationCoefficients);
    const w =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[94]++, this.getCurrentInertiaWeight());
    // Find neighborhood best
    const neighborhoodBest =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[95]++, this.findNeighborhoodBest(particle));
    /* istanbul ignore next */
    cov_uuovm1r7k().s[96]++;
    for (let i =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[97]++, 0); i < particle.velocity.length; i++) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[98]++;
      if (typeof particle.position[i] === 'number') {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[11][0]++;
        const currentPos =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[99]++, particle.position[i]);
        const personalBestPos =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[100]++, particle.personalBest.position[i]);
        const neighborhoodBestPos =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[101]++, neighborhoodBest.position[i]);
        // PSO velocity update equation
        const cognitive =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[102]++, c1 * this.random() * (personalBestPos - currentPos));
        const social =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[103]++, c2 * this.random() * (neighborhoodBestPos - currentPos));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[104]++;
        particle.velocity[i] = w * particle.velocity[i] + cognitive + social;
        // Velocity clamping
        const variable =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[105]++, problem.variables[i]);
        const min =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[106]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[12][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[12][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[107]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[13][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[13][1]++, 1));
        const maxVel =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[108]++, this.parameters.maxVelocity * (max - min));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[109]++;
        particle.velocity[i] = Math.max(-maxVel, Math.min(maxVel, particle.velocity[i]));
      } else
      /* istanbul ignore next */
      {
        cov_uuovm1r7k().b[11][1]++;
      }
    }
  }
  /**
   * Update particle position
   */
  updateParticlePosition(particle, problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[12]++;
    cov_uuovm1r7k().s[110]++;
    for (let i =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[111]++, 0); i < particle.position.length; i++) {
      const variable =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[112]++, problem.variables[i]);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[113]++;
      if (
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[15][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[15][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[14][0]++;
        cov_uuovm1r7k().s[114]++;
        // Discrete variable - probabilistic update
        if (this.random() < 0.1) {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[16][0]++;
          // 10% chance to change
          const randomIndex =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[115]++, Math.floor(this.random() * variable.discreteValues.length));
          /* istanbul ignore next */
          cov_uuovm1r7k().s[116]++;
          particle.position[i] = variable.discreteValues[randomIndex];
        } else
        /* istanbul ignore next */
        {
          cov_uuovm1r7k().b[16][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[14][1]++;
        cov_uuovm1r7k().s[117]++;
        if (typeof particle.position[i] === 'number') {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[17][0]++;
          // Continuous variable
          const newPos =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[118]++, particle.position[i] + particle.velocity[i]);
          // Boundary handling
          const min =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[119]++, typeof variable.bounds.minimum === 'number' ?
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[18][0]++, variable.bounds.minimum) :
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[18][1]++, 0));
          const max =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[120]++, typeof variable.bounds.maximum === 'number' ?
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[19][0]++, variable.bounds.maximum) :
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[19][1]++, 1));
          /* istanbul ignore next */
          cov_uuovm1r7k().s[121]++;
          particle.position[i] = this.handleBoundary(newPos, min, max, particle.velocity[i], i);
        } else
        /* istanbul ignore next */
        {
          cov_uuovm1r7k().b[17][1]++;
        }
      }
    }
  }
  /**
   * Handle boundary violations
   */
  handleBoundary(position, min, max, velocity, index) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[13]++;
    cov_uuovm1r7k().s[122]++;
    switch (this.parameters.boundaryHandling) {
      case 'reflect':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[20][0]++;
        cov_uuovm1r7k().s[123]++;
        if (position < min) {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[21][0]++;
          cov_uuovm1r7k().s[124]++;
          return min + (min - position);
        } else {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[21][1]++;
          cov_uuovm1r7k().s[125]++;
          if (position > max) {
            /* istanbul ignore next */
            cov_uuovm1r7k().b[22][0]++;
            cov_uuovm1r7k().s[126]++;
            return max - (position - max);
          } else
          /* istanbul ignore next */
          {
            cov_uuovm1r7k().b[22][1]++;
          }
        }
        /* istanbul ignore next */
        cov_uuovm1r7k().s[127]++;
        return position;
      case 'absorb':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[20][1]++;
        cov_uuovm1r7k().s[128]++;
        return Math.max(min, Math.min(max, position));
      case 'invisible':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[20][2]++;
        cov_uuovm1r7k().s[129]++;
        // Keep position but set velocity to zero if boundary violated
        if (
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[24][0]++, position < min) ||
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[24][1]++, position > max)) {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[23][0]++;
          cov_uuovm1r7k().s[130]++;
          return Math.max(min, Math.min(max, position));
        } else
        /* istanbul ignore next */
        {
          cov_uuovm1r7k().b[23][1]++;
        }
        cov_uuovm1r7k().s[131]++;
        return position;
      case 'random':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[20][3]++;
        cov_uuovm1r7k().s[132]++;
        if (
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[26][0]++, position < min) ||
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[26][1]++, position > max)) {
          /* istanbul ignore next */
          cov_uuovm1r7k().b[25][0]++;
          cov_uuovm1r7k().s[133]++;
          return min + this.random() * (max - min);
        } else
        /* istanbul ignore next */
        {
          cov_uuovm1r7k().b[25][1]++;
        }
        cov_uuovm1r7k().s[134]++;
        return position;
      default:
        /* istanbul ignore next */
        cov_uuovm1r7k().b[20][4]++;
        cov_uuovm1r7k().s[135]++;
        return Math.max(min, Math.min(max, position));
    }
  }
  /**
   * Find global best particle
   */
  findGlobalBest(particles) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[14]++;
    const best =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[136]++, particles.reduce((best, current) => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[15]++;
      cov_uuovm1r7k().s[137]++;
      return current.fitness < best.fitness ?
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[27][0]++, current) :
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[27][1]++, best);
    }));
    /* istanbul ignore next */
    cov_uuovm1r7k().s[138]++;
    return {
      position: [...best.position],
      fitness: best.fitness,
      particleId: best.id
    };
  }
  /**
   * Find neighborhood best for a particle
   */
  findNeighborhoodBest(particle) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[16]++;
    cov_uuovm1r7k().s[139]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[28][0]++;
      cov_uuovm1r7k().s[140]++;
      return {
        position: particle.position,
        fitness: particle.fitness
      };
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[28][1]++;
    }
    cov_uuovm1r7k().s[141]++;
    switch (this.parameters.topology) {
      case 'global':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[29][0]++;
        cov_uuovm1r7k().s[142]++;
        return this.swarmState.globalBest;
      case 'local':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[29][1]++;
      case 'ring':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[29][2]++;
        // Find best among neighbors
        let best =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[143]++, particle.personalBest);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[144]++;
        for (const neighborId of particle.neighbors) {
          const neighbor =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[145]++, this.swarmState.particles.find(p => {
            /* istanbul ignore next */
            cov_uuovm1r7k().f[17]++;
            cov_uuovm1r7k().s[146]++;
            return p.id === neighborId;
          }));
          /* istanbul ignore next */
          cov_uuovm1r7k().s[147]++;
          if (
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[31][0]++, neighbor) &&
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[31][1]++, neighbor.personalBest.fitness < best.fitness)) {
            /* istanbul ignore next */
            cov_uuovm1r7k().b[30][0]++;
            cov_uuovm1r7k().s[148]++;
            best = neighbor.personalBest;
          } else
          /* istanbul ignore next */
          {
            cov_uuovm1r7k().b[30][1]++;
          }
        }
        /* istanbul ignore next */
        cov_uuovm1r7k().s[149]++;
        return best;
      default:
        /* istanbul ignore next */
        cov_uuovm1r7k().b[29][3]++;
        cov_uuovm1r7k().s[150]++;
        return this.swarmState.globalBest;
    }
  }
  /**
   * Setup neighborhood topology
   */
  setupTopology() {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[18]++;
    cov_uuovm1r7k().s[151]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[32][0]++;
      cov_uuovm1r7k().s[152]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[32][1]++;
    }
    const particles =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[153]++, this.swarmState.particles);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[154]++;
    switch (this.parameters.topology) {
      case 'ring':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[33][0]++;
        cov_uuovm1r7k().s[155]++;
        for (let i =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[156]++, 0); i < particles.length; i++) {
          const prev =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[157]++, (i - 1 + particles.length) % particles.length);
          const next =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[158]++, (i + 1) % particles.length);
          /* istanbul ignore next */
          cov_uuovm1r7k().s[159]++;
          particles[i].neighbors = [particles[prev].id, particles[next].id];
        }
        /* istanbul ignore next */
        cov_uuovm1r7k().s[160]++;
        break;
      case 'local':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[33][1]++;
        cov_uuovm1r7k().s[161]++;
        for (let i =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[162]++, 0); i < particles.length; i++) {
          const neighbors =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[163]++, []);
          /* istanbul ignore next */
          cov_uuovm1r7k().s[164]++;
          for (let j =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[165]++, 0);
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[34][0]++, j < this.parameters.neighborhoodSize) &&
          /* istanbul ignore next */
          (cov_uuovm1r7k().b[34][1]++, j < particles.length); j++) {
            const neighborIndex =
            /* istanbul ignore next */
            (cov_uuovm1r7k().s[166]++, (i + j + 1) % particles.length);
            /* istanbul ignore next */
            cov_uuovm1r7k().s[167]++;
            if (neighborIndex !== i) {
              /* istanbul ignore next */
              cov_uuovm1r7k().b[35][0]++;
              cov_uuovm1r7k().s[168]++;
              neighbors.push(particles[neighborIndex].id);
            } else
            /* istanbul ignore next */
            {
              cov_uuovm1r7k().b[35][1]++;
            }
          }
          /* istanbul ignore next */
          cov_uuovm1r7k().s[169]++;
          particles[i].neighbors = neighbors;
        }
        /* istanbul ignore next */
        cov_uuovm1r7k().s[170]++;
        break;
      case 'star':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[33][2]++;
        // All particles connected to best particle
        const bestParticle =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[171]++, this.findGlobalBest(particles));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[172]++;
        for (const particle of particles) {
          /* istanbul ignore next */
          cov_uuovm1r7k().s[173]++;
          if (particle.id !== bestParticle.particleId) {
            /* istanbul ignore next */
            cov_uuovm1r7k().b[36][0]++;
            cov_uuovm1r7k().s[174]++;
            particle.neighbors = [bestParticle.particleId];
          } else
          /* istanbul ignore next */
          {
            cov_uuovm1r7k().b[36][1]++;
          }
        }
        /* istanbul ignore next */
        cov_uuovm1r7k().s[175]++;
        break;
      case 'random':
        /* istanbul ignore next */
        cov_uuovm1r7k().b[33][3]++;
        cov_uuovm1r7k().s[176]++;
        for (const particle of particles) {
          const neighbors =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[177]++, []);
          /* istanbul ignore next */
          cov_uuovm1r7k().s[178]++;
          for (let j =
          /* istanbul ignore next */
          (cov_uuovm1r7k().s[179]++, 0); j < this.parameters.neighborhoodSize; j++) {
            const randomIndex =
            /* istanbul ignore next */
            (cov_uuovm1r7k().s[180]++, Math.floor(this.random() * particles.length));
            /* istanbul ignore next */
            cov_uuovm1r7k().s[181]++;
            if (
            /* istanbul ignore next */
            (cov_uuovm1r7k().b[38][0]++, particles[randomIndex].id !== particle.id) &&
            /* istanbul ignore next */
            (cov_uuovm1r7k().b[38][1]++, !neighbors.includes(particles[randomIndex].id))) {
              /* istanbul ignore next */
              cov_uuovm1r7k().b[37][0]++;
              cov_uuovm1r7k().s[182]++;
              neighbors.push(particles[randomIndex].id);
            } else
            /* istanbul ignore next */
            {
              cov_uuovm1r7k().b[37][1]++;
            }
          }
          /* istanbul ignore next */
          cov_uuovm1r7k().s[183]++;
          particle.neighbors = neighbors;
        }
        /* istanbul ignore next */
        cov_uuovm1r7k().s[184]++;
        break;
      default:
        /* istanbul ignore next */
        cov_uuovm1r7k().b[33][4]++;
        cov_uuovm1r7k().s[185]++;
        // global
        // No explicit neighbors - all particles use global best
        break;
    }
  }
  /**
   * Get current inertia weight (adaptive)
   */
  getCurrentInertiaWeight() {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[19]++;
    cov_uuovm1r7k().s[186]++;
    if (
    /* istanbul ignore next */
    (cov_uuovm1r7k().b[40][0]++, !this.parameters.adaptiveParameters) ||
    /* istanbul ignore next */
    (cov_uuovm1r7k().b[40][1]++, !this.swarmState)) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[39][0]++;
      cov_uuovm1r7k().s[187]++;
      return this.parameters.inertiaWeight;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[39][1]++;
    }
    // Linear decrease from max to min
    const progress =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[188]++, this.swarmState.iteration / this.parameters.maxIterations);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[189]++;
    return this.parameters.inertiaWeightMax - progress * (this.parameters.inertiaWeightMax - this.parameters.inertiaWeightMin);
  }
  /**
   * Adapt algorithm parameters
   */
  adaptParameters() {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[20]++;
    cov_uuovm1r7k().s[190]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[41][0]++;
      cov_uuovm1r7k().s[191]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[41][1]++;
    }
    // Adapt based on diversity
    cov_uuovm1r7k().s[192]++;
    if (this.swarmState.diversityIndex < 0.1) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[42][0]++;
      cov_uuovm1r7k().s[193]++;
      // Low diversity - increase exploration
      this.parameters.inertiaWeight = Math.min(0.9, this.parameters.inertiaWeight * 1.1);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[194]++;
      this.parameters.maxVelocity = Math.min(0.5, this.parameters.maxVelocity * 1.1);
    } else {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[42][1]++;
      cov_uuovm1r7k().s[195]++;
      if (this.swarmState.diversityIndex > 0.8) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[43][0]++;
        cov_uuovm1r7k().s[196]++;
        // High diversity - increase exploitation
        this.parameters.inertiaWeight = Math.max(0.1, this.parameters.inertiaWeight * 0.9);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[197]++;
        this.parameters.maxVelocity = Math.max(0.05, this.parameters.maxVelocity * 0.9);
      } else
      /* istanbul ignore next */
      {
        cov_uuovm1r7k().b[43][1]++;
      }
    }
  }
  /**
   * Maintain swarm diversity
   */
  maintainDiversity(problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[21]++;
    cov_uuovm1r7k().s[198]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[44][0]++;
      cov_uuovm1r7k().s[199]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[44][1]++;
    }
    // Replace stagnant particles
    cov_uuovm1r7k().s[200]++;
    for (const particle of this.swarmState.particles) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[201]++;
      if (particle.stagnationCount > 20) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[45][0]++;
        // Reinitialize particle
        const newParticle =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[202]++, this.createRandomParticle(problem));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[203]++;
        Object.assign(particle, newParticle);
      } else
      /* istanbul ignore next */
      {
        cov_uuovm1r7k().b[45][1]++;
      }
    }
  }
  /**
   * Calculate average fitness
   */
  calculateAverageFitness(particles) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[22]++;
    const validFitnesses =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[204]++, particles.map(p => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[23]++;
      cov_uuovm1r7k().s[205]++;
      return p.fitness;
    }).filter(f => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[24]++;
      cov_uuovm1r7k().s[206]++;
      return f !== Number.MAX_VALUE;
    }));
    /* istanbul ignore next */
    cov_uuovm1r7k().s[207]++;
    return validFitnesses.length > 0 ?
    /* istanbul ignore next */
    (cov_uuovm1r7k().b[46][0]++, validFitnesses.reduce((sum, f) => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[25]++;
      cov_uuovm1r7k().s[208]++;
      return sum + f;
    }, 0) / validFitnesses.length) :
    /* istanbul ignore next */
    (cov_uuovm1r7k().b[46][1]++, Number.MAX_VALUE);
  }
  /**
   * Calculate diversity index
   */
  calculateDiversityIndex(particles) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[26]++;
    cov_uuovm1r7k().s[209]++;
    if (particles.length < 2) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[47][0]++;
      cov_uuovm1r7k().s[210]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[47][1]++;
    }
    let totalDistance =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[211]++, 0);
    let pairCount =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[212]++, 0);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[213]++;
    for (let i =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[214]++, 0); i < particles.length; i++) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[215]++;
      for (let j =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[216]++, i + 1); j < particles.length; j++) {
        const distance =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[217]++, this.calculateDistance(particles[i], particles[j]));
        /* istanbul ignore next */
        cov_uuovm1r7k().s[218]++;
        totalDistance += distance;
        /* istanbul ignore next */
        cov_uuovm1r7k().s[219]++;
        pairCount++;
      }
    }
    /* istanbul ignore next */
    cov_uuovm1r7k().s[220]++;
    return pairCount > 0 ?
    /* istanbul ignore next */
    (cov_uuovm1r7k().b[48][0]++, totalDistance / pairCount) :
    /* istanbul ignore next */
    (cov_uuovm1r7k().b[48][1]++, 0);
  }
  /**
   * Calculate distance between particles
   */
  calculateDistance(particle1, particle2) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[27]++;
    let distance =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[221]++, 0);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[222]++;
    for (let i =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[223]++, 0); i < particle1.position.length; i++) {
      /* istanbul ignore next */
      cov_uuovm1r7k().s[224]++;
      if (
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[50][0]++, typeof particle1.position[i] === 'number') &&
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[50][1]++, typeof particle2.position[i] === 'number')) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[49][0]++;
        const diff =
        /* istanbul ignore next */
        (cov_uuovm1r7k().s[225]++, particle1.position[i] - particle2.position[i]);
        /* istanbul ignore next */
        cov_uuovm1r7k().s[226]++;
        distance += diff * diff;
      } else
      /* istanbul ignore next */
      {
        cov_uuovm1r7k().b[49][1]++;
      }
    }
    /* istanbul ignore next */
    cov_uuovm1r7k().s[227]++;
    return Math.sqrt(distance);
  }
  /**
   * Update best solution
   */
  updateBestSolution(problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[28]++;
    cov_uuovm1r7k().s[228]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[51][0]++;
      cov_uuovm1r7k().s[229]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[51][1]++;
    }
    const bestParticle =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[230]++, this.swarmState.particles.find(p => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[29]++;
      cov_uuovm1r7k().s[231]++;
      return p.id === this.swarmState.globalBest.particleId;
    }));
    /* istanbul ignore next */
    cov_uuovm1r7k().s[232]++;
    if (!bestParticle) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[52][0]++;
      cov_uuovm1r7k().s[233]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[52][1]++;
    }
    const variables =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[234]++, {});
    /* istanbul ignore next */
    cov_uuovm1r7k().s[235]++;
    problem.variables.forEach((variable, index) => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[30]++;
      cov_uuovm1r7k().s[236]++;
      variables[variable.id] = bestParticle.position[index];
    });
    /* istanbul ignore next */
    cov_uuovm1r7k().s[237]++;
    this.bestSolution = {
      id: `pso_best_${Date.now()}`,
      variables,
      objectiveValues: {},
      constraintViolations: [],
      feasible: true,
      fitness: bestParticle.fitness,
      systemConfiguration: problem.systemConfiguration,
      performanceMetrics: {}
    };
  }
  /**
   * Check termination criteria
   */
  shouldTerminate(problem) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[31]++;
    cov_uuovm1r7k().s[238]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[53][0]++;
      cov_uuovm1r7k().s[239]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[53][1]++;
    }
    // Maximum iterations
    cov_uuovm1r7k().s[240]++;
    if (this.swarmState.iteration >= this.parameters.maxIterations) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[54][0]++;
      cov_uuovm1r7k().s[241]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[54][1]++;
    }
    // Convergence check
    cov_uuovm1r7k().s[242]++;
    if (this.history.length >= 20) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[55][0]++;
      const recentHistory =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[243]++, this.history.slice(-20));
      const fitnessImprovement =
      /* istanbul ignore next */
      (cov_uuovm1r7k().s[244]++, recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness);
      /* istanbul ignore next */
      cov_uuovm1r7k().s[245]++;
      if (Math.abs(fitnessImprovement) < problem.convergenceCriteria.toleranceValue) {
        /* istanbul ignore next */
        cov_uuovm1r7k().b[56][0]++;
        cov_uuovm1r7k().s[246]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_uuovm1r7k().b[56][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[55][1]++;
    }
    cov_uuovm1r7k().s[247]++;
    return false;
  }
  /**
   * Update optimization history
   */
  updateHistory() {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[32]++;
    cov_uuovm1r7k().s[248]++;
    if (!this.swarmState) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[57][0]++;
      cov_uuovm1r7k().s[249]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[57][1]++;
    }
    const feasibleParticles =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[250]++, this.swarmState.particles.filter(p => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[33]++;
      cov_uuovm1r7k().s[251]++;
      return p.fitness !== Number.MAX_VALUE;
    }));
    const fitnesses =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[252]++, feasibleParticles.map(p => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[34]++;
      cov_uuovm1r7k().s[253]++;
      return p.fitness;
    }));
    /* istanbul ignore next */
    cov_uuovm1r7k().s[254]++;
    if (fitnesses.length === 0) {
      /* istanbul ignore next */
      cov_uuovm1r7k().b[58][0]++;
      cov_uuovm1r7k().s[255]++;
      fitnesses.push(Number.MAX_VALUE);
    } else
    /* istanbul ignore next */
    {
      cov_uuovm1r7k().b[58][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[256]++, {
      iteration: this.swarmState.iteration,
      bestFitness: Math.min(...fitnesses),
      averageFitness: this.swarmState.averageFitness,
      worstFitness: Math.max(...fitnesses),
      diversity: this.swarmState.diversityIndex,
      constraintViolations: this.swarmState.particles.filter(p => {
        /* istanbul ignore next */
        cov_uuovm1r7k().f[35]++;
        cov_uuovm1r7k().s[257]++;
        return p.fitness === Number.MAX_VALUE;
      }).length,
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_uuovm1r7k().s[258]++;
    this.history.push(history);
  }
  /**
   * Create optimization result
   */
  createOptimizationResult(problem, startTime) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[36]++;
    const executionTime =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[259]++, performance.now() - startTime);
    const statistics =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[260]++, {
      totalIterations:
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[59][0]++, this.swarmState?.iteration) ||
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[59][1]++, 0),
      totalEvaluations: this.evaluationCount,
      convergenceIteration:
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[60][0]++, this.swarmState?.iteration) ||
      /* istanbul ignore next */
      (cov_uuovm1r7k().b[60][1]++, 0),
      executionTime,
      bestFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_uuovm1r7k().f[37]++;
        cov_uuovm1r7k().s[261]++;
        return h.bestFitness;
      }),
      averageFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_uuovm1r7k().f[38]++;
        cov_uuovm1r7k().s[262]++;
        return h.averageFitness;
      }),
      diversityHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_uuovm1r7k().f[39]++;
        cov_uuovm1r7k().s[263]++;
        return h.diversity;
      }),
      constraintViolationHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_uuovm1r7k().f[40]++;
        cov_uuovm1r7k().s[264]++;
        return h.constraintViolations;
      }),
      algorithmSpecificStats: {
        swarmSize: this.parameters.swarmSize,
        finalInertiaWeight: this.getCurrentInertiaWeight(),
        finalDiversityIndex:
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[61][0]++, this.swarmState?.diversityIndex) ||
        /* istanbul ignore next */
        (cov_uuovm1r7k().b[61][1]++, 0)
      }
    });
    const optimizationHistory =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[265]++, {
      iterations: this.history,
      populationHistory: this.populationHistory,
      parameterHistory: [],
      convergenceMetrics: []
    });
    /* istanbul ignore next */
    cov_uuovm1r7k().s[266]++;
    return {
      problemId: problem.id,
      status: SystemOptimizationTypes_1.OptimizationStatus.CONVERGED,
      bestSolution: this.bestSolution,
      statistics,
      history: optimizationHistory,
      analysis: {},
      recommendations: [],
      warnings: [],
      errors: []
    };
  }
  // Utility methods
  generateParticleId() {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[41]++;
    cov_uuovm1r7k().s[267]++;
    return `pso_particle_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  createSeededRandom(seed) {
    /* istanbul ignore next */
    cov_uuovm1r7k().f[42]++;
    let state =
    /* istanbul ignore next */
    (cov_uuovm1r7k().s[268]++, seed);
    /* istanbul ignore next */
    cov_uuovm1r7k().s[269]++;
    return () => {
      /* istanbul ignore next */
      cov_uuovm1r7k().f[43]++;
      cov_uuovm1r7k().s[270]++;
      state = (state * 9301 + 49297) % 233280;
      /* istanbul ignore next */
      cov_uuovm1r7k().s[271]++;
      return state / 233280;
    };
  }
}
/* istanbul ignore next */
cov_uuovm1r7k().s[272]++;
exports.ParticleSwarmOptimization = ParticleSwarmOptimization;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,