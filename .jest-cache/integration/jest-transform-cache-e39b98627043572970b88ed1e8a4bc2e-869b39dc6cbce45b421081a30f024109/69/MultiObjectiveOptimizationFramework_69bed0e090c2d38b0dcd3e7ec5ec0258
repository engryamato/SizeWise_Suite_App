def1026ce7c83ed13350a641617d073d
"use strict";

/**
 * Multi-objective Optimization Framework for System Optimization
 *
 * Implements comprehensive multi-objective optimization with:
 * - NSGA-II (Non-dominated Sorting Genetic Algorithm II)
 * - Pareto front analysis and visualization
 * - Trade-off analysis and knee point identification
 * - Multi-criteria decision making support
 * - Weighted sum aggregation methods
 * - Constraint handling for multi-objective problems
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_2n5trddhjt() {
  var path = "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\MultiObjectiveOptimizationFramework.ts";
  var hash = "2805d7f4f895f37ca9c5faa110418280e4641db9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\MultiObjectiveOptimizationFramework.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "1": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "2": {
        start: {
          line: 18,
          column: 34
        },
        end: {
          line: 18,
          column: 76
        }
      },
      "3": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 67
        }
      },
      "4": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "5": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "7": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "10": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "11": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 77
        }
      },
      "12": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "13": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "14": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "15": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 76
        }
      },
      "16": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 46
        }
      },
      "17": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 97
        }
      },
      "18": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "19": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 94
        }
      },
      "20": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 37
        }
      },
      "21": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 41
        }
      },
      "22": {
        start: {
          line: 83,
          column: 37
        },
        end: {
          line: 83,
          column: 67
        }
      },
      "23": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 89
        }
      },
      "24": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 73
        }
      },
      "25": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "26": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "27": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 100
        }
      },
      "28": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "29": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 91
        }
      },
      "30": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 33
        }
      },
      "31": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 32
        }
      },
      "32": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "33": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 36
        }
      },
      "34": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 33
        }
      },
      "35": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 152
        }
      },
      "36": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 29
        }
      },
      "37": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "38": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 120,
          column: 22
        }
      },
      "39": {
        start: {
          line: 121,
          column: 31
        },
        end: {
          line: 121,
          column: 67
        }
      },
      "40": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 104
        }
      },
      "41": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 40
        }
      },
      "42": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 56
        }
      },
      "43": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "44": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 77
        }
      },
      "45": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "46": {
        start: {
          line: 146,
          column: 26
        },
        end: {
          line: 146,
          column: 28
        }
      },
      "47": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "48": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "49": {
        start: {
          line: 150,
          column: 36
        },
        end: {
          line: 150,
          column: 94
        }
      },
      "50": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 78
        }
      },
      "51": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 101
        }
      },
      "52": {
        start: {
          line: 156,
          column: 28
        },
        end: {
          line: 156,
          column: 101
        }
      },
      "53": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 75
        }
      },
      "54": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 174,
          column: 10
        }
      },
      "55": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "56": {
        start: {
          line: 182,
          column: 30
        },
        end: {
          line: 182,
          column: 87
        }
      },
      "57": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 39
        }
      },
      "58": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "59": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 185,
          column: 26
        }
      },
      "60": {
        start: {
          line: 186,
          column: 39
        },
        end: {
          line: 186,
          column: 71
        }
      },
      "61": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 59
        }
      },
      "62": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "63": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 101
        }
      },
      "64": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 93
        }
      },
      "65": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 49
        }
      },
      "66": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "67": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 197,
          column: 26
        }
      },
      "68": {
        start: {
          line: 198,
          column: 34
        },
        end: {
          line: 198,
          column: 67
        }
      },
      "69": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "70": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 98
        }
      },
      "71": {
        start: {
          line: 209,
          column: 77
        },
        end: {
          line: 209,
          column: 96
        }
      },
      "72": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "73": {
        start: {
          line: 212,
          column: 37
        },
        end: {
          line: 214,
          column: 59
        }
      },
      "74": {
        start: {
          line: 213,
          column: 33
        },
        end: {
          line: 213,
          column: 51
        }
      },
      "75": {
        start: {
          line: 214,
          column: 40
        },
        end: {
          line: 214,
          column: 55
        }
      },
      "76": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 218,
          column: 17
        }
      },
      "77": {
        start: {
          line: 216,
          column: 29
        },
        end: {
          line: 216,
          column: 30
        }
      },
      "78": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 217,
          column: 61
        }
      },
      "79": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 35
        }
      },
      "80": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 65
        }
      },
      "81": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 96
        }
      },
      "82": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 50
        }
      },
      "83": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 40
        }
      },
      "84": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 236,
          column: 12
        }
      },
      "85": {
        start: {
          line: 233,
          column: 50
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "86": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "87": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 108
        }
      },
      "88": {
        start: {
          line: 244,
          column: 54
        },
        end: {
          line: 244,
          column: 103
        }
      },
      "89": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 65
        }
      },
      "90": {
        start: {
          line: 248,
          column: 51
        },
        end: {
          line: 248,
          column: 60
        }
      },
      "91": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 256,
          column: 19
        }
      },
      "92": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 19
        }
      },
      "93": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "94": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 89
        }
      },
      "95": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 22
        }
      },
      "96": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 95
        }
      },
      "97": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 22
        }
      },
      "98": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 89
        }
      },
      "99": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 39
        }
      },
      "100": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "101": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "102": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 276,
          column: 102
        }
      },
      "103": {
        start: {
          line: 278,
          column: 35
        },
        end: {
          line: 278,
          column: 82
        }
      },
      "104": {
        start: {
          line: 280,
          column: 23
        },
        end: {
          line: 280,
          column: 64
        }
      },
      "105": {
        start: {
          line: 282,
          column: 31
        },
        end: {
          line: 282,
          column: 33
        }
      },
      "106": {
        start: {
          line: 283,
          column: 25
        },
        end: {
          line: 283,
          column: 26
        }
      },
      "107": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "108": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 90
        }
      },
      "109": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 55
        }
      },
      "110": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "111": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 291,
          column: 22
        }
      },
      "112": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 22
        }
      },
      "113": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "114": {
        start: {
          line: 295,
          column: 35
        },
        end: {
          line: 295,
          column: 89
        }
      },
      "115": {
        start: {
          line: 296,
          column: 30
        },
        end: {
          line: 296,
          column: 48
        }
      },
      "116": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 81
        }
      },
      "117": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 78
        }
      },
      "118": {
        start: {
          line: 300,
          column: 37
        },
        end: {
          line: 300,
          column: 76
        }
      },
      "119": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 71
        }
      },
      "120": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 54
        }
      },
      "121": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 48
        }
      },
      "122": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 83
        }
      },
      "123": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 75
        }
      },
      "124": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 44
        }
      },
      "125": {
        start: {
          line: 316,
          column: 26
        },
        end: {
          line: 316,
          column: 28
        }
      },
      "126": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "127": {
        start: {
          line: 319,
          column: 28
        },
        end: {
          line: 319,
          column: 54
        }
      },
      "128": {
        start: {
          line: 320,
          column: 28
        },
        end: {
          line: 320,
          column: 54
        }
      },
      "129": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 322,
          column: 25
        }
      },
      "130": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 25
        }
      },
      "131": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "132": {
        start: {
          line: 325,
          column: 41
        },
        end: {
          line: 325,
          column: 82
        }
      },
      "133": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 329,
          column: 17
        }
      },
      "134": {
        start: {
          line: 328,
          column: 20
        },
        end: {
          line: 328,
          column: 49
        }
      },
      "135": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 332,
          column: 17
        }
      },
      "136": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 49
        }
      },
      "137": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 104
        }
      },
      "138": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 104
        }
      },
      "139": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 39
        }
      },
      "140": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 339,
          column: 17
        }
      },
      "141": {
        start: {
          line: 338,
          column: 20
        },
        end: {
          line: 338,
          column: 43
        }
      },
      "142": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 25
        }
      },
      "143": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 349,
          column: 24
        }
      },
      "144": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 24
        }
      },
      "145": {
        start: {
          line: 350,
          column: 31
        },
        end: {
          line: 350,
          column: 32
        }
      },
      "146": {
        start: {
          line: 351,
          column: 27
        },
        end: {
          line: 351,
          column: 29
        }
      },
      "147": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "148": {
        start: {
          line: 353,
          column: 21
        },
        end: {
          line: 353,
          column: 22
        }
      },
      "149": {
        start: {
          line: 354,
          column: 32
        },
        end: {
          line: 354,
          column: 95
        }
      },
      "150": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 71
        }
      },
      "151": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      },
      "152": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "153": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 31
        }
      },
      "154": {
        start: {
          line: 362,
          column: 17
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "155": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 31
        }
      },
      "156": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 24
        }
      },
      "157": {
        start: {
          line: 372,
          column: 23
        },
        end: {
          line: 372,
          column: 59
        }
      },
      "158": {
        start: {
          line: 373,
          column: 23
        },
        end: {
          line: 373,
          column: 59
        }
      },
      "159": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 22
        }
      },
      "160": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "161": {
        start: {
          line: 377,
          column: 27
        },
        end: {
          line: 377,
          column: 57
        }
      },
      "162": {
        start: {
          line: 378,
          column: 27
        },
        end: {
          line: 378,
          column: 57
        }
      },
      "163": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 397,
          column: 13
        }
      },
      "164": {
        start: {
          line: 381,
          column: 26
        },
        end: {
          line: 381,
          column: 39
        }
      },
      "165": {
        start: {
          line: 382,
          column: 29
        },
        end: {
          line: 384,
          column: 62
        }
      },
      "166": {
        start: {
          line: 385,
          column: 36
        },
        end: {
          line: 385,
          column: 85
        }
      },
      "167": {
        start: {
          line: 386,
          column: 36
        },
        end: {
          line: 386,
          column: 85
        }
      },
      "168": {
        start: {
          line: 388,
          column: 28
        },
        end: {
          line: 388,
          column: 109
        }
      },
      "169": {
        start: {
          line: 389,
          column: 28
        },
        end: {
          line: 389,
          column: 108
        }
      },
      "170": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 90
        }
      },
      "171": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 90
        }
      },
      "172": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 86
        }
      },
      "173": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 396,
          column: 86
        }
      },
      "174": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 399,
          column: 32
        }
      },
      "175": {
        start: {
          line: 405,
          column: 20
        },
        end: {
          line: 405,
          column: 22
        }
      },
      "176": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "177": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 425,
          column: 13
        }
      },
      "178": {
        start: {
          line: 408,
          column: 37
        },
        end: {
          line: 408,
          column: 70
        }
      },
      "179": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 424,
          column: 17
        }
      },
      "180": {
        start: {
          line: 411,
          column: 32
        },
        end: {
          line: 411,
          column: 105
        }
      },
      "181": {
        start: {
          line: 412,
          column: 32
        },
        end: {
          line: 412,
          column: 105
        }
      },
      "182": {
        start: {
          line: 413,
          column: 30
        },
        end: {
          line: 413,
          column: 43
        }
      },
      "183": {
        start: {
          line: 414,
          column: 34
        },
        end: {
          line: 416,
          column: 64
        }
      },
      "184": {
        start: {
          line: 417,
          column: 41
        },
        end: {
          line: 417,
          column: 75
        }
      },
      "185": {
        start: {
          line: 418,
          column: 20
        },
        end: {
          line: 418,
          column: 99
        }
      },
      "186": {
        start: {
          line: 420,
          column: 21
        },
        end: {
          line: 424,
          column: 17
        }
      },
      "187": {
        start: {
          line: 422,
          column: 40
        },
        end: {
          line: 422,
          column: 98
        }
      },
      "188": {
        start: {
          line: 423,
          column: 20
        },
        end: {
          line: 423,
          column: 93
        }
      },
      "189": {
        start: {
          line: 432,
          column: 23
        },
        end: {
          line: 432,
          column: 25
        }
      },
      "190": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "191": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 43
        }
      },
      "192": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 47
        }
      },
      "193": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "194": {
        start: {
          line: 439,
          column: 21
        },
        end: {
          line: 439,
          column: 22
        }
      },
      "195": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 450,
          column: 13
        }
      },
      "196": {
        start: {
          line: 440,
          column: 25
        },
        end: {
          line: 440,
          column: 30
        }
      },
      "197": {
        start: {
          line: 441,
          column: 34
        },
        end: {
          line: 441,
          column: 83
        }
      },
      "198": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 449,
          column: 17
        }
      },
      "199": {
        start: {
          line: 443,
          column: 20
        },
        end: {
          line: 443,
          column: 76
        }
      },
      "200": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 52
        }
      },
      "201": {
        start: {
          line: 446,
          column: 21
        },
        end: {
          line: 449,
          column: 17
        }
      },
      "202": {
        start: {
          line: 447,
          column: 20
        },
        end: {
          line: 447,
          column: 76
        }
      },
      "203": {
        start: {
          line: 448,
          column: 20
        },
        end: {
          line: 448,
          column: 52
        }
      },
      "204": {
        start: {
          line: 453,
          column: 27
        },
        end: {
          line: 453,
          column: 29
        }
      },
      "205": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "206": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 458,
          column: 13
        }
      },
      "207": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 36
        }
      },
      "208": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 44
        }
      },
      "209": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 462,
          column: 9
        }
      },
      "210": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 36
        }
      },
      "211": {
        start: {
          line: 464,
          column: 27
        },
        end: {
          line: 464,
          column: 37
        }
      },
      "212": {
        start: {
          line: 465,
          column: 25
        },
        end: {
          line: 465,
          column: 26
        }
      },
      "213": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "214": {
        start: {
          line: 467,
          column: 30
        },
        end: {
          line: 467,
          column: 32
        }
      },
      "215": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 479,
          column: 13
        }
      },
      "216": {
        start: {
          line: 469,
          column: 16
        },
        end: {
          line: 478,
          column: 17
        }
      },
      "217": {
        start: {
          line: 470,
          column: 38
        },
        end: {
          line: 470,
          column: 80
        }
      },
      "218": {
        start: {
          line: 470,
          column: 59
        },
        end: {
          line: 470,
          column: 79
        }
      },
      "219": {
        start: {
          line: 471,
          column: 20
        },
        end: {
          line: 477,
          column: 21
        }
      },
      "220": {
        start: {
          line: 472,
          column: 24
        },
        end: {
          line: 472,
          column: 52
        }
      },
      "221": {
        start: {
          line: 473,
          column: 24
        },
        end: {
          line: 476,
          column: 25
        }
      },
      "222": {
        start: {
          line: 474,
          column: 28
        },
        end: {
          line: 474,
          column: 60
        }
      },
      "223": {
        start: {
          line: 475,
          column: 28
        },
        end: {
          line: 475,
          column: 54
        }
      },
      "224": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 482,
          column: 13
        }
      },
      "225": {
        start: {
          line: 481,
          column: 16
        },
        end: {
          line: 481,
          column: 39
        }
      },
      "226": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 37
        }
      },
      "227": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 25
        }
      },
      "228": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 486,
          column: 22
        }
      },
      "229": {
        start: {
          line: 492,
          column: 26
        },
        end: {
          line: 492,
          column: 31
        }
      },
      "230": {
        start: {
          line: 493,
          column: 27
        },
        end: {
          line: 493,
          column: 32
        }
      },
      "231": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 501,
          column: 9
        }
      },
      "232": {
        start: {
          line: 494,
          column: 21
        },
        end: {
          line: 494,
          column: 22
        }
      },
      "233": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 500,
          column: 13
        }
      },
      "234": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 35
        }
      },
      "235": {
        start: {
          line: 498,
          column: 17
        },
        end: {
          line: 500,
          column: 13
        }
      },
      "236": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 36
        }
      },
      "237": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "238": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 37
        }
      },
      "239": {
        start: {
          line: 505,
          column: 13
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "240": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 38
        }
      },
      "241": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 35
        }
      },
      "242": {
        start: {
          line: 516,
          column: 26
        },
        end: {
          line: 516,
          column: 38
        }
      },
      "243": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 520,
          column: 9
        }
      },
      "244": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 519,
          column: 44
        }
      },
      "245": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 527,
          column: 9
        }
      },
      "246": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 525,
          column: 13
        }
      },
      "247": {
        start: {
          line: 524,
          column: 16
        },
        end: {
          line: 524,
          column: 55
        }
      },
      "248": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 19
        }
      },
      "249": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 543,
          column: 9
        }
      },
      "250": {
        start: {
          line: 529,
          column: 23
        },
        end: {
          line: 529,
          column: 24
        }
      },
      "251": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 72
        }
      },
      "252": {
        start: {
          line: 531,
          column: 33
        },
        end: {
          line: 531,
          column: 70
        }
      },
      "253": {
        start: {
          line: 533,
          column: 12
        },
        end: {
          line: 533,
          column: 49
        }
      },
      "254": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 61
        }
      },
      "255": {
        start: {
          line: 536,
          column: 35
        },
        end: {
          line: 536,
          column: 98
        }
      },
      "256": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 542,
          column: 13
        }
      },
      "257": {
        start: {
          line: 538,
          column: 16
        },
        end: {
          line: 541,
          column: 17
        }
      },
      "258": {
        start: {
          line: 538,
          column: 29
        },
        end: {
          line: 538,
          column: 30
        }
      },
      "259": {
        start: {
          line: 539,
          column: 37
        },
        end: {
          line: 539,
          column: 115
        }
      },
      "260": {
        start: {
          line: 540,
          column: 20
        },
        end: {
          line: 540,
          column: 58
        }
      },
      "261": {
        start: {
          line: 550,
          column: 29
        },
        end: {
          line: 558,
          column: 9
        }
      },
      "262": {
        start: {
          line: 559,
          column: 19
        },
        end: {
          line: 559,
          column: 72
        }
      },
      "263": {
        start: {
          line: 561,
          column: 42
        },
        end: {
          line: 568,
          column: 9
        }
      },
      "264": {
        start: {
          line: 562,
          column: 30
        },
        end: {
          line: 562,
          column: 31
        }
      },
      "265": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 566,
          column: 13
        }
      },
      "266": {
        start: {
          line: 563,
          column: 25
        },
        end: {
          line: 563,
          column: 26
        }
      },
      "267": {
        start: {
          line: 564,
          column: 31
        },
        end: {
          line: 564,
          column: 105
        }
      },
      "268": {
        start: {
          line: 565,
          column: 16
        },
        end: {
          line: 565,
          column: 73
        }
      },
      "269": {
        start: {
          line: 567,
          column: 12
        },
        end: {
          line: 567,
          column: 31
        }
      },
      "270": {
        start: {
          line: 570,
          column: 23
        },
        end: {
          line: 570,
          column: 97
        }
      },
      "271": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "272": {
        start: {
          line: 574,
          column: 34
        },
        end: {
          line: 574,
          column: 89
        }
      },
      "273": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 575,
          column: 107
        }
      },
      "274": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 577,
          column: 79
        }
      },
      "275": {
        start: {
          line: 577,
          column: 56
        },
        end: {
          line: 577,
          column: 77
        }
      },
      "276": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 578,
          column: 98
        }
      },
      "277": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 592,
          column: 10
        }
      },
      "278": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 599,
          column: 19
        }
      },
      "279": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 19
        }
      },
      "280": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "281": {
        start: {
          line: 602,
          column: 32
        },
        end: {
          line: 602,
          column: 139
        }
      },
      "282": {
        start: {
          line: 602,
          column: 75
        },
        end: {
          line: 602,
          column: 138
        }
      },
      "283": {
        start: {
          line: 603,
          column: 12
        },
        end: {
          line: 608,
          column: 13
        }
      },
      "284": {
        start: {
          line: 605,
          column: 16
        },
        end: {
          line: 605,
          column: 154
        }
      },
      "285": {
        start: {
          line: 605,
          column: 89
        },
        end: {
          line: 605,
          column: 152
        }
      },
      "286": {
        start: {
          line: 607,
          column: 16
        },
        end: {
          line: 607,
          column: 66
        }
      },
      "287": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 616,
          column: 9
        }
      },
      "288": {
        start: {
          line: 613,
          column: 12
        },
        end: {
          line: 613,
          column: 124
        }
      },
      "289": {
        start: {
          line: 614,
          column: 12
        },
        end: {
          line: 614,
          column: 94
        }
      },
      "290": {
        start: {
          line: 614,
          column: 53
        },
        end: {
          line: 614,
          column: 92
        }
      },
      "291": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 615,
          column: 104
        }
      },
      "292": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 623,
          column: 19
        }
      },
      "293": {
        start: {
          line: 623,
          column: 12
        },
        end: {
          line: 623,
          column: 19
        }
      },
      "294": {
        start: {
          line: 624,
          column: 32
        },
        end: {
          line: 632,
          column: 11
        }
      },
      "295": {
        start: {
          line: 624,
          column: 85
        },
        end: {
          line: 632,
          column: 9
        }
      },
      "296": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 640,
          column: 10
        }
      },
      "297": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 647,
          column: 21
        }
      },
      "298": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 647,
          column: 21
        }
      },
      "299": {
        start: {
          line: 650,
          column: 31
        },
        end: {
          line: 650,
          column: 88
        }
      },
      "300": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 658,
          column: 9
        }
      },
      "301": {
        start: {
          line: 653,
          column: 34
        },
        end: {
          line: 653,
          column: 72
        }
      },
      "302": {
        start: {
          line: 654,
          column: 12
        },
        end: {
          line: 657,
          column: 13
        }
      },
      "303": {
        start: {
          line: 654,
          column: 25
        },
        end: {
          line: 654,
          column: 26
        }
      },
      "304": {
        start: {
          line: 655,
          column: 33
        },
        end: {
          line: 655,
          column: 87
        }
      },
      "305": {
        start: {
          line: 655,
          column: 68
        },
        end: {
          line: 655,
          column: 85
        }
      },
      "306": {
        start: {
          line: 656,
          column: 16
        },
        end: {
          line: 656,
          column: 52
        }
      },
      "307": {
        start: {
          line: 660,
          column: 26
        },
        end: {
          line: 660,
          column: 27
        }
      },
      "308": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 667,
          column: 9
        }
      },
      "309": {
        start: {
          line: 662,
          column: 25
        },
        end: {
          line: 662,
          column: 26
        }
      },
      "310": {
        start: {
          line: 663,
          column: 12
        },
        end: {
          line: 665,
          column: 13
        }
      },
      "311": {
        start: {
          line: 663,
          column: 25
        },
        end: {
          line: 663,
          column: 26
        }
      },
      "312": {
        start: {
          line: 664,
          column: 16
        },
        end: {
          line: 664,
          column: 84
        }
      },
      "313": {
        start: {
          line: 666,
          column: 12
        },
        end: {
          line: 666,
          column: 34
        }
      },
      "314": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 668,
          column: 27
        }
      },
      "315": {
        start: {
          line: 674,
          column: 8
        },
        end: {
          line: 675,
          column: 21
        }
      },
      "316": {
        start: {
          line: 675,
          column: 12
        },
        end: {
          line: 675,
          column: 21
        }
      },
      "317": {
        start: {
          line: 676,
          column: 26
        },
        end: {
          line: 676,
          column: 28
        }
      },
      "318": {
        start: {
          line: 677,
          column: 8
        },
        end: {
          line: 686,
          column: 9
        }
      },
      "319": {
        start: {
          line: 677,
          column: 21
        },
        end: {
          line: 677,
          column: 22
        }
      },
      "320": {
        start: {
          line: 678,
          column: 30
        },
        end: {
          line: 678,
          column: 38
        }
      },
      "321": {
        start: {
          line: 679,
          column: 12
        },
        end: {
          line: 684,
          column: 13
        }
      },
      "322": {
        start: {
          line: 679,
          column: 25
        },
        end: {
          line: 679,
          column: 26
        }
      },
      "323": {
        start: {
          line: 680,
          column: 16
        },
        end: {
          line: 683,
          column: 17
        }
      },
      "324": {
        start: {
          line: 681,
          column: 37
        },
        end: {
          line: 681,
          column: 100
        }
      },
      "325": {
        start: {
          line: 682,
          column: 20
        },
        end: {
          line: 682,
          column: 66
        }
      },
      "326": {
        start: {
          line: 685,
          column: 12
        },
        end: {
          line: 685,
          column: 40
        }
      },
      "327": {
        start: {
          line: 687,
          column: 29
        },
        end: {
          line: 687,
          column: 88
        }
      },
      "328": {
        start: {
          line: 687,
          column: 58
        },
        end: {
          line: 687,
          column: 65
        }
      },
      "329": {
        start: {
          line: 688,
          column: 25
        },
        end: {
          line: 688,
          column: 112
        }
      },
      "330": {
        start: {
          line: 688,
          column: 54
        },
        end: {
          line: 688,
          column: 89
        }
      },
      "331": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 689,
          column: 35
        }
      },
      "332": {
        start: {
          line: 695,
          column: 23
        },
        end: {
          line: 695,
          column: 24
        }
      },
      "333": {
        start: {
          line: 696,
          column: 8
        },
        end: {
          line: 699,
          column: 9
        }
      },
      "334": {
        start: {
          line: 696,
          column: 21
        },
        end: {
          line: 696,
          column: 22
        }
      },
      "335": {
        start: {
          line: 697,
          column: 25
        },
        end: {
          line: 697,
          column: 78
        }
      },
      "336": {
        start: {
          line: 698,
          column: 12
        },
        end: {
          line: 698,
          column: 36
        }
      },
      "337": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 700,
          column: 35
        }
      },
      "338": {
        start: {
          line: 706,
          column: 8
        },
        end: {
          line: 713,
          column: 9
        }
      },
      "339": {
        start: {
          line: 707,
          column: 12
        },
        end: {
          line: 712,
          column: 14
        }
      },
      "340": {
        start: {
          line: 715,
          column: 27
        },
        end: {
          line: 715,
          column: 48
        }
      },
      "341": {
        start: {
          line: 717,
          column: 31
        },
        end: {
          line: 717,
          column: 60
        }
      },
      "342": {
        start: {
          line: 719,
          column: 36
        },
        end: {
          line: 719,
          column: 69
        }
      },
      "343": {
        start: {
          line: 721,
          column: 32
        },
        end: {
          line: 721,
          column: 72
        }
      },
      "344": {
        start: {
          line: 722,
          column: 8
        },
        end: {
          line: 727,
          column: 10
        }
      },
      "345": {
        start: {
          line: 733,
          column: 8
        },
        end: {
          line: 734,
          column: 22
        }
      },
      "346": {
        start: {
          line: 734,
          column: 12
        },
        end: {
          line: 734,
          column: 22
        }
      },
      "347": {
        start: {
          line: 735,
          column: 27
        },
        end: {
          line: 735,
          column: 29
        }
      },
      "348": {
        start: {
          line: 736,
          column: 26
        },
        end: {
          line: 736,
          column: 52
        }
      },
      "349": {
        start: {
          line: 738,
          column: 8
        },
        end: {
          line: 754,
          column: 9
        }
      },
      "350": {
        start: {
          line: 738,
          column: 21
        },
        end: {
          line: 738,
          column: 22
        }
      },
      "351": {
        start: {
          line: 739,
          column: 25
        },
        end: {
          line: 739,
          column: 41
        }
      },
      "352": {
        start: {
          line: 740,
          column: 28
        },
        end: {
          line: 740,
          column: 40
        }
      },
      "353": {
        start: {
          line: 741,
          column: 25
        },
        end: {
          line: 741,
          column: 41
        }
      },
      "354": {
        start: {
          line: 743,
          column: 26
        },
        end: {
          line: 743,
          column: 99
        }
      },
      "355": {
        start: {
          line: 745,
          column: 12
        },
        end: {
          line: 753,
          column: 13
        }
      },
      "356": {
        start: {
          line: 746,
          column: 16
        },
        end: {
          line: 752,
          column: 19
        }
      },
      "357": {
        start: {
          line: 756,
          column: 8
        },
        end: {
          line: 756,
          column: 63
        }
      },
      "358": {
        start: {
          line: 756,
          column: 34
        },
        end: {
          line: 756,
          column: 61
        }
      },
      "359": {
        start: {
          line: 757,
          column: 8
        },
        end: {
          line: 757,
          column: 38
        }
      },
      "360": {
        start: {
          line: 763,
          column: 19
        },
        end: {
          line: 763,
          column: 50
        }
      },
      "361": {
        start: {
          line: 763,
          column: 38
        },
        end: {
          line: 763,
          column: 49
        }
      },
      "362": {
        start: {
          line: 764,
          column: 19
        },
        end: {
          line: 764,
          column: 50
        }
      },
      "363": {
        start: {
          line: 764,
          column: 38
        },
        end: {
          line: 764,
          column: 49
        }
      },
      "364": {
        start: {
          line: 765,
          column: 20
        },
        end: {
          line: 765,
          column: 68
        }
      },
      "365": {
        start: {
          line: 765,
          column: 47
        },
        end: {
          line: 765,
          column: 64
        }
      },
      "366": {
        start: {
          line: 766,
          column: 21
        },
        end: {
          line: 766,
          column: 75
        }
      },
      "367": {
        start: {
          line: 766,
          column: 55
        },
        end: {
          line: 766,
          column: 70
        }
      },
      "368": {
        start: {
          line: 767,
          column: 21
        },
        end: {
          line: 767,
          column: 75
        }
      },
      "369": {
        start: {
          line: 767,
          column: 55
        },
        end: {
          line: 767,
          column: 70
        }
      },
      "370": {
        start: {
          line: 768,
          column: 8
        },
        end: {
          line: 769,
          column: 27
        }
      },
      "371": {
        start: {
          line: 769,
          column: 12
        },
        end: {
          line: 769,
          column: 27
        }
      },
      "372": {
        start: {
          line: 770,
          column: 25
        },
        end: {
          line: 770,
          column: 44
        }
      },
      "373": {
        start: {
          line: 771,
          column: 8
        },
        end: {
          line: 771,
          column: 62
        }
      },
      "374": {
        start: {
          line: 777,
          column: 8
        },
        end: {
          line: 778,
          column: 21
        }
      },
      "375": {
        start: {
          line: 778,
          column: 12
        },
        end: {
          line: 778,
          column: 21
        }
      },
      "376": {
        start: {
          line: 779,
          column: 8
        },
        end: {
          line: 779,
          column: 45
        }
      },
      "377": {
        start: {
          line: 786,
          column: 8
        },
        end: {
          line: 786,
          column: 18
        }
      },
      "378": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 793,
          column: 18
        }
      },
      "379": {
        start: {
          line: 799,
          column: 32
        },
        end: {
          line: 799,
          column: 34
        }
      },
      "380": {
        start: {
          line: 800,
          column: 8
        },
        end: {
          line: 802,
          column: 9
        }
      },
      "381": {
        start: {
          line: 801,
          column: 12
        },
        end: {
          line: 801,
          column: 138
        }
      },
      "382": {
        start: {
          line: 803,
          column: 8
        },
        end: {
          line: 805,
          column: 9
        }
      },
      "383": {
        start: {
          line: 804,
          column: 12
        },
        end: {
          line: 804,
          column: 126
        }
      },
      "384": {
        start: {
          line: 806,
          column: 8
        },
        end: {
          line: 806,
          column: 31
        }
      },
      "385": {
        start: {
          line: 812,
          column: 8
        },
        end: {
          line: 813,
          column: 24
        }
      },
      "386": {
        start: {
          line: 813,
          column: 12
        },
        end: {
          line: 813,
          column: 24
        }
      },
      "387": {
        start: {
          line: 815,
          column: 8
        },
        end: {
          line: 817,
          column: 9
        }
      },
      "388": {
        start: {
          line: 816,
          column: 12
        },
        end: {
          line: 816,
          column: 24
        }
      },
      "389": {
        start: {
          line: 819,
          column: 8
        },
        end: {
          line: 825,
          column: 9
        }
      },
      "390": {
        start: {
          line: 820,
          column: 34
        },
        end: {
          line: 820,
          column: 57
        }
      },
      "391": {
        start: {
          line: 821,
          column: 43
        },
        end: {
          line: 821,
          column: 125
        }
      },
      "392": {
        start: {
          line: 822,
          column: 12
        },
        end: {
          line: 824,
          column: 13
        }
      },
      "393": {
        start: {
          line: 823,
          column: 16
        },
        end: {
          line: 823,
          column: 28
        }
      },
      "394": {
        start: {
          line: 826,
          column: 8
        },
        end: {
          line: 826,
          column: 21
        }
      },
      "395": {
        start: {
          line: 832,
          column: 8
        },
        end: {
          line: 833,
          column: 19
        }
      },
      "396": {
        start: {
          line: 833,
          column: 12
        },
        end: {
          line: 833,
          column: 19
        }
      },
      "397": {
        start: {
          line: 834,
          column: 36
        },
        end: {
          line: 834,
          column: 92
        }
      },
      "398": {
        start: {
          line: 834,
          column: 79
        },
        end: {
          line: 834,
          column: 91
        }
      },
      "399": {
        start: {
          line: 835,
          column: 26
        },
        end: {
          line: 835,
          column: 69
        }
      },
      "400": {
        start: {
          line: 835,
          column: 57
        },
        end: {
          line: 835,
          column: 68
        }
      },
      "401": {
        start: {
          line: 836,
          column: 8
        },
        end: {
          line: 838,
          column: 9
        }
      },
      "402": {
        start: {
          line: 837,
          column: 12
        },
        end: {
          line: 837,
          column: 45
        }
      },
      "403": {
        start: {
          line: 839,
          column: 24
        },
        end: {
          line: 847,
          column: 9
        }
      },
      "404": {
        start: {
          line: 842,
          column: 57
        },
        end: {
          line: 842,
          column: 64
        }
      },
      "405": {
        start: {
          line: 845,
          column: 77
        },
        end: {
          line: 845,
          column: 90
        }
      },
      "406": {
        start: {
          line: 848,
          column: 8
        },
        end: {
          line: 848,
          column: 35
        }
      },
      "407": {
        start: {
          line: 854,
          column: 30
        },
        end: {
          line: 854,
          column: 59
        }
      },
      "408": {
        start: {
          line: 856,
          column: 29
        },
        end: {
          line: 856,
          column: 104
        }
      },
      "409": {
        start: {
          line: 857,
          column: 27
        },
        end: {
          line: 874,
          column: 9
        }
      },
      "410": {
        start: {
          line: 862,
          column: 54
        },
        end: {
          line: 862,
          column: 67
        }
      },
      "411": {
        start: {
          line: 863,
          column: 57
        },
        end: {
          line: 863,
          column: 73
        }
      },
      "412": {
        start: {
          line: 864,
          column: 52
        },
        end: {
          line: 864,
          column: 63
        }
      },
      "413": {
        start: {
          line: 865,
          column: 62
        },
        end: {
          line: 865,
          column: 84
        }
      },
      "414": {
        start: {
          line: 875,
          column: 36
        },
        end: {
          line: 880,
          column: 9
        }
      },
      "415": {
        start: {
          line: 881,
          column: 8
        },
        end: {
          line: 894,
          column: 10
        }
      },
      "416": {
        start: {
          line: 900,
          column: 26
        },
        end: {
          line: 900,
          column: 28
        }
      },
      "417": {
        start: {
          line: 901,
          column: 8
        },
        end: {
          line: 903,
          column: 9
        }
      },
      "418": {
        start: {
          line: 902,
          column: 12
        },
        end: {
          line: 902,
          column: 39
        }
      },
      "419": {
        start: {
          line: 904,
          column: 8
        },
        end: {
          line: 913,
          column: 10
        }
      },
      "420": {
        start: {
          line: 917,
          column: 8
        },
        end: {
          line: 917,
          column: 81
        }
      },
      "421": {
        start: {
          line: 920,
          column: 20
        },
        end: {
          line: 920,
          column: 24
        }
      },
      "422": {
        start: {
          line: 921,
          column: 8
        },
        end: {
          line: 924,
          column: 10
        }
      },
      "423": {
        start: {
          line: 922,
          column: 12
        },
        end: {
          line: 922,
          column: 52
        }
      },
      "424": {
        start: {
          line: 923,
          column: 12
        },
        end: {
          line: 923,
          column: 34
        }
      },
      "425": {
        start: {
          line: 927,
          column: 0
        },
        end: {
          line: 927,
          column: 82
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 83
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 67
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 63
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 95
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 106
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 84
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 117
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 36
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 145
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 91
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 179
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 209,
            column: 72
          },
          end: {
            line: 209,
            column: 73
          }
        },
        loc: {
          start: {
            line: 209,
            column: 77
          },
          end: {
            line: 209,
            column: 96
          }
        },
        line: 209
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 213,
            column: 28
          },
          end: {
            line: 213,
            column: 29
          }
        },
        loc: {
          start: {
            line: 213,
            column: 33
          },
          end: {
            line: 213,
            column: 51
          }
        },
        line: 213
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 214,
            column: 28
          },
          end: {
            line: 214,
            column: 29
          }
        },
        loc: {
          start: {
            line: 214,
            column: 40
          },
          end: {
            line: 214,
            column: 55
          }
        },
        line: 214
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 57
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 232
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 233,
            column: 37
          },
          end: {
            line: 233,
            column: 38
          }
        },
        loc: {
          start: {
            line: 233,
            column: 50
          },
          end: {
            line: 236,
            column: 9
          }
        },
        line: 233
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 48
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 241
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 244,
            column: 37
          },
          end: {
            line: 244,
            column: 38
          }
        },
        loc: {
          start: {
            line: 244,
            column: 54
          },
          end: {
            line: 244,
            column: 103
          }
        },
        line: 244
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 248,
            column: 37
          },
          end: {
            line: 248,
            column: 38
          }
        },
        loc: {
          start: {
            line: 248,
            column: 51
          },
          end: {
            line: 248,
            column: 60
          }
        },
        line: 248
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 77
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 254
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 72
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 272
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 300,
            column: 27
          },
          end: {
            line: 300,
            column: 28
          }
        },
        loc: {
          start: {
            line: 300,
            column: 37
          },
          end: {
            line: 300,
            column: 76
          }
        },
        line: 300
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 76
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 315
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 26
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 347
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 358,
            column: 33
          },
          end: {
            line: 358,
            column: 34
          }
        },
        loc: {
          start: {
            line: 358,
            column: 52
          },
          end: {
            line: 366,
            column: 9
          }
        },
        line: 358
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        loc: {
          start: {
            line: 371,
            column: 41
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 371
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 404,
            column: 4
          },
          end: {
            line: 404,
            column: 5
          }
        },
        loc: {
          start: {
            line: 404,
            column: 32
          },
          end: {
            line: 427,
            column: 5
          }
        },
        line: 404
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 431,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        loc: {
          start: {
            line: 431,
            column: 33
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 431
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 470,
            column: 54
          },
          end: {
            line: 470,
            column: 55
          }
        },
        loc: {
          start: {
            line: 470,
            column: 59
          },
          end: {
            line: 470,
            column: 79
          }
        },
        line: 470
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 491,
            column: 4
          },
          end: {
            line: 491,
            column: 5
          }
        },
        loc: {
          start: {
            line: 491,
            column: 45
          },
          end: {
            line: 511,
            column: 5
          }
        },
        line: 491
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 515,
            column: 5
          }
        },
        loc: {
          start: {
            line: 515,
            column: 52
          },
          end: {
            line: 544,
            column: 5
          }
        },
        line: 515
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 531,
            column: 23
          },
          end: {
            line: 531,
            column: 24
          }
        },
        loc: {
          start: {
            line: 531,
            column: 33
          },
          end: {
            line: 531,
            column: 70
          }
        },
        line: 531
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 548,
            column: 4
          },
          end: {
            line: 548,
            column: 5
          }
        },
        loc: {
          start: {
            line: 548,
            column: 78
          },
          end: {
            line: 580,
            column: 5
          }
        },
        line: 548
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 561,
            column: 42
          },
          end: {
            line: 561,
            column: 43
          }
        },
        loc: {
          start: {
            line: 561,
            column: 57
          },
          end: {
            line: 568,
            column: 9
          }
        },
        line: 561
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 577,
            column: 46
          },
          end: {
            line: 577,
            column: 47
          }
        },
        loc: {
          start: {
            line: 577,
            column: 56
          },
          end: {
            line: 577,
            column: 77
          }
        },
        line: 577
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 584,
            column: 4
          },
          end: {
            line: 584,
            column: 5
          }
        },
        loc: {
          start: {
            line: 584,
            column: 44
          },
          end: {
            line: 593,
            column: 5
          }
        },
        line: 584
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 597,
            column: 4
          },
          end: {
            line: 597,
            column: 5
          }
        },
        loc: {
          start: {
            line: 597,
            column: 31
          },
          end: {
            line: 617,
            column: 5
          }
        },
        line: 597
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 602,
            column: 63
          },
          end: {
            line: 602,
            column: 64
          }
        },
        loc: {
          start: {
            line: 602,
            column: 75
          },
          end: {
            line: 602,
            column: 138
          }
        },
        line: 602
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 605,
            column: 77
          },
          end: {
            line: 605,
            column: 78
          }
        },
        loc: {
          start: {
            line: 605,
            column: 89
          },
          end: {
            line: 605,
            column: 152
          }
        },
        line: 605
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 614,
            column: 43
          },
          end: {
            line: 614,
            column: 44
          }
        },
        loc: {
          start: {
            line: 614,
            column: 53
          },
          end: {
            line: 614,
            column: 92
          }
        },
        line: 614
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        loc: {
          start: {
            line: 621,
            column: 24
          },
          end: {
            line: 641,
            column: 5
          }
        },
        line: 621
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 624,
            column: 70
          },
          end: {
            line: 624,
            column: 71
          }
        },
        loc: {
          start: {
            line: 624,
            column: 85
          },
          end: {
            line: 632,
            column: 9
          }
        },
        line: 624
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 645,
            column: 4
          },
          end: {
            line: 645,
            column: 5
          }
        },
        loc: {
          start: {
            line: 645,
            column: 38
          },
          end: {
            line: 669,
            column: 5
          }
        },
        line: 645
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 655,
            column: 61
          },
          end: {
            line: 655,
            column: 62
          }
        },
        loc: {
          start: {
            line: 655,
            column: 68
          },
          end: {
            line: 655,
            column: 85
          }
        },
        line: 655
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 673,
            column: 4
          },
          end: {
            line: 673,
            column: 5
          }
        },
        loc: {
          start: {
            line: 673,
            column: 34
          },
          end: {
            line: 690,
            column: 5
          }
        },
        line: 673
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 687,
            column: 46
          },
          end: {
            line: 687,
            column: 47
          }
        },
        loc: {
          start: {
            line: 687,
            column: 58
          },
          end: {
            line: 687,
            column: 65
          }
        },
        line: 687
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 688,
            column: 42
          },
          end: {
            line: 688,
            column: 43
          }
        },
        loc: {
          start: {
            line: 688,
            column: 54
          },
          end: {
            line: 688,
            column: 89
          }
        },
        line: 688
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 694,
            column: 4
          },
          end: {
            line: 694,
            column: 5
          }
        },
        loc: {
          start: {
            line: 694,
            column: 57
          },
          end: {
            line: 701,
            column: 5
          }
        },
        line: 694
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 705,
            column: 4
          },
          end: {
            line: 705,
            column: 5
          }
        },
        loc: {
          start: {
            line: 705,
            column: 30
          },
          end: {
            line: 728,
            column: 5
          }
        },
        line: 705
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 732,
            column: 4
          },
          end: {
            line: 732,
            column: 5
          }
        },
        loc: {
          start: {
            line: 732,
            column: 21
          },
          end: {
            line: 758,
            column: 5
          }
        },
        line: 732
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 756,
            column: 24
          },
          end: {
            line: 756,
            column: 25
          }
        },
        loc: {
          start: {
            line: 756,
            column: 34
          },
          end: {
            line: 756,
            column: 61
          }
        },
        line: 756
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 762,
            column: 4
          },
          end: {
            line: 762,
            column: 5
          }
        },
        loc: {
          start: {
            line: 762,
            column: 31
          },
          end: {
            line: 772,
            column: 5
          }
        },
        line: 762
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 763,
            column: 26
          },
          end: {
            line: 763,
            column: 27
          }
        },
        loc: {
          start: {
            line: 763,
            column: 38
          },
          end: {
            line: 763,
            column: 49
          }
        },
        line: 763
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 764,
            column: 26
          },
          end: {
            line: 764,
            column: 27
          }
        },
        loc: {
          start: {
            line: 764,
            column: 38
          },
          end: {
            line: 764,
            column: 49
          }
        },
        line: 764
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 765,
            column: 30
          },
          end: {
            line: 765,
            column: 31
          }
        },
        loc: {
          start: {
            line: 765,
            column: 47
          },
          end: {
            line: 765,
            column: 64
          }
        },
        line: 765
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 766,
            column: 41
          },
          end: {
            line: 766,
            column: 42
          }
        },
        loc: {
          start: {
            line: 766,
            column: 55
          },
          end: {
            line: 766,
            column: 70
          }
        },
        line: 766
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 767,
            column: 41
          },
          end: {
            line: 767,
            column: 42
          }
        },
        loc: {
          start: {
            line: 767,
            column: 55
          },
          end: {
            line: 767,
            column: 70
          }
        },
        line: 767
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 776,
            column: 4
          },
          end: {
            line: 776,
            column: 5
          }
        },
        loc: {
          start: {
            line: 776,
            column: 39
          },
          end: {
            line: 780,
            column: 5
          }
        },
        line: 776
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 784,
            column: 4
          },
          end: {
            line: 784,
            column: 5
          }
        },
        loc: {
          start: {
            line: 784,
            column: 29
          },
          end: {
            line: 787,
            column: 5
          }
        },
        line: 784
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 791,
            column: 4
          },
          end: {
            line: 791,
            column: 5
          }
        },
        loc: {
          start: {
            line: 791,
            column: 33
          },
          end: {
            line: 794,
            column: 5
          }
        },
        line: 791
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 798,
            column: 4
          },
          end: {
            line: 798,
            column: 5
          }
        },
        loc: {
          start: {
            line: 798,
            column: 40
          },
          end: {
            line: 807,
            column: 5
          }
        },
        line: 798
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 811,
            column: 4
          },
          end: {
            line: 811,
            column: 5
          }
        },
        loc: {
          start: {
            line: 811,
            column: 29
          },
          end: {
            line: 827,
            column: 5
          }
        },
        line: 811
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 831,
            column: 4
          },
          end: {
            line: 831,
            column: 5
          }
        },
        loc: {
          start: {
            line: 831,
            column: 20
          },
          end: {
            line: 849,
            column: 5
          }
        },
        line: 831
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 834,
            column: 72
          },
          end: {
            line: 834,
            column: 73
          }
        },
        loc: {
          start: {
            line: 834,
            column: 79
          },
          end: {
            line: 834,
            column: 91
          }
        },
        line: 834
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 835,
            column: 50
          },
          end: {
            line: 835,
            column: 51
          }
        },
        loc: {
          start: {
            line: 835,
            column: 57
          },
          end: {
            line: 835,
            column: 68
          }
        },
        line: 835
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 842,
            column: 45
          },
          end: {
            line: 842,
            column: 46
          }
        },
        loc: {
          start: {
            line: 842,
            column: 57
          },
          end: {
            line: 842,
            column: 64
          }
        },
        line: 842
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 845,
            column: 70
          },
          end: {
            line: 845,
            column: 71
          }
        },
        loc: {
          start: {
            line: 845,
            column: 77
          },
          end: {
            line: 845,
            column: 90
          }
        },
        line: 845
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 853,
            column: 4
          },
          end: {
            line: 853,
            column: 5
          }
        },
        loc: {
          start: {
            line: 853,
            column: 69
          },
          end: {
            line: 895,
            column: 5
          }
        },
        line: 853
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 862,
            column: 49
          },
          end: {
            line: 862,
            column: 50
          }
        },
        loc: {
          start: {
            line: 862,
            column: 54
          },
          end: {
            line: 862,
            column: 67
          }
        },
        line: 862
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 863,
            column: 52
          },
          end: {
            line: 863,
            column: 53
          }
        },
        loc: {
          start: {
            line: 863,
            column: 57
          },
          end: {
            line: 863,
            column: 73
          }
        },
        line: 863
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 864,
            column: 47
          },
          end: {
            line: 864,
            column: 48
          }
        },
        loc: {
          start: {
            line: 864,
            column: 52
          },
          end: {
            line: 864,
            column: 63
          }
        },
        line: 864
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 865,
            column: 57
          },
          end: {
            line: 865,
            column: 58
          }
        },
        loc: {
          start: {
            line: 865,
            column: 62
          },
          end: {
            line: 865,
            column: 84
          }
        },
        line: 865
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 899,
            column: 4
          },
          end: {
            line: 899,
            column: 5
          }
        },
        loc: {
          start: {
            line: 899,
            column: 33
          },
          end: {
            line: 914,
            column: 5
          }
        },
        line: 899
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 916,
            column: 4
          },
          end: {
            line: 916,
            column: 5
          }
        },
        loc: {
          start: {
            line: 916,
            column: 27
          },
          end: {
            line: 918,
            column: 5
          }
        },
        line: 916
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 919,
            column: 4
          },
          end: {
            line: 919,
            column: 5
          }
        },
        loc: {
          start: {
            line: 919,
            column: 29
          },
          end: {
            line: 925,
            column: 5
          }
        },
        line: 919
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 921,
            column: 15
          },
          end: {
            line: 921,
            column: 16
          }
        },
        loc: {
          start: {
            line: 921,
            column: 21
          },
          end: {
            line: 924,
            column: 9
          }
        },
        line: 921
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: 60,
            column: 13
          },
          end: {
            line: 62,
            column: 9
          }
        }],
        line: 57
      },
      "1": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "2": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "3": {
        loc: {
          start: {
            line: 137,
            column: 51
          },
          end: {
            line: 137,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 51
          },
          end: {
            line: 137,
            column: 60
          }
        }, {
          start: {
            line: 137,
            column: 64
          },
          end: {
            line: 137,
            column: 66
          }
        }],
        line: 137
      },
      "4": {
        loc: {
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 52
          }
        }, {
          start: {
            line: 138,
            column: 56
          },
          end: {
            line: 138,
            column: 58
          }
        }],
        line: 138
      },
      "5": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 158,
            column: 13
          }
        }],
        line: 148
      },
      "6": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 39
          }
        }, {
          start: {
            line: 148,
            column: 43
          },
          end: {
            line: 148,
            column: 77
          }
        }],
        line: 148
      },
      "7": {
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 155,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 74
          },
          end: {
            line: 155,
            column: 97
          }
        }, {
          start: {
            line: 155,
            column: 100
          },
          end: {
            line: 155,
            column: 101
          }
        }],
        line: 155
      },
      "8": {
        loc: {
          start: {
            line: 156,
            column: 28
          },
          end: {
            line: 156,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 74
          },
          end: {
            line: 156,
            column: 97
          }
        }, {
          start: {
            line: 156,
            column: 100
          },
          end: {
            line: 156,
            column: 101
          }
        }],
        line: 156
      },
      "9": {
        loc: {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "10": {
        loc: {
          start: {
            line: 201,
            column: 35
          },
          end: {
            line: 201,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 51
          },
          end: {
            line: 201,
            column: 63
          }
        }, {
          start: {
            line: 201,
            column: 66
          },
          end: {
            line: 201,
            column: 76
          }
        }],
        line: 201
      },
      "11": {
        loc: {
          start: {
            line: 204,
            column: 30
          },
          end: {
            line: 204,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 204,
            column: 53
          }
        }, {
          start: {
            line: 204,
            column: 56
          },
          end: {
            line: 204,
            column: 63
          }
        }],
        line: 204
      },
      "12": {
        loc: {
          start: {
            line: 205,
            column: 29
          },
          end: {
            line: 205,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 45
          },
          end: {
            line: 205,
            column: 91
          }
        }, {
          start: {
            line: 205,
            column: 94
          },
          end: {
            line: 205,
            column: 95
          }
        }],
        line: 205
      },
      "13": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 211,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 211,
            column: 36
          }
        }, {
          start: {
            line: 211,
            column: 40
          },
          end: {
            line: 211,
            column: 88
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: 246,
            column: 13
          },
          end: {
            line: 249,
            column: 9
          }
        }],
        line: 242
      },
      "16": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 46
          }
        }, {
          start: {
            line: 242,
            column: 50
          },
          end: {
            line: 242,
            column: 113
          }
        }],
        line: 242
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 256,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 256,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 260,
            column: 22
          }
        }, {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 263,
            column: 22
          }
        }, {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 265,
            column: 89
          }
        }],
        line: 257
      },
      "19": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 274,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 274,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "20": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 291,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 291,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "21": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "22": {
        loc: {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 294,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 294,
            column: 66
          }
        }, {
          start: {
            line: 294,
            column: 70
          },
          end: {
            line: 294,
            column: 96
          }
        }],
        line: 294
      },
      "23": {
        loc: {
          start: {
            line: 307,
            column: 66
          },
          end: {
            line: 307,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 66
          },
          end: {
            line: 307,
            column: 75
          }
        }, {
          start: {
            line: 307,
            column: 79
          },
          end: {
            line: 307,
            column: 81
          }
        }],
        line: 307
      },
      "24": {
        loc: {
          start: {
            line: 308,
            column: 58
          },
          end: {
            line: 308,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 58
          },
          end: {
            line: 308,
            column: 67
          }
        }, {
          start: {
            line: 308,
            column: 71
          },
          end: {
            line: 308,
            column: 73
          }
        }],
        line: 308
      },
      "25": {
        loc: {
          start: {
            line: 310,
            column: 27
          },
          end: {
            line: 310,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 27
          },
          end: {
            line: 310,
            column: 36
          }
        }, {
          start: {
            line: 310,
            column: 40
          },
          end: {
            line: 310,
            column: 42
          }
        }],
        line: 310
      },
      "26": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 322,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 322,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "27": {
        loc: {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 24
          }
        }, {
          start: {
            line: 321,
            column: 28
          },
          end: {
            line: 321,
            column: 36
          }
        }],
        line: 321
      },
      "28": {
        loc: {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "29": {
        loc: {
          start: {
            line: 327,
            column: 16
          },
          end: {
            line: 329,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 16
          },
          end: {
            line: 329,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "30": {
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "31": {
        loc: {
          start: {
            line: 337,
            column: 16
          },
          end: {
            line: 339,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 16
          },
          end: {
            line: 339,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "32": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 349,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 349,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "33": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 30
          }
        }, {
          start: {
            line: 348,
            column: 34
          },
          end: {
            line: 348,
            column: 75
          }
        }],
        line: 348
      },
      "34": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: 362,
            column: 17
          },
          end: {
            line: 364,
            column: 13
          }
        }],
        line: 359
      },
      "35": {
        loc: {
          start: {
            line: 362,
            column: 17
          },
          end: {
            line: 364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 17
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "36": {
        loc: {
          start: {
            line: 362,
            column: 21
          },
          end: {
            line: 362,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 21
          },
          end: {
            line: 362,
            column: 47
          }
        }, {
          start: {
            line: 362,
            column: 51
          },
          end: {
            line: 362,
            column: 99
          }
        }],
        line: 362
      },
      "37": {
        loc: {
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 397,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 397,
            column: 13
          }
        }, {
          start: {
            line: 393,
            column: 17
          },
          end: {
            line: 397,
            column: 13
          }
        }],
        line: 379
      },
      "38": {
        loc: {
          start: {
            line: 379,
            column: 16
          },
          end: {
            line: 379,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 16
          },
          end: {
            line: 379,
            column: 42
          }
        }, {
          start: {
            line: 379,
            column: 46
          },
          end: {
            line: 379,
            column: 72
          }
        }],
        line: 379
      },
      "39": {
        loc: {
          start: {
            line: 382,
            column: 29
          },
          end: {
            line: 384,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 383,
            column: 20
          },
          end: {
            line: 383,
            column: 50
          }
        }, {
          start: {
            line: 384,
            column: 20
          },
          end: {
            line: 384,
            column: 62
          }
        }],
        line: 382
      },
      "40": {
        loc: {
          start: {
            line: 388,
            column: 28
          },
          end: {
            line: 388,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 74
          },
          end: {
            line: 388,
            column: 97
          }
        }, {
          start: {
            line: 388,
            column: 100
          },
          end: {
            line: 388,
            column: 109
          }
        }],
        line: 388
      },
      "41": {
        loc: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 389,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 389,
            column: 74
          },
          end: {
            line: 389,
            column: 97
          }
        }, {
          start: {
            line: 389,
            column: 100
          },
          end: {
            line: 389,
            column: 108
          }
        }],
        line: 389
      },
      "42": {
        loc: {
          start: {
            line: 395,
            column: 48
          },
          end: {
            line: 395,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 395,
            column: 70
          },
          end: {
            line: 395,
            column: 76
          }
        }, {
          start: {
            line: 395,
            column: 79
          },
          end: {
            line: 395,
            column: 85
          }
        }],
        line: 395
      },
      "43": {
        loc: {
          start: {
            line: 396,
            column: 48
          },
          end: {
            line: 396,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 70
          },
          end: {
            line: 396,
            column: 76
          }
        }, {
          start: {
            line: 396,
            column: 79
          },
          end: {
            line: 396,
            column: 85
          }
        }],
        line: 396
      },
      "44": {
        loc: {
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 425,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 425,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "45": {
        loc: {
          start: {
            line: 409,
            column: 16
          },
          end: {
            line: 424,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 16
          },
          end: {
            line: 424,
            column: 17
          }
        }, {
          start: {
            line: 420,
            column: 21
          },
          end: {
            line: 424,
            column: 17
          }
        }],
        line: 409
      },
      "46": {
        loc: {
          start: {
            line: 411,
            column: 32
          },
          end: {
            line: 411,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 78
          },
          end: {
            line: 411,
            column: 101
          }
        }, {
          start: {
            line: 411,
            column: 104
          },
          end: {
            line: 411,
            column: 105
          }
        }],
        line: 411
      },
      "47": {
        loc: {
          start: {
            line: 412,
            column: 32
          },
          end: {
            line: 412,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 78
          },
          end: {
            line: 412,
            column: 101
          }
        }, {
          start: {
            line: 412,
            column: 104
          },
          end: {
            line: 412,
            column: 105
          }
        }],
        line: 412
      },
      "48": {
        loc: {
          start: {
            line: 414,
            column: 34
          },
          end: {
            line: 416,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 415,
            column: 24
          },
          end: {
            line: 415,
            column: 58
          }
        }, {
          start: {
            line: 416,
            column: 24
          },
          end: {
            line: 416,
            column: 64
          }
        }],
        line: 414
      },
      "49": {
        loc: {
          start: {
            line: 420,
            column: 21
          },
          end: {
            line: 424,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 21
          },
          end: {
            line: 424,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "50": {
        loc: {
          start: {
            line: 420,
            column: 25
          },
          end: {
            line: 420,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 25
          },
          end: {
            line: 420,
            column: 48
          }
        }, {
          start: {
            line: 420,
            column: 52
          },
          end: {
            line: 420,
            column: 86
          }
        }],
        line: 420
      },
      "51": {
        loc: {
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 449,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 449,
            column: 17
          }
        }, {
          start: {
            line: 446,
            column: 21
          },
          end: {
            line: 449,
            column: 17
          }
        }],
        line: 442
      },
      "52": {
        loc: {
          start: {
            line: 446,
            column: 21
          },
          end: {
            line: 449,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 21
          },
          end: {
            line: 449,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "53": {
        loc: {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 458,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 458,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "54": {
        loc: {
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 462,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 462,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "55": {
        loc: {
          start: {
            line: 471,
            column: 20
          },
          end: {
            line: 477,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 20
          },
          end: {
            line: 477,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "56": {
        loc: {
          start: {
            line: 473,
            column: 24
          },
          end: {
            line: 476,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 24
          },
          end: {
            line: 476,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "57": {
        loc: {
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 480
      },
      "58": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 500,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 500,
            column: 13
          }
        }, {
          start: {
            line: 498,
            column: 17
          },
          end: {
            line: 500,
            column: 13
          }
        }],
        line: 495
      },
      "59": {
        loc: {
          start: {
            line: 498,
            column: 17
          },
          end: {
            line: 500,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 17
          },
          end: {
            line: 500,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "60": {
        loc: {
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: 505,
            column: 13
          },
          end: {
            line: 510,
            column: 9
          }
        }],
        line: 502
      },
      "61": {
        loc: {
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 502,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 502,
            column: 23
          }
        }, {
          start: {
            line: 502,
            column: 27
          },
          end: {
            line: 502,
            column: 40
          }
        }],
        line: 502
      },
      "62": {
        loc: {
          start: {
            line: 505,
            column: 13
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 13
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: 508,
            column: 13
          },
          end: {
            line: 510,
            column: 9
          }
        }],
        line: 505
      },
      "63": {
        loc: {
          start: {
            line: 505,
            column: 17
          },
          end: {
            line: 505,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 505,
            column: 17
          },
          end: {
            line: 505,
            column: 29
          }
        }, {
          start: {
            line: 505,
            column: 33
          },
          end: {
            line: 505,
            column: 45
          }
        }],
        line: 505
      },
      "64": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "65": {
        loc: {
          start: {
            line: 537,
            column: 12
          },
          end: {
            line: 542,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 12
          },
          end: {
            line: 542,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "66": {
        loc: {
          start: {
            line: 564,
            column: 31
          },
          end: {
            line: 564,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 564,
            column: 31
          },
          end: {
            line: 564,
            column: 70
          }
        }, {
          start: {
            line: 564,
            column: 75
          },
          end: {
            line: 564,
            column: 104
          }
        }],
        line: 564
      },
      "67": {
        loc: {
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 572
      },
      "68": {
        loc: {
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 572,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 572,
            column: 29
          }
        }, {
          start: {
            line: 572,
            column: 33
          },
          end: {
            line: 572,
            column: 52
          }
        }],
        line: 572
      },
      "69": {
        loc: {
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 599,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 599,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "70": {
        loc: {
          start: {
            line: 603,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 603,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 603
      },
      "71": {
        loc: {
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 616,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 616,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "72": {
        loc: {
          start: {
            line: 613,
            column: 70
          },
          end: {
            line: 613,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 613,
            column: 70
          },
          end: {
            line: 613,
            column: 117
          }
        }, {
          start: {
            line: 613,
            column: 121
          },
          end: {
            line: 613,
            column: 122
          }
        }],
        line: 613
      },
      "73": {
        loc: {
          start: {
            line: 622,
            column: 8
          },
          end: {
            line: 623,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 622,
            column: 8
          },
          end: {
            line: 623,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 622
      },
      "74": {
        loc: {
          start: {
            line: 622,
            column: 12
          },
          end: {
            line: 622,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 622,
            column: 12
          },
          end: {
            line: 622,
            column: 30
          }
        }, {
          start: {
            line: 622,
            column: 34
          },
          end: {
            line: 622,
            column: 77
          }
        }],
        line: 622
      },
      "75": {
        loc: {
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 647,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 647,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 646
      },
      "76": {
        loc: {
          start: {
            line: 651,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 651,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 651
      },
      "77": {
        loc: {
          start: {
            line: 653,
            column: 34
          },
          end: {
            line: 653,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 653,
            column: 34
          },
          end: {
            line: 653,
            column: 67
          }
        }, {
          start: {
            line: 653,
            column: 71
          },
          end: {
            line: 653,
            column: 72
          }
        }],
        line: 653
      },
      "78": {
        loc: {
          start: {
            line: 674,
            column: 8
          },
          end: {
            line: 675,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 674,
            column: 8
          },
          end: {
            line: 675,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 674
      },
      "79": {
        loc: {
          start: {
            line: 680,
            column: 16
          },
          end: {
            line: 683,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 680,
            column: 16
          },
          end: {
            line: 683,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 680
      },
      "80": {
        loc: {
          start: {
            line: 706,
            column: 8
          },
          end: {
            line: 713,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 706,
            column: 8
          },
          end: {
            line: 713,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 706
      },
      "81": {
        loc: {
          start: {
            line: 733,
            column: 8
          },
          end: {
            line: 734,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 733,
            column: 8
          },
          end: {
            line: 734,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 733
      },
      "82": {
        loc: {
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 733,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 733,
            column: 29
          }
        }, {
          start: {
            line: 733,
            column: 33
          },
          end: {
            line: 733,
            column: 70
          }
        }],
        line: 733
      },
      "83": {
        loc: {
          start: {
            line: 745,
            column: 12
          },
          end: {
            line: 753,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 745,
            column: 12
          },
          end: {
            line: 753,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 745
      },
      "84": {
        loc: {
          start: {
            line: 768,
            column: 8
          },
          end: {
            line: 769,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 768,
            column: 8
          },
          end: {
            line: 769,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 768
      },
      "85": {
        loc: {
          start: {
            line: 768,
            column: 12
          },
          end: {
            line: 768,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 768,
            column: 12
          },
          end: {
            line: 768,
            column: 22
          }
        }, {
          start: {
            line: 768,
            column: 26
          },
          end: {
            line: 768,
            column: 36
          }
        }],
        line: 768
      },
      "86": {
        loc: {
          start: {
            line: 777,
            column: 8
          },
          end: {
            line: 778,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 777,
            column: 8
          },
          end: {
            line: 778,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 777
      },
      "87": {
        loc: {
          start: {
            line: 800,
            column: 8
          },
          end: {
            line: 802,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 800,
            column: 8
          },
          end: {
            line: 802,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 800
      },
      "88": {
        loc: {
          start: {
            line: 803,
            column: 8
          },
          end: {
            line: 805,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 803,
            column: 8
          },
          end: {
            line: 805,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 803
      },
      "89": {
        loc: {
          start: {
            line: 803,
            column: 12
          },
          end: {
            line: 803,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 803,
            column: 12
          },
          end: {
            line: 803,
            column: 28
          }
        }, {
          start: {
            line: 803,
            column: 32
          },
          end: {
            line: 803,
            column: 70
          }
        }],
        line: 803
      },
      "90": {
        loc: {
          start: {
            line: 812,
            column: 8
          },
          end: {
            line: 813,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 812,
            column: 8
          },
          end: {
            line: 813,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 812
      },
      "91": {
        loc: {
          start: {
            line: 815,
            column: 8
          },
          end: {
            line: 817,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 815,
            column: 8
          },
          end: {
            line: 817,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 815
      },
      "92": {
        loc: {
          start: {
            line: 819,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 819,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 819
      },
      "93": {
        loc: {
          start: {
            line: 822,
            column: 12
          },
          end: {
            line: 824,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 822,
            column: 12
          },
          end: {
            line: 824,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 822
      },
      "94": {
        loc: {
          start: {
            line: 832,
            column: 8
          },
          end: {
            line: 833,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 832,
            column: 8
          },
          end: {
            line: 833,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 832
      },
      "95": {
        loc: {
          start: {
            line: 836,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 836,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 836
      },
      "96": {
        loc: {
          start: {
            line: 856,
            column: 29
          },
          end: {
            line: 856,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 856,
            column: 29
          },
          end: {
            line: 856,
            column: 68
          }
        }, {
          start: {
            line: 856,
            column: 72
          },
          end: {
            line: 856,
            column: 104
          }
        }],
        line: 856
      },
      "97": {
        loc: {
          start: {
            line: 858,
            column: 29
          },
          end: {
            line: 858,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 858,
            column: 29
          },
          end: {
            line: 858,
            column: 58
          }
        }, {
          start: {
            line: 858,
            column: 62
          },
          end: {
            line: 858,
            column: 63
          }
        }],
        line: 858
      },
      "98": {
        loc: {
          start: {
            line: 860,
            column: 34
          },
          end: {
            line: 860,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 860,
            column: 34
          },
          end: {
            line: 860,
            column: 63
          }
        }, {
          start: {
            line: 860,
            column: 67
          },
          end: {
            line: 860,
            column: 68
          }
        }],
        line: 860
      },
      "99": {
        loc: {
          start: {
            line: 869,
            column: 33
          },
          end: {
            line: 869,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 869,
            column: 33
          },
          end: {
            line: 869,
            column: 75
          }
        }, {
          start: {
            line: 869,
            column: 79
          },
          end: {
            line: 869,
            column: 80
          }
        }],
        line: 869
      },
      "100": {
        loc: {
          start: {
            line: 870,
            column: 29
          },
          end: {
            line: 870,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 870,
            column: 29
          },
          end: {
            line: 870,
            column: 59
          }
        }, {
          start: {
            line: 870,
            column: 63
          },
          end: {
            line: 870,
            column: 64
          }
        }],
        line: 870
      },
      "101": {
        loc: {
          start: {
            line: 871,
            column: 25
          },
          end: {
            line: 871,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 871,
            column: 25
          },
          end: {
            line: 871,
            column: 51
          }
        }, {
          start: {
            line: 871,
            column: 55
          },
          end: {
            line: 871,
            column: 56
          }
        }],
        line: 871
      },
      "102": {
        loc: {
          start: {
            line: 872,
            column: 29
          },
          end: {
            line: 872,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 872,
            column: 29
          },
          end: {
            line: 872,
            column: 62
          }
        }, {
          start: {
            line: 872,
            column: 66
          },
          end: {
            line: 872,
            column: 67
          }
        }],
        line: 872
      },
      "103": {
        loc: {
          start: {
            line: 884,
            column: 26
          },
          end: {
            line: 884,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 884,
            column: 26
          },
          end: {
            line: 884,
            column: 38
          }
        }, {
          start: {
            line: 884,
            column: 42
          },
          end: {
            line: 884,
            column: 75
          }
        }],
        line: 884
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\MultiObjectiveOptimizationFramework.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\MultiObjectiveOptimizationFramework.ts"],
      sourcesContent: ["/**\r\n * Multi-objective Optimization Framework for System Optimization\r\n * \r\n * Implements comprehensive multi-objective optimization with:\r\n * - NSGA-II (Non-dominated Sorting Genetic Algorithm II)\r\n * - Pareto front analysis and visualization\r\n * - Trade-off analysis and knee point identification\r\n * - Multi-criteria decision making support\r\n * - Weighted sum aggregation methods\r\n * - Constraint handling for multi-objective problems\r\n * \r\n * @version 3.0.0\r\n * @author SizeWise Suite Development Team\r\n */\r\n\r\nimport {\r\n  OptimizationSolution,\r\n  OptimizationVariable,\r\n  OptimizationProblem,\r\n  OptimizationResult,\r\n  OptimizationStatus,\r\n  OptimizationStatistics,\r\n  OptimizationHistory,\r\n  IterationHistory,\r\n  PopulationSnapshot,\r\n  SolutionPerformanceMetrics,\r\n  ObjectiveFunctionType,\r\n  ConstraintFunctionType,\r\n  MultiObjectiveFunction,\r\n  ParetoSettings,\r\n  ObjectiveFunction,\r\n  ParetoFront,\r\n  ParetoSolution,\r\n  TradeoffAnalysis,\r\n  KneePoint,\r\n  DominanceRelation,\r\n  CrowdingDistance\r\n} from './types/SystemOptimizationTypes';\r\n\r\nimport { GeneticAlgorithm, GeneticAlgorithmParameters } from './algorithms/GeneticAlgorithm';\r\n\r\nexport interface MultiObjectiveParameters {\r\n  algorithm: 'nsga2' | 'spea2' | 'moead' | 'weighted_sum';\r\n  populationSize: number;\r\n  maxGenerations: number;\r\n  crossoverRate: number;\r\n  mutationRate: number;\r\n  eliteSize: number;\r\n  paretoSettings: ParetoSettings;\r\n  weightedSumWeights?: number[];\r\n  diversityMaintenance: boolean;\r\n  constraintHandling: 'penalty' | 'repair' | 'death_penalty';\r\n  penaltyCoefficient: number;\r\n  archiveSize: number;\r\n  seedValue?: number;\r\n}\r\n\r\nexport interface NSGA2Individual extends OptimizationSolution {\r\n  objectives: number[];\r\n  rank: number;\r\n  crowdingDistance: number;\r\n  dominationCount: number;\r\n  dominatedSolutions: string[];\r\n}\r\n\r\nexport interface MultiObjectiveState {\r\n  population: NSGA2Individual[];\r\n  archive: NSGA2Individual[];\r\n  paretoFronts: NSGA2Individual[][];\r\n  generation: number;\r\n  hypervolume: number;\r\n  spacing: number;\r\n  convergenceMetric: number;\r\n}\r\n\r\n/**\r\n * Multi-objective optimization framework with NSGA-II and Pareto analysis\r\n */\r\nexport class MultiObjectiveOptimizationFramework {\r\n  private parameters: MultiObjectiveParameters;\r\n  private currentState: MultiObjectiveState | null = null;\r\n  private paretoFront: ParetoFront | null = null;\r\n  private history: IterationHistory[] = [];\r\n  private populationHistory: PopulationSnapshot[] = [];\r\n  private random: () => number;\r\n  private evaluationCount: number = 0;\r\n\r\n  constructor(parameters?: Partial<MultiObjectiveParameters>) {\r\n    this.parameters = {\r\n      algorithm: 'nsga2',\r\n      populationSize: 100,\r\n      maxGenerations: 100,\r\n      crossoverRate: 0.9,\r\n      mutationRate: 0.1,\r\n      eliteSize: 10,\r\n      paretoSettings: {\r\n        maxSolutions: 100,\r\n        diversityThreshold: 0.01,\r\n        convergenceThreshold: 1e-6,\r\n        hypervolume: {\r\n          enabled: true,\r\n          referencePoint: []\r\n        },\r\n        spacing: {\r\n          enabled: true,\r\n          targetSpacing: 0.1\r\n        }\r\n      },\r\n      diversityMaintenance: true,\r\n      constraintHandling: 'penalty',\r\n      penaltyCoefficient: 1000,\r\n      archiveSize: 200,\r\n      ...parameters\r\n    };\r\n\r\n    // Initialize random number generator\r\n    if (this.parameters.seedValue !== undefined) {\r\n      this.random = this.createSeededRandom(this.parameters.seedValue);\r\n    } else {\r\n      this.random = Math.random;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main multi-objective optimization method\r\n   */\r\n  public async optimizeMultiObjective(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<OptimizationResult> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Validate multi-objective problem\r\n      this.validateMultiObjectiveProblem(problem, objectiveFunctions);\r\n      \r\n      // Initialize algorithm\r\n      this.initializeAlgorithm(problem);\r\n      \r\n      // Create initial population\r\n      await this.createInitialPopulation(problem, objectiveFunctions, constraintFunctions);\r\n      \r\n      // Main optimization loop\r\n      while (!this.shouldTerminate(problem)) {\r\n        await this.evolvePopulation(problem, objectiveFunctions, constraintFunctions);\r\n        this.updateHistory();\r\n        this.updateParetoFront();\r\n      }\r\n      \r\n      // Perform final analysis\r\n      const tradeoffAnalysis = this.performTradeoffAnalysis();\r\n      \r\n      // Create final result\r\n      return this.createMultiObjectiveResult(problem, startTime, tradeoffAnalysis);\r\n      \r\n    } catch (error) {\r\n      console.error('Multi-objective optimization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate multi-objective problem\r\n   */\r\n  private validateMultiObjectiveProblem(problem: OptimizationProblem, objectiveFunctions: ObjectiveFunctionType[]): void {\r\n    if (objectiveFunctions.length < 2) {\r\n      throw new Error('Multi-objective optimization requires at least 2 objective functions');\r\n    }\r\n    \r\n    if (problem.objectives.objectives.length !== objectiveFunctions.length) {\r\n      throw new Error('Number of objective functions must match problem definition');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize algorithm state\r\n   */\r\n  private initializeAlgorithm(problem: OptimizationProblem): void {\r\n    this.currentState = null;\r\n    this.paretoFront = null;\r\n    this.history = [];\r\n    this.populationHistory = [];\r\n    this.evaluationCount = 0;\r\n    \r\n    console.log(`Initializing Multi-objective Optimization (${this.parameters.algorithm}) with population size: ${this.parameters.populationSize}`);\r\n  }\r\n\r\n  /**\r\n   * Create initial population\r\n   */\r\n  private async createInitialPopulation(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    const population: NSGA2Individual[] = [];\r\n    \r\n    // Create random individuals\r\n    for (let i = 0; i < this.parameters.populationSize; i++) {\r\n      const individual = this.createRandomIndividual(problem);\r\n      await this.evaluateIndividual(individual, problem, objectiveFunctions, constraintFunctions);\r\n      population.push(individual);\r\n    }\r\n    \r\n    // Perform non-dominated sorting\r\n    const fronts = this.nonDominatedSort(population);\r\n    \r\n    // Calculate crowding distances\r\n    for (const front of fronts) {\r\n      this.calculateCrowdingDistance(front, objectiveFunctions.length);\r\n    }\r\n    \r\n    // Initialize state\r\n    this.currentState = {\r\n      population,\r\n      archive: [...population],\r\n      paretoFronts: fronts,\r\n      generation: 0,\r\n      hypervolume: this.calculateHypervolume(fronts[0] || []),\r\n      spacing: this.calculateSpacing(fronts[0] || []),\r\n      convergenceMetric: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a random individual\r\n   */\r\n  private createRandomIndividual(problem: OptimizationProblem): NSGA2Individual {\r\n    const variables: { [variableId: string]: number | string } = {};\r\n    \r\n    for (const variable of problem.variables) {\r\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n        // Discrete variable\r\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n        variables[variable.id] = variable.discreteValues[randomIndex];\r\n      } else {\r\n        // Continuous variable\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n        variables[variable.id] = min + this.random() * (max - min);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      id: this.generateIndividualId(),\r\n      variables,\r\n      objectiveValues: {},\r\n      constraintViolations: [],\r\n      feasible: true,\r\n      fitness: 0,\r\n      systemConfiguration: problem.systemConfiguration,\r\n      performanceMetrics: {} as SolutionPerformanceMetrics,\r\n      objectives: [],\r\n      rank: 0,\r\n      crowdingDistance: 0,\r\n      dominationCount: 0,\r\n      dominatedSolutions: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Evaluate individual on all objectives\r\n   */\r\n  private async evaluateIndividual(\r\n    individual: NSGA2Individual,\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    try {\r\n      // Convert individual to optimization variables\r\n      const variables = this.individualToVariables(individual, problem.variables);\r\n      \r\n      // Evaluate all objective functions\r\n      individual.objectives = [];\r\n      for (let i = 0; i < objectiveFunctions.length; i++) {\r\n        const objectiveValue = objectiveFunctions[i](variables);\r\n        individual.objectives.push(objectiveValue);\r\n        \r\n        // Store in objectiveValues map\r\n        if (problem.objectives.objectives[i]) {\r\n          individual.objectiveValues[problem.objectives.objectives[i].id] = objectiveValue;\r\n        }\r\n      }\r\n      \r\n      // Calculate fitness (for single-objective compatibility)\r\n      individual.fitness = this.calculateScalarFitness(individual.objectives, problem);\r\n      \r\n      // Evaluate constraints\r\n      individual.constraintViolations = [];\r\n      for (let i = 0; i < constraintFunctions.length; i++) {\r\n        const violation = constraintFunctions[i](variables);\r\n        individual.constraintViolations.push({\r\n          constraintId: `constraint_${i}`,\r\n          violationType: violation > 0 ? 'inequality' : 'boundary',\r\n          currentValue: violation,\r\n          requiredValue: 0,\r\n          severity: violation > 0 ? 'major' : 'minor',\r\n          penalty: violation > 0 ? violation * this.parameters.penaltyCoefficient : 0\r\n        });\r\n      }\r\n      \r\n      // Check feasibility\r\n      individual.feasible = individual.constraintViolations.every(v => v.currentValue <= 0);\r\n      \r\n      // Apply constraint handling\r\n      if (!individual.feasible && this.parameters.constraintHandling === 'penalty') {\r\n        const totalPenalty = individual.constraintViolations\r\n          .filter(v => v.currentValue > 0)\r\n          .reduce((sum, v) => sum + v.penalty, 0);\r\n        \r\n        // Add penalty to all objectives\r\n        for (let i = 0; i < individual.objectives.length; i++) {\r\n          individual.objectives[i] += totalPenalty;\r\n        }\r\n      }\r\n      \r\n      this.evaluationCount++;\r\n      \r\n    } catch (error) {\r\n      console.error('Error evaluating individual:', error);\r\n      individual.objectives = new Array(objectiveFunctions.length).fill(Number.MAX_VALUE);\r\n      individual.fitness = Number.MAX_VALUE;\r\n      individual.feasible = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert individual to optimization variables\r\n   */\r\n  private individualToVariables(individual: NSGA2Individual, variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\r\n    return variableTemplates.map(template => ({\r\n      ...template,\r\n      currentValue: individual.variables[template.id]\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Calculate scalar fitness for compatibility\r\n   */\r\n  private calculateScalarFitness(objectives: number[], problem: OptimizationProblem): number {\r\n    if (this.parameters.weightedSumWeights && this.parameters.weightedSumWeights.length === objectives.length) {\r\n      // Weighted sum aggregation\r\n      return objectives.reduce((sum, obj, i) => sum + this.parameters.weightedSumWeights![i] * obj, 0);\r\n    } else {\r\n      // Simple sum\r\n      return objectives.reduce((sum, obj) => sum + obj, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evolve population for one generation\r\n   */\r\n  private async evolvePopulation(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    if (!this.currentState) return;\r\n    \r\n    switch (this.parameters.algorithm) {\r\n      case 'nsga2':\r\n        await this.evolveNSGA2(problem, objectiveFunctions, constraintFunctions);\r\n        break;\r\n      case 'weighted_sum':\r\n        await this.evolveWeightedSum(problem, objectiveFunctions, constraintFunctions);\r\n        break;\r\n      default:\r\n        await this.evolveNSGA2(problem, objectiveFunctions, constraintFunctions);\r\n    }\r\n    \r\n    this.currentState.generation++;\r\n  }\r\n\r\n  /**\r\n   * Evolve using NSGA-II algorithm\r\n   */\r\n  private async evolveNSGA2(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    if (!this.currentState) return;\r\n    \r\n    // Create offspring population\r\n    const offspring = await this.createOffspring(problem, objectiveFunctions, constraintFunctions);\r\n    \r\n    // Combine parent and offspring populations\r\n    const combinedPopulation = [...this.currentState.population, ...offspring];\r\n    \r\n    // Perform non-dominated sorting\r\n    const fronts = this.nonDominatedSort(combinedPopulation);\r\n    \r\n    // Select next generation\r\n    const nextGeneration: NSGA2Individual[] = [];\r\n    let frontIndex = 0;\r\n    \r\n    while (nextGeneration.length + fronts[frontIndex].length <= this.parameters.populationSize) {\r\n      // Calculate crowding distance for current front\r\n      this.calculateCrowdingDistance(fronts[frontIndex], objectiveFunctions.length);\r\n      \r\n      // Add entire front\r\n      nextGeneration.push(...fronts[frontIndex]);\r\n      frontIndex++;\r\n      \r\n      if (frontIndex >= fronts.length) break;\r\n    }\r\n    \r\n    // Fill remaining slots with best individuals from next front\r\n    if (nextGeneration.length < this.parameters.populationSize && frontIndex < fronts.length) {\r\n      const remainingSlots = this.parameters.populationSize - nextGeneration.length;\r\n      const lastFront = fronts[frontIndex];\r\n      \r\n      // Calculate crowding distance for last front\r\n      this.calculateCrowdingDistance(lastFront, objectiveFunctions.length);\r\n      \r\n      // Sort by crowding distance (descending)\r\n      lastFront.sort((a, b) => b.crowdingDistance - a.crowdingDistance);\r\n      \r\n      // Add best individuals\r\n      nextGeneration.push(...lastFront.slice(0, remainingSlots));\r\n    }\r\n    \r\n    // Update state\r\n    this.currentState.population = nextGeneration;\r\n    this.currentState.paretoFronts = fronts;\r\n    this.currentState.hypervolume = this.calculateHypervolume(fronts[0] || []);\r\n    this.currentState.spacing = this.calculateSpacing(fronts[0] || []);\r\n    \r\n    // Update archive\r\n    this.updateArchive(fronts[0] || []);\r\n  }\r\n\r\n  /**\r\n   * Create offspring population\r\n   */\r\n  private async createOffspring(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<NSGA2Individual[]> {\r\n    const offspring: NSGA2Individual[] = [];\r\n    \r\n    while (offspring.length < this.parameters.populationSize) {\r\n      // Tournament selection\r\n      const parent1 = this.tournamentSelection();\r\n      const parent2 = this.tournamentSelection();\r\n      \r\n      if (!parent1 || !parent2) continue;\r\n      \r\n      // Crossover\r\n      if (this.random() < this.parameters.crossoverRate) {\r\n        const [child1, child2] = this.crossover(parent1, parent2, problem);\r\n        \r\n        // Mutation\r\n        if (this.random() < this.parameters.mutationRate) {\r\n          this.mutate(child1, problem);\r\n        }\r\n        if (this.random() < this.parameters.mutationRate) {\r\n          this.mutate(child2, problem);\r\n        }\r\n        \r\n        // Evaluate children\r\n        await this.evaluateIndividual(child1, problem, objectiveFunctions, constraintFunctions);\r\n        await this.evaluateIndividual(child2, problem, objectiveFunctions, constraintFunctions);\r\n        \r\n        offspring.push(child1);\r\n        if (offspring.length < this.parameters.populationSize) {\r\n          offspring.push(child2);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return offspring;\r\n  }\r\n\r\n  /**\r\n   * Tournament selection for NSGA-II\r\n   */\r\n  private tournamentSelection(): NSGA2Individual | null {\r\n    if (!this.currentState || this.currentState.population.length === 0) return null;\r\n    \r\n    const tournamentSize = 2;\r\n    const tournament: NSGA2Individual[] = [];\r\n    \r\n    // Select random individuals for tournament\r\n    for (let i = 0; i < tournamentSize; i++) {\r\n      const randomIndex = Math.floor(this.random() * this.currentState.population.length);\r\n      tournament.push(this.currentState.population[randomIndex]);\r\n    }\r\n    \r\n    // Select best individual based on rank and crowding distance\r\n    return tournament.reduce((best, current) => {\r\n      if (current.rank < best.rank) {\r\n        return current;\r\n      } else if (current.rank === best.rank && current.crowdingDistance > best.crowdingDistance) {\r\n        return current;\r\n      }\r\n      return best;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Crossover operation\r\n   */\r\n  private crossover(parent1: NSGA2Individual, parent2: NSGA2Individual, problem: OptimizationProblem): [NSGA2Individual, NSGA2Individual] {\r\n    const child1 = this.createRandomIndividual(problem);\r\n    const child2 = this.createRandomIndividual(problem);\r\n    \r\n    // Simulated binary crossover (SBX) for continuous variables\r\n    const eta = 20; // Distribution index\r\n    \r\n    for (const variable of problem.variables) {\r\n      const value1 = parent1.variables[variable.id];\r\n      const value2 = parent2.variables[variable.id];\r\n      \r\n      if (typeof value1 === 'number' && typeof value2 === 'number') {\r\n        // Continuous variable - SBX\r\n        const u = this.random();\r\n        const beta = u <= 0.5 ? \r\n          Math.pow(2 * u, 1 / (eta + 1)) : \r\n          Math.pow(1 / (2 * (1 - u)), 1 / (eta + 1));\r\n        \r\n        const child1Value = 0.5 * ((1 + beta) * value1 + (1 - beta) * value2);\r\n        const child2Value = 0.5 * ((1 - beta) * value1 + (1 + beta) * value2);\r\n        \r\n        // Apply bounds\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : -Infinity;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : Infinity;\r\n        \r\n        child1.variables[variable.id] = Math.max(min, Math.min(max, child1Value));\r\n        child2.variables[variable.id] = Math.max(min, Math.min(max, child2Value));\r\n      } else {\r\n        // Discrete variable - random selection\r\n        child1.variables[variable.id] = this.random() < 0.5 ? value1 : value2;\r\n        child2.variables[variable.id] = this.random() < 0.5 ? value1 : value2;\r\n      }\r\n    }\r\n    \r\n    return [child1, child2];\r\n  }\r\n\r\n  /**\r\n   * Mutation operation\r\n   */\r\n  private mutate(individual: NSGA2Individual, problem: OptimizationProblem): void {\r\n    const eta = 20; // Distribution index\r\n    \r\n    for (const variable of problem.variables) {\r\n      if (this.random() < (1 / problem.variables.length)) { // Mutation probability per variable\r\n        const currentValue = individual.variables[variable.id];\r\n        \r\n        if (typeof currentValue === 'number') {\r\n          // Continuous variable - polynomial mutation\r\n          const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n          const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n          \r\n          const u = this.random();\r\n          const delta = u < 0.5 ? \r\n            Math.pow(2 * u, 1 / (eta + 1)) - 1 : \r\n            1 - Math.pow(2 * (1 - u), 1 / (eta + 1));\r\n          \r\n          const mutatedValue = currentValue + delta * (max - min);\r\n          individual.variables[variable.id] = Math.max(min, Math.min(max, mutatedValue));\r\n        } else if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n          // Discrete variable - random selection\r\n          const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n          individual.variables[variable.id] = variable.discreteValues[randomIndex];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Non-dominated sorting\r\n   */\r\n  private nonDominatedSort(population: NSGA2Individual[]): NSGA2Individual[][] {\r\n    const fronts: NSGA2Individual[][] = [];\r\n    \r\n    // Initialize domination properties\r\n    for (const individual of population) {\r\n      individual.dominationCount = 0;\r\n      individual.dominatedSolutions = [];\r\n    }\r\n    \r\n    // Calculate domination relationships\r\n    for (let i = 0; i < population.length; i++) {\r\n      for (let j = i + 1; j < population.length; j++) {\r\n        const dominance = this.checkDominance(population[i], population[j]);\r\n        \r\n        if (dominance === 'first_dominates') {\r\n          population[i].dominatedSolutions.push(population[j].id);\r\n          population[j].dominationCount++;\r\n        } else if (dominance === 'second_dominates') {\r\n          population[j].dominatedSolutions.push(population[i].id);\r\n          population[i].dominationCount++;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Create first front\r\n    const firstFront: NSGA2Individual[] = [];\r\n    for (const individual of population) {\r\n      if (individual.dominationCount === 0) {\r\n        individual.rank = 0;\r\n        firstFront.push(individual);\r\n      }\r\n    }\r\n    \r\n    if (firstFront.length > 0) {\r\n      fronts.push(firstFront);\r\n    }\r\n    \r\n    // Create subsequent fronts\r\n    let currentFront = firstFront;\r\n    let frontIndex = 0;\r\n    \r\n    while (currentFront.length > 0) {\r\n      const nextFront: NSGA2Individual[] = [];\r\n      \r\n      for (const individual of currentFront) {\r\n        for (const dominatedId of individual.dominatedSolutions) {\r\n          const dominated = population.find(p => p.id === dominatedId);\r\n          if (dominated) {\r\n            dominated.dominationCount--;\r\n            if (dominated.dominationCount === 0) {\r\n              dominated.rank = frontIndex + 1;\r\n              nextFront.push(dominated);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (nextFront.length > 0) {\r\n        fronts.push(nextFront);\r\n      }\r\n      \r\n      currentFront = nextFront;\r\n      frontIndex++;\r\n    }\r\n    \r\n    return fronts;\r\n  }\r\n\r\n  /**\r\n   * Check dominance relationship between two individuals\r\n   */\r\n  private checkDominance(individual1: NSGA2Individual, individual2: NSGA2Individual): DominanceRelation {\r\n    let firstBetter = false;\r\n    let secondBetter = false;\r\n    \r\n    for (let i = 0; i < individual1.objectives.length; i++) {\r\n      if (individual1.objectives[i] < individual2.objectives[i]) {\r\n        firstBetter = true;\r\n      } else if (individual1.objectives[i] > individual2.objectives[i]) {\r\n        secondBetter = true;\r\n      }\r\n    }\r\n    \r\n    if (firstBetter && !secondBetter) {\r\n      return 'first_dominates';\r\n    } else if (secondBetter && !firstBetter) {\r\n      return 'second_dominates';\r\n    } else {\r\n      return 'non_dominated';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate crowding distance\r\n   */\r\n  private calculateCrowdingDistance(front: NSGA2Individual[], numObjectives: number): void {\r\n    const frontSize = front.length;\r\n    \r\n    // Initialize crowding distances\r\n    for (const individual of front) {\r\n      individual.crowdingDistance = 0;\r\n    }\r\n    \r\n    if (frontSize <= 2) {\r\n      // Boundary solutions get infinite distance\r\n      for (const individual of front) {\r\n        individual.crowdingDistance = Infinity;\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Calculate crowding distance for each objective\r\n    for (let obj = 0; obj < numObjectives; obj++) {\r\n      // Sort by objective value\r\n      front.sort((a, b) => a.objectives[obj] - b.objectives[obj]);\r\n      \r\n      // Boundary solutions get infinite distance\r\n      front[0].crowdingDistance = Infinity;\r\n      front[frontSize - 1].crowdingDistance = Infinity;\r\n      \r\n      // Calculate distance for intermediate solutions\r\n      const objectiveRange = front[frontSize - 1].objectives[obj] - front[0].objectives[obj];\r\n      \r\n      if (objectiveRange > 0) {\r\n        for (let i = 1; i < frontSize - 1; i++) {\r\n          const distance = (front[i + 1].objectives[obj] - front[i - 1].objectives[obj]) / objectiveRange;\r\n          front[i].crowdingDistance += distance;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evolve using weighted sum approach\r\n   */\r\n  private async evolveWeightedSum(\r\n    problem: OptimizationProblem,\r\n    objectiveFunctions: ObjectiveFunctionType[],\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    // Use genetic algorithm with weighted sum aggregation\r\n    const gaParameters: Partial<GeneticAlgorithmParameters> = {\r\n      populationSize: this.parameters.populationSize,\r\n      maxGenerations: 1, // Single generation evolution\r\n      crossoverRate: this.parameters.crossoverRate,\r\n      mutationRate: this.parameters.mutationRate,\r\n      eliteSize: this.parameters.eliteSize,\r\n      constraintHandling: this.parameters.constraintHandling,\r\n      penaltyCoefficient: this.parameters.penaltyCoefficient\r\n    };\r\n    \r\n    const ga = new GeneticAlgorithm(gaParameters);\r\n    \r\n    // Create weighted objective function\r\n    const weightedObjectiveFunction = (variables: OptimizationVariable[]): number => {\r\n      let weightedSum = 0;\r\n      for (let i = 0; i < objectiveFunctions.length; i++) {\r\n        const weight = this.parameters.weightedSumWeights?.[i] || (1 / objectiveFunctions.length);\r\n        weightedSum += weight * objectiveFunctions[i](variables);\r\n      }\r\n      return weightedSum;\r\n    };\r\n    \r\n    // Evolve population\r\n    const result = await ga.optimize(problem, weightedObjectiveFunction, constraintFunctions);\r\n    \r\n    // Convert result back to multi-objective format\r\n    if (this.currentState && result.bestSolution) {\r\n      // Update population with new solutions (simplified)\r\n      const newIndividual = this.solutionToIndividual(result.bestSolution, problem);\r\n      await this.evaluateIndividual(newIndividual, problem, objectiveFunctions, constraintFunctions);\r\n      \r\n      // Replace worst individual\r\n      this.currentState.population.sort((a, b) => a.fitness - b.fitness);\r\n      this.currentState.population[this.currentState.population.length - 1] = newIndividual;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert optimization solution to NSGA2 individual\r\n   */\r\n  private solutionToIndividual(solution: OptimizationSolution, problem: OptimizationProblem): NSGA2Individual {\r\n    return {\r\n      ...solution,\r\n      objectives: [],\r\n      rank: 0,\r\n      crowdingDistance: 0,\r\n      dominationCount: 0,\r\n      dominatedSolutions: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update archive with non-dominated solutions\r\n   */\r\n  private updateArchive(paretoFront: NSGA2Individual[]): void {\r\n    if (!this.currentState) return;\r\n    \r\n    // Add new non-dominated solutions to archive\r\n    for (const individual of paretoFront) {\r\n      const isDominated = this.currentState.archive.some(archived => \r\n        this.checkDominance(archived, individual) === 'first_dominates'\r\n      );\r\n      \r\n      if (!isDominated) {\r\n        // Remove dominated solutions from archive\r\n        this.currentState.archive = this.currentState.archive.filter(archived =>\r\n          this.checkDominance(individual, archived) !== 'first_dominates'\r\n        );\r\n        \r\n        // Add new solution\r\n        this.currentState.archive.push({ ...individual });\r\n      }\r\n    }\r\n    \r\n    // Limit archive size\r\n    if (this.currentState.archive.length > this.parameters.archiveSize) {\r\n      // Sort by crowding distance and keep best\r\n      this.calculateCrowdingDistance(this.currentState.archive, this.currentState.archive[0]?.objectives.length || 0);\r\n      this.currentState.archive.sort((a, b) => b.crowdingDistance - a.crowdingDistance);\r\n      this.currentState.archive = this.currentState.archive.slice(0, this.parameters.archiveSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update Pareto front\r\n   */\r\n  private updateParetoFront(): void {\r\n    if (!this.currentState || this.currentState.paretoFronts.length === 0) return;\r\n    \r\n    const paretoSolutions: ParetoSolution[] = this.currentState.paretoFronts[0].map(individual => ({\r\n      id: individual.id,\r\n      objectives: [...individual.objectives],\r\n      variables: { ...individual.variables },\r\n      dominanceRank: individual.rank,\r\n      crowdingDistance: individual.crowdingDistance,\r\n      feasible: individual.feasible,\r\n      constraintViolations: individual.constraintViolations.length\r\n    }));\r\n    \r\n    this.paretoFront = {\r\n      solutions: paretoSolutions,\r\n      hypervolume: this.currentState.hypervolume,\r\n      spacing: this.currentState.spacing,\r\n      convergenceMetric: this.currentState.convergenceMetric,\r\n      generationFound: this.currentState.generation,\r\n      dominanceDepth: 1\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate hypervolume indicator\r\n   */\r\n  private calculateHypervolume(paretoFront: NSGA2Individual[]): number {\r\n    if (paretoFront.length === 0) return 0;\r\n    \r\n    // Simplified hypervolume calculation\r\n    // In practice, would use more sophisticated algorithms like WFG or FPRAS\r\n    \r\n    const referencePoint = this.parameters.paretoSettings.hypervolume.referencePoint;\r\n    if (referencePoint.length === 0) {\r\n      // Use worst values as reference point\r\n      const numObjectives = paretoFront[0]?.objectives.length || 0;\r\n      for (let i = 0; i < numObjectives; i++) {\r\n        const maxValue = Math.max(...paretoFront.map(ind => ind.objectives[i]));\r\n        referencePoint.push(maxValue * 1.1); // 10% worse than worst\r\n      }\r\n    }\r\n    \r\n    // Simple hypervolume approximation\r\n    let hypervolume = 0;\r\n    for (const individual of paretoFront) {\r\n      let volume = 1;\r\n      for (let i = 0; i < individual.objectives.length; i++) {\r\n        volume *= Math.max(0, referencePoint[i] - individual.objectives[i]);\r\n      }\r\n      hypervolume += volume;\r\n    }\r\n    \r\n    return hypervolume;\r\n  }\r\n\r\n  /**\r\n   * Calculate spacing metric\r\n   */\r\n  private calculateSpacing(paretoFront: NSGA2Individual[]): number {\r\n    if (paretoFront.length < 2) return 0;\r\n    \r\n    const distances: number[] = [];\r\n    \r\n    for (let i = 0; i < paretoFront.length; i++) {\r\n      let minDistance = Infinity;\r\n      \r\n      for (let j = 0; j < paretoFront.length; j++) {\r\n        if (i !== j) {\r\n          const distance = this.calculateObjectiveDistance(paretoFront[i], paretoFront[j]);\r\n          minDistance = Math.min(minDistance, distance);\r\n        }\r\n      }\r\n      \r\n      distances.push(minDistance);\r\n    }\r\n    \r\n    const meanDistance = distances.reduce((sum, d) => sum + d, 0) / distances.length;\r\n    const variance = distances.reduce((sum, d) => sum + Math.pow(d - meanDistance, 2), 0) / distances.length;\r\n    \r\n    return Math.sqrt(variance);\r\n  }\r\n\r\n  /**\r\n   * Calculate distance between two individuals in objective space\r\n   */\r\n  private calculateObjectiveDistance(individual1: NSGA2Individual, individual2: NSGA2Individual): number {\r\n    let distance = 0;\r\n    for (let i = 0; i < individual1.objectives.length; i++) {\r\n      const diff = individual1.objectives[i] - individual2.objectives[i];\r\n      distance += diff * diff;\r\n    }\r\n    return Math.sqrt(distance);\r\n  }\r\n\r\n  /**\r\n   * Perform trade-off analysis\r\n   */\r\n  private performTradeoffAnalysis(): TradeoffAnalysis {\r\n    if (!this.paretoFront) {\r\n      return {\r\n        kneePoints: [],\r\n        tradeoffCurves: [],\r\n        sensitivityAnalysis: {},\r\n        recommendations: []\r\n      };\r\n    }\r\n    \r\n    // Find knee points (solutions with best trade-offs)\r\n    const kneePoints = this.findKneePoints();\r\n    \r\n    // Generate trade-off curves\r\n    const tradeoffCurves = this.generateTradeoffCurves();\r\n    \r\n    // Perform sensitivity analysis\r\n    const sensitivityAnalysis = this.performSensitivityAnalysis();\r\n    \r\n    // Generate recommendations\r\n    const recommendations = this.generateRecommendations(kneePoints);\r\n    \r\n    return {\r\n      kneePoints,\r\n      tradeoffCurves,\r\n      sensitivityAnalysis,\r\n      recommendations\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find knee points in Pareto front\r\n   */\r\n  private findKneePoints(): KneePoint[] {\r\n    if (!this.paretoFront || this.paretoFront.solutions.length < 3) return [];\r\n    \r\n    const kneePoints: KneePoint[] = [];\r\n    const solutions = this.paretoFront.solutions;\r\n    \r\n    // Simple knee point detection using angle-based method\r\n    for (let i = 1; i < solutions.length - 1; i++) {\r\n      const prev = solutions[i - 1];\r\n      const current = solutions[i];\r\n      const next = solutions[i + 1];\r\n      \r\n      // Calculate angle at current point\r\n      const angle = this.calculateAngle(prev.objectives, current.objectives, next.objectives);\r\n      \r\n      // Knee points have small angles (sharp turns)\r\n      if (angle < Math.PI / 3) { // 60 degrees threshold\r\n        kneePoints.push({\r\n          solutionId: current.id,\r\n          objectives: [...current.objectives],\r\n          kneeMetric: Math.PI - angle, // Higher value = sharper knee\r\n          tradeoffRatio: this.calculateTradeoffRatio(current.objectives),\r\n          description: `Knee point with ${(Math.PI - angle).toFixed(3)} knee metric`\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Sort by knee metric (best knees first)\r\n    kneePoints.sort((a, b) => b.kneeMetric - a.kneeMetric);\r\n    \r\n    return kneePoints.slice(0, 5); // Return top 5 knee points\r\n  }\r\n\r\n  /**\r\n   * Calculate angle between three points\r\n   */\r\n  private calculateAngle(p1: number[], p2: number[], p3: number[]): number {\r\n    const v1 = p1.map((val, i) => val - p2[i]);\r\n    const v2 = p3.map((val, i) => val - p2[i]);\r\n    \r\n    const dot = v1.reduce((sum, val, i) => sum + val * v2[i], 0);\r\n    const mag1 = Math.sqrt(v1.reduce((sum, val) => sum + val * val, 0));\r\n    const mag2 = Math.sqrt(v2.reduce((sum, val) => sum + val * val, 0));\r\n    \r\n    if (mag1 === 0 || mag2 === 0) return Math.PI;\r\n    \r\n    const cosAngle = dot / (mag1 * mag2);\r\n    return Math.acos(Math.max(-1, Math.min(1, cosAngle)));\r\n  }\r\n\r\n  /**\r\n   * Calculate trade-off ratio for objectives\r\n   */\r\n  private calculateTradeoffRatio(objectives: number[]): number {\r\n    if (objectives.length !== 2) return 1; // Only for bi-objective problems\r\n    \r\n    return objectives[0] / objectives[1];\r\n  }\r\n\r\n  /**\r\n   * Generate trade-off curves\r\n   */\r\n  private generateTradeoffCurves(): any[] {\r\n    // Simplified implementation - would generate actual curve data\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Perform sensitivity analysis\r\n   */\r\n  private performSensitivityAnalysis(): any {\r\n    // Simplified implementation - would analyze parameter sensitivity\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Generate recommendations based on analysis\r\n   */\r\n  private generateRecommendations(kneePoints: KneePoint[]): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    if (kneePoints.length > 0) {\r\n      recommendations.push(`Consider solution ${kneePoints[0].solutionId} as it represents the best trade-off between objectives.`);\r\n    }\r\n    \r\n    if (this.paretoFront && this.paretoFront.solutions.length > 10) {\r\n      recommendations.push('Large Pareto front indicates good diversity in solutions. Consider multiple alternatives.');\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Check termination criteria\r\n   */\r\n  private shouldTerminate(problem: OptimizationProblem): boolean {\r\n    if (!this.currentState) return true;\r\n    \r\n    // Maximum generations\r\n    if (this.currentState.generation >= this.parameters.maxGenerations) {\r\n      return true;\r\n    }\r\n    \r\n    // Convergence check\r\n    if (this.history.length >= 10) {\r\n      const recentHistory = this.history.slice(-10);\r\n      const hypervolumeImprovement = recentHistory[recentHistory.length - 1].bestFitness - recentHistory[0].bestFitness;\r\n      \r\n      if (Math.abs(hypervolumeImprovement) < this.parameters.paretoSettings.convergenceThreshold) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Update optimization history\r\n   */\r\n  private updateHistory(): void {\r\n    if (!this.currentState) return;\r\n    \r\n    const feasibleIndividuals = this.currentState.population.filter(ind => ind.feasible);\r\n    const fitnesses = feasibleIndividuals.map(ind => ind.fitness);\r\n    \r\n    if (fitnesses.length === 0) {\r\n      fitnesses.push(Number.MAX_VALUE);\r\n    }\r\n    \r\n    const history: IterationHistory = {\r\n      iteration: this.currentState.generation,\r\n      bestFitness: Math.min(...fitnesses),\r\n      averageFitness: fitnesses.reduce((sum, f) => sum + f, 0) / fitnesses.length,\r\n      worstFitness: Math.max(...fitnesses),\r\n      diversity: this.currentState.spacing,\r\n      constraintViolations: this.currentState.population.filter(ind => !ind.feasible).length,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    this.history.push(history);\r\n  }\r\n\r\n  /**\r\n   * Create multi-objective optimization result\r\n   */\r\n  private createMultiObjectiveResult(problem: OptimizationProblem, startTime: number, tradeoffAnalysis: TradeoffAnalysis): OptimizationResult {\r\n    const executionTime = performance.now() - startTime;\r\n    \r\n    // Find best solution (first in Pareto front)\r\n    const bestSolution = this.currentState?.paretoFronts[0]?.[0] || this.currentState?.population[0];\r\n    \r\n    const statistics: OptimizationStatistics = {\r\n      totalIterations: this.currentState?.generation || 0,\r\n      totalEvaluations: this.evaluationCount,\r\n      convergenceIteration: this.currentState?.generation || 0,\r\n      executionTime,\r\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\r\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\r\n      diversityHistory: this.history.map(h => h.diversity),\r\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\r\n      algorithmSpecificStats: {\r\n        algorithm: this.parameters.algorithm,\r\n        populationSize: this.parameters.populationSize,\r\n        paretoFrontSize: this.currentState?.paretoFronts[0]?.length || 0,\r\n        hypervolume: this.currentState?.hypervolume || 0,\r\n        spacing: this.currentState?.spacing || 0,\r\n        archiveSize: this.currentState?.archive.length || 0\r\n      }\r\n    };\r\n    \r\n    const optimizationHistory: OptimizationHistory = {\r\n      iterations: this.history,\r\n      populationHistory: this.populationHistory,\r\n      parameterHistory: [],\r\n      convergenceMetrics: []\r\n    };\r\n    \r\n    return {\r\n      problemId: problem.id,\r\n      status: OptimizationStatus.CONVERGED,\r\n      bestSolution: bestSolution || this.createDummySolution(problem),\r\n      statistics,\r\n      history: optimizationHistory,\r\n      analysis: {\r\n        paretoFront: this.paretoFront,\r\n        tradeoffAnalysis\r\n      },\r\n      recommendations: tradeoffAnalysis.recommendations,\r\n      warnings: [],\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create dummy solution for error cases\r\n   */\r\n  private createDummySolution(problem: OptimizationProblem): OptimizationSolution {\r\n    const variables: { [variableId: string]: number | string } = {};\r\n    for (const variable of problem.variables) {\r\n      variables[variable.id] = 0;\r\n    }\r\n    \r\n    return {\r\n      id: 'dummy_solution',\r\n      variables,\r\n      objectiveValues: {},\r\n      constraintViolations: [],\r\n      feasible: false,\r\n      fitness: Number.MAX_VALUE,\r\n      systemConfiguration: problem.systemConfiguration,\r\n      performanceMetrics: {} as SolutionPerformanceMetrics\r\n    };\r\n  }\r\n\r\n  // Utility methods\r\n  private generateIndividualId(): string {\r\n    return `mo_ind_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private createSeededRandom(seed: number): () => number {\r\n    let state = seed;\r\n    return () => {\r\n      state = (state * 9301 + 49297) % 233280;\r\n      return state / 233280;\r\n    };\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2805d7f4f895f37ca9c5faa110418280e4641db9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2n5trddhjt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2n5trddhjt();
cov_2n5trddhjt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2n5trddhjt().s[1]++;
exports.MultiObjectiveOptimizationFramework = void 0;
const SystemOptimizationTypes_1 =
/* istanbul ignore next */
(cov_2n5trddhjt().s[2]++, require("./types/SystemOptimizationTypes"));
const GeneticAlgorithm_1 =
/* istanbul ignore next */
(cov_2n5trddhjt().s[3]++, require("./algorithms/GeneticAlgorithm"));
/**
 * Multi-objective optimization framework with NSGA-II and Pareto analysis
 */
class MultiObjectiveOptimizationFramework {
  constructor(parameters) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[0]++;
    cov_2n5trddhjt().s[4]++;
    this.currentState = null;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[5]++;
    this.paretoFront = null;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[6]++;
    this.history = [];
    /* istanbul ignore next */
    cov_2n5trddhjt().s[7]++;
    this.populationHistory = [];
    /* istanbul ignore next */
    cov_2n5trddhjt().s[8]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[9]++;
    this.parameters = {
      algorithm: 'nsga2',
      populationSize: 100,
      maxGenerations: 100,
      crossoverRate: 0.9,
      mutationRate: 0.1,
      eliteSize: 10,
      paretoSettings: {
        maxSolutions: 100,
        diversityThreshold: 0.01,
        convergenceThreshold: 1e-6,
        hypervolume: {
          enabled: true,
          referencePoint: []
        },
        spacing: {
          enabled: true,
          targetSpacing: 0.1
        }
      },
      diversityMaintenance: true,
      constraintHandling: 'penalty',
      penaltyCoefficient: 1000,
      archiveSize: 200,
      ...parameters
    };
    // Initialize random number generator
    /* istanbul ignore next */
    cov_2n5trddhjt().s[10]++;
    if (this.parameters.seedValue !== undefined) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[0][0]++;
      cov_2n5trddhjt().s[11]++;
      this.random = this.createSeededRandom(this.parameters.seedValue);
    } else {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[0][1]++;
      cov_2n5trddhjt().s[12]++;
      this.random = Math.random;
    }
  }
  /**
   * Main multi-objective optimization method
   */
  async optimizeMultiObjective(problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[13]++, performance.now());
    /* istanbul ignore next */
    cov_2n5trddhjt().s[14]++;
    try {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[15]++;
      // Validate multi-objective problem
      this.validateMultiObjectiveProblem(problem, objectiveFunctions);
      // Initialize algorithm
      /* istanbul ignore next */
      cov_2n5trddhjt().s[16]++;
      this.initializeAlgorithm(problem);
      // Create initial population
      /* istanbul ignore next */
      cov_2n5trddhjt().s[17]++;
      await this.createInitialPopulation(problem, objectiveFunctions, constraintFunctions);
      // Main optimization loop
      /* istanbul ignore next */
      cov_2n5trddhjt().s[18]++;
      while (!this.shouldTerminate(problem)) {
        /* istanbul ignore next */
        cov_2n5trddhjt().s[19]++;
        await this.evolvePopulation(problem, objectiveFunctions, constraintFunctions);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[20]++;
        this.updateHistory();
        /* istanbul ignore next */
        cov_2n5trddhjt().s[21]++;
        this.updateParetoFront();
      }
      // Perform final analysis
      const tradeoffAnalysis =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[22]++, this.performTradeoffAnalysis());
      // Create final result
      /* istanbul ignore next */
      cov_2n5trddhjt().s[23]++;
      return this.createMultiObjectiveResult(problem, startTime, tradeoffAnalysis);
    } catch (error) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[24]++;
      console.error('Multi-objective optimization failed:', error);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[25]++;
      throw error;
    }
  }
  /**
   * Validate multi-objective problem
   */
  validateMultiObjectiveProblem(problem, objectiveFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[2]++;
    cov_2n5trddhjt().s[26]++;
    if (objectiveFunctions.length < 2) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[1][0]++;
      cov_2n5trddhjt().s[27]++;
      throw new Error('Multi-objective optimization requires at least 2 objective functions');
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[1][1]++;
    }
    cov_2n5trddhjt().s[28]++;
    if (problem.objectives.objectives.length !== objectiveFunctions.length) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[2][0]++;
      cov_2n5trddhjt().s[29]++;
      throw new Error('Number of objective functions must match problem definition');
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[2][1]++;
    }
  }
  /**
   * Initialize algorithm state
   */
  initializeAlgorithm(problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[3]++;
    cov_2n5trddhjt().s[30]++;
    this.currentState = null;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[31]++;
    this.paretoFront = null;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[32]++;
    this.history = [];
    /* istanbul ignore next */
    cov_2n5trddhjt().s[33]++;
    this.populationHistory = [];
    /* istanbul ignore next */
    cov_2n5trddhjt().s[34]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[35]++;
    console.log(`Initializing Multi-objective Optimization (${this.parameters.algorithm}) with population size: ${this.parameters.populationSize}`);
  }
  /**
   * Create initial population
   */
  async createInitialPopulation(problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[4]++;
    const population =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[36]++, []);
    // Create random individuals
    /* istanbul ignore next */
    cov_2n5trddhjt().s[37]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[38]++, 0); i < this.parameters.populationSize; i++) {
      const individual =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[39]++, this.createRandomIndividual(problem));
      /* istanbul ignore next */
      cov_2n5trddhjt().s[40]++;
      await this.evaluateIndividual(individual, problem, objectiveFunctions, constraintFunctions);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[41]++;
      population.push(individual);
    }
    // Perform non-dominated sorting
    const fronts =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[42]++, this.nonDominatedSort(population));
    // Calculate crowding distances
    /* istanbul ignore next */
    cov_2n5trddhjt().s[43]++;
    for (const front of fronts) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[44]++;
      this.calculateCrowdingDistance(front, objectiveFunctions.length);
    }
    // Initialize state
    /* istanbul ignore next */
    cov_2n5trddhjt().s[45]++;
    this.currentState = {
      population,
      archive: [...population],
      paretoFronts: fronts,
      generation: 0,
      hypervolume: this.calculateHypervolume(
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[3][0]++, fronts[0]) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[3][1]++, [])),
      spacing: this.calculateSpacing(
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[4][0]++, fronts[0]) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[4][1]++, [])),
      convergenceMetric: 0
    };
  }
  /**
   * Create a random individual
   */
  createRandomIndividual(problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[5]++;
    const variables =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[46]++, {});
    /* istanbul ignore next */
    cov_2n5trddhjt().s[47]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[48]++;
      if (
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[6][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[6][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[5][0]++;
        // Discrete variable
        const randomIndex =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[49]++, Math.floor(this.random() * variable.discreteValues.length));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[50]++;
        variables[variable.id] = variable.discreteValues[randomIndex];
      } else {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[5][1]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[51]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[7][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[7][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[52]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[8][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[8][1]++, 1));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[53]++;
        variables[variable.id] = min + this.random() * (max - min);
      }
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[54]++;
    return {
      id: this.generateIndividualId(),
      variables,
      objectiveValues: {},
      constraintViolations: [],
      feasible: true,
      fitness: 0,
      systemConfiguration: problem.systemConfiguration,
      performanceMetrics: {},
      objectives: [],
      rank: 0,
      crowdingDistance: 0,
      dominationCount: 0,
      dominatedSolutions: []
    };
  }
  /**
   * Evaluate individual on all objectives
   */
  async evaluateIndividual(individual, problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[6]++;
    cov_2n5trddhjt().s[55]++;
    try {
      // Convert individual to optimization variables
      const variables =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[56]++, this.individualToVariables(individual, problem.variables));
      // Evaluate all objective functions
      /* istanbul ignore next */
      cov_2n5trddhjt().s[57]++;
      individual.objectives = [];
      /* istanbul ignore next */
      cov_2n5trddhjt().s[58]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[59]++, 0); i < objectiveFunctions.length; i++) {
        const objectiveValue =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[60]++, objectiveFunctions[i](variables));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[61]++;
        individual.objectives.push(objectiveValue);
        // Store in objectiveValues map
        /* istanbul ignore next */
        cov_2n5trddhjt().s[62]++;
        if (problem.objectives.objectives[i]) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[9][0]++;
          cov_2n5trddhjt().s[63]++;
          individual.objectiveValues[problem.objectives.objectives[i].id] = objectiveValue;
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[9][1]++;
        }
      }
      // Calculate fitness (for single-objective compatibility)
      /* istanbul ignore next */
      cov_2n5trddhjt().s[64]++;
      individual.fitness = this.calculateScalarFitness(individual.objectives, problem);
      // Evaluate constraints
      /* istanbul ignore next */
      cov_2n5trddhjt().s[65]++;
      individual.constraintViolations = [];
      /* istanbul ignore next */
      cov_2n5trddhjt().s[66]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[67]++, 0); i < constraintFunctions.length; i++) {
        const violation =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[68]++, constraintFunctions[i](variables));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[69]++;
        individual.constraintViolations.push({
          constraintId: `constraint_${i}`,
          violationType: violation > 0 ?
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[10][0]++, 'inequality') :
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[10][1]++, 'boundary'),
          currentValue: violation,
          requiredValue: 0,
          severity: violation > 0 ?
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[11][0]++, 'major') :
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[11][1]++, 'minor'),
          penalty: violation > 0 ?
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[12][0]++, violation * this.parameters.penaltyCoefficient) :
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[12][1]++, 0)
        });
      }
      // Check feasibility
      /* istanbul ignore next */
      cov_2n5trddhjt().s[70]++;
      individual.feasible = individual.constraintViolations.every(v => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[7]++;
        cov_2n5trddhjt().s[71]++;
        return v.currentValue <= 0;
      });
      // Apply constraint handling
      /* istanbul ignore next */
      cov_2n5trddhjt().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[14][0]++, !individual.feasible) &&
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[14][1]++, this.parameters.constraintHandling === 'penalty')) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[13][0]++;
        const totalPenalty =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[73]++, individual.constraintViolations.filter(v => {
          /* istanbul ignore next */
          cov_2n5trddhjt().f[8]++;
          cov_2n5trddhjt().s[74]++;
          return v.currentValue > 0;
        }).reduce((sum, v) => {
          /* istanbul ignore next */
          cov_2n5trddhjt().f[9]++;
          cov_2n5trddhjt().s[75]++;
          return sum + v.penalty;
        }, 0));
        // Add penalty to all objectives
        /* istanbul ignore next */
        cov_2n5trddhjt().s[76]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[77]++, 0); i < individual.objectives.length; i++) {
          /* istanbul ignore next */
          cov_2n5trddhjt().s[78]++;
          individual.objectives[i] += totalPenalty;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[13][1]++;
      }
      cov_2n5trddhjt().s[79]++;
      this.evaluationCount++;
    } catch (error) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[80]++;
      console.error('Error evaluating individual:', error);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[81]++;
      individual.objectives = new Array(objectiveFunctions.length).fill(Number.MAX_VALUE);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[82]++;
      individual.fitness = Number.MAX_VALUE;
      /* istanbul ignore next */
      cov_2n5trddhjt().s[83]++;
      individual.feasible = false;
    }
  }
  /**
   * Convert individual to optimization variables
   */
  individualToVariables(individual, variableTemplates) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[10]++;
    cov_2n5trddhjt().s[84]++;
    return variableTemplates.map(template => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[11]++;
      cov_2n5trddhjt().s[85]++;
      return {
        ...template,
        currentValue: individual.variables[template.id]
      };
    });
  }
  /**
   * Calculate scalar fitness for compatibility
   */
  calculateScalarFitness(objectives, problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[12]++;
    cov_2n5trddhjt().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[16][0]++, this.parameters.weightedSumWeights) &&
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[16][1]++, this.parameters.weightedSumWeights.length === objectives.length)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[15][0]++;
      cov_2n5trddhjt().s[87]++;
      // Weighted sum aggregation
      return objectives.reduce((sum, obj, i) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[13]++;
        cov_2n5trddhjt().s[88]++;
        return sum + this.parameters.weightedSumWeights[i] * obj;
      }, 0);
    } else {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[15][1]++;
      cov_2n5trddhjt().s[89]++;
      // Simple sum
      return objectives.reduce((sum, obj) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[14]++;
        cov_2n5trddhjt().s[90]++;
        return sum + obj;
      }, 0);
    }
  }
  /**
   * Evolve population for one generation
   */
  async evolvePopulation(problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[15]++;
    cov_2n5trddhjt().s[91]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[17][0]++;
      cov_2n5trddhjt().s[92]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[17][1]++;
    }
    cov_2n5trddhjt().s[93]++;
    switch (this.parameters.algorithm) {
      case 'nsga2':
        /* istanbul ignore next */
        cov_2n5trddhjt().b[18][0]++;
        cov_2n5trddhjt().s[94]++;
        await this.evolveNSGA2(problem, objectiveFunctions, constraintFunctions);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[95]++;
        break;
      case 'weighted_sum':
        /* istanbul ignore next */
        cov_2n5trddhjt().b[18][1]++;
        cov_2n5trddhjt().s[96]++;
        await this.evolveWeightedSum(problem, objectiveFunctions, constraintFunctions);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[97]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2n5trddhjt().b[18][2]++;
        cov_2n5trddhjt().s[98]++;
        await this.evolveNSGA2(problem, objectiveFunctions, constraintFunctions);
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[99]++;
    this.currentState.generation++;
  }
  /**
   * Evolve using NSGA-II algorithm
   */
  async evolveNSGA2(problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[16]++;
    cov_2n5trddhjt().s[100]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[19][0]++;
      cov_2n5trddhjt().s[101]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[19][1]++;
    }
    // Create offspring population
    const offspring =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[102]++, await this.createOffspring(problem, objectiveFunctions, constraintFunctions));
    // Combine parent and offspring populations
    const combinedPopulation =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[103]++, [...this.currentState.population, ...offspring]);
    // Perform non-dominated sorting
    const fronts =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[104]++, this.nonDominatedSort(combinedPopulation));
    // Select next generation
    const nextGeneration =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[105]++, []);
    let frontIndex =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[106]++, 0);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[107]++;
    while (nextGeneration.length + fronts[frontIndex].length <= this.parameters.populationSize) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[108]++;
      // Calculate crowding distance for current front
      this.calculateCrowdingDistance(fronts[frontIndex], objectiveFunctions.length);
      // Add entire front
      /* istanbul ignore next */
      cov_2n5trddhjt().s[109]++;
      nextGeneration.push(...fronts[frontIndex]);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[110]++;
      frontIndex++;
      /* istanbul ignore next */
      cov_2n5trddhjt().s[111]++;
      if (frontIndex >= fronts.length) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[20][0]++;
        cov_2n5trddhjt().s[112]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[20][1]++;
      }
    }
    // Fill remaining slots with best individuals from next front
    /* istanbul ignore next */
    cov_2n5trddhjt().s[113]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[22][0]++, nextGeneration.length < this.parameters.populationSize) &&
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[22][1]++, frontIndex < fronts.length)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[21][0]++;
      const remainingSlots =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[114]++, this.parameters.populationSize - nextGeneration.length);
      const lastFront =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[115]++, fronts[frontIndex]);
      // Calculate crowding distance for last front
      /* istanbul ignore next */
      cov_2n5trddhjt().s[116]++;
      this.calculateCrowdingDistance(lastFront, objectiveFunctions.length);
      // Sort by crowding distance (descending)
      /* istanbul ignore next */
      cov_2n5trddhjt().s[117]++;
      lastFront.sort((a, b) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[17]++;
        cov_2n5trddhjt().s[118]++;
        return b.crowdingDistance - a.crowdingDistance;
      });
      // Add best individuals
      /* istanbul ignore next */
      cov_2n5trddhjt().s[119]++;
      nextGeneration.push(...lastFront.slice(0, remainingSlots));
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[21][1]++;
    }
    // Update state
    cov_2n5trddhjt().s[120]++;
    this.currentState.population = nextGeneration;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[121]++;
    this.currentState.paretoFronts = fronts;
    /* istanbul ignore next */
    cov_2n5trddhjt().s[122]++;
    this.currentState.hypervolume = this.calculateHypervolume(
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[23][0]++, fronts[0]) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[23][1]++, []));
    /* istanbul ignore next */
    cov_2n5trddhjt().s[123]++;
    this.currentState.spacing = this.calculateSpacing(
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[24][0]++, fronts[0]) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[24][1]++, []));
    // Update archive
    /* istanbul ignore next */
    cov_2n5trddhjt().s[124]++;
    this.updateArchive(
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[25][0]++, fronts[0]) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[25][1]++, []));
  }
  /**
   * Create offspring population
   */
  async createOffspring(problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[18]++;
    const offspring =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[125]++, []);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[126]++;
    while (offspring.length < this.parameters.populationSize) {
      // Tournament selection
      const parent1 =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[127]++, this.tournamentSelection());
      const parent2 =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[128]++, this.tournamentSelection());
      /* istanbul ignore next */
      cov_2n5trddhjt().s[129]++;
      if (
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[27][0]++, !parent1) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[27][1]++, !parent2)) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[26][0]++;
        cov_2n5trddhjt().s[130]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[26][1]++;
      }
      // Crossover
      cov_2n5trddhjt().s[131]++;
      if (this.random() < this.parameters.crossoverRate) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[28][0]++;
        const [child1, child2] =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[132]++, this.crossover(parent1, parent2, problem));
        // Mutation
        /* istanbul ignore next */
        cov_2n5trddhjt().s[133]++;
        if (this.random() < this.parameters.mutationRate) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[29][0]++;
          cov_2n5trddhjt().s[134]++;
          this.mutate(child1, problem);
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[29][1]++;
        }
        cov_2n5trddhjt().s[135]++;
        if (this.random() < this.parameters.mutationRate) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[30][0]++;
          cov_2n5trddhjt().s[136]++;
          this.mutate(child2, problem);
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[30][1]++;
        }
        // Evaluate children
        cov_2n5trddhjt().s[137]++;
        await this.evaluateIndividual(child1, problem, objectiveFunctions, constraintFunctions);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[138]++;
        await this.evaluateIndividual(child2, problem, objectiveFunctions, constraintFunctions);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[139]++;
        offspring.push(child1);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[140]++;
        if (offspring.length < this.parameters.populationSize) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[31][0]++;
          cov_2n5trddhjt().s[141]++;
          offspring.push(child2);
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[31][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[28][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[142]++;
    return offspring;
  }
  /**
   * Tournament selection for NSGA-II
   */
  tournamentSelection() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[19]++;
    cov_2n5trddhjt().s[143]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[33][0]++, !this.currentState) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[33][1]++, this.currentState.population.length === 0)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[32][0]++;
      cov_2n5trddhjt().s[144]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[32][1]++;
    }
    const tournamentSize =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[145]++, 2);
    const tournament =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[146]++, []);
    // Select random individuals for tournament
    /* istanbul ignore next */
    cov_2n5trddhjt().s[147]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[148]++, 0); i < tournamentSize; i++) {
      const randomIndex =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[149]++, Math.floor(this.random() * this.currentState.population.length));
      /* istanbul ignore next */
      cov_2n5trddhjt().s[150]++;
      tournament.push(this.currentState.population[randomIndex]);
    }
    // Select best individual based on rank and crowding distance
    /* istanbul ignore next */
    cov_2n5trddhjt().s[151]++;
    return tournament.reduce((best, current) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[20]++;
      cov_2n5trddhjt().s[152]++;
      if (current.rank < best.rank) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[34][0]++;
        cov_2n5trddhjt().s[153]++;
        return current;
      } else {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[34][1]++;
        cov_2n5trddhjt().s[154]++;
        if (
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[36][0]++, current.rank === best.rank) &&
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[36][1]++, current.crowdingDistance > best.crowdingDistance)) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[35][0]++;
          cov_2n5trddhjt().s[155]++;
          return current;
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[35][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2n5trddhjt().s[156]++;
      return best;
    });
  }
  /**
   * Crossover operation
   */
  crossover(parent1, parent2, problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[21]++;
    const child1 =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[157]++, this.createRandomIndividual(problem));
    const child2 =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[158]++, this.createRandomIndividual(problem));
    // Simulated binary crossover (SBX) for continuous variables
    const eta =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[159]++, 20); // Distribution index
    /* istanbul ignore next */
    cov_2n5trddhjt().s[160]++;
    for (const variable of problem.variables) {
      const value1 =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[161]++, parent1.variables[variable.id]);
      const value2 =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[162]++, parent2.variables[variable.id]);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[163]++;
      if (
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[38][0]++, typeof value1 === 'number') &&
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[38][1]++, typeof value2 === 'number')) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[37][0]++;
        // Continuous variable - SBX
        const u =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[164]++, this.random());
        const beta =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[165]++, u <= 0.5 ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[39][0]++, Math.pow(2 * u, 1 / (eta + 1))) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[39][1]++, Math.pow(1 / (2 * (1 - u)), 1 / (eta + 1))));
        const child1Value =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[166]++, 0.5 * ((1 + beta) * value1 + (1 - beta) * value2));
        const child2Value =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[167]++, 0.5 * ((1 - beta) * value1 + (1 + beta) * value2));
        // Apply bounds
        const min =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[168]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[40][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[40][1]++, -Infinity));
        const max =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[169]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[41][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[41][1]++, Infinity));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[170]++;
        child1.variables[variable.id] = Math.max(min, Math.min(max, child1Value));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[171]++;
        child2.variables[variable.id] = Math.max(min, Math.min(max, child2Value));
      } else {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[37][1]++;
        cov_2n5trddhjt().s[172]++;
        // Discrete variable - random selection
        child1.variables[variable.id] = this.random() < 0.5 ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[42][0]++, value1) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[42][1]++, value2);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[173]++;
        child2.variables[variable.id] = this.random() < 0.5 ?
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[43][0]++, value1) :
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[43][1]++, value2);
      }
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[174]++;
    return [child1, child2];
  }
  /**
   * Mutation operation
   */
  mutate(individual, problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[22]++;
    const eta =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[175]++, 20); // Distribution index
    /* istanbul ignore next */
    cov_2n5trddhjt().s[176]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[177]++;
      if (this.random() < 1 / problem.variables.length) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[44][0]++;
        // Mutation probability per variable
        const currentValue =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[178]++, individual.variables[variable.id]);
        /* istanbul ignore next */
        cov_2n5trddhjt().s[179]++;
        if (typeof currentValue === 'number') {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[45][0]++;
          // Continuous variable - polynomial mutation
          const min =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[180]++, typeof variable.bounds.minimum === 'number' ?
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[46][0]++, variable.bounds.minimum) :
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[46][1]++, 0));
          const max =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[181]++, typeof variable.bounds.maximum === 'number' ?
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[47][0]++, variable.bounds.maximum) :
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[47][1]++, 1));
          const u =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[182]++, this.random());
          const delta =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[183]++, u < 0.5 ?
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[48][0]++, Math.pow(2 * u, 1 / (eta + 1)) - 1) :
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[48][1]++, 1 - Math.pow(2 * (1 - u), 1 / (eta + 1))));
          const mutatedValue =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[184]++, currentValue + delta * (max - min));
          /* istanbul ignore next */
          cov_2n5trddhjt().s[185]++;
          individual.variables[variable.id] = Math.max(min, Math.min(max, mutatedValue));
        } else {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[45][1]++;
          cov_2n5trddhjt().s[186]++;
          if (
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[50][0]++, variable.discreteValues) &&
          /* istanbul ignore next */
          (cov_2n5trddhjt().b[50][1]++, variable.discreteValues.length > 0)) {
            /* istanbul ignore next */
            cov_2n5trddhjt().b[49][0]++;
            // Discrete variable - random selection
            const randomIndex =
            /* istanbul ignore next */
            (cov_2n5trddhjt().s[187]++, Math.floor(this.random() * variable.discreteValues.length));
            /* istanbul ignore next */
            cov_2n5trddhjt().s[188]++;
            individual.variables[variable.id] = variable.discreteValues[randomIndex];
          } else
          /* istanbul ignore next */
          {
            cov_2n5trddhjt().b[49][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[44][1]++;
      }
    }
  }
  /**
   * Non-dominated sorting
   */
  nonDominatedSort(population) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[23]++;
    const fronts =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[189]++, []);
    // Initialize domination properties
    /* istanbul ignore next */
    cov_2n5trddhjt().s[190]++;
    for (const individual of population) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[191]++;
      individual.dominationCount = 0;
      /* istanbul ignore next */
      cov_2n5trddhjt().s[192]++;
      individual.dominatedSolutions = [];
    }
    // Calculate domination relationships
    /* istanbul ignore next */
    cov_2n5trddhjt().s[193]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[194]++, 0); i < population.length; i++) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[195]++;
      for (let j =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[196]++, i + 1); j < population.length; j++) {
        const dominance =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[197]++, this.checkDominance(population[i], population[j]));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[198]++;
        if (dominance === 'first_dominates') {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[51][0]++;
          cov_2n5trddhjt().s[199]++;
          population[i].dominatedSolutions.push(population[j].id);
          /* istanbul ignore next */
          cov_2n5trddhjt().s[200]++;
          population[j].dominationCount++;
        } else {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[51][1]++;
          cov_2n5trddhjt().s[201]++;
          if (dominance === 'second_dominates') {
            /* istanbul ignore next */
            cov_2n5trddhjt().b[52][0]++;
            cov_2n5trddhjt().s[202]++;
            population[j].dominatedSolutions.push(population[i].id);
            /* istanbul ignore next */
            cov_2n5trddhjt().s[203]++;
            population[i].dominationCount++;
          } else
          /* istanbul ignore next */
          {
            cov_2n5trddhjt().b[52][1]++;
          }
        }
      }
    }
    // Create first front
    const firstFront =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[204]++, []);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[205]++;
    for (const individual of population) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[206]++;
      if (individual.dominationCount === 0) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[53][0]++;
        cov_2n5trddhjt().s[207]++;
        individual.rank = 0;
        /* istanbul ignore next */
        cov_2n5trddhjt().s[208]++;
        firstFront.push(individual);
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[53][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[209]++;
    if (firstFront.length > 0) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[54][0]++;
      cov_2n5trddhjt().s[210]++;
      fronts.push(firstFront);
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[54][1]++;
    }
    // Create subsequent fronts
    let currentFront =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[211]++, firstFront);
    let frontIndex =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[212]++, 0);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[213]++;
    while (currentFront.length > 0) {
      const nextFront =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[214]++, []);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[215]++;
      for (const individual of currentFront) {
        /* istanbul ignore next */
        cov_2n5trddhjt().s[216]++;
        for (const dominatedId of individual.dominatedSolutions) {
          const dominated =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[217]++, population.find(p => {
            /* istanbul ignore next */
            cov_2n5trddhjt().f[24]++;
            cov_2n5trddhjt().s[218]++;
            return p.id === dominatedId;
          }));
          /* istanbul ignore next */
          cov_2n5trddhjt().s[219]++;
          if (dominated) {
            /* istanbul ignore next */
            cov_2n5trddhjt().b[55][0]++;
            cov_2n5trddhjt().s[220]++;
            dominated.dominationCount--;
            /* istanbul ignore next */
            cov_2n5trddhjt().s[221]++;
            if (dominated.dominationCount === 0) {
              /* istanbul ignore next */
              cov_2n5trddhjt().b[56][0]++;
              cov_2n5trddhjt().s[222]++;
              dominated.rank = frontIndex + 1;
              /* istanbul ignore next */
              cov_2n5trddhjt().s[223]++;
              nextFront.push(dominated);
            } else
            /* istanbul ignore next */
            {
              cov_2n5trddhjt().b[56][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2n5trddhjt().b[55][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_2n5trddhjt().s[224]++;
      if (nextFront.length > 0) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[57][0]++;
        cov_2n5trddhjt().s[225]++;
        fronts.push(nextFront);
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[57][1]++;
      }
      cov_2n5trddhjt().s[226]++;
      currentFront = nextFront;
      /* istanbul ignore next */
      cov_2n5trddhjt().s[227]++;
      frontIndex++;
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[228]++;
    return fronts;
  }
  /**
   * Check dominance relationship between two individuals
   */
  checkDominance(individual1, individual2) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[25]++;
    let firstBetter =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[229]++, false);
    let secondBetter =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[230]++, false);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[231]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[232]++, 0); i < individual1.objectives.length; i++) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[233]++;
      if (individual1.objectives[i] < individual2.objectives[i]) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[58][0]++;
        cov_2n5trddhjt().s[234]++;
        firstBetter = true;
      } else {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[58][1]++;
        cov_2n5trddhjt().s[235]++;
        if (individual1.objectives[i] > individual2.objectives[i]) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[59][0]++;
          cov_2n5trddhjt().s[236]++;
          secondBetter = true;
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[59][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[237]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[61][0]++, firstBetter) &&
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[61][1]++, !secondBetter)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[60][0]++;
      cov_2n5trddhjt().s[238]++;
      return 'first_dominates';
    } else {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[60][1]++;
      cov_2n5trddhjt().s[239]++;
      if (
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[63][0]++, secondBetter) &&
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[63][1]++, !firstBetter)) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[62][0]++;
        cov_2n5trddhjt().s[240]++;
        return 'second_dominates';
      } else {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[62][1]++;
        cov_2n5trddhjt().s[241]++;
        return 'non_dominated';
      }
    }
  }
  /**
   * Calculate crowding distance
   */
  calculateCrowdingDistance(front, numObjectives) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[26]++;
    const frontSize =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[242]++, front.length);
    // Initialize crowding distances
    /* istanbul ignore next */
    cov_2n5trddhjt().s[243]++;
    for (const individual of front) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[244]++;
      individual.crowdingDistance = 0;
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[245]++;
    if (frontSize <= 2) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[64][0]++;
      cov_2n5trddhjt().s[246]++;
      // Boundary solutions get infinite distance
      for (const individual of front) {
        /* istanbul ignore next */
        cov_2n5trddhjt().s[247]++;
        individual.crowdingDistance = Infinity;
      }
      /* istanbul ignore next */
      cov_2n5trddhjt().s[248]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[64][1]++;
    }
    // Calculate crowding distance for each objective
    cov_2n5trddhjt().s[249]++;
    for (let obj =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[250]++, 0); obj < numObjectives; obj++) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[251]++;
      // Sort by objective value
      front.sort((a, b) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[27]++;
        cov_2n5trddhjt().s[252]++;
        return a.objectives[obj] - b.objectives[obj];
      });
      // Boundary solutions get infinite distance
      /* istanbul ignore next */
      cov_2n5trddhjt().s[253]++;
      front[0].crowdingDistance = Infinity;
      /* istanbul ignore next */
      cov_2n5trddhjt().s[254]++;
      front[frontSize - 1].crowdingDistance = Infinity;
      // Calculate distance for intermediate solutions
      const objectiveRange =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[255]++, front[frontSize - 1].objectives[obj] - front[0].objectives[obj]);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[256]++;
      if (objectiveRange > 0) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[65][0]++;
        cov_2n5trddhjt().s[257]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[258]++, 1); i < frontSize - 1; i++) {
          const distance =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[259]++, (front[i + 1].objectives[obj] - front[i - 1].objectives[obj]) / objectiveRange);
          /* istanbul ignore next */
          cov_2n5trddhjt().s[260]++;
          front[i].crowdingDistance += distance;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[65][1]++;
      }
    }
  }
  /**
   * Evolve using weighted sum approach
   */
  async evolveWeightedSum(problem, objectiveFunctions, constraintFunctions) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[28]++;
    // Use genetic algorithm with weighted sum aggregation
    const gaParameters =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[261]++, {
      populationSize: this.parameters.populationSize,
      maxGenerations: 1,
      // Single generation evolution
      crossoverRate: this.parameters.crossoverRate,
      mutationRate: this.parameters.mutationRate,
      eliteSize: this.parameters.eliteSize,
      constraintHandling: this.parameters.constraintHandling,
      penaltyCoefficient: this.parameters.penaltyCoefficient
    });
    const ga =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[262]++, new GeneticAlgorithm_1.GeneticAlgorithm(gaParameters));
    // Create weighted objective function
    /* istanbul ignore next */
    cov_2n5trddhjt().s[263]++;
    const weightedObjectiveFunction = variables => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[29]++;
      let weightedSum =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[264]++, 0);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[265]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[266]++, 0); i < objectiveFunctions.length; i++) {
        const weight =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[267]++,
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[66][0]++, this.parameters.weightedSumWeights?.[i]) ||
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[66][1]++, 1 / objectiveFunctions.length));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[268]++;
        weightedSum += weight * objectiveFunctions[i](variables);
      }
      /* istanbul ignore next */
      cov_2n5trddhjt().s[269]++;
      return weightedSum;
    };
    // Evolve population
    const result =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[270]++, await ga.optimize(problem, weightedObjectiveFunction, constraintFunctions));
    // Convert result back to multi-objective format
    /* istanbul ignore next */
    cov_2n5trddhjt().s[271]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[68][0]++, this.currentState) &&
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[68][1]++, result.bestSolution)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[67][0]++;
      // Update population with new solutions (simplified)
      const newIndividual =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[272]++, this.solutionToIndividual(result.bestSolution, problem));
      /* istanbul ignore next */
      cov_2n5trddhjt().s[273]++;
      await this.evaluateIndividual(newIndividual, problem, objectiveFunctions, constraintFunctions);
      // Replace worst individual
      /* istanbul ignore next */
      cov_2n5trddhjt().s[274]++;
      this.currentState.population.sort((a, b) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[30]++;
        cov_2n5trddhjt().s[275]++;
        return a.fitness - b.fitness;
      });
      /* istanbul ignore next */
      cov_2n5trddhjt().s[276]++;
      this.currentState.population[this.currentState.population.length - 1] = newIndividual;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[67][1]++;
    }
  }
  /**
   * Convert optimization solution to NSGA2 individual
   */
  solutionToIndividual(solution, problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[31]++;
    cov_2n5trddhjt().s[277]++;
    return {
      ...solution,
      objectives: [],
      rank: 0,
      crowdingDistance: 0,
      dominationCount: 0,
      dominatedSolutions: []
    };
  }
  /**
   * Update archive with non-dominated solutions
   */
  updateArchive(paretoFront) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[32]++;
    cov_2n5trddhjt().s[278]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[69][0]++;
      cov_2n5trddhjt().s[279]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[69][1]++;
    }
    // Add new non-dominated solutions to archive
    cov_2n5trddhjt().s[280]++;
    for (const individual of paretoFront) {
      const isDominated =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[281]++, this.currentState.archive.some(archived => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[33]++;
        cov_2n5trddhjt().s[282]++;
        return this.checkDominance(archived, individual) === 'first_dominates';
      }));
      /* istanbul ignore next */
      cov_2n5trddhjt().s[283]++;
      if (!isDominated) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[70][0]++;
        cov_2n5trddhjt().s[284]++;
        // Remove dominated solutions from archive
        this.currentState.archive = this.currentState.archive.filter(archived => {
          /* istanbul ignore next */
          cov_2n5trddhjt().f[34]++;
          cov_2n5trddhjt().s[285]++;
          return this.checkDominance(individual, archived) !== 'first_dominates';
        });
        // Add new solution
        /* istanbul ignore next */
        cov_2n5trddhjt().s[286]++;
        this.currentState.archive.push({
          ...individual
        });
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[70][1]++;
      }
    }
    // Limit archive size
    /* istanbul ignore next */
    cov_2n5trddhjt().s[287]++;
    if (this.currentState.archive.length > this.parameters.archiveSize) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[71][0]++;
      cov_2n5trddhjt().s[288]++;
      // Sort by crowding distance and keep best
      this.calculateCrowdingDistance(this.currentState.archive,
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[72][0]++, this.currentState.archive[0]?.objectives.length) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[72][1]++, 0));
      /* istanbul ignore next */
      cov_2n5trddhjt().s[289]++;
      this.currentState.archive.sort((a, b) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[35]++;
        cov_2n5trddhjt().s[290]++;
        return b.crowdingDistance - a.crowdingDistance;
      });
      /* istanbul ignore next */
      cov_2n5trddhjt().s[291]++;
      this.currentState.archive = this.currentState.archive.slice(0, this.parameters.archiveSize);
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[71][1]++;
    }
  }
  /**
   * Update Pareto front
   */
  updateParetoFront() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[36]++;
    cov_2n5trddhjt().s[292]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[74][0]++, !this.currentState) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[74][1]++, this.currentState.paretoFronts.length === 0)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[73][0]++;
      cov_2n5trddhjt().s[293]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[73][1]++;
    }
    const paretoSolutions =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[294]++, this.currentState.paretoFronts[0].map(individual => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[37]++;
      cov_2n5trddhjt().s[295]++;
      return {
        id: individual.id,
        objectives: [...individual.objectives],
        variables: {
          ...individual.variables
        },
        dominanceRank: individual.rank,
        crowdingDistance: individual.crowdingDistance,
        feasible: individual.feasible,
        constraintViolations: individual.constraintViolations.length
      };
    }));
    /* istanbul ignore next */
    cov_2n5trddhjt().s[296]++;
    this.paretoFront = {
      solutions: paretoSolutions,
      hypervolume: this.currentState.hypervolume,
      spacing: this.currentState.spacing,
      convergenceMetric: this.currentState.convergenceMetric,
      generationFound: this.currentState.generation,
      dominanceDepth: 1
    };
  }
  /**
   * Calculate hypervolume indicator
   */
  calculateHypervolume(paretoFront) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[38]++;
    cov_2n5trddhjt().s[297]++;
    if (paretoFront.length === 0) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[75][0]++;
      cov_2n5trddhjt().s[298]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[75][1]++;
    }
    // Simplified hypervolume calculation
    // In practice, would use more sophisticated algorithms like WFG or FPRAS
    const referencePoint =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[299]++, this.parameters.paretoSettings.hypervolume.referencePoint);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[300]++;
    if (referencePoint.length === 0) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[76][0]++;
      // Use worst values as reference point
      const numObjectives =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[301]++,
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[77][0]++, paretoFront[0]?.objectives.length) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[77][1]++, 0));
      /* istanbul ignore next */
      cov_2n5trddhjt().s[302]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[303]++, 0); i < numObjectives; i++) {
        const maxValue =
        /* istanbul ignore next */
        (cov_2n5trddhjt().s[304]++, Math.max(...paretoFront.map(ind => {
          /* istanbul ignore next */
          cov_2n5trddhjt().f[39]++;
          cov_2n5trddhjt().s[305]++;
          return ind.objectives[i];
        })));
        /* istanbul ignore next */
        cov_2n5trddhjt().s[306]++;
        referencePoint.push(maxValue * 1.1); // 10% worse than worst
      }
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[76][1]++;
    }
    // Simple hypervolume approximation
    let hypervolume =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[307]++, 0);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[308]++;
    for (const individual of paretoFront) {
      let volume =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[309]++, 1);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[310]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[311]++, 0); i < individual.objectives.length; i++) {
        /* istanbul ignore next */
        cov_2n5trddhjt().s[312]++;
        volume *= Math.max(0, referencePoint[i] - individual.objectives[i]);
      }
      /* istanbul ignore next */
      cov_2n5trddhjt().s[313]++;
      hypervolume += volume;
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[314]++;
    return hypervolume;
  }
  /**
   * Calculate spacing metric
   */
  calculateSpacing(paretoFront) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[40]++;
    cov_2n5trddhjt().s[315]++;
    if (paretoFront.length < 2) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[78][0]++;
      cov_2n5trddhjt().s[316]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[78][1]++;
    }
    const distances =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[317]++, []);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[318]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[319]++, 0); i < paretoFront.length; i++) {
      let minDistance =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[320]++, Infinity);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[321]++;
      for (let j =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[322]++, 0); j < paretoFront.length; j++) {
        /* istanbul ignore next */
        cov_2n5trddhjt().s[323]++;
        if (i !== j) {
          /* istanbul ignore next */
          cov_2n5trddhjt().b[79][0]++;
          const distance =
          /* istanbul ignore next */
          (cov_2n5trddhjt().s[324]++, this.calculateObjectiveDistance(paretoFront[i], paretoFront[j]));
          /* istanbul ignore next */
          cov_2n5trddhjt().s[325]++;
          minDistance = Math.min(minDistance, distance);
        } else
        /* istanbul ignore next */
        {
          cov_2n5trddhjt().b[79][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2n5trddhjt().s[326]++;
      distances.push(minDistance);
    }
    const meanDistance =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[327]++, distances.reduce((sum, d) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[41]++;
      cov_2n5trddhjt().s[328]++;
      return sum + d;
    }, 0) / distances.length);
    const variance =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[329]++, distances.reduce((sum, d) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[42]++;
      cov_2n5trddhjt().s[330]++;
      return sum + Math.pow(d - meanDistance, 2);
    }, 0) / distances.length);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[331]++;
    return Math.sqrt(variance);
  }
  /**
   * Calculate distance between two individuals in objective space
   */
  calculateObjectiveDistance(individual1, individual2) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[43]++;
    let distance =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[332]++, 0);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[333]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[334]++, 0); i < individual1.objectives.length; i++) {
      const diff =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[335]++, individual1.objectives[i] - individual2.objectives[i]);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[336]++;
      distance += diff * diff;
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[337]++;
    return Math.sqrt(distance);
  }
  /**
   * Perform trade-off analysis
   */
  performTradeoffAnalysis() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[44]++;
    cov_2n5trddhjt().s[338]++;
    if (!this.paretoFront) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[80][0]++;
      cov_2n5trddhjt().s[339]++;
      return {
        kneePoints: [],
        tradeoffCurves: [],
        sensitivityAnalysis: {},
        recommendations: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[80][1]++;
    }
    // Find knee points (solutions with best trade-offs)
    const kneePoints =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[340]++, this.findKneePoints());
    // Generate trade-off curves
    const tradeoffCurves =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[341]++, this.generateTradeoffCurves());
    // Perform sensitivity analysis
    const sensitivityAnalysis =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[342]++, this.performSensitivityAnalysis());
    // Generate recommendations
    const recommendations =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[343]++, this.generateRecommendations(kneePoints));
    /* istanbul ignore next */
    cov_2n5trddhjt().s[344]++;
    return {
      kneePoints,
      tradeoffCurves,
      sensitivityAnalysis,
      recommendations
    };
  }
  /**
   * Find knee points in Pareto front
   */
  findKneePoints() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[45]++;
    cov_2n5trddhjt().s[345]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[82][0]++, !this.paretoFront) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[82][1]++, this.paretoFront.solutions.length < 3)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[81][0]++;
      cov_2n5trddhjt().s[346]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[81][1]++;
    }
    const kneePoints =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[347]++, []);
    const solutions =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[348]++, this.paretoFront.solutions);
    // Simple knee point detection using angle-based method
    /* istanbul ignore next */
    cov_2n5trddhjt().s[349]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[350]++, 1); i < solutions.length - 1; i++) {
      const prev =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[351]++, solutions[i - 1]);
      const current =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[352]++, solutions[i]);
      const next =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[353]++, solutions[i + 1]);
      // Calculate angle at current point
      const angle =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[354]++, this.calculateAngle(prev.objectives, current.objectives, next.objectives));
      // Knee points have small angles (sharp turns)
      /* istanbul ignore next */
      cov_2n5trddhjt().s[355]++;
      if (angle < Math.PI / 3) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[83][0]++;
        cov_2n5trddhjt().s[356]++;
        // 60 degrees threshold
        kneePoints.push({
          solutionId: current.id,
          objectives: [...current.objectives],
          kneeMetric: Math.PI - angle,
          // Higher value = sharper knee
          tradeoffRatio: this.calculateTradeoffRatio(current.objectives),
          description: `Knee point with ${(Math.PI - angle).toFixed(3)} knee metric`
        });
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[83][1]++;
      }
    }
    // Sort by knee metric (best knees first)
    /* istanbul ignore next */
    cov_2n5trddhjt().s[357]++;
    kneePoints.sort((a, b) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[46]++;
      cov_2n5trddhjt().s[358]++;
      return b.kneeMetric - a.kneeMetric;
    });
    /* istanbul ignore next */
    cov_2n5trddhjt().s[359]++;
    return kneePoints.slice(0, 5); // Return top 5 knee points
  }
  /**
   * Calculate angle between three points
   */
  calculateAngle(p1, p2, p3) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[47]++;
    const v1 =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[360]++, p1.map((val, i) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[48]++;
      cov_2n5trddhjt().s[361]++;
      return val - p2[i];
    }));
    const v2 =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[362]++, p3.map((val, i) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[49]++;
      cov_2n5trddhjt().s[363]++;
      return val - p2[i];
    }));
    const dot =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[364]++, v1.reduce((sum, val, i) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[50]++;
      cov_2n5trddhjt().s[365]++;
      return sum + val * v2[i];
    }, 0));
    const mag1 =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[366]++, Math.sqrt(v1.reduce((sum, val) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[51]++;
      cov_2n5trddhjt().s[367]++;
      return sum + val * val;
    }, 0)));
    const mag2 =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[368]++, Math.sqrt(v2.reduce((sum, val) => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[52]++;
      cov_2n5trddhjt().s[369]++;
      return sum + val * val;
    }, 0)));
    /* istanbul ignore next */
    cov_2n5trddhjt().s[370]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[85][0]++, mag1 === 0) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[85][1]++, mag2 === 0)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[84][0]++;
      cov_2n5trddhjt().s[371]++;
      return Math.PI;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[84][1]++;
    }
    const cosAngle =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[372]++, dot / (mag1 * mag2));
    /* istanbul ignore next */
    cov_2n5trddhjt().s[373]++;
    return Math.acos(Math.max(-1, Math.min(1, cosAngle)));
  }
  /**
   * Calculate trade-off ratio for objectives
   */
  calculateTradeoffRatio(objectives) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[53]++;
    cov_2n5trddhjt().s[374]++;
    if (objectives.length !== 2) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[86][0]++;
      cov_2n5trddhjt().s[375]++;
      return 1;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[86][1]++;
    } // Only for bi-objective problems
    cov_2n5trddhjt().s[376]++;
    return objectives[0] / objectives[1];
  }
  /**
   * Generate trade-off curves
   */
  generateTradeoffCurves() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[54]++;
    cov_2n5trddhjt().s[377]++;
    // Simplified implementation - would generate actual curve data
    return [];
  }
  /**
   * Perform sensitivity analysis
   */
  performSensitivityAnalysis() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[55]++;
    cov_2n5trddhjt().s[378]++;
    // Simplified implementation - would analyze parameter sensitivity
    return {};
  }
  /**
   * Generate recommendations based on analysis
   */
  generateRecommendations(kneePoints) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[56]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[379]++, []);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[380]++;
    if (kneePoints.length > 0) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[87][0]++;
      cov_2n5trddhjt().s[381]++;
      recommendations.push(`Consider solution ${kneePoints[0].solutionId} as it represents the best trade-off between objectives.`);
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[87][1]++;
    }
    cov_2n5trddhjt().s[382]++;
    if (
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[89][0]++, this.paretoFront) &&
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[89][1]++, this.paretoFront.solutions.length > 10)) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[88][0]++;
      cov_2n5trddhjt().s[383]++;
      recommendations.push('Large Pareto front indicates good diversity in solutions. Consider multiple alternatives.');
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[88][1]++;
    }
    cov_2n5trddhjt().s[384]++;
    return recommendations;
  }
  /**
   * Check termination criteria
   */
  shouldTerminate(problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[57]++;
    cov_2n5trddhjt().s[385]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[90][0]++;
      cov_2n5trddhjt().s[386]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[90][1]++;
    }
    // Maximum generations
    cov_2n5trddhjt().s[387]++;
    if (this.currentState.generation >= this.parameters.maxGenerations) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[91][0]++;
      cov_2n5trddhjt().s[388]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[91][1]++;
    }
    // Convergence check
    cov_2n5trddhjt().s[389]++;
    if (this.history.length >= 10) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[92][0]++;
      const recentHistory =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[390]++, this.history.slice(-10));
      const hypervolumeImprovement =
      /* istanbul ignore next */
      (cov_2n5trddhjt().s[391]++, recentHistory[recentHistory.length - 1].bestFitness - recentHistory[0].bestFitness);
      /* istanbul ignore next */
      cov_2n5trddhjt().s[392]++;
      if (Math.abs(hypervolumeImprovement) < this.parameters.paretoSettings.convergenceThreshold) {
        /* istanbul ignore next */
        cov_2n5trddhjt().b[93][0]++;
        cov_2n5trddhjt().s[393]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2n5trddhjt().b[93][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[92][1]++;
    }
    cov_2n5trddhjt().s[394]++;
    return false;
  }
  /**
   * Update optimization history
   */
  updateHistory() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[58]++;
    cov_2n5trddhjt().s[395]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[94][0]++;
      cov_2n5trddhjt().s[396]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[94][1]++;
    }
    const feasibleIndividuals =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[397]++, this.currentState.population.filter(ind => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[59]++;
      cov_2n5trddhjt().s[398]++;
      return ind.feasible;
    }));
    const fitnesses =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[399]++, feasibleIndividuals.map(ind => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[60]++;
      cov_2n5trddhjt().s[400]++;
      return ind.fitness;
    }));
    /* istanbul ignore next */
    cov_2n5trddhjt().s[401]++;
    if (fitnesses.length === 0) {
      /* istanbul ignore next */
      cov_2n5trddhjt().b[95][0]++;
      cov_2n5trddhjt().s[402]++;
      fitnesses.push(Number.MAX_VALUE);
    } else
    /* istanbul ignore next */
    {
      cov_2n5trddhjt().b[95][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[403]++, {
      iteration: this.currentState.generation,
      bestFitness: Math.min(...fitnesses),
      averageFitness: fitnesses.reduce((sum, f) => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[61]++;
        cov_2n5trddhjt().s[404]++;
        return sum + f;
      }, 0) / fitnesses.length,
      worstFitness: Math.max(...fitnesses),
      diversity: this.currentState.spacing,
      constraintViolations: this.currentState.population.filter(ind => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[62]++;
        cov_2n5trddhjt().s[405]++;
        return !ind.feasible;
      }).length,
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_2n5trddhjt().s[406]++;
    this.history.push(history);
  }
  /**
   * Create multi-objective optimization result
   */
  createMultiObjectiveResult(problem, startTime, tradeoffAnalysis) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[63]++;
    const executionTime =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[407]++, performance.now() - startTime);
    // Find best solution (first in Pareto front)
    const bestSolution =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[408]++,
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[96][0]++, this.currentState?.paretoFronts[0]?.[0]) ||
    /* istanbul ignore next */
    (cov_2n5trddhjt().b[96][1]++, this.currentState?.population[0]));
    const statistics =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[409]++, {
      totalIterations:
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[97][0]++, this.currentState?.generation) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[97][1]++, 0),
      totalEvaluations: this.evaluationCount,
      convergenceIteration:
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[98][0]++, this.currentState?.generation) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[98][1]++, 0),
      executionTime,
      bestFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[64]++;
        cov_2n5trddhjt().s[410]++;
        return h.bestFitness;
      }),
      averageFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[65]++;
        cov_2n5trddhjt().s[411]++;
        return h.averageFitness;
      }),
      diversityHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[66]++;
        cov_2n5trddhjt().s[412]++;
        return h.diversity;
      }),
      constraintViolationHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2n5trddhjt().f[67]++;
        cov_2n5trddhjt().s[413]++;
        return h.constraintViolations;
      }),
      algorithmSpecificStats: {
        algorithm: this.parameters.algorithm,
        populationSize: this.parameters.populationSize,
        paretoFrontSize:
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[99][0]++, this.currentState?.paretoFronts[0]?.length) ||
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[99][1]++, 0),
        hypervolume:
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[100][0]++, this.currentState?.hypervolume) ||
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[100][1]++, 0),
        spacing:
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[101][0]++, this.currentState?.spacing) ||
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[101][1]++, 0),
        archiveSize:
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[102][0]++, this.currentState?.archive.length) ||
        /* istanbul ignore next */
        (cov_2n5trddhjt().b[102][1]++, 0)
      }
    });
    const optimizationHistory =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[414]++, {
      iterations: this.history,
      populationHistory: this.populationHistory,
      parameterHistory: [],
      convergenceMetrics: []
    });
    /* istanbul ignore next */
    cov_2n5trddhjt().s[415]++;
    return {
      problemId: problem.id,
      status: SystemOptimizationTypes_1.OptimizationStatus.CONVERGED,
      bestSolution:
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[103][0]++, bestSolution) ||
      /* istanbul ignore next */
      (cov_2n5trddhjt().b[103][1]++, this.createDummySolution(problem)),
      statistics,
      history: optimizationHistory,
      analysis: {
        paretoFront: this.paretoFront,
        tradeoffAnalysis
      },
      recommendations: tradeoffAnalysis.recommendations,
      warnings: [],
      errors: []
    };
  }
  /**
   * Create dummy solution for error cases
   */
  createDummySolution(problem) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[68]++;
    const variables =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[416]++, {});
    /* istanbul ignore next */
    cov_2n5trddhjt().s[417]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_2n5trddhjt().s[418]++;
      variables[variable.id] = 0;
    }
    /* istanbul ignore next */
    cov_2n5trddhjt().s[419]++;
    return {
      id: 'dummy_solution',
      variables,
      objectiveValues: {},
      constraintViolations: [],
      feasible: false,
      fitness: Number.MAX_VALUE,
      systemConfiguration: problem.systemConfiguration,
      performanceMetrics: {}
    };
  }
  // Utility methods
  generateIndividualId() {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[69]++;
    cov_2n5trddhjt().s[420]++;
    return `mo_ind_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  createSeededRandom(seed) {
    /* istanbul ignore next */
    cov_2n5trddhjt().f[70]++;
    let state =
    /* istanbul ignore next */
    (cov_2n5trddhjt().s[421]++, seed);
    /* istanbul ignore next */
    cov_2n5trddhjt().s[422]++;
    return () => {
      /* istanbul ignore next */
      cov_2n5trddhjt().f[71]++;
      cov_2n5trddhjt().s[423]++;
      state = (state * 9301 + 49297) % 233280;
      /* istanbul ignore next */
      cov_2n5trddhjt().s[424]++;
      return state / 233280;
    };
  }
}
/* istanbul ignore next */
cov_2n5trddhjt().s[425]++;
exports.MultiObjectiveOptimizationFramework = MultiObjectiveOptimizationFramework;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,