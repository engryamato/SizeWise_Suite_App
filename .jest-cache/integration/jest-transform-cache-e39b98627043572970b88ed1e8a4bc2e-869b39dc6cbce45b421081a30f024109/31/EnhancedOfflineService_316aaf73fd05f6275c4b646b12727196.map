{"version":3,"names":["cov_2mp44saf55","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createEnhancedOfflineService","DexieDatabase_1","require","events_1","EnhancedOfflineService","EventEmitter","constructor","config","syncTimer","db","getSizeWiseDatabase","enableAutoSync","syncIntervalMs","maxRetryAttempts","enablePerformanceMonitoring","enableDataValidation","syncStatus","isOnline","lastSyncAttempt","lastSuccessfulSync","pendingOperations","failedOperations","syncInProgress","performanceMetrics","averageQueryTime","totalQueries","cacheHitRate","storageUsage","lastMeasurement","Date","queryCache","Map","initialize","open","updateSyncStatus","startAutoSync","emit","console","log","error","createProject","projectData","startTime","performance","now","uuid","Math","random","toString","substr","sizeWiseProject","rooms","segments","equipment","recordPerformanceMetric","invalidateCache","project","updateProject","updates","getProject","cacheKey","cached","getCachedData","convertFromSizeWiseProject","setCachedData","getAllProjects","sizeWiseProjects","projects","map","p","deleteProject","saveCalculation","projectUuid","input","result","segmentUuid","roomUuid","calculation","calculationType","duct_type","inputData","getCalculationsByProject","calculations","saveSpatialLayer","layerType","geometry","properties","layer","visible","locked","getSpatialLayersByProject","layers","getSyncStatus","pendingOps","getPendingSyncOperations","length","filter","op","status","forceSyncAll","cacheHit","queryTime","getPerformanceMetrics","stats","getStorageStats","totalSize","key","get","getTime","timestamp","ttl","delete","data","set","pattern","keys","includes","id","lastModified","setInterval","stopAutoSync","clearInterval","cleanup","clear","clearOldSyncOperations","close","service","Promise","resolve","reject","once"],"sources":["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\frontend\\lib\\services\\EnhancedOfflineService.ts"],"sourcesContent":["/**\r\n * Enhanced Offline Service with Dexie.js Integration\r\n * \r\n * Provides high-performance offline-first data operations with:\r\n * - Dexie.js for optimized IndexedDB operations\r\n * - Automatic sync queue management\r\n * - Conflict resolution strategies\r\n * - Performance monitoring\r\n * - Data integrity validation\r\n */\r\n\r\nimport { getSizeWiseDatabase, SizeWiseDatabase, SizeWiseProject, SizeWiseCalculation, SpatialDataLayer } from '../database/DexieDatabase';\r\nimport { Project, CalculationResult, CalculationInput } from '@/types/air-duct-sizer';\r\nimport { EventEmitter } from 'events';\r\n\r\n// =============================================================================\r\n// Service Interfaces\r\n// =============================================================================\r\n\r\nexport interface OfflineServiceConfig {\r\n  enableAutoSync: boolean;\r\n  syncIntervalMs: number;\r\n  maxRetryAttempts: number;\r\n  enablePerformanceMonitoring: boolean;\r\n  enableDataValidation: boolean;\r\n}\r\n\r\nexport interface SyncStatus {\r\n  isOnline: boolean;\r\n  lastSyncAttempt: Date | null;\r\n  lastSuccessfulSync: Date | null;\r\n  pendingOperations: number;\r\n  failedOperations: number;\r\n  syncInProgress: boolean;\r\n}\r\n\r\nexport interface PerformanceMetrics {\r\n  averageQueryTime: number;\r\n  totalQueries: number;\r\n  cacheHitRate: number;\r\n  storageUsage: number;\r\n  lastMeasurement: Date;\r\n}\r\n\r\n// =============================================================================\r\n// Enhanced Offline Service\r\n// =============================================================================\r\n\r\nexport class EnhancedOfflineService extends EventEmitter {\r\n  private db: SizeWiseDatabase;\r\n  private config: OfflineServiceConfig;\r\n  private syncStatus: SyncStatus;\r\n  private performanceMetrics: PerformanceMetrics;\r\n  private queryCache: Map<string, { data: any; timestamp: Date; ttl: number }>;\r\n  private syncTimer: NodeJS.Timeout | null = null;\r\n\r\n  constructor(config: Partial<OfflineServiceConfig> = {}) {\r\n    super();\r\n    \r\n    this.db = getSizeWiseDatabase();\r\n    this.config = {\r\n      enableAutoSync: false, // Disabled for offline-first mode\r\n      syncIntervalMs: 30000, // 30 seconds\r\n      maxRetryAttempts: 3,\r\n      enablePerformanceMonitoring: true,\r\n      enableDataValidation: true,\r\n      ...config\r\n    };\r\n\r\n    this.syncStatus = {\r\n      isOnline: false,\r\n      lastSyncAttempt: null,\r\n      lastSuccessfulSync: null,\r\n      pendingOperations: 0,\r\n      failedOperations: 0,\r\n      syncInProgress: false\r\n    };\r\n\r\n    this.performanceMetrics = {\r\n      averageQueryTime: 0,\r\n      totalQueries: 0,\r\n      cacheHitRate: 0,\r\n      storageUsage: 0,\r\n      lastMeasurement: new Date()\r\n    };\r\n\r\n    this.queryCache = new Map();\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  // =============================================================================\r\n  // Initialization\r\n  // =============================================================================\r\n\r\n  private async initialize(): Promise<void> {\r\n    try {\r\n      await this.db.open();\r\n      await this.updateSyncStatus();\r\n      \r\n      if (this.config.enableAutoSync) {\r\n        this.startAutoSync();\r\n      }\r\n\r\n      this.emit('initialized');\r\n      console.log('✅ Enhanced Offline Service initialized');\r\n    } catch (error) {\r\n      console.error('❌ Failed to initialize Enhanced Offline Service:', error);\r\n      this.emit('error', error);\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // Project Operations\r\n  // =============================================================================\r\n\r\n  async createProject(projectData: Omit<Project, 'id'>): Promise<string> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      const uuid = `project-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n      \r\n      const sizeWiseProject: Omit<SizeWiseProject, 'id' | 'lastModified' | 'syncStatus' | 'version'> = {\r\n        ...projectData,\r\n        uuid,\r\n        rooms: projectData.rooms || [],\r\n        segments: projectData.segments || [],\r\n        equipment: projectData.equipment || []\r\n      };\r\n\r\n      await this.db.createProject(sizeWiseProject);\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      this.invalidateCache('projects');\r\n      this.emit('project:created', { uuid, project: sizeWiseProject });\r\n      \r\n      return uuid;\r\n    } catch (error) {\r\n      console.error('Failed to create project:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateProject(uuid: string, updates: Partial<Project>): Promise<void> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      await this.db.updateProject(uuid, updates as any);\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      this.invalidateCache('projects');\r\n      this.invalidateCache(`project:${uuid}`);\r\n      this.emit('project:updated', { uuid, updates });\r\n    } catch (error) {\r\n      console.error('Failed to update project:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getProject(uuid: string): Promise<Project | null> {\r\n    const startTime = performance.now();\r\n    const cacheKey = `project:${uuid}`;\r\n    \r\n    try {\r\n      // Check cache first\r\n      const cached = this.getCachedData(cacheKey);\r\n      if (cached) {\r\n        this.recordPerformanceMetric(startTime, true);\r\n        return cached;\r\n      }\r\n\r\n      const sizeWiseProject = await this.db.getProject(uuid);\r\n      if (!sizeWiseProject) {\r\n        this.recordPerformanceMetric(startTime);\r\n        return null;\r\n      }\r\n\r\n      const project: Project = this.convertFromSizeWiseProject(sizeWiseProject);\r\n      \r\n      // Cache the result\r\n      this.setCachedData(cacheKey, project, 300000); // 5 minutes TTL\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      return project;\r\n    } catch (error) {\r\n      console.error('Failed to get project:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAllProjects(): Promise<Project[]> {\r\n    const startTime = performance.now();\r\n    const cacheKey = 'projects';\r\n    \r\n    try {\r\n      // Check cache first\r\n      const cached = this.getCachedData(cacheKey);\r\n      if (cached) {\r\n        this.recordPerformanceMetric(startTime, true);\r\n        return cached;\r\n      }\r\n\r\n      const sizeWiseProjects = await this.db.getAllProjects();\r\n      const projects = sizeWiseProjects.map(p => this.convertFromSizeWiseProject(p));\r\n      \r\n      // Cache the result\r\n      this.setCachedData(cacheKey, projects, 60000); // 1 minute TTL\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      return projects;\r\n    } catch (error) {\r\n      console.error('Failed to get all projects:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteProject(uuid: string): Promise<void> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      await this.db.deleteProject(uuid);\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      this.invalidateCache('projects');\r\n      this.invalidateCache(`project:${uuid}`);\r\n      this.emit('project:deleted', { uuid });\r\n    } catch (error) {\r\n      console.error('Failed to delete project:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // Calculation Operations\r\n  // =============================================================================\r\n\r\n  async saveCalculation(\r\n    projectUuid: string,\r\n    input: CalculationInput,\r\n    result: CalculationResult,\r\n    segmentUuid?: string,\r\n    roomUuid?: string\r\n  ): Promise<string> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      const uuid = `calc-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n      \r\n      const calculation: Omit<SizeWiseCalculation, 'id' | 'timestamp' | 'syncStatus'> = {\r\n        uuid,\r\n        projectUuid,\r\n        segmentUuid,\r\n        roomUuid,\r\n        calculationType: input.duct_type || 'rectangular',\r\n        inputData: input,\r\n        result\r\n      };\r\n\r\n      await this.db.saveCalculation(calculation);\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      this.invalidateCache(`calculations:${projectUuid}`);\r\n      this.emit('calculation:saved', { uuid, calculation });\r\n      \r\n      return uuid;\r\n    } catch (error) {\r\n      console.error('Failed to save calculation:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getCalculationsByProject(projectUuid: string): Promise<SizeWiseCalculation[]> {\r\n    const startTime = performance.now();\r\n    const cacheKey = `calculations:${projectUuid}`;\r\n    \r\n    try {\r\n      // Check cache first\r\n      const cached = this.getCachedData(cacheKey);\r\n      if (cached) {\r\n        this.recordPerformanceMetric(startTime, true);\r\n        return cached;\r\n      }\r\n\r\n      const calculations = await this.db.getCalculationsByProject(projectUuid);\r\n      \r\n      // Cache the result\r\n      this.setCachedData(cacheKey, calculations, 120000); // 2 minutes TTL\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      return calculations;\r\n    } catch (error) {\r\n      console.error('Failed to get calculations:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // Spatial Data Operations\r\n  // =============================================================================\r\n\r\n  async saveSpatialLayer(\r\n    projectUuid: string,\r\n    layerType: SpatialDataLayer['layerType'],\r\n    geometry: any,\r\n    properties: Record<string, any> = {}\r\n  ): Promise<string> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      const uuid = `spatial-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n      \r\n      const layer: Omit<SpatialDataLayer, 'id' | 'lastModified' | 'syncStatus'> = {\r\n        uuid,\r\n        projectUuid,\r\n        layerType,\r\n        geometry,\r\n        properties,\r\n        visible: true,\r\n        locked: false\r\n      };\r\n\r\n      await this.db.saveSpatialLayer(layer);\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      this.invalidateCache(`spatial:${projectUuid}`);\r\n      this.emit('spatial:saved', { uuid, layer });\r\n      \r\n      return uuid;\r\n    } catch (error) {\r\n      console.error('Failed to save spatial layer:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSpatialLayersByProject(projectUuid: string): Promise<SpatialDataLayer[]> {\r\n    const startTime = performance.now();\r\n    const cacheKey = `spatial:${projectUuid}`;\r\n    \r\n    try {\r\n      // Check cache first\r\n      const cached = this.getCachedData(cacheKey);\r\n      if (cached) {\r\n        this.recordPerformanceMetric(startTime, true);\r\n        return cached;\r\n      }\r\n\r\n      const layers = await this.db.getSpatialLayersByProject(projectUuid);\r\n      \r\n      // Cache the result\r\n      this.setCachedData(cacheKey, layers, 180000); // 3 minutes TTL\r\n      \r\n      this.recordPerformanceMetric(startTime);\r\n      return layers;\r\n    } catch (error) {\r\n      console.error('Failed to get spatial layers:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // Sync Operations\r\n  // =============================================================================\r\n\r\n  async getSyncStatus(): Promise<SyncStatus> {\r\n    await this.updateSyncStatus();\r\n    return { ...this.syncStatus };\r\n  }\r\n\r\n  private async updateSyncStatus(): Promise<void> {\r\n    try {\r\n      const pendingOps = await this.db.getPendingSyncOperations();\r\n      this.syncStatus.pendingOperations = pendingOps.length;\r\n      this.syncStatus.failedOperations = pendingOps.filter(op => op.status === 'failed').length;\r\n    } catch (error) {\r\n      console.error('Failed to update sync status:', error);\r\n    }\r\n  }\r\n\r\n  async forceSyncAll(): Promise<void> {\r\n    // In offline-first mode, this would prepare data for future sync\r\n    console.log('📝 Sync operations queued for future online mode');\r\n    this.emit('sync:queued');\r\n  }\r\n\r\n  // =============================================================================\r\n  // Performance Monitoring\r\n  // =============================================================================\r\n\r\n  private recordPerformanceMetric(startTime: number, cacheHit: boolean = false): void {\r\n    if (!this.config.enablePerformanceMonitoring) return;\r\n\r\n    const queryTime = performance.now() - startTime;\r\n    this.performanceMetrics.totalQueries++;\r\n    \r\n    if (cacheHit) {\r\n      this.performanceMetrics.cacheHitRate = \r\n        (this.performanceMetrics.cacheHitRate * (this.performanceMetrics.totalQueries - 1) + 1) / \r\n        this.performanceMetrics.totalQueries;\r\n    } else {\r\n      this.performanceMetrics.averageQueryTime = \r\n        (this.performanceMetrics.averageQueryTime * (this.performanceMetrics.totalQueries - 1) + queryTime) / \r\n        this.performanceMetrics.totalQueries;\r\n    }\r\n\r\n    this.performanceMetrics.lastMeasurement = new Date();\r\n  }\r\n\r\n  async getPerformanceMetrics(): Promise<PerformanceMetrics> {\r\n    const stats = await this.db.getStorageStats();\r\n    this.performanceMetrics.storageUsage = stats.totalSize;\r\n    return { ...this.performanceMetrics };\r\n  }\r\n\r\n  // =============================================================================\r\n  // Cache Management\r\n  // =============================================================================\r\n\r\n  private getCachedData(key: string): any | null {\r\n    const cached = this.queryCache.get(key);\r\n    if (!cached) return null;\r\n\r\n    const now = new Date();\r\n    if (now.getTime() - cached.timestamp.getTime() > cached.ttl) {\r\n      this.queryCache.delete(key);\r\n      return null;\r\n    }\r\n\r\n    return cached.data;\r\n  }\r\n\r\n  private setCachedData(key: string, data: any, ttl: number): void {\r\n    this.queryCache.set(key, {\r\n      data,\r\n      timestamp: new Date(),\r\n      ttl\r\n    });\r\n  }\r\n\r\n  private invalidateCache(pattern: string): void {\r\n    for (const key of this.queryCache.keys()) {\r\n      if (key.includes(pattern)) {\r\n        this.queryCache.delete(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // Utility Methods\r\n  // =============================================================================\r\n\r\n  private convertFromSizeWiseProject(sizeWiseProject: SizeWiseProject): Project {\r\n    const { id, uuid, lastModified, syncStatus, version, ...projectData } = sizeWiseProject;\r\n    return {\r\n      id: uuid,\r\n      ...projectData\r\n    };\r\n  }\r\n\r\n  private startAutoSync(): void {\r\n    if (this.syncTimer) return;\r\n\r\n    this.syncTimer = setInterval(async () => {\r\n      if (!this.syncStatus.syncInProgress && this.syncStatus.isOnline) {\r\n        await this.forceSyncAll();\r\n      }\r\n    }, this.config.syncIntervalMs);\r\n  }\r\n\r\n  private stopAutoSync(): void {\r\n    if (this.syncTimer) {\r\n      clearInterval(this.syncTimer);\r\n      this.syncTimer = null;\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // Cleanup\r\n  // =============================================================================\r\n\r\n  async cleanup(): Promise<void> {\r\n    this.stopAutoSync();\r\n    this.queryCache.clear();\r\n    await this.db.clearOldSyncOperations();\r\n    this.emit('cleanup:completed');\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    await this.cleanup();\r\n    await this.db.close();\r\n    this.emit('closed');\r\n  }\r\n}\r\n\r\n// =============================================================================\r\n// Factory Function\r\n// =============================================================================\r\n\r\nexport async function createEnhancedOfflineService(config?: Partial<OfflineServiceConfig>): Promise<EnhancedOfflineService> {\r\n  const service = new EnhancedOfflineService(config);\r\n  \r\n  // Wait for initialization\r\n  return new Promise((resolve, reject) => {\r\n    service.once('initialized', () => resolve(service));\r\n    service.once('error', reject);\r\n  });\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAaA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;;;AAoeAa,OAAA,CAAAC,4BAAA,GAAAA,4BAAA;AAteA,MAAAC,eAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAoB,CAAA,OAAAgB,OAAA;AAEA,MAAAC,QAAA;AAAA;AAAA,CAAArC,cAAA,GAAAoB,CAAA,OAAAgB,OAAA;AA+BA;AACA;AACA;AAEA,MAAaE,sBAAuB;AAAA;AAAA,CAAQD,QAAA,CAAAE,YAAY;EAQtDC,YAAYC,MAAA;EAAA;EAAA,CAAAzC,cAAA,GAAAsB,CAAA,UAAwC,EAAE;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACpD,KAAK,EAAE;IAAC;IAAApB,cAAA,GAAAoB,CAAA;IAHF,KAAAsB,SAAS,GAA0B,IAAI;IAAC;IAAA1C,cAAA,GAAAoB,CAAA;IAK9C,IAAI,CAACuB,EAAE,GAAG,IAAAR,eAAA,CAAAS,mBAAmB,GAAE;IAAC;IAAA5C,cAAA,GAAAoB,CAAA;IAChC,IAAI,CAACqB,MAAM,GAAG;MACZI,cAAc,EAAE,KAAK;MAAE;MACvBC,cAAc,EAAE,KAAK;MAAE;MACvBC,gBAAgB,EAAE,CAAC;MACnBC,2BAA2B,EAAE,IAAI;MACjCC,oBAAoB,EAAE,IAAI;MAC1B,GAAGR;KACJ;IAAC;IAAAzC,cAAA,GAAAoB,CAAA;IAEF,IAAI,CAAC8B,UAAU,GAAG;MAChBC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,IAAI;MACrBC,kBAAkB,EAAE,IAAI;MACxBC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE,CAAC;MACnBC,cAAc,EAAE;KACjB;IAAC;IAAAxD,cAAA,GAAAoB,CAAA;IAEF,IAAI,CAACqC,kBAAkB,GAAG;MACxBC,gBAAgB,EAAE,CAAC;MACnBC,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE,CAAC;MACfC,eAAe,EAAE,IAAIC,IAAI;KAC1B;IAAC;IAAA/D,cAAA,GAAAoB,CAAA;IAEF,IAAI,CAAC4C,UAAU,GAAG,IAAIC,GAAG,EAAE;IAAC;IAAAjE,cAAA,GAAAoB,CAAA;IAE5B,IAAI,CAAC8C,UAAU,EAAE;EACnB;EAEA;EACA;EACA;EAEQ,MAAMA,UAAUA,CAAA;IAAA;IAAAlE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtB,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF,MAAM,IAAI,CAACuB,EAAE,CAACwB,IAAI,EAAE;MAAC;MAAAnE,cAAA,GAAAoB,CAAA;MACrB,MAAM,IAAI,CAACgD,gBAAgB,EAAE;MAAC;MAAApE,cAAA,GAAAoB,CAAA;MAE9B,IAAI,IAAI,CAACqB,MAAM,CAACI,cAAc,EAAE;QAAA;QAAA7C,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC9B,IAAI,CAACiD,aAAa,EAAE;MACtB,CAAC;MAAA;MAAA;QAAArE,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,IAAI,CAACkD,IAAI,CAAC,aAAa,CAAC;MAAC;MAAAtE,cAAA,GAAAoB,CAAA;MACzBmD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACzE,IAAI,CAACkD,IAAI,CAAC,OAAO,EAAEG,KAAK,CAAC;IAC3B;EACF;EAEA;EACA;EACA;EAEA,MAAMC,aAAaA,CAACC,WAAgC;IAAA;IAAA3E,cAAA,GAAAqB,CAAA;IAClD,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IAAC;IAAA9E,cAAA,GAAAoB,CAAA;IAEpC,IAAI;MACF,MAAM2D,IAAI;MAAA;MAAA,CAAA/E,cAAA,GAAAoB,CAAA,QAAG,WAAW2C,IAAI,CAACe,GAAG,EAAE,IAAIE,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAE/E,MAAMC,eAAe;MAAA;MAAA,CAAApF,cAAA,GAAAoB,CAAA,QAA4E;QAC/F,GAAGuD,WAAW;QACdI,IAAI;QACJM,KAAK;QAAE;QAAA,CAAArF,cAAA,GAAAsB,CAAA,UAAAqD,WAAW,CAACU,KAAK;QAAA;QAAA,CAAArF,cAAA,GAAAsB,CAAA,UAAI,EAAE;QAC9BgE,QAAQ;QAAE;QAAA,CAAAtF,cAAA,GAAAsB,CAAA,UAAAqD,WAAW,CAACW,QAAQ;QAAA;QAAA,CAAAtF,cAAA,GAAAsB,CAAA,UAAI,EAAE;QACpCiE,SAAS;QAAE;QAAA,CAAAvF,cAAA,GAAAsB,CAAA,UAAAqD,WAAW,CAACY,SAAS;QAAA;QAAA,CAAAvF,cAAA,GAAAsB,CAAA,UAAI,EAAE;OACvC;MAAC;MAAAtB,cAAA,GAAAoB,CAAA;MAEF,MAAM,IAAI,CAACuB,EAAE,CAAC+B,aAAa,CAACU,eAAe,CAAC;MAAC;MAAApF,cAAA,GAAAoB,CAAA;MAE7C,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACqE,eAAe,CAAC,UAAU,CAAC;MAAC;MAAAzF,cAAA,GAAAoB,CAAA;MACjC,IAAI,CAACkD,IAAI,CAAC,iBAAiB,EAAE;QAAES,IAAI;QAAEW,OAAO,EAAEN;MAAe,CAAE,CAAC;MAAC;MAAApF,cAAA,GAAAoB,CAAA;MAEjE,OAAO2D,IAAI;IACb,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MAClD,MAAMqD,KAAK;IACb;EACF;EAEA,MAAMkB,aAAaA,CAACZ,IAAY,EAAEa,OAAyB;IAAA;IAAA5F,cAAA,GAAAqB,CAAA;IACzD,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IAAC;IAAA9E,cAAA,GAAAoB,CAAA;IAEpC,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF,MAAM,IAAI,CAACuB,EAAE,CAACgD,aAAa,CAACZ,IAAI,EAAEa,OAAc,CAAC;MAAC;MAAA5F,cAAA,GAAAoB,CAAA;MAElD,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACqE,eAAe,CAAC,UAAU,CAAC;MAAC;MAAAzF,cAAA,GAAAoB,CAAA;MACjC,IAAI,CAACqE,eAAe,CAAC,WAAWV,IAAI,EAAE,CAAC;MAAC;MAAA/E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACkD,IAAI,CAAC,iBAAiB,EAAE;QAAES,IAAI;QAAEa;MAAO,CAAE,CAAC;IACjD,CAAC,CAAC,OAAOnB,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MAClD,MAAMqD,KAAK;IACb;EACF;EAEA,MAAMoB,UAAUA,CAACd,IAAY;IAAA;IAAA/E,cAAA,GAAAqB,CAAA;IAC3B,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IACnC,MAAMgB,QAAQ;IAAA;IAAA,CAAA9F,cAAA,GAAAoB,CAAA,QAAG,WAAW2D,IAAI,EAAE;IAAC;IAAA/E,cAAA,GAAAoB,CAAA;IAEnC,IAAI;MACF;MACA,MAAM2E,MAAM;MAAA;MAAA,CAAA/F,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC4E,aAAa,CAACF,QAAQ,CAAC;MAAC;MAAA9F,cAAA,GAAAoB,CAAA;MAC5C,IAAI2E,MAAM,EAAE;QAAA;QAAA/F,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACV,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,EAAE,IAAI,CAAC;QAAC;QAAA5E,cAAA,GAAAoB,CAAA;QAC9C,OAAO2E,MAAM;MACf,CAAC;MAAA;MAAA;QAAA/F,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAM8D,eAAe;MAAA;MAAA,CAAApF,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACuB,EAAE,CAACkD,UAAU,CAACd,IAAI,CAAC;MAAC;MAAA/E,cAAA,GAAAoB,CAAA;MACvD,IAAI,CAACgE,eAAe,EAAE;QAAA;QAAApF,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACpB,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;QAAC;QAAA5E,cAAA,GAAAoB,CAAA;QACxC,OAAO,IAAI;MACb,CAAC;MAAA;MAAA;QAAApB,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMoE,OAAO;MAAA;MAAA,CAAA1F,cAAA,GAAAoB,CAAA,QAAY,IAAI,CAAC6E,0BAA0B,CAACb,eAAe,CAAC;MAEzE;MAAA;MAAApF,cAAA,GAAAoB,CAAA;MACA,IAAI,CAAC8E,aAAa,CAACJ,QAAQ,EAAEJ,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;MAAA;MAAA1F,cAAA,GAAAoB,CAAA;MAE/C,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,OAAOsE,OAAO;IAChB,CAAC,CAAC,OAAOjB,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MAC/C,MAAMqD,KAAK;IACb;EACF;EAEA,MAAM0B,cAAcA,CAAA;IAAA;IAAAnG,cAAA,GAAAqB,CAAA;IAClB,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IACnC,MAAMgB,QAAQ;IAAA;IAAA,CAAA9F,cAAA,GAAAoB,CAAA,QAAG,UAAU;IAAC;IAAApB,cAAA,GAAAoB,CAAA;IAE5B,IAAI;MACF;MACA,MAAM2E,MAAM;MAAA;MAAA,CAAA/F,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC4E,aAAa,CAACF,QAAQ,CAAC;MAAC;MAAA9F,cAAA,GAAAoB,CAAA;MAC5C,IAAI2E,MAAM,EAAE;QAAA;QAAA/F,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACV,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,EAAE,IAAI,CAAC;QAAC;QAAA5E,cAAA,GAAAoB,CAAA;QAC9C,OAAO2E,MAAM;MACf,CAAC;MAAA;MAAA;QAAA/F,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAM8E,gBAAgB;MAAA;MAAA,CAAApG,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACuB,EAAE,CAACwD,cAAc,EAAE;MACvD,MAAME,QAAQ;MAAA;MAAA,CAAArG,cAAA,GAAAoB,CAAA,QAAGgF,gBAAgB,CAACE,GAAG,CAACC,CAAC,IAAI;QAAA;QAAAvG,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,WAAI,CAAC6E,0BAA0B,CAACM,CAAC,CAAC;MAAD,CAAC,CAAC;MAE9E;MAAA;MAAAvG,cAAA,GAAAoB,CAAA;MACA,IAAI,CAAC8E,aAAa,CAACJ,QAAQ,EAAEO,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;MAAA;MAAArG,cAAA,GAAAoB,CAAA;MAE/C,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,OAAOiF,QAAQ;IACjB,CAAC,CAAC,OAAO5B,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACpD,MAAMqD,KAAK;IACb;EACF;EAEA,MAAM+B,aAAaA,CAACzB,IAAY;IAAA;IAAA/E,cAAA,GAAAqB,CAAA;IAC9B,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IAAC;IAAA9E,cAAA,GAAAoB,CAAA;IAEpC,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF,MAAM,IAAI,CAACuB,EAAE,CAAC6D,aAAa,CAACzB,IAAI,CAAC;MAAC;MAAA/E,cAAA,GAAAoB,CAAA;MAElC,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACqE,eAAe,CAAC,UAAU,CAAC;MAAC;MAAAzF,cAAA,GAAAoB,CAAA;MACjC,IAAI,CAACqE,eAAe,CAAC,WAAWV,IAAI,EAAE,CAAC;MAAC;MAAA/E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACkD,IAAI,CAAC,iBAAiB,EAAE;QAAES;MAAI,CAAE,CAAC;IACxC,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MAClD,MAAMqD,KAAK;IACb;EACF;EAEA;EACA;EACA;EAEA,MAAMgC,eAAeA,CACnBC,WAAmB,EACnBC,KAAuB,EACvBC,MAAyB,EACzBC,WAAoB,EACpBC,QAAiB;IAAA;IAAA9G,cAAA,GAAAqB,CAAA;IAEjB,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IAAC;IAAA9E,cAAA,GAAAoB,CAAA;IAEpC,IAAI;MACF,MAAM2D,IAAI;MAAA;MAAA,CAAA/E,cAAA,GAAAoB,CAAA,QAAG,QAAQ2C,IAAI,CAACe,GAAG,EAAE,IAAIE,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAE5E,MAAM4B,WAAW;MAAA;MAAA,CAAA/G,cAAA,GAAAoB,CAAA,QAAiE;QAChF2D,IAAI;QACJ2B,WAAW;QACXG,WAAW;QACXC,QAAQ;QACRE,eAAe;QAAE;QAAA,CAAAhH,cAAA,GAAAsB,CAAA,UAAAqF,KAAK,CAACM,SAAS;QAAA;QAAA,CAAAjH,cAAA,GAAAsB,CAAA,UAAI,aAAa;QACjD4F,SAAS,EAAEP,KAAK;QAChBC;OACD;MAAC;MAAA5G,cAAA,GAAAoB,CAAA;MAEF,MAAM,IAAI,CAACuB,EAAE,CAAC8D,eAAe,CAACM,WAAW,CAAC;MAAC;MAAA/G,cAAA,GAAAoB,CAAA;MAE3C,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACqE,eAAe,CAAC,gBAAgBiB,WAAW,EAAE,CAAC;MAAC;MAAA1G,cAAA,GAAAoB,CAAA;MACpD,IAAI,CAACkD,IAAI,CAAC,mBAAmB,EAAE;QAAES,IAAI;QAAEgC;MAAW,CAAE,CAAC;MAAC;MAAA/G,cAAA,GAAAoB,CAAA;MAEtD,OAAO2D,IAAI;IACb,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACpD,MAAMqD,KAAK;IACb;EACF;EAEA,MAAM0C,wBAAwBA,CAACT,WAAmB;IAAA;IAAA1G,cAAA,GAAAqB,CAAA;IAChD,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGyD,WAAW,CAACC,GAAG,EAAE;IACnC,MAAMgB,QAAQ;IAAA;IAAA,CAAA9F,cAAA,GAAAoB,CAAA,QAAG,gBAAgBsF,WAAW,EAAE;IAAC;IAAA1G,cAAA,GAAAoB,CAAA;IAE/C,IAAI;MACF;MACA,MAAM2E,MAAM;MAAA;MAAA,CAAA/F,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC4E,aAAa,CAACF,QAAQ,CAAC;MAAC;MAAA9F,cAAA,GAAAoB,CAAA;MAC5C,IAAI2E,MAAM,EAAE;QAAA;QAAA/F,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACV,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,EAAE,IAAI,CAAC;QAAC;QAAA5E,cAAA,GAAAoB,CAAA;QAC9C,OAAO2E,MAAM;MACf,CAAC;MAAA;MAAA;QAAA/F,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAM8F,YAAY;MAAA;MAAA,CAAApH,cAAA,GAAAoB,CAAA,SAAG,MAAM,IAAI,CAACuB,EAAE,CAACwE,wBAAwB,CAACT,WAAW,CAAC;MAExE;MAAA;MAAA1G,cAAA,GAAAoB,CAAA;MACA,IAAI,CAAC8E,aAAa,CAACJ,QAAQ,EAAEsB,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;MAAA;MAAApH,cAAA,GAAAoB,CAAA;MAEpD,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,OAAOgG,YAAY;IACrB,CAAC,CAAC,OAAO3C,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACpD,MAAMqD,KAAK;IACb;EACF;EAEA;EACA;EACA;EAEA,MAAM4C,gBAAgBA,CACpBX,WAAmB,EACnBY,SAAwC,EACxCC,QAAa,EACbC,UAAA;EAAA;EAAA,CAAAxH,cAAA,GAAAsB,CAAA,WAAkC,EAAE;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAEpC,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,SAAGyD,WAAW,CAACC,GAAG,EAAE;IAAC;IAAA9E,cAAA,GAAAoB,CAAA;IAEpC,IAAI;MACF,MAAM2D,IAAI;MAAA;MAAA,CAAA/E,cAAA,GAAAoB,CAAA,SAAG,WAAW2C,IAAI,CAACe,GAAG,EAAE,IAAIE,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAE/E,MAAMsC,KAAK;MAAA;MAAA,CAAAzH,cAAA,GAAAoB,CAAA,SAAiE;QAC1E2D,IAAI;QACJ2B,WAAW;QACXY,SAAS;QACTC,QAAQ;QACRC,UAAU;QACVE,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE;OACT;MAAC;MAAA3H,cAAA,GAAAoB,CAAA;MAEF,MAAM,IAAI,CAACuB,EAAE,CAAC0E,gBAAgB,CAACI,KAAK,CAAC;MAAC;MAAAzH,cAAA,GAAAoB,CAAA;MAEtC,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,IAAI,CAACqE,eAAe,CAAC,WAAWiB,WAAW,EAAE,CAAC;MAAC;MAAA1G,cAAA,GAAAoB,CAAA;MAC/C,IAAI,CAACkD,IAAI,CAAC,eAAe,EAAE;QAAES,IAAI;QAAE0C;MAAK,CAAE,CAAC;MAAC;MAAAzH,cAAA,GAAAoB,CAAA;MAE5C,OAAO2D,IAAI;IACb,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACtD,MAAMqD,KAAK;IACb;EACF;EAEA,MAAMmD,yBAAyBA,CAAClB,WAAmB;IAAA;IAAA1G,cAAA,GAAAqB,CAAA;IACjD,MAAMuD,SAAS;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,SAAGyD,WAAW,CAACC,GAAG,EAAE;IACnC,MAAMgB,QAAQ;IAAA;IAAA,CAAA9F,cAAA,GAAAoB,CAAA,SAAG,WAAWsF,WAAW,EAAE;IAAC;IAAA1G,cAAA,GAAAoB,CAAA;IAE1C,IAAI;MACF;MACA,MAAM2E,MAAM;MAAA;MAAA,CAAA/F,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC4E,aAAa,CAACF,QAAQ,CAAC;MAAC;MAAA9F,cAAA,GAAAoB,CAAA;MAC5C,IAAI2E,MAAM,EAAE;QAAA;QAAA/F,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACV,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,EAAE,IAAI,CAAC;QAAC;QAAA5E,cAAA,GAAAoB,CAAA;QAC9C,OAAO2E,MAAM;MACf,CAAC;MAAA;MAAA;QAAA/F,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMuG,MAAM;MAAA;MAAA,CAAA7H,cAAA,GAAAoB,CAAA,SAAG,MAAM,IAAI,CAACuB,EAAE,CAACiF,yBAAyB,CAAClB,WAAW,CAAC;MAEnE;MAAA;MAAA1G,cAAA,GAAAoB,CAAA;MACA,IAAI,CAAC8E,aAAa,CAACJ,QAAQ,EAAE+B,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;MAAA;MAAA7H,cAAA,GAAAoB,CAAA;MAE9C,IAAI,CAACoE,uBAAuB,CAACZ,SAAS,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MACxC,OAAOyG,MAAM;IACf,CAAC,CAAC,OAAOpD,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACtD,MAAMqD,KAAK;IACb;EACF;EAEA;EACA;EACA;EAEA,MAAMqD,aAAaA,CAAA;IAAA;IAAA9H,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjB,MAAM,IAAI,CAACgD,gBAAgB,EAAE;IAAC;IAAApE,cAAA,GAAAoB,CAAA;IAC9B,OAAO;MAAE,GAAG,IAAI,CAAC8B;IAAU,CAAE;EAC/B;EAEQ,MAAMkB,gBAAgBA,CAAA;IAAA;IAAApE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC5B,IAAI;MACF,MAAM2G,UAAU;MAAA;MAAA,CAAA/H,cAAA,GAAAoB,CAAA,SAAG,MAAM,IAAI,CAACuB,EAAE,CAACqF,wBAAwB,EAAE;MAAC;MAAAhI,cAAA,GAAAoB,CAAA;MAC5D,IAAI,CAAC8B,UAAU,CAACI,iBAAiB,GAAGyE,UAAU,CAACE,MAAM;MAAC;MAAAjI,cAAA,GAAAoB,CAAA;MACtD,IAAI,CAAC8B,UAAU,CAACK,gBAAgB,GAAGwE,UAAU,CAACG,MAAM,CAACC,EAAE,IAAI;QAAA;QAAAnI,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAA+G,EAAE,CAACC,MAAM,KAAK,QAAQ;MAAR,CAAQ,CAAC,CAACH,MAAM;IAC3F,CAAC,CAAC,OAAOxD,KAAK,EAAE;MAAA;MAAAzE,cAAA,GAAAoB,CAAA;MACdmD,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF;EAEA,MAAM4D,YAAYA,CAAA;IAAA;IAAArI,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAChB;IACAmD,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IAAC;IAAAxE,cAAA,GAAAoB,CAAA;IAChE,IAAI,CAACkD,IAAI,CAAC,aAAa,CAAC;EAC1B;EAEA;EACA;EACA;EAEQkB,uBAAuBA,CAACZ,SAAiB,EAAE0D,QAAA;EAAA;EAAA,CAAAtI,cAAA,GAAAsB,CAAA,WAAoB,KAAK;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1E,IAAI,CAAC,IAAI,CAACqB,MAAM,CAACO,2BAA2B,EAAE;MAAA;MAAAhD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAErD,MAAMiH,SAAS;IAAA;IAAA,CAAAvI,cAAA,GAAAoB,CAAA,SAAGyD,WAAW,CAACC,GAAG,EAAE,GAAGF,SAAS;IAAC;IAAA5E,cAAA,GAAAoB,CAAA;IAChD,IAAI,CAACqC,kBAAkB,CAACE,YAAY,EAAE;IAAC;IAAA3D,cAAA,GAAAoB,CAAA;IAEvC,IAAIkH,QAAQ,EAAE;MAAA;MAAAtI,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACZ,IAAI,CAACqC,kBAAkB,CAACG,YAAY,GAClC,CAAC,IAAI,CAACH,kBAAkB,CAACG,YAAY,IAAI,IAAI,CAACH,kBAAkB,CAACE,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,IACtF,IAAI,CAACF,kBAAkB,CAACE,YAAY;IACxC,CAAC,MAAM;MAAA;MAAA3D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACL,IAAI,CAACqC,kBAAkB,CAACC,gBAAgB,GACtC,CAAC,IAAI,CAACD,kBAAkB,CAACC,gBAAgB,IAAI,IAAI,CAACD,kBAAkB,CAACE,YAAY,GAAG,CAAC,CAAC,GAAG4E,SAAS,IAClG,IAAI,CAAC9E,kBAAkB,CAACE,YAAY;IACxC;IAAC;IAAA3D,cAAA,GAAAoB,CAAA;IAED,IAAI,CAACqC,kBAAkB,CAACK,eAAe,GAAG,IAAIC,IAAI,EAAE;EACtD;EAEA,MAAMyE,qBAAqBA,CAAA;IAAA;IAAAxI,cAAA,GAAAqB,CAAA;IACzB,MAAMoH,KAAK;IAAA;IAAA,CAAAzI,cAAA,GAAAoB,CAAA,SAAG,MAAM,IAAI,CAACuB,EAAE,CAAC+F,eAAe,EAAE;IAAC;IAAA1I,cAAA,GAAAoB,CAAA;IAC9C,IAAI,CAACqC,kBAAkB,CAACI,YAAY,GAAG4E,KAAK,CAACE,SAAS;IAAC;IAAA3I,cAAA,GAAAoB,CAAA;IACvD,OAAO;MAAE,GAAG,IAAI,CAACqC;IAAkB,CAAE;EACvC;EAEA;EACA;EACA;EAEQuC,aAAaA,CAAC4C,GAAW;IAAA;IAAA5I,cAAA,GAAAqB,CAAA;IAC/B,MAAM0E,MAAM;IAAA;IAAA,CAAA/F,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC4C,UAAU,CAAC6E,GAAG,CAACD,GAAG,CAAC;IAAC;IAAA5I,cAAA,GAAAoB,CAAA;IACxC,IAAI,CAAC2E,MAAM,EAAE;MAAA;MAAA/F,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAEzB,MAAMwD,GAAG;IAAA;IAAA,CAAA9E,cAAA,GAAAoB,CAAA,SAAG,IAAI2C,IAAI,EAAE;IAAC;IAAA/D,cAAA,GAAAoB,CAAA;IACvB,IAAI0D,GAAG,CAACgE,OAAO,EAAE,GAAG/C,MAAM,CAACgD,SAAS,CAACD,OAAO,EAAE,GAAG/C,MAAM,CAACiD,GAAG,EAAE;MAAA;MAAAhJ,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC3D,IAAI,CAAC4C,UAAU,CAACiF,MAAM,CAACL,GAAG,CAAC;MAAC;MAAA5I,cAAA,GAAAoB,CAAA;MAC5B,OAAO,IAAI;IACb,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAO2E,MAAM,CAACmD,IAAI;EACpB;EAEQhD,aAAaA,CAAC0C,GAAW,EAAEM,IAAS,EAAEF,GAAW;IAAA;IAAAhJ,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvD,IAAI,CAAC4C,UAAU,CAACmF,GAAG,CAACP,GAAG,EAAE;MACvBM,IAAI;MACJH,SAAS,EAAE,IAAIhF,IAAI,EAAE;MACrBiF;KACD,CAAC;EACJ;EAEQvD,eAAeA,CAAC2D,OAAe;IAAA;IAAApJ,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACrC,KAAK,MAAMwH,GAAG,IAAI,IAAI,CAAC5E,UAAU,CAACqF,IAAI,EAAE,EAAE;MAAA;MAAArJ,cAAA,GAAAoB,CAAA;MACxC,IAAIwH,GAAG,CAACU,QAAQ,CAACF,OAAO,CAAC,EAAE;QAAA;QAAApJ,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACzB,IAAI,CAAC4C,UAAU,CAACiF,MAAM,CAACL,GAAG,CAAC;MAC7B,CAAC;MAAA;MAAA;QAAA5I,cAAA,GAAAsB,CAAA;MAAA;IACH;EACF;EAEA;EACA;EACA;EAEQ2E,0BAA0BA,CAACb,eAAgC;IAAA;IAAApF,cAAA,GAAAqB,CAAA;IACjE,MAAM;MAAEkI,EAAE;MAAExE,IAAI;MAAEyE,YAAY;MAAEtG,UAAU;MAAErB,OAAO;MAAE,GAAG8C;IAAW,CAAE;IAAA;IAAA,CAAA3E,cAAA,GAAAoB,CAAA,SAAGgE,eAAe;IAAC;IAAApF,cAAA,GAAAoB,CAAA;IACxF,OAAO;MACLmI,EAAE,EAAExE,IAAI;MACR,GAAGJ;KACJ;EACH;EAEQN,aAAaA,CAAA;IAAA;IAAArE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACnB,IAAI,IAAI,CAACsB,SAAS,EAAE;MAAA;MAAA1C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAE3B,IAAI,CAACsB,SAAS,GAAG+G,WAAW,CAAC,YAAW;MAAA;MAAAzJ,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACtC;MAAI;MAAA,CAAApB,cAAA,GAAAsB,CAAA,YAAC,IAAI,CAAC4B,UAAU,CAACM,cAAc;MAAA;MAAA,CAAAxD,cAAA,GAAAsB,CAAA,WAAI,IAAI,CAAC4B,UAAU,CAACC,QAAQ,GAAE;QAAA;QAAAnD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC/D,MAAM,IAAI,CAACiH,YAAY,EAAE;MAC3B,CAAC;MAAA;MAAA;QAAArI,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC,EAAE,IAAI,CAACmB,MAAM,CAACK,cAAc,CAAC;EAChC;EAEQ4G,YAAYA,CAAA;IAAA;IAAA1J,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClB,IAAI,IAAI,CAACsB,SAAS,EAAE;MAAA;MAAA1C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAClBuI,aAAa,CAAC,IAAI,CAACjH,SAAS,CAAC;MAAC;MAAA1C,cAAA,GAAAoB,CAAA;MAC9B,IAAI,CAACsB,SAAS,GAAG,IAAI;IACvB,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;EACA;EACA;EAEA,MAAMsI,OAAOA,CAAA;IAAA;IAAA5J,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACX,IAAI,CAACsI,YAAY,EAAE;IAAC;IAAA1J,cAAA,GAAAoB,CAAA;IACpB,IAAI,CAAC4C,UAAU,CAAC6F,KAAK,EAAE;IAAC;IAAA7J,cAAA,GAAAoB,CAAA;IACxB,MAAM,IAAI,CAACuB,EAAE,CAACmH,sBAAsB,EAAE;IAAC;IAAA9J,cAAA,GAAAoB,CAAA;IACvC,IAAI,CAACkD,IAAI,CAAC,mBAAmB,CAAC;EAChC;EAEA,MAAMyF,KAAKA,CAAA;IAAA;IAAA/J,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACT,MAAM,IAAI,CAACwI,OAAO,EAAE;IAAC;IAAA5J,cAAA,GAAAoB,CAAA;IACrB,MAAM,IAAI,CAACuB,EAAE,CAACoH,KAAK,EAAE;IAAC;IAAA/J,cAAA,GAAAoB,CAAA;IACtB,IAAI,CAACkD,IAAI,CAAC,QAAQ,CAAC;EACrB;;AACD;AAAAtE,cAAA,GAAAoB,CAAA;AA3bDa,OAAA,CAAAK,sBAAA,GAAAA,sBAAA;AA6bA;AACA;AACA;AAEO,eAAeJ,4BAA4BA,CAACO,MAAsC;EAAA;EAAAzC,cAAA,GAAAqB,CAAA;EACvF,MAAM2I,OAAO;EAAA;EAAA,CAAAhK,cAAA,GAAAoB,CAAA,SAAG,IAAIkB,sBAAsB,CAACG,MAAM,CAAC;EAElD;EAAA;EAAAzC,cAAA,GAAAoB,CAAA;EACA,OAAO,IAAI6I,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IAAA;IAAAnK,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACrC4I,OAAO,CAACI,IAAI,CAAC,aAAa,EAAE,MAAM;MAAA;MAAApK,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAA8I,OAAO,CAACF,OAAO,CAAC;IAAD,CAAC,CAAC;IAAC;IAAAhK,cAAA,GAAAoB,CAAA;IACpD4I,OAAO,CAACI,IAAI,CAAC,OAAO,EAAED,MAAM,CAAC;EAC/B,CAAC,CAAC;AACJ","ignoreList":[]}