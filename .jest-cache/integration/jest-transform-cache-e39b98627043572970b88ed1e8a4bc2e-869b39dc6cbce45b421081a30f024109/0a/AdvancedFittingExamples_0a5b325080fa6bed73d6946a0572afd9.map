{"version":3,"names":["cov_974w6z7v7","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","calculateLaboratoryExhaustSystem","calculateVAVSystemPerformance","calculateIntegratedDuctSystem","AdvancedFittingCalculator_1","require","SystemPressureCalculator_1","AirPropertiesCalculator_1","console","log","systemFlow","systemVelocity","designConditions","temperature","pressure","humidity","elevation","airProperties","AirPropertiesCalculator","calculateAirProperties","density","toFixed","viscosity","toExponential","specificVolume","flowConditions","velocity","volumeFlow","massFlow","reynoldsNumber","airDensity","turbulenceIntensity","totalPressureLoss","fittingResults","fumeHoodConfig","AdvancedFittingCalculator","getFittingConfiguration","fumeHoodResult","calculateAdvancedFittingLoss","pressureLoss","kFactor","calculationMethod","performanceMetrics","efficiency","flowUniformity","validationResults","warnings","length","forEach","w","message","push","result","transitionConfig","transitionResult","damperConfig","damperResult","attenuatorConfig","attenuatorResult","pressureRecovery","totalEnergyLoss","reduce","sum","fitting","energyLoss","avgEfficiency","allRecommendations","flatMap","recommendations","map","rec","highPriorityRecs","filter","priority","description","vavConfig","operatingPoints","flow","performanceData","point","toString","padStart","error","maxEfficiency","Math","max","p","optimalPoint","find","turndownRatio","min","systemSegments","id","width","height","shape","material","roughness","airflow","fittings","quantity","K","materialAge","surfaceCondition","systemResult","SystemPressureCalculator","calculateEnhancedSystemPressure","segments","systemType","calculationOptions","includeElevation","includeFittings","roundResults","totalFrictionLoss","totalFittingLoss","vavFlowConditions","advancedFittingLoss","vavResult","transitionFlowConditions","totalSystemLoss","advancedFittingPercentage","standardSystemLoss","AdvancedFittingExamples"],"sources":["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\examples\\AdvancedFittingExamples.ts"],"sourcesContent":["/**\r\n * Advanced Fitting Calculator Integration Examples\r\n * \r\n * Comprehensive examples demonstrating Phase 3 advanced fitting calculations\r\n * integrated with existing Phase 1/2 components for real-world HVAC scenarios.\r\n * \r\n * @version 3.0.0\r\n * @author SizeWise Suite Development Team\r\n */\r\n\r\nimport { AdvancedFittingCalculator } from '../AdvancedFittingCalculator';\r\nimport { SystemPressureCalculator } from '../SystemPressureCalculator';\r\nimport { AirPropertiesCalculator } from '../AirPropertiesCalculator';\r\nimport {\r\n  AdvancedFittingConfiguration,\r\n  FlowConditions,\r\n  SystemContext,\r\n  CalculationMethod\r\n} from '../types/AdvancedFittingTypes';\r\n\r\n/**\r\n * Example 1: Laboratory Exhaust System with Complex Fittings\r\n * \r\n * This example demonstrates a complete laboratory exhaust system calculation\r\n * including fume hood, transitions, dampers, and sound attenuator.\r\n */\r\nexport function calculateLaboratoryExhaustSystem() {\r\n  console.log('=== Laboratory Exhaust System Analysis ===\\n');\r\n\r\n  // System design parameters\r\n  const systemFlow = 1200; // CFM\r\n  const systemVelocity = 1800; // FPM\r\n  const designConditions = {\r\n    temperature: 75, // °F\r\n    pressure: 29.85, // in Hg\r\n    humidity: 45,    // %RH\r\n    elevation: 500   // ft\r\n  };\r\n\r\n  // Calculate air properties for design conditions\r\n  const airProperties = AirPropertiesCalculator.calculateAirProperties(designConditions);\r\n  console.log('Design Air Properties:');\r\n  console.log(`  Density: ${airProperties.density.toFixed(4)} lb/ft³`);\r\n  console.log(`  Viscosity: ${airProperties.viscosity.toExponential(3)} lb/(ft·s)`);\r\n  console.log(`  Specific Volume: ${airProperties.specificVolume.toFixed(2)} ft³/lb\\n`);\r\n\r\n  // Common flow conditions for all fittings\r\n  const flowConditions: FlowConditions = {\r\n    velocity: systemVelocity,\r\n    volumeFlow: systemFlow,\r\n    massFlow: systemFlow * airProperties.density / 60, // Convert to lb/min\r\n    reynoldsNumber: (airProperties.density * systemVelocity * (14/12)) / (airProperties.viscosity * 3600), // 14\" equivalent diameter\r\n    airDensity: airProperties.density,\r\n    viscosity: airProperties.viscosity,\r\n    temperature: designConditions.temperature,\r\n    pressure: designConditions.pressure,\r\n    turbulenceIntensity: 8\r\n  };\r\n\r\n  let totalPressureLoss = 0;\r\n  const fittingResults: any[] = [];\r\n\r\n  // 1. Laboratory Fume Hood\r\n  console.log('1. Laboratory Fume Hood Analysis:');\r\n  const fumeHoodConfig = AdvancedFittingCalculator.getFittingConfiguration('spec_exhaust_lab_fume');\r\n  if (fumeHoodConfig) {\r\n    const fumeHoodResult = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n      fumeHoodConfig,\r\n      flowConditions\r\n    );\r\n    \r\n    console.log(`   Pressure Loss: ${fumeHoodResult.pressureLoss.toFixed(3)} in wg`);\r\n    console.log(`   K-Factor: ${fumeHoodResult.kFactor.toFixed(2)}`);\r\n    console.log(`   Calculation Method: ${fumeHoodResult.calculationMethod}`);\r\n    console.log(`   Efficiency: ${fumeHoodResult.performanceMetrics.efficiency.toFixed(1)}%`);\r\n    console.log(`   Containment Performance: ${fumeHoodResult.performanceMetrics.flowUniformity.toFixed(1)}%`);\r\n    \r\n    if (fumeHoodResult.validationResults.warnings.length > 0) {\r\n      console.log(`   Warnings: ${fumeHoodResult.validationResults.warnings.length}`);\r\n      fumeHoodResult.validationResults.warnings.forEach(w => \r\n        console.log(`     - ${w.message}`)\r\n      );\r\n    }\r\n    \r\n    totalPressureLoss += fumeHoodResult.pressureLoss;\r\n    fittingResults.push({ name: 'Fume Hood', result: fumeHoodResult });\r\n  }\r\n\r\n  // 2. Rectangular to Round Transition\r\n  console.log('\\n2. Rectangular to Round Transition:');\r\n  const transitionConfig = AdvancedFittingCalculator.getFittingConfiguration('trans_rect_round_gradual');\r\n  if (transitionConfig) {\r\n    const transitionResult = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n      transitionConfig,\r\n      flowConditions\r\n    );\r\n    \r\n    console.log(`   Pressure Loss: ${transitionResult.pressureLoss.toFixed(3)} in wg`);\r\n    console.log(`   K-Factor: ${transitionResult.kFactor.toFixed(2)}`);\r\n    console.log(`   Calculation Method: ${transitionResult.calculationMethod}`);\r\n    console.log(`   Flow Uniformity: ${transitionResult.performanceMetrics.flowUniformity.toFixed(1)}%`);\r\n    \r\n    totalPressureLoss += transitionResult.pressureLoss;\r\n    fittingResults.push({ name: 'Transition', result: transitionResult });\r\n  }\r\n\r\n  // 3. Fire Damper\r\n  console.log('\\n3. Fire Damper:');\r\n  const damperConfig = AdvancedFittingCalculator.getFittingConfiguration('ctrl_fire_damper');\r\n  if (damperConfig) {\r\n    const damperResult = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n      damperConfig,\r\n      flowConditions\r\n    );\r\n    \r\n    console.log(`   Pressure Loss: ${damperResult.pressureLoss.toFixed(3)} in wg`);\r\n    console.log(`   K-Factor: ${damperResult.kFactor.toFixed(2)}`);\r\n    console.log(`   Calculation Method: ${damperResult.calculationMethod}`);\r\n    \r\n    totalPressureLoss += damperResult.pressureLoss;\r\n    fittingResults.push({ name: 'Fire Damper', result: damperResult });\r\n  }\r\n\r\n  // 4. Sound Attenuator\r\n  console.log('\\n4. Sound Attenuator:');\r\n  const attenuatorConfig = AdvancedFittingCalculator.getFittingConfiguration('spec_sound_att_parallel');\r\n  if (attenuatorConfig) {\r\n    const attenuatorResult = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n      attenuatorConfig,\r\n      flowConditions\r\n    );\r\n    \r\n    console.log(`   Pressure Loss: ${attenuatorResult.pressureLoss.toFixed(3)} in wg`);\r\n    console.log(`   K-Factor: ${attenuatorResult.kFactor.toFixed(2)}`);\r\n    console.log(`   Calculation Method: ${attenuatorResult.calculationMethod}`);\r\n    console.log(`   Noise Reduction: ${attenuatorResult.performanceMetrics.pressureRecovery.toFixed(1)}%`);\r\n    console.log(`   Acoustic Performance: ${attenuatorResult.performanceMetrics.flowUniformity.toFixed(1)}%`);\r\n    \r\n    totalPressureLoss += attenuatorResult.pressureLoss;\r\n    fittingResults.push({ name: 'Sound Attenuator', result: attenuatorResult });\r\n  }\r\n\r\n  // System Summary\r\n  console.log('\\n=== System Summary ===');\r\n  console.log(`Total Fitting Pressure Loss: ${totalPressureLoss.toFixed(3)} in wg`);\r\n  \r\n  const totalEnergyLoss = fittingResults.reduce((sum, fitting) => \r\n    sum + fitting.result.performanceMetrics.energyLoss, 0\r\n  );\r\n  console.log(`Total Energy Loss: ${totalEnergyLoss.toFixed(0)} BTU/hr`);\r\n  \r\n  const avgEfficiency = fittingResults.reduce((sum, fitting) => \r\n    sum + fitting.result.performanceMetrics.efficiency, 0\r\n  ) / fittingResults.length;\r\n  console.log(`Average System Efficiency: ${avgEfficiency.toFixed(1)}%`);\r\n\r\n  // Recommendations\r\n  console.log('\\n=== System Recommendations ===');\r\n  const allRecommendations = fittingResults.flatMap(fitting => \r\n    fitting.result.recommendations.map((rec: any) => ({\r\n      fitting: fitting.name,\r\n      ...rec\r\n    }))\r\n  );\r\n  \r\n  const highPriorityRecs = allRecommendations.filter(rec => rec.priority === 'high');\r\n  if (highPriorityRecs.length > 0) {\r\n    console.log('High Priority:');\r\n    highPriorityRecs.forEach(rec => \r\n      console.log(`  ${rec.fitting}: ${rec.description}`)\r\n    );\r\n  }\r\n\r\n  return {\r\n    totalPressureLoss,\r\n    totalEnergyLoss,\r\n    avgEfficiency,\r\n    fittingResults,\r\n    recommendations: allRecommendations\r\n  };\r\n}\r\n\r\n/**\r\n * Example 2: VAV System with Variable Performance Analysis\r\n * \r\n * This example demonstrates variable air volume system calculations\r\n * with performance curves and turndown analysis.\r\n */\r\nexport function calculateVAVSystemPerformance() {\r\n  console.log('\\n=== VAV System Performance Analysis ===\\n');\r\n\r\n  const vavConfig = AdvancedFittingCalculator.getFittingConfiguration('term_vav_single_duct');\r\n  if (!vavConfig) {\r\n    console.log('VAV configuration not found');\r\n    return;\r\n  }\r\n\r\n  const designConditions = {\r\n    temperature: 72,\r\n    pressure: 29.92,\r\n    humidity: 50,\r\n    elevation: 0\r\n  };\r\n\r\n  const airProperties = AirPropertiesCalculator.calculateAirProperties(designConditions);\r\n\r\n  // Test multiple operating points\r\n  const operatingPoints = [\r\n    { flow: 200, description: 'Minimum Flow (20%)' },\r\n    { flow: 500, description: 'Part Load (50%)' },\r\n    { flow: 800, description: 'Design Flow (80%)' },\r\n    { flow: 1000, description: 'Maximum Flow (100%)' }\r\n  ];\r\n\r\n  console.log('Operating Point Analysis:');\r\n  console.log('Flow (CFM) | Velocity (FPM) | Pressure Loss (in wg) | K-Factor | Efficiency (%)');\r\n  console.log('-----------|----------------|----------------------|----------|---------------');\r\n\r\n  const performanceData: any[] = [];\r\n\r\n  operatingPoints.forEach(point => {\r\n    const velocity = point.flow * 144 / (12 * 8); // Assuming 12\"x8\" duct\r\n    \r\n    const flowConditions: FlowConditions = {\r\n      velocity: velocity,\r\n      volumeFlow: point.flow,\r\n      massFlow: point.flow * airProperties.density / 60,\r\n      reynoldsNumber: (airProperties.density * velocity * (10/12)) / (airProperties.viscosity * 3600),\r\n      airDensity: airProperties.density,\r\n      viscosity: airProperties.viscosity,\r\n      temperature: designConditions.temperature,\r\n      pressure: designConditions.pressure,\r\n      turbulenceIntensity: 5 + (velocity / 500) // Increases with velocity\r\n    };\r\n\r\n    try {\r\n      const result = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n        vavConfig,\r\n        flowConditions\r\n      );\r\n\r\n      console.log(\r\n        `${point.flow.toString().padStart(10)} | ` +\r\n        `${velocity.toFixed(0).padStart(14)} | ` +\r\n        `${result.pressureLoss.toFixed(3).padStart(20)} | ` +\r\n        `${result.kFactor.toFixed(2).padStart(8)} | ` +\r\n        `${result.performanceMetrics.efficiency.toFixed(1).padStart(13)}`\r\n      );\r\n\r\n      performanceData.push({\r\n        flow: point.flow,\r\n        velocity: velocity,\r\n        pressureLoss: result.pressureLoss,\r\n        kFactor: result.kFactor,\r\n        efficiency: result.performanceMetrics.efficiency,\r\n        description: point.description\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(`${point.flow.toString().padStart(10)} | Error: ${error}`);\r\n    }\r\n  });\r\n\r\n  // Performance curve analysis\r\n  console.log('\\n=== Performance Curve Analysis ===');\r\n  if (performanceData.length >= 2) {\r\n    const maxEfficiency = Math.max(...performanceData.map(p => p.efficiency));\r\n    const optimalPoint = performanceData.find(p => p.efficiency === maxEfficiency);\r\n    \r\n    console.log(`Optimal Operating Point: ${optimalPoint?.flow} CFM (${optimalPoint?.description})`);\r\n    console.log(`Maximum Efficiency: ${maxEfficiency.toFixed(1)}%`);\r\n    \r\n    const turndownRatio = Math.max(...performanceData.map(p => p.flow)) / \r\n                         Math.min(...performanceData.map(p => p.flow));\r\n    console.log(`Turndown Ratio: ${turndownRatio.toFixed(1)}:1`);\r\n  }\r\n\r\n  return performanceData;\r\n}\r\n\r\n/**\r\n * Example 3: System Integration with Existing Phase 1/2 Components\r\n * \r\n * This example shows how advanced fittings integrate with the existing\r\n * SystemPressureCalculator for complete duct system analysis.\r\n */\r\nexport function calculateIntegratedDuctSystem() {\r\n  console.log('\\n=== Integrated Duct System Analysis ===\\n');\r\n\r\n  // Define a complete duct system with both standard and advanced fittings\r\n  const systemSegments = [\r\n    {\r\n      id: 'main_trunk',\r\n      length: 100,\r\n      width: 24,\r\n      height: 16,\r\n      shape: 'rectangular' as const,\r\n      material: 'galvanized_steel',\r\n      roughness: 0.0005,\r\n      airflow: 4000,\r\n      fittings: [\r\n        { type: 'elbow_90_rectangular', quantity: 2, K: 0.25 },\r\n        { type: 'branch_tee_main', quantity: 1, K: 0.15 }\r\n      ],\r\n      elevation: 0,\r\n      temperature: 72,\r\n      humidity: 50,\r\n      pressure: 29.92,\r\n      materialAge: 'new' as const,\r\n      surfaceCondition: 'good' as const\r\n    },\r\n    {\r\n      id: 'branch_1',\r\n      length: 50,\r\n      width: 16,\r\n      height: 12,\r\n      shape: 'rectangular' as const,\r\n      material: 'galvanized_steel',\r\n      roughness: 0.0005,\r\n      airflow: 2000,\r\n      fittings: [\r\n        { type: 'elbow_90_rectangular', quantity: 1, K: 0.25 }\r\n      ],\r\n      elevation: 0,\r\n      temperature: 72,\r\n      humidity: 50,\r\n      pressure: 29.92,\r\n      materialAge: 'new' as const,\r\n      surfaceCondition: 'good' as const\r\n    }\r\n  ];\r\n\r\n  // Calculate standard system pressure loss\r\n  const systemResult = SystemPressureCalculator.calculateEnhancedSystemPressure({\r\n    segments: systemSegments,\r\n    systemType: 'supply',\r\n    designConditions: {\r\n      temperature: 72,\r\n      elevation: 0,\r\n      humidity: 50,\r\n      pressure: 29.92\r\n    },\r\n    calculationOptions: {\r\n      includeElevation: true,\r\n      includeFittings: true,\r\n      roundResults: false\r\n    }\r\n  });\r\n\r\n  console.log('Standard System Analysis:');\r\n  console.log(`Total System Pressure Loss: ${systemResult.totalPressureLoss.toFixed(3)} in wg`);\r\n  console.log(`Duct Friction Loss: ${systemResult.totalFrictionLoss.toFixed(3)} in wg`);\r\n  console.log(`Standard Fitting Loss: ${systemResult.totalFittingLoss.toFixed(3)} in wg`);\r\n\r\n  // Add advanced fittings to the system\r\n  console.log('\\nAdvanced Fitting Analysis:');\r\n  \r\n  const airProperties = AirPropertiesCalculator.calculateAirProperties({\r\n    temperature: 72,\r\n    pressure: 29.92,\r\n    humidity: 50\r\n  });\r\n\r\n  // Add VAV terminal to branch 1\r\n  const vavFlowConditions: FlowConditions = {\r\n    velocity: 1500,\r\n    volumeFlow: 2000,\r\n    massFlow: 2000 * airProperties.density / 60,\r\n    reynoldsNumber: 75000,\r\n    airDensity: airProperties.density,\r\n    viscosity: airProperties.viscosity,\r\n    temperature: 72,\r\n    pressure: 29.92,\r\n    turbulenceIntensity: 6\r\n  };\r\n\r\n  const vavConfig = AdvancedFittingCalculator.getFittingConfiguration('term_vav_single_duct');\r\n  let advancedFittingLoss = 0;\r\n\r\n  if (vavConfig) {\r\n    const vavResult = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n      vavConfig,\r\n      vavFlowConditions\r\n    );\r\n    \r\n    console.log(`VAV Terminal Pressure Loss: ${vavResult.pressureLoss.toFixed(3)} in wg`);\r\n    console.log(`VAV Terminal Efficiency: ${vavResult.performanceMetrics.efficiency.toFixed(1)}%`);\r\n    advancedFittingLoss += vavResult.pressureLoss;\r\n  }\r\n\r\n  // Add transition fitting to main trunk\r\n  const transitionFlowConditions: FlowConditions = {\r\n    velocity: 2000,\r\n    volumeFlow: 4000,\r\n    massFlow: 4000 * airProperties.density / 60,\r\n    reynoldsNumber: 100000,\r\n    airDensity: airProperties.density,\r\n    viscosity: airProperties.viscosity,\r\n    temperature: 72,\r\n    pressure: 29.92,\r\n    turbulenceIntensity: 8\r\n  };\r\n\r\n  const transitionConfig = AdvancedFittingCalculator.getFittingConfiguration('trans_rect_round_gradual');\r\n  if (transitionConfig) {\r\n    const transitionResult = AdvancedFittingCalculator.calculateAdvancedFittingLoss(\r\n      transitionConfig,\r\n      transitionFlowConditions\r\n    );\r\n    \r\n    console.log(`Transition Pressure Loss: ${transitionResult.pressureLoss.toFixed(3)} in wg`);\r\n    console.log(`Transition Flow Uniformity: ${transitionResult.performanceMetrics.flowUniformity.toFixed(1)}%`);\r\n    advancedFittingLoss += transitionResult.pressureLoss;\r\n  }\r\n\r\n  // Complete system summary\r\n  const totalSystemLoss = systemResult.totalPressureLoss + advancedFittingLoss;\r\n  \r\n  console.log('\\n=== Complete System Summary ===');\r\n  console.log(`Standard Components: ${systemResult.totalPressureLoss.toFixed(3)} in wg`);\r\n  console.log(`Advanced Fittings: ${advancedFittingLoss.toFixed(3)} in wg`);\r\n  console.log(`Total System Loss: ${totalSystemLoss.toFixed(3)} in wg`);\r\n  \r\n  const advancedFittingPercentage = (advancedFittingLoss / totalSystemLoss) * 100;\r\n  console.log(`Advanced Fitting Impact: ${advancedFittingPercentage.toFixed(1)}% of total loss`);\r\n\r\n  return {\r\n    standardSystemLoss: systemResult.totalPressureLoss,\r\n    advancedFittingLoss: advancedFittingLoss,\r\n    totalSystemLoss: totalSystemLoss,\r\n    advancedFittingPercentage: advancedFittingPercentage\r\n  };\r\n}\r\n\r\n// Export all examples for easy execution\r\nexport const AdvancedFittingExamples = {\r\n  calculateLaboratoryExhaustSystem,\r\n  calculateVAVSystemPerformance,\r\n  calculateIntegratedDuctSystem\r\n};\r\n"],"mappings":"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","ignoreList":[]}