{"version":3,"names":["cov_zeioaqpul","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","SystemOptimizationTypes_1","require","GeneticAlgorithm","constructor","parameters","bestIndividual","paretoFront","generation","evaluationCount","history","populationSize","maxGenerations","crossoverRate","mutationRate","eliteSize","selectionMethod","crossoverMethod","mutationMethod","tournamentSize","diversityMaintenance","constraintHandling","penaltyCoefficient","adaptiveParameters","parallelEvaluation","seedValue","random","createSeededRandom","Math","population","optimize","problem","objectiveFunction","constraintFunctions","startTime","performance","now","initializeAlgorithm","createInitialPopulation","shouldTerminate","evolveGeneration","updateHistory","adaptParameters","createOptimizationResult","error","console","log","i","individual","createRandomIndividual","evaluateIndividual","push","updateBestIndividual","updateParetoFront","genes","variable","variables","discreteValues","length","randomIndex","floor","min","bounds","minimum","max","maximum","value","id","generateIndividualId","fitness","objectiveValues","constraintViolations","feasible","age","genesToVariables","objectives","objectiveValue","objective","evaluationFunction","constraintFunction","violation","every","v","penalty","filter","reduce","sum","map","Number","MAX_VALUE","variableTemplates","template","index","currentValue","parents","selection","offspring","parent1","parent2","child1","createChild","child2","crossover","mutate","child","replacement","forEach","tournamentSelection","rouletteWheelSelection","rankSelection","randomSelection","selected","tournament","j","sort","a","maxFitness","ind","adjustedFitness","totalFitness","randomValue","cumulativeFitness","sortedPopulation","ranks","_","totalRank","rank","cumulativeRank","singlePointCrossover","twoPointCrossover","uniformCrossover","arithmeticCrossover","crossoverPoint","slice","point1","point2","gene","alpha","mutated","mutateGene","gaussianMutation","uniformMutation","polynomialMutation","sigma","gaussianRandom","eta","delta1","delta2","rnd","deltaq","xy","val","pow","combined","best","current","feasiblePopulation","fitnesses","iteration","bestFitness","averageFitness","worstFitness","diversity","calculateDiversity","timestamp","Date","totalDistance","pairCount","distance","calculateDistance","ind1","ind2","diff","sqrt","recentHistory","fitnessImprovement","abs","convergenceCriteria","toleranceValue","diversityThreshold","executionTime","bestSolution","systemConfiguration","performanceMetrics","statistics","totalIterations","totalEvaluations","convergenceIteration","bestFitnessHistory","h","averageFitnessHistory","diversityHistory","constraintViolationHistory","algorithmSpecificStats","finalMutationRate","finalCrossoverRate","optimizationHistory","iterations","populationHistory","parameterHistory","convergenceMetrics","problemId","status","OptimizationStatus","CONVERGED","analysis","recommendations","warnings","errors","parent","toString","substr","seed","state","u1","u2","cos","PI","exports"],"sources":["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GeneticAlgorithm.ts"],"sourcesContent":["/**\n * Genetic Algorithm Implementation for System Optimization\n * \n * Implements genetic algorithm optimization with:\n * - Multi-objective optimization support (NSGA-II)\n * - Configurable selection, crossover, and mutation operators\n * - Constraint handling with penalty methods\n * - Elitism and diversity preservation\n * - Parallel evaluation support\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport {\n  OptimizationSolution,\n  OptimizationVariable,\n  OptimizationProblem,\n  OptimizationResult,\n  OptimizationStatus,\n  OptimizationStatistics,\n  OptimizationHistory,\n  IterationHistory,\n  PopulationSnapshot,\n  SolutionPerformanceMetrics,\n  ObjectiveFunctionType,\n  ConstraintFunctionType,\n  SelectionFunction,\n  CrossoverFunction,\n  MutationFunction\n} from '../types/SystemOptimizationTypes';\n\nexport interface GeneticAlgorithmParameters {\n  populationSize: number;\n  maxGenerations: number;\n  crossoverRate: number;\n  mutationRate: number;\n  eliteSize: number;\n  selectionMethod: 'tournament' | 'roulette' | 'rank' | 'random';\n  crossoverMethod: 'single_point' | 'two_point' | 'uniform' | 'arithmetic';\n  mutationMethod: 'gaussian' | 'uniform' | 'polynomial' | 'adaptive';\n  tournamentSize?: number;\n  diversityMaintenance: boolean;\n  constraintHandling: 'penalty' | 'repair' | 'death_penalty';\n  penaltyCoefficient: number;\n  adaptiveParameters: boolean;\n  parallelEvaluation: boolean;\n  seedValue?: number;\n}\n\nexport interface Individual {\n  id: string;\n  genes: (number | string)[];\n  fitness: number;\n  objectiveValues: number[];\n  constraintViolations: number[];\n  feasible: boolean;\n  dominationRank?: number;\n  crowdingDistance?: number;\n  age: number;\n}\n\n/**\n * Genetic Algorithm optimizer for single and multi-objective optimization\n */\nexport class GeneticAlgorithm {\n  private parameters: GeneticAlgorithmParameters;\n  private population: Individual[];\n  private bestIndividual: Individual | null = null;\n  private paretoFront: Individual[] = [];\n  private generation: number = 0;\n  private evaluationCount: number = 0;\n  private history: IterationHistory[] = [];\n  private random: () => number;\n\n  constructor(parameters?: Partial<GeneticAlgorithmParameters>) {\n    this.parameters = {\n      populationSize: 50,\n      maxGenerations: 100,\n      crossoverRate: 0.8,\n      mutationRate: 0.1,\n      eliteSize: 2,\n      selectionMethod: 'tournament',\n      crossoverMethod: 'two_point',\n      mutationMethod: 'gaussian',\n      tournamentSize: 3,\n      diversityMaintenance: true,\n      constraintHandling: 'penalty',\n      penaltyCoefficient: 1000,\n      adaptiveParameters: true,\n      parallelEvaluation: false,\n      ...parameters\n    };\n\n    // Initialize random number generator\n    if (this.parameters.seedValue !== undefined) {\n      this.random = this.createSeededRandom(this.parameters.seedValue);\n    } else {\n      this.random = Math.random;\n    }\n\n    this.population = [];\n  }\n\n  /**\n   * Main optimization method\n   */\n  public async optimize(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<OptimizationResult> {\n    const startTime = performance.now();\n    \n    try {\n      // Initialize algorithm\n      this.initializeAlgorithm(problem);\n      \n      // Create initial population\n      await this.createInitialPopulation(problem, objectiveFunction, constraintFunctions);\n      \n      // Evolution loop\n      while (!this.shouldTerminate(problem)) {\n        await this.evolveGeneration(problem, objectiveFunction, constraintFunctions);\n        this.updateHistory();\n        \n        if (this.parameters.adaptiveParameters) {\n          this.adaptParameters();\n        }\n      }\n      \n      // Create final result\n      return this.createOptimizationResult(problem, startTime);\n      \n    } catch (error) {\n      console.error('Genetic algorithm optimization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize algorithm state\n   */\n  private initializeAlgorithm(problem: OptimizationProblem): void {\n    this.generation = 0;\n    this.evaluationCount = 0;\n    this.population = [];\n    this.bestIndividual = null;\n    this.paretoFront = [];\n    this.history = [];\n    \n    console.log(`Initializing Genetic Algorithm with population size: ${this.parameters.populationSize}`);\n  }\n\n  /**\n   * Create initial population\n   */\n  private async createInitialPopulation(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    this.population = [];\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const individual = this.createRandomIndividual(problem);\n      await this.evaluateIndividual(individual, problem, objectiveFunction, constraintFunctions);\n      this.population.push(individual);\n    }\n    \n    this.updateBestIndividual();\n    this.updateParetoFront();\n  }\n\n  /**\n   * Create a random individual\n   */\n  private createRandomIndividual(problem: OptimizationProblem): Individual {\n    const genes: (number | string)[] = [];\n    \n    for (const variable of problem.variables) {\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        // Discrete variable\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n        genes.push(variable.discreteValues[randomIndex]);\n      } else {\n        // Continuous variable\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n        const value = min + this.random() * (max - min);\n        genes.push(value);\n      }\n    }\n    \n    return {\n      id: this.generateIndividualId(),\n      genes,\n      fitness: 0,\n      objectiveValues: [],\n      constraintViolations: [],\n      feasible: true,\n      age: 0\n    };\n  }\n\n  /**\n   * Evaluate individual fitness\n   */\n  private async evaluateIndividual(\n    individual: Individual,\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    try {\n      // Convert genes to optimization variables\n      const variables = this.genesToVariables(individual.genes, problem.variables);\n      \n      // Evaluate objectives\n      if (problem.objectives.objectives.length === 1) {\n        // Single objective\n        const objectiveValue = objectiveFunction(variables);\n        individual.objectiveValues = [objectiveValue];\n        individual.fitness = objectiveValue;\n      } else {\n        // Multi-objective - evaluate each objective separately\n        individual.objectiveValues = [];\n        for (const objective of problem.objectives.objectives) {\n          const value = objective.evaluationFunction(variables);\n          individual.objectiveValues.push(value);\n        }\n        // Fitness will be calculated during Pareto ranking\n        individual.fitness = 0;\n      }\n      \n      // Evaluate constraints\n      individual.constraintViolations = [];\n      for (const constraintFunction of constraintFunctions) {\n        const violation = constraintFunction(variables);\n        individual.constraintViolations.push(violation);\n      }\n      \n      // Check feasibility\n      individual.feasible = individual.constraintViolations.every(v => v <= 0);\n      \n      // Apply constraint handling\n      if (!individual.feasible && this.parameters.constraintHandling === 'penalty') {\n        const penalty = individual.constraintViolations\n          .filter(v => v > 0)\n          .reduce((sum, v) => sum + v, 0) * this.parameters.penaltyCoefficient;\n        \n        if (problem.objectives.objectives.length === 1) {\n          individual.fitness += penalty;\n        } else {\n          // Add penalty to all objectives for multi-objective\n          individual.objectiveValues = individual.objectiveValues.map(v => v + penalty);\n        }\n      }\n      \n      this.evaluationCount++;\n      \n    } catch (error) {\n      console.error('Error evaluating individual:', error);\n      individual.fitness = Number.MAX_VALUE;\n      individual.feasible = false;\n    }\n  }\n\n  /**\n   * Convert genes to optimization variables\n   */\n  private genesToVariables(genes: (number | string)[], variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\n    return variableTemplates.map((template, index) => ({\n      ...template,\n      currentValue: genes[index]\n    }));\n  }\n\n  /**\n   * Evolve one generation\n   */\n  private async evolveGeneration(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    // Selection\n    const parents = this.selection();\n    \n    // Crossover and mutation\n    const offspring: Individual[] = [];\n    \n    for (let i = 0; i < parents.length; i += 2) {\n      const parent1 = parents[i];\n      const parent2 = parents[i + 1] || parents[0]; // Handle odd population sizes\n      \n      let child1 = this.createChild(parent1);\n      let child2 = this.createChild(parent2);\n      \n      // Crossover\n      if (this.random() < this.parameters.crossoverRate) {\n        [child1, child2] = this.crossover(parent1, parent2, problem);\n      }\n      \n      // Mutation\n      if (this.random() < this.parameters.mutationRate) {\n        child1 = this.mutate(child1, problem);\n      }\n      if (this.random() < this.parameters.mutationRate) {\n        child2 = this.mutate(child2, problem);\n      }\n      \n      offspring.push(child1, child2);\n    }\n    \n    // Evaluate offspring\n    for (const child of offspring) {\n      await this.evaluateIndividual(child, problem, objectiveFunction, constraintFunctions);\n    }\n    \n    // Replacement\n    this.replacement(offspring);\n    \n    // Update age\n    this.population.forEach(individual => individual.age++);\n    \n    this.generation++;\n    this.updateBestIndividual();\n    this.updateParetoFront();\n  }\n\n  /**\n   * Selection operator\n   */\n  private selection(): Individual[] {\n    switch (this.parameters.selectionMethod) {\n      case 'tournament':\n        return this.tournamentSelection();\n      case 'roulette':\n        return this.rouletteWheelSelection();\n      case 'rank':\n        return this.rankSelection();\n      case 'random':\n        return this.randomSelection();\n      default:\n        return this.tournamentSelection();\n    }\n  }\n\n  /**\n   * Tournament selection\n   */\n  private tournamentSelection(): Individual[] {\n    const selected: Individual[] = [];\n    const tournamentSize = this.parameters.tournamentSize || 3;\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const tournament: Individual[] = [];\n      \n      for (let j = 0; j < tournamentSize; j++) {\n        const randomIndex = Math.floor(this.random() * this.population.length);\n        tournament.push(this.population[randomIndex]);\n      }\n      \n      // Select best from tournament\n      tournament.sort((a, b) => a.fitness - b.fitness);\n      selected.push(tournament[0]);\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Roulette wheel selection\n   */\n  private rouletteWheelSelection(): Individual[] {\n    const selected: Individual[] = [];\n    \n    // Calculate fitness sum (handle minimization by inverting fitness)\n    const maxFitness = Math.max(...this.population.map(ind => ind.fitness));\n    const adjustedFitness = this.population.map(ind => maxFitness - ind.fitness + 1);\n    const totalFitness = adjustedFitness.reduce((sum, fitness) => sum + fitness, 0);\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const randomValue = this.random() * totalFitness;\n      let cumulativeFitness = 0;\n      \n      for (let j = 0; j < this.population.length; j++) {\n        cumulativeFitness += adjustedFitness[j];\n        if (cumulativeFitness >= randomValue) {\n          selected.push(this.population[j]);\n          break;\n        }\n      }\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Rank selection\n   */\n  private rankSelection(): Individual[] {\n    const selected: Individual[] = [];\n    \n    // Sort population by fitness\n    const sortedPopulation = [...this.population].sort((a, b) => a.fitness - b.fitness);\n    \n    // Assign ranks (best = highest rank)\n    const ranks = sortedPopulation.map((_, index) => index + 1);\n    const totalRank = ranks.reduce((sum, rank) => sum + rank, 0);\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const randomValue = this.random() * totalRank;\n      let cumulativeRank = 0;\n      \n      for (let j = 0; j < ranks.length; j++) {\n        cumulativeRank += ranks[j];\n        if (cumulativeRank >= randomValue) {\n          selected.push(sortedPopulation[j]);\n          break;\n        }\n      }\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Random selection\n   */\n  private randomSelection(): Individual[] {\n    const selected: Individual[] = [];\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const randomIndex = Math.floor(this.random() * this.population.length);\n      selected.push(this.population[randomIndex]);\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Crossover operator\n   */\n  private crossover(parent1: Individual, parent2: Individual, problem: OptimizationProblem): [Individual, Individual] {\n    switch (this.parameters.crossoverMethod) {\n      case 'single_point':\n        return this.singlePointCrossover(parent1, parent2);\n      case 'two_point':\n        return this.twoPointCrossover(parent1, parent2);\n      case 'uniform':\n        return this.uniformCrossover(parent1, parent2);\n      case 'arithmetic':\n        return this.arithmeticCrossover(parent1, parent2);\n      default:\n        return this.twoPointCrossover(parent1, parent2);\n    }\n  }\n\n  /**\n   * Single point crossover\n   */\n  private singlePointCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const crossoverPoint = Math.floor(this.random() * parent1.genes.length);\n    \n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = [\n      ...parent1.genes.slice(0, crossoverPoint),\n      ...parent2.genes.slice(crossoverPoint)\n    ];\n    \n    child2.genes = [\n      ...parent2.genes.slice(0, crossoverPoint),\n      ...parent1.genes.slice(crossoverPoint)\n    ];\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Two point crossover\n   */\n  private twoPointCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const point1 = Math.floor(this.random() * parent1.genes.length);\n    const point2 = Math.floor(this.random() * parent1.genes.length);\n    const [start, end] = [Math.min(point1, point2), Math.max(point1, point2)];\n    \n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = [\n      ...parent1.genes.slice(0, start),\n      ...parent2.genes.slice(start, end),\n      ...parent1.genes.slice(end)\n    ];\n    \n    child2.genes = [\n      ...parent2.genes.slice(0, start),\n      ...parent1.genes.slice(start, end),\n      ...parent2.genes.slice(end)\n    ];\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Uniform crossover\n   */\n  private uniformCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = parent1.genes.map((gene, index) => \n      this.random() < 0.5 ? gene : parent2.genes[index]\n    );\n    \n    child2.genes = parent2.genes.map((gene, index) => \n      this.random() < 0.5 ? gene : parent1.genes[index]\n    );\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Arithmetic crossover (for continuous variables)\n   */\n  private arithmeticCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const alpha = this.random();\n    \n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = parent1.genes.map((gene, index) => {\n      if (typeof gene === 'number' && typeof parent2.genes[index] === 'number') {\n        return alpha * gene + (1 - alpha) * (parent2.genes[index] as number);\n      }\n      return gene;\n    });\n    \n    child2.genes = parent2.genes.map((gene, index) => {\n      if (typeof gene === 'number' && typeof parent1.genes[index] === 'number') {\n        return alpha * gene + (1 - alpha) * (parent1.genes[index] as number);\n      }\n      return gene;\n    });\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Mutation operator\n   */\n  private mutate(individual: Individual, problem: OptimizationProblem): Individual {\n    const mutated = this.createChild(individual);\n    \n    for (let i = 0; i < mutated.genes.length; i++) {\n      if (this.random() < this.parameters.mutationRate) {\n        mutated.genes[i] = this.mutateGene(mutated.genes[i], problem.variables[i]);\n      }\n    }\n    \n    return mutated;\n  }\n\n  /**\n   * Mutate a single gene\n   */\n  private mutateGene(gene: number | string, variable: OptimizationVariable): number | string {\n    if (variable.discreteValues && variable.discreteValues.length > 0) {\n      // Discrete variable - random selection\n      const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n      return variable.discreteValues[randomIndex];\n    } else if (typeof gene === 'number') {\n      // Continuous variable\n      const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n      const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n      \n      switch (this.parameters.mutationMethod) {\n        case 'gaussian':\n          return this.gaussianMutation(gene, min, max);\n        case 'uniform':\n          return this.uniformMutation(min, max);\n        case 'polynomial':\n          return this.polynomialMutation(gene, min, max);\n        default:\n          return this.gaussianMutation(gene, min, max);\n      }\n    }\n    \n    return gene;\n  }\n\n  /**\n   * Gaussian mutation\n   */\n  private gaussianMutation(value: number, min: number, max: number): number {\n    const sigma = (max - min) * 0.1; // 10% of range\n    const mutated = value + this.gaussianRandom() * sigma;\n    return Math.max(min, Math.min(max, mutated));\n  }\n\n  /**\n   * Uniform mutation\n   */\n  private uniformMutation(min: number, max: number): number {\n    return min + this.random() * (max - min);\n  }\n\n  /**\n   * Polynomial mutation\n   */\n  private polynomialMutation(value: number, min: number, max: number): number {\n    const eta = 20; // Distribution index\n    const delta1 = (value - min) / (max - min);\n    const delta2 = (max - value) / (max - min);\n    const rnd = this.random();\n    \n    let deltaq: number;\n    if (rnd <= 0.5) {\n      const xy = 1.0 - delta1;\n      const val = 2.0 * rnd + (1.0 - 2.0 * rnd) * Math.pow(xy, eta + 1.0);\n      deltaq = Math.pow(val, 1.0 / (eta + 1.0)) - 1.0;\n    } else {\n      const xy = 1.0 - delta2;\n      const val = 2.0 * (1.0 - rnd) + 2.0 * (rnd - 0.5) * Math.pow(xy, eta + 1.0);\n      deltaq = 1.0 - Math.pow(val, 1.0 / (eta + 1.0));\n    }\n    \n    const mutated = value + deltaq * (max - min);\n    return Math.max(min, Math.min(max, mutated));\n  }\n\n  /**\n   * Replacement strategy\n   */\n  private replacement(offspring: Individual[]): void {\n    // Combine population and offspring\n    const combined = [...this.population, ...offspring];\n    \n    // Sort by fitness\n    combined.sort((a, b) => a.fitness - b.fitness);\n    \n    // Keep best individuals (elitism)\n    this.population = combined.slice(0, this.parameters.populationSize);\n  }\n\n  /**\n   * Update best individual\n   */\n  private updateBestIndividual(): void {\n    const best = this.population.reduce((best, current) => \n      current.fitness < best.fitness ? current : best\n    );\n    \n    if (!this.bestIndividual || best.fitness < this.bestIndividual.fitness) {\n      this.bestIndividual = { ...best };\n    }\n  }\n\n  /**\n   * Update Pareto front for multi-objective optimization\n   */\n  private updateParetoFront(): void {\n    // Implementation for Pareto front calculation\n    // This is a simplified version - full NSGA-II implementation would be more complex\n    this.paretoFront = this.population.filter(ind => ind.feasible);\n  }\n\n  /**\n   * Update optimization history\n   */\n  private updateHistory(): void {\n    const feasiblePopulation = this.population.filter(ind => ind.feasible);\n    const fitnesses = feasiblePopulation.map(ind => ind.fitness);\n    \n    if (fitnesses.length === 0) {\n      fitnesses.push(Number.MAX_VALUE);\n    }\n    \n    const history: IterationHistory = {\n      iteration: this.generation,\n      bestFitness: Math.min(...fitnesses),\n      averageFitness: fitnesses.reduce((sum, f) => sum + f, 0) / fitnesses.length,\n      worstFitness: Math.max(...fitnesses),\n      diversity: this.calculateDiversity(),\n      constraintViolations: this.population.filter(ind => !ind.feasible).length,\n      timestamp: new Date()\n    };\n    \n    this.history.push(history);\n  }\n\n  /**\n   * Calculate population diversity\n   */\n  private calculateDiversity(): number {\n    if (this.population.length < 2) return 0;\n    \n    let totalDistance = 0;\n    let pairCount = 0;\n    \n    for (let i = 0; i < this.population.length; i++) {\n      for (let j = i + 1; j < this.population.length; j++) {\n        const distance = this.calculateDistance(this.population[i], this.population[j]);\n        totalDistance += distance;\n        pairCount++;\n      }\n    }\n    \n    return pairCount > 0 ? totalDistance / pairCount : 0;\n  }\n\n  /**\n   * Calculate distance between two individuals\n   */\n  private calculateDistance(ind1: Individual, ind2: Individual): number {\n    let distance = 0;\n    \n    for (let i = 0; i < ind1.genes.length; i++) {\n      if (typeof ind1.genes[i] === 'number' && typeof ind2.genes[i] === 'number') {\n        const diff = (ind1.genes[i] as number) - (ind2.genes[i] as number);\n        distance += diff * diff;\n      }\n    }\n    \n    return Math.sqrt(distance);\n  }\n\n  /**\n   * Check termination criteria\n   */\n  private shouldTerminate(problem: OptimizationProblem): boolean {\n    // Maximum generations\n    if (this.generation >= this.parameters.maxGenerations) {\n      return true;\n    }\n    \n    // Convergence check\n    if (this.history.length >= 10) {\n      const recentHistory = this.history.slice(-10);\n      const fitnessImprovement = recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness;\n      \n      if (Math.abs(fitnessImprovement) < problem.convergenceCriteria.toleranceValue) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n\n  /**\n   * Adapt algorithm parameters during evolution\n   */\n  private adaptParameters(): void {\n    // Adaptive mutation rate based on diversity\n    const diversity = this.calculateDiversity();\n    const diversityThreshold = 0.1;\n    \n    if (diversity < diversityThreshold) {\n      this.parameters.mutationRate = Math.min(0.5, this.parameters.mutationRate * 1.1);\n    } else {\n      this.parameters.mutationRate = Math.max(0.01, this.parameters.mutationRate * 0.9);\n    }\n  }\n\n  /**\n   * Create optimization result\n   */\n  private createOptimizationResult(problem: OptimizationProblem, startTime: number): OptimizationResult {\n    const executionTime = performance.now() - startTime;\n    \n    // Convert best individual to optimization solution\n    const bestSolution: OptimizationSolution = {\n      id: this.bestIndividual?.id || 'no_solution',\n      variables: {},\n      objectiveValues: {},\n      constraintViolations: [],\n      feasible: this.bestIndividual?.feasible || false,\n      fitness: this.bestIndividual?.fitness || Number.MAX_VALUE,\n      systemConfiguration: problem.systemConfiguration, // Would be updated with optimized values\n      performanceMetrics: {} as SolutionPerformanceMetrics\n    };\n    \n    // Convert variables\n    if (this.bestIndividual) {\n      problem.variables.forEach((variable, index) => {\n        bestSolution.variables[variable.id] = this.bestIndividual!.genes[index];\n      });\n      \n      // Convert objectives\n      problem.objectives.objectives.forEach((objective, index) => {\n        bestSolution.objectiveValues[objective.id] = this.bestIndividual!.objectiveValues[index] || 0;\n      });\n    }\n    \n    const statistics: OptimizationStatistics = {\n      totalIterations: this.generation,\n      totalEvaluations: this.evaluationCount,\n      convergenceIteration: this.generation,\n      executionTime,\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\n      diversityHistory: this.history.map(h => h.diversity),\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\n      algorithmSpecificStats: {\n        populationSize: this.parameters.populationSize,\n        finalMutationRate: this.parameters.mutationRate,\n        finalCrossoverRate: this.parameters.crossoverRate\n      }\n    };\n    \n    const optimizationHistory: OptimizationHistory = {\n      iterations: this.history,\n      populationHistory: [],\n      parameterHistory: [],\n      convergenceMetrics: []\n    };\n    \n    return {\n      problemId: problem.id,\n      status: OptimizationStatus.CONVERGED,\n      bestSolution,\n      paretoFront: [], // Would include Pareto solutions for multi-objective\n      statistics,\n      history: optimizationHistory,\n      analysis: {},\n      recommendations: [],\n      warnings: [],\n      errors: []\n    };\n  }\n\n  // Utility methods\n  private createChild(parent: Individual): Individual {\n    return {\n      id: this.generateIndividualId(),\n      genes: [...parent.genes],\n      fitness: 0,\n      objectiveValues: [],\n      constraintViolations: [],\n      feasible: true,\n      age: 0\n    };\n  }\n\n  private generateIndividualId(): string {\n    return `ind_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private createSeededRandom(seed: number): () => number {\n    let state = seed;\n    return () => {\n      state = (state * 9301 + 49297) % 233280;\n      return state / 233280;\n    };\n  }\n\n  private gaussianRandom(): number {\n    // Box-Muller transform for Gaussian random numbers\n    const u1 = this.random();\n    const u2 = this.random();\n    return Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;AAAA;AAAA,SAAAA,ccAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;;;;;;;;;;;;;;;;AAcA,MAAAgC,yBAAA;AAAA;AAAA,CAAAjC,aAAA,GAAAoB,CAAA,OAAAc,OAAA;AAgDA;;;AAGA,MAAaC,gBAAgB;EAU3BC,YAAYC,UAAgD;IAAA;IAAArC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAPpD,KAAAkB,cAAc,GAAsB,IAAI;IAAC;IAAAtC,aAAA,GAAAoB,CAAA;IACzC,KAAAmB,WAAW,GAAiB,EAAE;IAAC;IAAAvC,aAAA,GAAAoB,CAAA;IAC/B,KAAAoB,UAAU,GAAW,CAAC;IAAC;IAAAxC,aAAA,GAAAoB,CAAA;IACvB,KAAAqB,eAAe,GAAW,CAAC;IAAC;IAAAzC,aAAA,GAAAoB,CAAA;IAC5B,KAAAsB,OAAO,GAAuB,EAAE;IAAC;IAAA1C,aAAA,GAAAoB,CAAA;IAIvC,IAAI,CAACiB,UAAU,GAAG;MAChBM,cAAc,EAAE,EAAE;MAClBC,cAAc,EAAE,GAAG;MACnBC,aAAa,EAAE,GAAG;MAClBC,YAAY,EAAE,GAAG;MACjBC,SAAS,EAAE,CAAC;MACZC,eAAe,EAAE,YAAY;MAC7BC,eAAe,EAAE,WAAW;MAC5BC,cAAc,EAAE,UAAU;MAC1BC,cAAc,EAAE,CAAC;MACjBC,oBAAoB,EAAE,IAAI;MAC1BC,kBAAkB,EAAE,SAAS;MAC7BC,kBAAkB,EAAE,IAAI;MACxBC,kBAAkB,EAAE,IAAI;MACxBC,kBAAkB,EAAE,KAAK;MACzB,GAAGnB;KACJ;IAED;IAAA;IAAArC,aAAA,GAAAoB,CAAA;IACA,IAAI,IAAI,CAACiB,UAAU,CAACoB,SAAS,KAAKtC,SAAS,EAAE;MAAA;MAAAnB,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC3C,IAAI,CAACsC,MAAM,GAAG,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACtB,UAAU,CAACoB,SAAS,CAAC;IAClE,CAAC,MAAM;MAAA;MAAAzD,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACL,IAAI,CAACsC,MAAM,GAAGE,IAAI,CAACF,MAAM;IAC3B;IAAC;IAAA1D,aAAA,GAAAoB,CAAA;IAED,IAAI,CAACyC,UAAU,GAAG,EAAE;EACtB;EAEA;;;EAGO,MAAMC,QAAQA,CACnBC,OAA4B,EAC5BC,iBAAwC,EACxCC,mBAA6C;IAAA;IAAAjE,aAAA,GAAAqB,CAAA;IAE7C,MAAM6C,SAAS;IAAA;IAAA,CAAAlE,aAAA,GAAAoB,CAAA,QAAG+C,WAAW,CAACC,GAAG,EAAE;IAAC;IAAApE,aAAA,GAAAoB,CAAA;IAEpC,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAI,CAACiD,mBAAmB,CAACN,OAAO,CAAC;MAEjC;MAAA;MAAA/D,aAAA,GAAAoB,CAAA;MACA,MAAM,IAAI,CAACkD,uBAAuB,CAACP,OAAO,EAAEC,iBAAiB,EAAEC,mBAAmB,CAAC;MAEnF;MAAA;MAAAjE,aAAA,GAAAoB,CAAA;MACA,OAAO,CAAC,IAAI,CAACmD,eAAe,CAACR,OAAO,CAAC,EAAE;QAAA;QAAA/D,aAAA,GAAAoB,CAAA;QACrC,MAAM,IAAI,CAACoD,gBAAgB,CAACT,OAAO,EAAEC,iBAAiB,EAAEC,mBAAmB,CAAC;QAAC;QAAAjE,aAAA,GAAAoB,CAAA;QAC7E,IAAI,CAACqD,aAAa,EAAE;QAAC;QAAAzE,aAAA,GAAAoB,CAAA;QAErB,IAAI,IAAI,CAACiB,UAAU,CAACkB,kBAAkB,EAAE;UAAA;UAAAvD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACtC,IAAI,CAACsD,eAAe,EAAE;QACxB,CAAC;QAAA;QAAA;UAAA1E,aAAA,GAAAsB,CAAA;QAAA;MACH;MAEA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACA,OAAO,IAAI,CAACuD,wBAAwB,CAACZ,OAAO,EAAEG,SAAS,CAAC;IAE1D,CAAC,CAAC,OAAOU,KAAK,EAAE;MAAA;MAAA5E,aAAA,GAAAoB,CAAA;MACdyD,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAAC;MAAA5E,aAAA,GAAAoB,CAAA;MAC/D,MAAMwD,KAAK;IACb;EACF;EAEA;;;EAGQP,mBAAmBA,CAACN,OAA4B;IAAA;IAAA/D,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACtD,IAAI,CAACoB,UAAU,GAAG,CAAC;IAAC;IAAAxC,aAAA,GAAAoB,CAAA;IACpB,IAAI,CAACqB,eAAe,GAAG,CAAC;IAAC;IAAAzC,aAAA,GAAAoB,CAAA;IACzB,IAAI,CAACyC,UAAU,GAAG,EAAE;IAAC;IAAA7D,aAAA,GAAAoB,CAAA;IACrB,IAAI,CAACkB,cAAc,GAAG,IAAI;IAAC;IAAAtC,aAAA,GAAAoB,CAAA;IAC3B,IAAI,CAACmB,WAAW,GAAG,EAAE;IAAC;IAAAvC,aAAA,GAAAoB,CAAA;IACtB,IAAI,CAACsB,OAAO,GAAG,EAAE;IAAC;IAAA1C,aAAA,GAAAoB,CAAA;IAElByD,OAAO,CAACC,GAAG,CAAC,wDAAwD,IAAI,CAACzC,UAAU,CAACM,cAAc,EAAE,CAAC;EACvG;EAEA;;;EAGQ,MAAM2B,uBAAuBA,CACnCP,OAA4B,EAC5BC,iBAAwC,EACxCC,mBAA6C;IAAA;IAAAjE,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAE7C,IAAI,CAACyC,UAAU,GAAG,EAAE;IAAC;IAAA7D,aAAA,GAAAoB,CAAA;IAErB,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,QAAG,CAAC,GAAE2D,CAAC,GAAG,IAAI,CAAC1C,UAAU,CAACM,cAAc,EAAEoC,CAAC,EAAE,EAAE;MACvD,MAAMC,UAAU;MAAA;MAAA,CAAAhF,aAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC6D,sBAAsB,CAAClB,OAAO,CAAC;MAAC;MAAA/D,aAAA,GAAAoB,CAAA;MACxD,MAAM,IAAI,CAAC8D,kBAAkB,CAACF,UAAU,EAAEjB,OAAO,EAAEC,iBAAiB,EAAEC,mBAAmB,CAAC;MAAC;MAAAjE,aAAA,GAAAoB,CAAA;MAC3F,IAAI,CAACyC,UAAU,CAACsB,IAAI,CAACH,UAAU,CAAC;IAClC;IAAC;IAAAhF,aAAA,GAAAoB,CAAA;IAED,IAAI,CAACgE,oBAAoB,EAAE;IAAC;IAAApF,aAAA,GAAAoB,CAAA;IAC5B,IAAI,CAACiE,iBAAiB,EAAE;EAC1B;EAEA;;;EAGQJ,sBAAsBA,CAAClB,OAA4B;IAAA;IAAA/D,aAAA,GAAAqB,CAAA;IACzD,MAAMiE,KAAK;IAAA;IAAA,CAAAtF,aAAA,GAAAoB,CAAA,QAAwB,EAAE;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAEtC,KAAK,MAAMmE,QAAQ,IAAIxB,OAAO,CAACyB,SAAS,EAAE;MAAA;MAAAxF,aAAA,GAAAoB,CAAA;MACxC;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,UAAAiE,QAAQ,CAACE,cAAc;MAAA;MAAA,CAAAzF,aAAA,GAAAsB,CAAA,UAAIiE,QAAQ,CAACE,cAAc,CAACC,MAAM,GAAG,CAAC,GAAE;QAAA;QAAA1F,aAAA,GAAAsB,CAAA;QACjE;QACA,MAAMqE,WAAW;QAAA;QAAA,CAAA3F,aAAA,GAAAoB,CAAA,QAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAG6B,QAAQ,CAACE,cAAc,CAACC,MAAM,CAAC;QAAC;QAAA1F,aAAA,GAAAoB,CAAA;QAC/EkE,KAAK,CAACH,IAAI,CAACI,QAAQ,CAACE,cAAc,CAACE,WAAW,CAAC,CAAC;MAClD,CAAC,MAAM;QAAA;QAAA3F,aAAA,GAAAsB,CAAA;QACL;QACA,MAAMuE,GAAG;QAAA;QAAA,CAAA7F,aAAA,GAAAoB,CAAA,QAAG,OAAOmE,QAAQ,CAACO,MAAM,CAACC,OAAO,KAAK,QAAQ;QAAA;QAAA,CAAA/F,aAAA,GAAAsB,CAAA,UAAGiE,QAAQ,CAACO,MAAM,CAACC,OAAO;QAAA;QAAA,CAAA/F,aAAA,GAAAsB,CAAA,UAAG,CAAC;QACrF,MAAM0E,GAAG;QAAA;QAAA,CAAAhG,aAAA,GAAAoB,CAAA,QAAG,OAAOmE,QAAQ,CAACO,MAAM,CAACG,OAAO,KAAK,QAAQ;QAAA;QAAA,CAAAjG,aAAA,GAAAsB,CAAA,UAAGiE,QAAQ,CAACO,MAAM,CAACG,OAAO;QAAA;QAAA,CAAAjG,aAAA,GAAAsB,CAAA,UAAG,CAAC;QACrF,MAAM4E,KAAK;QAAA;QAAA,CAAAlG,aAAA,GAAAoB,CAAA,QAAGyE,GAAG,GAAG,IAAI,CAACnC,MAAM,EAAE,IAAIsC,GAAG,GAAGH,GAAG,CAAC;QAAC;QAAA7F,aAAA,GAAAoB,CAAA;QAChDkE,KAAK,CAACH,IAAI,CAACe,KAAK,CAAC;MACnB;IACF;IAAC;IAAAlG,aAAA,GAAAoB,CAAA;IAED,OAAO;MACL+E,EAAE,EAAE,IAAI,CAACC,oBAAoB,EAAE;MAC/Bd,KAAK;MACLe,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE,EAAE;MACnBC,oBAAoB,EAAE,EAAE;MACxBC,QAAQ,EAAE,IAAI;MACdC,GAAG,EAAE;KACN;EACH;EAEA;;;EAGQ,MAAMvB,kBAAkBA,CAC9BF,UAAsB,EACtBjB,OAA4B,EAC5BC,iBAAwC,EACxCC,mBAA6C;IAAA;IAAAjE,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAE7C,IAAI;MACF;MACA,MAAMoE,SAAS;MAAA;MAAA,CAAAxF,aAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsF,gBAAgB,CAAC1B,UAAU,CAACM,KAAK,EAAEvB,OAAO,CAACyB,SAAS,CAAC;MAE5E;MAAA;MAAAxF,aAAA,GAAAoB,CAAA;MACA,IAAI2C,OAAO,CAAC4C,UAAU,CAACA,UAAU,CAACjB,MAAM,KAAK,CAAC,EAAE;QAAA;QAAA1F,aAAA,GAAAsB,CAAA;QAC9C;QACA,MAAMsF,cAAc;QAAA;QAAA,CAAA5G,aAAA,GAAAoB,CAAA,QAAG4C,iBAAiB,CAACwB,SAAS,CAAC;QAAC;QAAAxF,aAAA,GAAAoB,CAAA;QACpD4D,UAAU,CAACsB,eAAe,GAAG,CAACM,cAAc,CAAC;QAAC;QAAA5G,aAAA,GAAAoB,CAAA;QAC9C4D,UAAU,CAACqB,OAAO,GAAGO,cAAc;MACrC,CAAC,MAAM;QAAA;QAAA5G,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACL;QACA4D,UAAU,CAACsB,eAAe,GAAG,EAAE;QAAC;QAAAtG,aAAA,GAAAoB,CAAA;QAChC,KAAK,MAAMyF,SAAS,IAAI9C,OAAO,CAAC4C,UAAU,CAACA,UAAU,EAAE;UACrD,MAAMT,KAAK;UAAA;UAAA,CAAAlG,aAAA,GAAAoB,CAAA,QAAGyF,SAAS,CAACC,kBAAkB,CAACtB,SAAS,CAAC;UAAC;UAAAxF,aAAA,GAAAoB,CAAA;UACtD4D,UAAU,CAACsB,eAAe,CAACnB,IAAI,CAACe,KAAK,CAAC;QACxC;QACA;QAAA;QAAAlG,aAAA,GAAAoB,CAAA;QACA4D,UAAU,CAACqB,OAAO,GAAG,CAAC;MACxB;MAEA;MAAA;MAAArG,aAAA,GAAAoB,CAAA;MACA4D,UAAU,CAACuB,oBAAoB,GAAG,EAAE;MAAC;MAAAvG,aAAA,GAAAoB,CAAA;MACrC,KAAK,MAAM2F,kBAAkB,IAAI9C,mBAAmB,EAAE;QACpD,MAAM+C,SAAS;QAAA;QAAA,CAAAhH,aAAA,GAAAoB,CAAA,QAAG2F,kBAAkB,CAACvB,SAAS,CAAC;QAAC;QAAAxF,aAAA,GAAAoB,CAAA;QAChD4D,UAAU,CAACuB,oBAAoB,CAACpB,IAAI,CAAC6B,SAAS,CAAC;MACjD;MAEA;MAAA;MAAAhH,aAAA,GAAAoB,CAAA;MACA4D,UAAU,CAACwB,QAAQ,GAAGxB,UAAU,CAACuB,oBAAoB,CAACU,KAAK,CAACC,CAAC,IAAI;QAAA;QAAAlH,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAA8F,CAAC,IAAI,CAAC;MAAD,CAAC,CAAC;MAExE;MAAA;MAAAlH,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAC0D,UAAU,CAACwB,QAAQ;MAAA;MAAA,CAAAxG,aAAA,GAAAsB,CAAA,UAAI,IAAI,CAACe,UAAU,CAACgB,kBAAkB,KAAK,SAAS,GAAE;QAAA;QAAArD,aAAA,GAAAsB,CAAA;QAC5E,MAAM6F,OAAO;QAAA;QAAA,CAAAnH,aAAA,GAAAoB,CAAA,QAAG4D,UAAU,CAACuB,oBAAoB,CAC5Ca,MAAM,CAACF,CAAC,IAAI;UAAA;UAAAlH,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAA8F,CAAC,GAAG,CAAC;QAAD,CAAC,CAAC,CAClBG,MAAM,CAAC,CAACC,GAAG,EAAEJ,CAAC,KAAK;UAAA;UAAAlH,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAkG,GAAG,GAAGJ,CAAC;QAAD,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC7E,UAAU,CAACiB,kBAAkB;QAAC;QAAAtD,aAAA,GAAAoB,CAAA;QAEvE,IAAI2C,OAAO,CAAC4C,UAAU,CAACA,UAAU,CAACjB,MAAM,KAAK,CAAC,EAAE;UAAA;UAAA1F,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAC9C4D,UAAU,CAACqB,OAAO,IAAIc,OAAO;QAC/B,CAAC,MAAM;UAAA;UAAAnH,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACL;UACA4D,UAAU,CAACsB,eAAe,GAAGtB,UAAU,CAACsB,eAAe,CAACiB,GAAG,CAACL,CAAC,IAAI;YAAA;YAAAlH,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAoB,CAAA;YAAA,OAAA8F,CAAC,GAAGC,OAAO;UAAP,CAAO,CAAC;QAC/E;MACF,CAAC;MAAA;MAAA;QAAAnH,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED,IAAI,CAACqB,eAAe,EAAE;IAExB,CAAC,CAAC,OAAOmC,KAAK,EAAE;MAAA;MAAA5E,aAAA,GAAAoB,CAAA;MACdyD,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MAAC;MAAA5E,aAAA,GAAAoB,CAAA;MACrD4D,UAAU,CAACqB,OAAO,GAAGmB,MAAM,CAACC,SAAS;MAAC;MAAAzH,aAAA,GAAAoB,CAAA;MACtC4D,UAAU,CAACwB,QAAQ,GAAG,KAAK;IAC7B;EACF;EAEA;;;EAGQE,gBAAgBA,CAACpB,KAA0B,EAAEoC,iBAAyC;IAAA;IAAA1H,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC5F,OAAOsG,iBAAiB,CAACH,GAAG,CAAC,CAACI,QAAQ,EAAEC,KAAK,KAAM;MAAA;MAAA5H,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA;QACjD,GAAGuG,QAAQ;QACXE,YAAY,EAAEvC,KAAK,CAACsC,KAAK;OAC1B;KAAC,CAAC;EACL;EAEA;;;EAGQ,MAAMpD,gBAAgBA,CAC5BT,OAA4B,EAC5BC,iBAAwC,EACxCC,mBAA6C;IAAA;IAAAjE,aAAA,GAAAqB,CAAA;IAE7C;IACA,MAAMyG,OAAO;IAAA;IAAA,CAAA9H,aAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC2G,SAAS,EAAE;IAEhC;IACA,MAAMC,SAAS;IAAA;IAAA,CAAAhI,aAAA,GAAAoB,CAAA,QAAiB,EAAE;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAEnC,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,QAAG,CAAC,GAAE2D,CAAC,GAAG+C,OAAO,CAACpC,MAAM,EAAEX,CAAC,IAAI,CAAC,EAAE;MAC1C,MAAMkD,OAAO;MAAA;MAAA,CAAAjI,aAAA,GAAAoB,CAAA,QAAG0G,OAAO,CAAC/C,CAAC,CAAC;MAC1B,MAAMmD,OAAO;MAAA;MAAA,CAAAlI,aAAA,GAAAoB,CAAA;MAAG;MAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAAwG,OAAO,CAAC/C,CAAC,GAAG,CAAC,CAAC;MAAA;MAAA,CAAA/E,aAAA,GAAAsB,CAAA,WAAIwG,OAAO,CAAC,CAAC,CAAC,GAAC,CAAC;MAE9C,IAAIK,MAAM;MAAA;MAAA,CAAAnI,aAAA,GAAAoB,CAAA,QAAG,IAAI,CAACgH,WAAW,CAACH,OAAO,CAAC;MACtC,IAAII,MAAM;MAAA;MAAA,CAAArI,aAAA,GAAAoB,CAAA,QAAG,IAAI,CAACgH,WAAW,CAACF,OAAO,CAAC;MAEtC;MAAA;MAAAlI,aAAA,GAAAoB,CAAA;MACA,IAAI,IAAI,CAACsC,MAAM,EAAE,GAAG,IAAI,CAACrB,UAAU,CAACQ,aAAa,EAAE;QAAA;QAAA7C,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACjD,CAAC+G,MAAM,EAAEE,MAAM,CAAC,GAAG,IAAI,CAACC,SAAS,CAACL,OAAO,EAAEC,OAAO,EAAEnE,OAAO,CAAC;MAC9D,CAAC;MAAA;MAAA;QAAA/D,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA,IAAI,IAAI,CAACsC,MAAM,EAAE,GAAG,IAAI,CAACrB,UAAU,CAACS,YAAY,EAAE;QAAA;QAAA9C,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAChD+G,MAAM,GAAG,IAAI,CAACI,MAAM,CAACJ,MAAM,EAAEpE,OAAO,CAAC;MACvC,CAAC;MAAA;MAAA;QAAA/D,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACD,IAAI,IAAI,CAACsC,MAAM,EAAE,GAAG,IAAI,CAACrB,UAAU,CAACS,YAAY,EAAE;QAAA;QAAA9C,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAChDiH,MAAM,GAAG,IAAI,CAACE,MAAM,CAACF,MAAM,EAAEtE,OAAO,CAAC;MACvC,CAAC;MAAA;MAAA;QAAA/D,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED4G,SAAS,CAAC7C,IAAI,CAACgD,MAAM,EAAEE,MAAM,CAAC;IAChC;IAEA;IAAA;IAAArI,aAAA,GAAAoB,CAAA;IACA,KAAK,MAAMoH,KAAK,IAAIR,SAAS,EAAE;MAAA;MAAAhI,aAAA,GAAAoB,CAAA;MAC7B,MAAM,IAAI,CAAC8D,kBAAkB,CAACsD,KAAK,EAAEzE,OAAO,EAAEC,iBAAiB,EAAEC,mBAAmB,CAAC;IACvF;IAEA;IAAA;IAAAjE,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACqH,WAAW,CAACT,SAAS,CAAC;IAE3B;IAAA;IAAAhI,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACyC,UAAU,CAAC6E,OAAO,CAAC1D,UAAU,IAAI;MAAA;MAAAhF,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA4D,UAAU,CAACyB,GAAG,EAAE;IAAF,CAAE,CAAC;IAAC;IAAAzG,aAAA,GAAAoB,CAAA;IAExD,IAAI,CAACoB,UAAU,EAAE;IAAC;IAAAxC,aAAA,GAAAoB,CAAA;IAClB,IAAI,CAACgE,oBAAoB,EAAE;IAAC;IAAApF,aAAA,GAAAoB,CAAA;IAC5B,IAAI,CAACiE,iBAAiB,EAAE;EAC1B;EAEA;;;EAGQ0C,SAASA,CAAA;IAAA;IAAA/H,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACf,QAAQ,IAAI,CAACiB,UAAU,CAACW,eAAe;MACrC,KAAK,YAAY;QAAA;QAAAhD,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACf,OAAO,IAAI,CAACuH,mBAAmB,EAAE;MACnC,KAAK,UAAU;QAAA;QAAA3I,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACb,OAAO,IAAI,CAACwH,sBAAsB,EAAE;MACtC,KAAK,MAAM;QAAA;QAAA5I,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACT,OAAO,IAAI,CAACyH,aAAa,EAAE;MAC7B,KAAK,QAAQ;QAAA;QAAA7I,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACX,OAAO,IAAI,CAAC0H,eAAe,EAAE;MAC/B;QAAA;QAAA9I,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACE,OAAO,IAAI,CAACuH,mBAAmB,EAAE;IACrC;EACF;EAEA;;;EAGQA,mBAAmBA,CAAA;IAAA;IAAA3I,aAAA,GAAAqB,CAAA;IACzB,MAAM0H,QAAQ;IAAA;IAAA,CAAA/I,aAAA,GAAAoB,CAAA,SAAiB,EAAE;IACjC,MAAM+B,cAAc;IAAA;IAAA,CAAAnD,aAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,aAAA,GAAAsB,CAAA,eAAI,CAACe,UAAU,CAACc,cAAc;IAAA;IAAA,CAAAnD,aAAA,GAAAsB,CAAA,WAAI,CAAC;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAE3D,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG,IAAI,CAAC1C,UAAU,CAACM,cAAc,EAAEoC,CAAC,EAAE,EAAE;MACvD,MAAMiE,UAAU;MAAA;MAAA,CAAAhJ,aAAA,GAAAoB,CAAA,SAAiB,EAAE;MAAC;MAAApB,aAAA,GAAAoB,CAAA;MAEpC,KAAK,IAAI6H,CAAC;MAAA;MAAA,CAAAjJ,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE6H,CAAC,GAAG9F,cAAc,EAAE8F,CAAC,EAAE,EAAE;QACvC,MAAMtD,WAAW;QAAA;QAAA,CAAA3F,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAG,IAAI,CAACG,UAAU,CAAC6B,MAAM,CAAC;QAAC;QAAA1F,aAAA,GAAAoB,CAAA;QACvE4H,UAAU,CAAC7D,IAAI,CAAC,IAAI,CAACtB,UAAU,CAAC8B,WAAW,CAAC,CAAC;MAC/C;MAEA;MAAA;MAAA3F,aAAA,GAAAoB,CAAA;MACA4H,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAAE7H,CAAC,KAAK;QAAA;QAAAtB,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAA+H,CAAC,CAAC9C,OAAO,GAAG/E,CAAC,CAAC+E,OAAO;MAAP,CAAO,CAAC;MAAC;MAAArG,aAAA,GAAAoB,CAAA;MACjD2H,QAAQ,CAAC5D,IAAI,CAAC6D,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9B;IAAC;IAAAhJ,aAAA,GAAAoB,CAAA;IAED,OAAO2H,QAAQ;EACjB;EAEA;;;EAGQH,sBAAsBA,CAAA;IAAA;IAAA5I,aAAA,GAAAqB,CAAA;IAC5B,MAAM0H,QAAQ;IAAA;IAAA,CAAA/I,aAAA,GAAAoB,CAAA,SAAiB,EAAE;IAEjC;IACA,MAAMgI,UAAU;IAAA;IAAA,CAAApJ,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACoC,GAAG,CAAC,GAAG,IAAI,CAACnC,UAAU,CAAC0D,GAAG,CAAC8B,GAAG,IAAI;MAAA;MAAArJ,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAiI,GAAG,CAAChD,OAAO;IAAP,CAAO,CAAC,CAAC;IACvE,MAAMiD,eAAe;IAAA;IAAA,CAAAtJ,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACyC,UAAU,CAAC0D,GAAG,CAAC8B,GAAG,IAAI;MAAA;MAAArJ,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAgI,UAAU,GAAGC,GAAG,CAAChD,OAAO,GAAG,CAAC;IAAD,CAAC,CAAC;IAChF,MAAMkD,YAAY;IAAA;IAAA,CAAAvJ,aAAA,GAAAoB,CAAA,SAAGkI,eAAe,CAACjC,MAAM,CAAC,CAACC,GAAG,EAAEjB,OAAO,KAAK;MAAA;MAAArG,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAkG,GAAG,GAAGjB,OAAO;IAAP,CAAO,EAAE,CAAC,CAAC;IAAC;IAAArG,aAAA,GAAAoB,CAAA;IAEhF,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG,IAAI,CAAC1C,UAAU,CAACM,cAAc,EAAEoC,CAAC,EAAE,EAAE;MACvD,MAAMyE,WAAW;MAAA;MAAA,CAAAxJ,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsC,MAAM,EAAE,GAAG6F,YAAY;MAChD,IAAIE,iBAAiB;MAAA;MAAA,CAAAzJ,aAAA,GAAAoB,CAAA,SAAG,CAAC;MAAC;MAAApB,aAAA,GAAAoB,CAAA;MAE1B,KAAK,IAAI6H,CAAC;MAAA;MAAA,CAAAjJ,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE6H,CAAC,GAAG,IAAI,CAACpF,UAAU,CAAC6B,MAAM,EAAEuD,CAAC,EAAE,EAAE;QAAA;QAAAjJ,aAAA,GAAAoB,CAAA;QAC/CqI,iBAAiB,IAAIH,eAAe,CAACL,CAAC,CAAC;QAAC;QAAAjJ,aAAA,GAAAoB,CAAA;QACxC,IAAIqI,iBAAiB,IAAID,WAAW,EAAE;UAAA;UAAAxJ,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACpC2H,QAAQ,CAAC5D,IAAI,CAAC,IAAI,CAACtB,UAAU,CAACoF,CAAC,CAAC,CAAC;UAAC;UAAAjJ,aAAA,GAAAoB,CAAA;UAClC;QACF,CAAC;QAAA;QAAA;UAAApB,aAAA,GAAAsB,CAAA;QAAA;MACH;IACF;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAO2H,QAAQ;EACjB;EAEA;;;EAGQF,aAAaA,CAAA;IAAA;IAAA7I,aAAA,GAAAqB,CAAA;IACnB,MAAM0H,QAAQ;IAAA;IAAA,CAAA/I,aAAA,GAAAoB,CAAA,SAAiB,EAAE;IAEjC;IACA,MAAMsI,gBAAgB;IAAA;IAAA,CAAA1J,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAG,IAAI,CAACyC,UAAU,CAAC,CAACqF,IAAI,CAAC,CAACC,CAAC,EAAE7H,CAAC,KAAK;MAAA;MAAAtB,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA+H,CAAC,CAAC9C,OAAO,GAAG/E,CAAC,CAAC+E,OAAO;IAAP,CAAO,CAAC;IAEnF;IACA,MAAMsD,KAAK;IAAA;IAAA,CAAA3J,aAAA,GAAAoB,CAAA,SAAGsI,gBAAgB,CAACnC,GAAG,CAAC,CAACqC,CAAC,EAAEhC,KAAK,KAAK;MAAA;MAAA5H,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAwG,KAAK,GAAG,CAAC;IAAD,CAAC,CAAC;IAC3D,MAAMiC,SAAS;IAAA;IAAA,CAAA7J,aAAA,GAAAoB,CAAA,SAAGuI,KAAK,CAACtC,MAAM,CAAC,CAACC,GAAG,EAAEwC,IAAI,KAAK;MAAA;MAAA9J,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAkG,GAAG,GAAGwC,IAAI;IAAJ,CAAI,EAAE,CAAC,CAAC;IAAC;IAAA9J,aAAA,GAAAoB,CAAA;IAE7D,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG,IAAI,CAAC1C,UAAU,CAACM,cAAc,EAAEoC,CAAC,EAAE,EAAE;MACvD,MAAMyE,WAAW;MAAA;MAAA,CAAAxJ,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsC,MAAM,EAAE,GAAGmG,SAAS;MAC7C,IAAIE,cAAc;MAAA;MAAA,CAAA/J,aAAA,GAAAoB,CAAA,SAAG,CAAC;MAAC;MAAApB,aAAA,GAAAoB,CAAA;MAEvB,KAAK,IAAI6H,CAAC;MAAA;MAAA,CAAAjJ,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE6H,CAAC,GAAGU,KAAK,CAACjE,MAAM,EAAEuD,CAAC,EAAE,EAAE;QAAA;QAAAjJ,aAAA,GAAAoB,CAAA;QACrC2I,cAAc,IAAIJ,KAAK,CAACV,CAAC,CAAC;QAAC;QAAAjJ,aAAA,GAAAoB,CAAA;QAC3B,IAAI2I,cAAc,IAAIP,WAAW,EAAE;UAAA;UAAAxJ,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACjC2H,QAAQ,CAAC5D,IAAI,CAACuE,gBAAgB,CAACT,CAAC,CAAC,CAAC;UAAC;UAAAjJ,aAAA,GAAAoB,CAAA;UACnC;QACF,CAAC;QAAA;QAAA;UAAApB,aAAA,GAAAsB,CAAA;QAAA;MACH;IACF;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAO2H,QAAQ;EACjB;EAEA;;;EAGQD,eAAeA,CAAA;IAAA;IAAA9I,aAAA,GAAAqB,CAAA;IACrB,MAAM0H,QAAQ;IAAA;IAAA,CAAA/I,aAAA,GAAAoB,CAAA,SAAiB,EAAE;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAElC,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG,IAAI,CAAC1C,UAAU,CAACM,cAAc,EAAEoC,CAAC,EAAE,EAAE;MACvD,MAAMY,WAAW;MAAA;MAAA,CAAA3F,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAG,IAAI,CAACG,UAAU,CAAC6B,MAAM,CAAC;MAAC;MAAA1F,aAAA,GAAAoB,CAAA;MACvE2H,QAAQ,CAAC5D,IAAI,CAAC,IAAI,CAACtB,UAAU,CAAC8B,WAAW,CAAC,CAAC;IAC7C;IAAC;IAAA3F,aAAA,GAAAoB,CAAA;IAED,OAAO2H,QAAQ;EACjB;EAEA;;;EAGQT,SAASA,CAACL,OAAmB,EAAEC,OAAmB,EAAEnE,OAA4B;IAAA;IAAA/D,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACtF,QAAQ,IAAI,CAACiB,UAAU,CAACY,eAAe;MACrC,KAAK,cAAc;QAAA;QAAAjD,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACjB,OAAO,IAAI,CAAC4I,oBAAoB,CAAC/B,OAAO,EAAEC,OAAO,CAAC;MACpD,KAAK,WAAW;QAAA;QAAAlI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACd,OAAO,IAAI,CAAC6I,iBAAiB,CAAChC,OAAO,EAAEC,OAAO,CAAC;MACjD,KAAK,SAAS;QAAA;QAAAlI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACZ,OAAO,IAAI,CAAC8I,gBAAgB,CAACjC,OAAO,EAAEC,OAAO,CAAC;MAChD,KAAK,YAAY;QAAA;QAAAlI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACf,OAAO,IAAI,CAAC+I,mBAAmB,CAAClC,OAAO,EAAEC,OAAO,CAAC;MACnD;QAAA;QAAAlI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACE,OAAO,IAAI,CAAC6I,iBAAiB,CAAChC,OAAO,EAAEC,OAAO,CAAC;IACnD;EACF;EAEA;;;EAGQ8B,oBAAoBA,CAAC/B,OAAmB,EAAEC,OAAmB;IAAA;IAAAlI,aAAA,GAAAqB,CAAA;IACnE,MAAM+I,cAAc;IAAA;IAAA,CAAApK,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAGuE,OAAO,CAAC3C,KAAK,CAACI,MAAM,CAAC;IAEvE,MAAMyC,MAAM;IAAA;IAAA,CAAAnI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACH,OAAO,CAAC;IACxC,MAAMI,MAAM;IAAA;IAAA,CAAArI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACF,OAAO,CAAC;IAAC;IAAAlI,aAAA,GAAAoB,CAAA;IAEzC+G,MAAM,CAAC7C,KAAK,GAAG,CACb,GAAG2C,OAAO,CAAC3C,KAAK,CAAC+E,KAAK,CAAC,CAAC,EAAED,cAAc,CAAC,EACzC,GAAGlC,OAAO,CAAC5C,KAAK,CAAC+E,KAAK,CAACD,cAAc,CAAC,CACvC;IAAC;IAAApK,aAAA,GAAAoB,CAAA;IAEFiH,MAAM,CAAC/C,KAAK,GAAG,CACb,GAAG4C,OAAO,CAAC5C,KAAK,CAAC+E,KAAK,CAAC,CAAC,EAAED,cAAc,CAAC,EACzC,GAAGnC,OAAO,CAAC3C,KAAK,CAAC+E,KAAK,CAACD,cAAc,CAAC,CACvC;IAAC;IAAApK,aAAA,GAAAoB,CAAA;IAEF,OAAO,CAAC+G,MAAM,EAAEE,MAAM,CAAC;EACzB;EAEA;;;EAGQ4B,iBAAiBA,CAAChC,OAAmB,EAAEC,OAAmB;IAAA;IAAAlI,aAAA,GAAAqB,CAAA;IAChE,MAAMiJ,MAAM;IAAA;IAAA,CAAAtK,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAGuE,OAAO,CAAC3C,KAAK,CAACI,MAAM,CAAC;IAC/D,MAAM6E,MAAM;IAAA;IAAA,CAAAvK,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAGuE,OAAO,CAAC3C,KAAK,CAACI,MAAM,CAAC;IAC/D,MAAM,CAAClF,KAAK,EAAEG,GAAG,CAAC;IAAA;IAAA,CAAAX,aAAA,GAAAoB,CAAA,SAAG,CAACwC,IAAI,CAACiC,GAAG,CAACyE,MAAM,EAAEC,MAAM,CAAC,EAAE3G,IAAI,CAACoC,GAAG,CAACsE,MAAM,EAAEC,MAAM,CAAC,CAAC;IAEzE,MAAMpC,MAAM;IAAA;IAAA,CAAAnI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACH,OAAO,CAAC;IACxC,MAAMI,MAAM;IAAA;IAAA,CAAArI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACF,OAAO,CAAC;IAAC;IAAAlI,aAAA,GAAAoB,CAAA;IAEzC+G,MAAM,CAAC7C,KAAK,GAAG,CACb,GAAG2C,OAAO,CAAC3C,KAAK,CAAC+E,KAAK,CAAC,CAAC,EAAE7J,KAAK,CAAC,EAChC,GAAG0H,OAAO,CAAC5C,KAAK,CAAC+E,KAAK,CAAC7J,KAAK,EAAEG,GAAG,CAAC,EAClC,GAAGsH,OAAO,CAAC3C,KAAK,CAAC+E,KAAK,CAAC1J,GAAG,CAAC,CAC5B;IAAC;IAAAX,aAAA,GAAAoB,CAAA;IAEFiH,MAAM,CAAC/C,KAAK,GAAG,CACb,GAAG4C,OAAO,CAAC5C,KAAK,CAAC+E,KAAK,CAAC,CAAC,EAAE7J,KAAK,CAAC,EAChC,GAAGyH,OAAO,CAAC3C,KAAK,CAAC+E,KAAK,CAAC7J,KAAK,EAAEG,GAAG,CAAC,EAClC,GAAGuH,OAAO,CAAC5C,KAAK,CAAC+E,KAAK,CAAC1J,GAAG,CAAC,CAC5B;IAAC;IAAAX,aAAA,GAAAoB,CAAA;IAEF,OAAO,CAAC+G,MAAM,EAAEE,MAAM,CAAC;EACzB;EAEA;;;EAGQ6B,gBAAgBA,CAACjC,OAAmB,EAAEC,OAAmB;IAAA;IAAAlI,aAAA,GAAAqB,CAAA;IAC/D,MAAM8G,MAAM;IAAA;IAAA,CAAAnI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACH,OAAO,CAAC;IACxC,MAAMI,MAAM;IAAA;IAAA,CAAArI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACF,OAAO,CAAC;IAAC;IAAAlI,aAAA,GAAAoB,CAAA;IAEzC+G,MAAM,CAAC7C,KAAK,GAAG2C,OAAO,CAAC3C,KAAK,CAACiC,GAAG,CAAC,CAACiD,IAAI,EAAE5C,KAAK,KAC3C;MAAA;MAAA5H,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,WAAI,CAACsC,MAAM,EAAE,GAAG,GAAG;MAAA;MAAA,CAAA1D,aAAA,GAAAsB,CAAA,WAAGkJ,IAAI;MAAA;MAAA,CAAAxK,aAAA,GAAAsB,CAAA,WAAG4G,OAAO,CAAC5C,KAAK,CAACsC,KAAK,CAAC;IAAD,CAAC,CAClD;IAAC;IAAA5H,aAAA,GAAAoB,CAAA;IAEFiH,MAAM,CAAC/C,KAAK,GAAG4C,OAAO,CAAC5C,KAAK,CAACiC,GAAG,CAAC,CAACiD,IAAI,EAAE5C,KAAK,KAC3C;MAAA;MAAA5H,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,WAAI,CAACsC,MAAM,EAAE,GAAG,GAAG;MAAA;MAAA,CAAA1D,aAAA,GAAAsB,CAAA,WAAGkJ,IAAI;MAAA;MAAA,CAAAxK,aAAA,GAAAsB,CAAA,WAAG2G,OAAO,CAAC3C,KAAK,CAACsC,KAAK,CAAC;IAAD,CAAC,CAClD;IAAC;IAAA5H,aAAA,GAAAoB,CAAA;IAEF,OAAO,CAAC+G,MAAM,EAAEE,MAAM,CAAC;EACzB;EAEA;;;EAGQ8B,mBAAmBA,CAAClC,OAAmB,EAAEC,OAAmB;IAAA;IAAAlI,aAAA,GAAAqB,CAAA;IAClE,MAAMoJ,KAAK;IAAA;IAAA,CAAAzK,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsC,MAAM,EAAE;IAE3B,MAAMyE,MAAM;IAAA;IAAA,CAAAnI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACH,OAAO,CAAC;IACxC,MAAMI,MAAM;IAAA;IAAA,CAAArI,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACF,OAAO,CAAC;IAAC;IAAAlI,aAAA,GAAAoB,CAAA;IAEzC+G,MAAM,CAAC7C,KAAK,GAAG2C,OAAO,CAAC3C,KAAK,CAACiC,GAAG,CAAC,CAACiD,IAAI,EAAE5C,KAAK,KAAI;MAAA;MAAA5H,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAC/C;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,kBAAOkJ,IAAI,KAAK,QAAQ;MAAA;MAAA,CAAAxK,aAAA,GAAAsB,CAAA,WAAI,OAAO4G,OAAO,CAAC5C,KAAK,CAACsC,KAAK,CAAC,KAAK,QAAQ,GAAE;QAAA;QAAA5H,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACxE,OAAOqJ,KAAK,GAAGD,IAAI,GAAG,CAAC,CAAC,GAAGC,KAAK,IAAKvC,OAAO,CAAC5C,KAAK,CAACsC,KAAK,CAAY;MACtE,CAAC;MAAA;MAAA;QAAA5H,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACD,OAAOoJ,IAAI;IACb,CAAC,CAAC;IAAC;IAAAxK,aAAA,GAAAoB,CAAA;IAEHiH,MAAM,CAAC/C,KAAK,GAAG4C,OAAO,CAAC5C,KAAK,CAACiC,GAAG,CAAC,CAACiD,IAAI,EAAE5C,KAAK,KAAI;MAAA;MAAA5H,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAC/C;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,kBAAOkJ,IAAI,KAAK,QAAQ;MAAA;MAAA,CAAAxK,aAAA,GAAAsB,CAAA,WAAI,OAAO2G,OAAO,CAAC3C,KAAK,CAACsC,KAAK,CAAC,KAAK,QAAQ,GAAE;QAAA;QAAA5H,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACxE,OAAOqJ,KAAK,GAAGD,IAAI,GAAG,CAAC,CAAC,GAAGC,KAAK,IAAKxC,OAAO,CAAC3C,KAAK,CAACsC,KAAK,CAAY;MACtE,CAAC;MAAA;MAAA;QAAA5H,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACD,OAAOoJ,IAAI;IACb,CAAC,CAAC;IAAC;IAAAxK,aAAA,GAAAoB,CAAA;IAEH,OAAO,CAAC+G,MAAM,EAAEE,MAAM,CAAC;EACzB;EAEA;;;EAGQE,MAAMA,CAACvD,UAAsB,EAAEjB,OAA4B;IAAA;IAAA/D,aAAA,GAAAqB,CAAA;IACjE,MAAMqJ,OAAO;IAAA;IAAA,CAAA1K,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACgH,WAAW,CAACpD,UAAU,CAAC;IAAC;IAAAhF,aAAA,GAAAoB,CAAA;IAE7C,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG2F,OAAO,CAACpF,KAAK,CAACI,MAAM,EAAEX,CAAC,EAAE,EAAE;MAAA;MAAA/E,aAAA,GAAAoB,CAAA;MAC7C,IAAI,IAAI,CAACsC,MAAM,EAAE,GAAG,IAAI,CAACrB,UAAU,CAACS,YAAY,EAAE;QAAA;QAAA9C,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAChDsJ,OAAO,CAACpF,KAAK,CAACP,CAAC,CAAC,GAAG,IAAI,CAAC4F,UAAU,CAACD,OAAO,CAACpF,KAAK,CAACP,CAAC,CAAC,EAAEhB,OAAO,CAACyB,SAAS,CAACT,CAAC,CAAC,CAAC;MAC5E,CAAC;MAAA;MAAA;QAAA/E,aAAA,GAAAsB,CAAA;MAAA;IACH;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAOsJ,OAAO;EAChB;EAEA;;;EAGQC,UAAUA,CAACH,IAAqB,EAAEjF,QAA8B;IAAA;IAAAvF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACtE;IAAI;IAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAAiE,QAAQ,CAACE,cAAc;IAAA;IAAA,CAAAzF,aAAA,GAAAsB,CAAA,WAAIiE,QAAQ,CAACE,cAAc,CAACC,MAAM,GAAG,CAAC,GAAE;MAAA;MAAA1F,aAAA,GAAAsB,CAAA;MACjE;MACA,MAAMqE,WAAW;MAAA;MAAA,CAAA3F,aAAA,GAAAoB,CAAA,SAAGwC,IAAI,CAACgC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAE,GAAG6B,QAAQ,CAACE,cAAc,CAACC,MAAM,CAAC;MAAC;MAAA1F,aAAA,GAAAoB,CAAA;MAC/E,OAAOmE,QAAQ,CAACE,cAAc,CAACE,WAAW,CAAC;IAC7C,CAAC,MAAM;MAAA;MAAA3F,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,IAAI,OAAOoJ,IAAI,KAAK,QAAQ,EAAE;QAAA;QAAAxK,aAAA,GAAAsB,CAAA;QACnC;QACA,MAAMuE,GAAG;QAAA;QAAA,CAAA7F,aAAA,GAAAoB,CAAA,SAAG,OAAOmE,QAAQ,CAACO,MAAM,CAACC,OAAO,KAAK,QAAQ;QAAA;QAAA,CAAA/F,aAAA,GAAAsB,CAAA,WAAGiE,QAAQ,CAACO,MAAM,CAACC,OAAO;QAAA;QAAA,CAAA/F,aAAA,GAAAsB,CAAA,WAAG,CAAC;QACrF,MAAM0E,GAAG;QAAA;QAAA,CAAAhG,aAAA,GAAAoB,CAAA,SAAG,OAAOmE,QAAQ,CAACO,MAAM,CAACG,OAAO,KAAK,QAAQ;QAAA;QAAA,CAAAjG,aAAA,GAAAsB,CAAA,WAAGiE,QAAQ,CAACO,MAAM,CAACG,OAAO;QAAA;QAAA,CAAAjG,aAAA,GAAAsB,CAAA,WAAG,CAAC;QAAC;QAAAtB,aAAA,GAAAoB,CAAA;QAEtF,QAAQ,IAAI,CAACiB,UAAU,CAACa,cAAc;UACpC,KAAK,UAAU;YAAA;YAAAlD,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YACb,OAAO,IAAI,CAACwJ,gBAAgB,CAACJ,IAAI,EAAE3E,GAAG,EAAEG,GAAG,CAAC;UAC9C,KAAK,SAAS;YAAA;YAAAhG,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YACZ,OAAO,IAAI,CAACyJ,eAAe,CAAChF,GAAG,EAAEG,GAAG,CAAC;UACvC,KAAK,YAAY;YAAA;YAAAhG,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YACf,OAAO,IAAI,CAAC0J,kBAAkB,CAACN,IAAI,EAAE3E,GAAG,EAAEG,GAAG,CAAC;UAChD;YAAA;YAAAhG,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YACE,OAAO,IAAI,CAACwJ,gBAAgB,CAACJ,IAAI,EAAE3E,GAAG,EAAEG,GAAG,CAAC;QAChD;MACF,CAAC;MAAA;MAAA;QAAAhG,aAAA,GAAAsB,CAAA;MAAA;IAAD;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAOoJ,IAAI;EACb;EAEA;;;EAGQI,gBAAgBA,CAAC1E,KAAa,EAAEL,GAAW,EAAEG,GAAW;IAAA;IAAAhG,aAAA,GAAAqB,CAAA;IAC9D,MAAM0J,KAAK;IAAA;IAAA,CAAA/K,aAAA,GAAAoB,CAAA,SAAG,CAAC4E,GAAG,GAAGH,GAAG,IAAI,GAAG,EAAC,CAAC;IACjC,MAAM6E,OAAO;IAAA;IAAA,CAAA1K,aAAA,GAAAoB,CAAA,SAAG8E,KAAK,GAAG,IAAI,CAAC8E,cAAc,EAAE,GAAGD,KAAK;IAAC;IAAA/K,aAAA,GAAAoB,CAAA;IACtD,OAAOwC,IAAI,CAACoC,GAAG,CAACH,GAAG,EAAEjC,IAAI,CAACiC,GAAG,CAACG,GAAG,EAAE0E,OAAO,CAAC,CAAC;EAC9C;EAEA;;;EAGQG,eAAeA,CAAChF,GAAW,EAAEG,GAAW;IAAA;IAAAhG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC9C,OAAOyE,GAAG,GAAG,IAAI,CAACnC,MAAM,EAAE,IAAIsC,GAAG,GAAGH,GAAG,CAAC;EAC1C;EAEA;;;EAGQiF,kBAAkBA,CAAC5E,KAAa,EAAEL,GAAW,EAAEG,GAAW;IAAA;IAAAhG,aAAA,GAAAqB,CAAA;IAChE,MAAM4J,GAAG;IAAA;IAAA,CAAAjL,aAAA,GAAAoB,CAAA,SAAG,EAAE,EAAC,CAAC;IAChB,MAAM8J,MAAM;IAAA;IAAA,CAAAlL,aAAA,GAAAoB,CAAA,SAAG,CAAC8E,KAAK,GAAGL,GAAG,KAAKG,GAAG,GAAGH,GAAG,CAAC;IAC1C,MAAMsF,MAAM;IAAA;IAAA,CAAAnL,aAAA,GAAAoB,CAAA,SAAG,CAAC4E,GAAG,GAAGE,KAAK,KAAKF,GAAG,GAAGH,GAAG,CAAC;IAC1C,MAAMuF,GAAG;IAAA;IAAA,CAAApL,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsC,MAAM,EAAE;IAEzB,IAAI2H,MAAc;IAAC;IAAArL,aAAA,GAAAoB,CAAA;IACnB,IAAIgK,GAAG,IAAI,GAAG,EAAE;MAAA;MAAApL,aAAA,GAAAsB,CAAA;MACd,MAAMgK,EAAE;MAAA;MAAA,CAAAtL,aAAA,GAAAoB,CAAA,SAAG,GAAG,GAAG8J,MAAM;MACvB,MAAMK,GAAG;MAAA;MAAA,CAAAvL,aAAA,GAAAoB,CAAA,SAAG,GAAG,GAAGgK,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAGA,GAAG,IAAIxH,IAAI,CAAC4H,GAAG,CAACF,EAAE,EAAEL,GAAG,GAAG,GAAG,CAAC;MAAC;MAAAjL,aAAA,GAAAoB,CAAA;MACpEiK,MAAM,GAAGzH,IAAI,CAAC4H,GAAG,CAACD,GAAG,EAAE,GAAG,IAAIN,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;IACjD,CAAC,MAAM;MAAA;MAAAjL,aAAA,GAAAsB,CAAA;MACL,MAAMgK,EAAE;MAAA;MAAA,CAAAtL,aAAA,GAAAoB,CAAA,SAAG,GAAG,GAAG+J,MAAM;MACvB,MAAMI,GAAG;MAAA;MAAA,CAAAvL,aAAA,GAAAoB,CAAA,SAAG,GAAG,IAAI,GAAG,GAAGgK,GAAG,CAAC,GAAG,GAAG,IAAIA,GAAG,GAAG,GAAG,CAAC,GAAGxH,IAAI,CAAC4H,GAAG,CAACF,EAAE,EAAEL,GAAG,GAAG,GAAG,CAAC;MAAC;MAAAjL,aAAA,GAAAoB,CAAA;MAC5EiK,MAAM,GAAG,GAAG,GAAGzH,IAAI,CAAC4H,GAAG,CAACD,GAAG,EAAE,GAAG,IAAIN,GAAG,GAAG,GAAG,CAAC,CAAC;IACjD;IAEA,MAAMP,OAAO;IAAA;IAAA,CAAA1K,aAAA,GAAAoB,CAAA,SAAG8E,KAAK,GAAGmF,MAAM,IAAIrF,GAAG,GAAGH,GAAG,CAAC;IAAC;IAAA7F,aAAA,GAAAoB,CAAA;IAC7C,OAAOwC,IAAI,CAACoC,GAAG,CAACH,GAAG,EAAEjC,IAAI,CAACiC,GAAG,CAACG,GAAG,EAAE0E,OAAO,CAAC,CAAC;EAC9C;EAEA;;;EAGQjC,WAAWA,CAACT,SAAuB;IAAA;IAAAhI,aAAA,GAAAqB,CAAA;IACzC;IACA,MAAMoK,QAAQ;IAAA;IAAA,CAAAzL,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAG,IAAI,CAACyC,UAAU,EAAE,GAAGmE,SAAS,CAAC;IAEnD;IAAA;IAAAhI,aAAA,GAAAoB,CAAA;IACAqK,QAAQ,CAACvC,IAAI,CAAC,CAACC,CAAC,EAAE7H,CAAC,KAAK;MAAA;MAAAtB,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA+H,CAAC,CAAC9C,OAAO,GAAG/E,CAAC,CAAC+E,OAAO;IAAP,CAAO,CAAC;IAE9C;IAAA;IAAArG,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACyC,UAAU,GAAG4H,QAAQ,CAACpB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAChI,UAAU,CAACM,cAAc,CAAC;EACrE;EAEA;;;EAGQyC,oBAAoBA,CAAA;IAAA;IAAApF,aAAA,GAAAqB,CAAA;IAC1B,MAAMqK,IAAI;IAAA;IAAA,CAAA1L,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACyC,UAAU,CAACwD,MAAM,CAAC,CAACqE,IAAI,EAAEC,OAAO,KAChD;MAAA;MAAA3L,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAuK,OAAO,CAACtF,OAAO,GAAGqF,IAAI,CAACrF,OAAO;MAAA;MAAA,CAAArG,aAAA,GAAAsB,CAAA,WAAGqK,OAAO;MAAA;MAAA,CAAA3L,aAAA,GAAAsB,CAAA,WAAGoK,IAAI;IAAJ,CAAI,CAChD;IAAC;IAAA1L,aAAA,GAAAoB,CAAA;IAEF;IAAI;IAAA,CAAApB,aAAA,GAAAsB,CAAA,YAAC,IAAI,CAACgB,cAAc;IAAA;IAAA,CAAAtC,aAAA,GAAAsB,CAAA,WAAIoK,IAAI,CAACrF,OAAO,GAAG,IAAI,CAAC/D,cAAc,CAAC+D,OAAO,GAAE;MAAA;MAAArG,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACtE,IAAI,CAACkB,cAAc,GAAG;QAAE,GAAGoJ;MAAI,CAAE;IACnC,CAAC;IAAA;IAAA;MAAA1L,aAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGQ+D,iBAAiBA,CAAA;IAAA;IAAArF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACvB;IACA;IACA,IAAI,CAACmB,WAAW,GAAG,IAAI,CAACsB,UAAU,CAACuD,MAAM,CAACiC,GAAG,IAAI;MAAA;MAAArJ,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAiI,GAAG,CAAC7C,QAAQ;IAAR,CAAQ,CAAC;EAChE;EAEA;;;EAGQ/B,aAAaA,CAAA;IAAA;IAAAzE,aAAA,GAAAqB,CAAA;IACnB,MAAMuK,kBAAkB;IAAA;IAAA,CAAA5L,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACyC,UAAU,CAACuD,MAAM,CAACiC,GAAG,IAAI;MAAA;MAAArJ,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAiI,GAAG,CAAC7C,QAAQ;IAAR,CAAQ,CAAC;IACtE,MAAMqF,SAAS;IAAA;IAAA,CAAA7L,aAAA,GAAAoB,CAAA,SAAGwK,kBAAkB,CAACrE,GAAG,CAAC8B,GAAG,IAAI;MAAA;MAAArJ,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAiI,GAAG,CAAChD,OAAO;IAAP,CAAO,CAAC;IAAC;IAAArG,aAAA,GAAAoB,CAAA;IAE7D,IAAIyK,SAAS,CAACnG,MAAM,KAAK,CAAC,EAAE;MAAA;MAAA1F,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC1ByK,SAAS,CAAC1G,IAAI,CAACqC,MAAM,CAACC,SAAS,CAAC;IAClC,CAAC;IAAA;IAAA;MAAAzH,aAAA,GAAAsB,CAAA;IAAA;IAED,MAAMoB,OAAO;IAAA;IAAA,CAAA1C,aAAA,GAAAoB,CAAA,SAAqB;MAChC0K,SAAS,EAAE,IAAI,CAACtJ,UAAU;MAC1BuJ,WAAW,EAAEnI,IAAI,CAACiC,GAAG,CAAC,GAAGgG,SAAS,CAAC;MACnCG,cAAc,EAAEH,SAAS,CAACxE,MAAM,CAAC,CAACC,GAAG,EAAEjG,CAAC,KAAK;QAAA;QAAArB,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAkG,GAAG,GAAGjG,CAAC;MAAD,CAAC,EAAE,CAAC,CAAC,GAAGwK,SAAS,CAACnG,MAAM;MAC3EuG,YAAY,EAAErI,IAAI,CAACoC,GAAG,CAAC,GAAG6F,SAAS,CAAC;MACpCK,SAAS,EAAE,IAAI,CAACC,kBAAkB,EAAE;MACpC5F,oBAAoB,EAAE,IAAI,CAAC1C,UAAU,CAACuD,MAAM,CAACiC,GAAG,IAAI;QAAA;QAAArJ,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,QAACiI,GAAG,CAAC7C,QAAQ;MAAR,CAAQ,CAAC,CAACd,MAAM;MACzE0G,SAAS,EAAE,IAAIC,IAAI;KACpB;IAAC;IAAArM,aAAA,GAAAoB,CAAA;IAEF,IAAI,CAACsB,OAAO,CAACyC,IAAI,CAACzC,OAAO,CAAC;EAC5B;EAEA;;;EAGQyJ,kBAAkBA,CAAA;IAAA;IAAAnM,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACxB,IAAI,IAAI,CAACyC,UAAU,CAAC6B,MAAM,GAAG,CAAC,EAAE;MAAA;MAAA1F,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,OAAO,CAAC;IAAA,CAAC;IAAA;IAAA;MAAApB,aAAA,GAAAsB,CAAA;IAAA;IAEzC,IAAIgL,aAAa;IAAA;IAAA,CAAAtM,aAAA,GAAAoB,CAAA,SAAG,CAAC;IACrB,IAAImL,SAAS;IAAA;IAAA,CAAAvM,aAAA,GAAAoB,CAAA,SAAG,CAAC;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAElB,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG,IAAI,CAAClB,UAAU,CAAC6B,MAAM,EAAEX,CAAC,EAAE,EAAE;MAAA;MAAA/E,aAAA,GAAAoB,CAAA;MAC/C,KAAK,IAAI6H,CAAC;MAAA;MAAA,CAAAjJ,aAAA,GAAAoB,CAAA,SAAG2D,CAAC,GAAG,CAAC,GAAEkE,CAAC,GAAG,IAAI,CAACpF,UAAU,CAAC6B,MAAM,EAAEuD,CAAC,EAAE,EAAE;QACnD,MAAMuD,QAAQ;QAAA;QAAA,CAAAxM,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACqL,iBAAiB,CAAC,IAAI,CAAC5I,UAAU,CAACkB,CAAC,CAAC,EAAE,IAAI,CAAClB,UAAU,CAACoF,CAAC,CAAC,CAAC;QAAC;QAAAjJ,aAAA,GAAAoB,CAAA;QAChFkL,aAAa,IAAIE,QAAQ;QAAC;QAAAxM,aAAA,GAAAoB,CAAA;QAC1BmL,SAAS,EAAE;MACb;IACF;IAAC;IAAAvM,aAAA,GAAAoB,CAAA;IAED,OAAOmL,SAAS,GAAG,CAAC;IAAA;IAAA,CAAAvM,aAAA,GAAAsB,CAAA,WAAGgL,aAAa,GAAGC,SAAS;IAAA;IAAA,CAAAvM,aAAA,GAAAsB,CAAA,WAAG,CAAC;EACtD;EAEA;;;EAGQmL,iBAAiBA,CAACC,IAAgB,EAAEC,IAAgB;IAAA;IAAA3M,aAAA,GAAAqB,CAAA;IAC1D,IAAImL,QAAQ;IAAA;IAAA,CAAAxM,aAAA,GAAAoB,CAAA,SAAG,CAAC;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAEjB,KAAK,IAAI2D,CAAC;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,SAAG,CAAC,GAAE2D,CAAC,GAAG2H,IAAI,CAACpH,KAAK,CAACI,MAAM,EAAEX,CAAC,EAAE,EAAE;MAAA;MAAA/E,aAAA,GAAAoB,CAAA;MAC1C;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,kBAAOoL,IAAI,CAACpH,KAAK,CAACP,CAAC,CAAC,KAAK,QAAQ;MAAA;MAAA,CAAA/E,aAAA,GAAAsB,CAAA,WAAI,OAAOqL,IAAI,CAACrH,KAAK,CAACP,CAAC,CAAC,KAAK,QAAQ,GAAE;QAAA;QAAA/E,aAAA,GAAAsB,CAAA;QAC1E,MAAMsL,IAAI;QAAA;QAAA,CAAA5M,aAAA,GAAAoB,CAAA,SAAIsL,IAAI,CAACpH,KAAK,CAACP,CAAC,CAAY,GAAI4H,IAAI,CAACrH,KAAK,CAACP,CAAC,CAAY;QAAC;QAAA/E,aAAA,GAAAoB,CAAA;QACnEoL,QAAQ,IAAII,IAAI,GAAGA,IAAI;MACzB,CAAC;MAAA;MAAA;QAAA5M,aAAA,GAAAsB,CAAA;MAAA;IACH;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAOwC,IAAI,CAACiJ,IAAI,CAACL,QAAQ,CAAC;EAC5B;EAEA;;;EAGQjI,eAAeA,CAACR,OAA4B;IAAA;IAAA/D,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAClD;IACA,IAAI,IAAI,CAACoB,UAAU,IAAI,IAAI,CAACH,UAAU,CAACO,cAAc,EAAE;MAAA;MAAA5C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACrD,OAAO,IAAI;IACb,CAAC;IAAA;IAAA;MAAApB,aAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,aAAA,GAAAoB,CAAA;IACA,IAAI,IAAI,CAACsB,OAAO,CAACgD,MAAM,IAAI,EAAE,EAAE;MAAA;MAAA1F,aAAA,GAAAsB,CAAA;MAC7B,MAAMwL,aAAa;MAAA;MAAA,CAAA9M,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsB,OAAO,CAAC2H,KAAK,CAAC,CAAC,EAAE,CAAC;MAC7C,MAAM0C,kBAAkB;MAAA;MAAA,CAAA/M,aAAA,GAAAoB,CAAA,SAAG0L,aAAa,CAAC,CAAC,CAAC,CAACf,WAAW,GAAGe,aAAa,CAACA,aAAa,CAACpH,MAAM,GAAG,CAAC,CAAC,CAACqG,WAAW;MAAC;MAAA/L,aAAA,GAAAoB,CAAA;MAE9G,IAAIwC,IAAI,CAACoJ,GAAG,CAACD,kBAAkB,CAAC,GAAGhJ,OAAO,CAACkJ,mBAAmB,CAACC,cAAc,EAAE;QAAA;QAAAlN,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC7E,OAAO,IAAI;MACb,CAAC;MAAA;MAAA;QAAApB,aAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAO,KAAK;EACd;EAEA;;;EAGQsD,eAAeA,CAAA;IAAA;IAAA1E,aAAA,GAAAqB,CAAA;IACrB;IACA,MAAM6K,SAAS;IAAA;IAAA,CAAAlM,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC+K,kBAAkB,EAAE;IAC3C,MAAMgB,kBAAkB;IAAA;IAAA,CAAAnN,aAAA,GAAAoB,CAAA,SAAG,GAAG;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAE/B,IAAI8K,SAAS,GAAGiB,kBAAkB,EAAE;MAAA;MAAAnN,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAClC,IAAI,CAACiB,UAAU,CAACS,YAAY,GAAGc,IAAI,CAACiC,GAAG,CAAC,GAAG,EAAE,IAAI,CAACxD,UAAU,CAACS,YAAY,GAAG,GAAG,CAAC;IAClF,CAAC,MAAM;MAAA;MAAA9C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACL,IAAI,CAACiB,UAAU,CAACS,YAAY,GAAGc,IAAI,CAACoC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC3D,UAAU,CAACS,YAAY,GAAG,GAAG,CAAC;IACnF;EACF;EAEA;;;EAGQ6B,wBAAwBA,CAACZ,OAA4B,EAAEG,SAAiB;IAAA;IAAAlE,aAAA,GAAAqB,CAAA;IAC9E,MAAM+L,aAAa;IAAA;IAAA,CAAApN,aAAA,GAAAoB,CAAA,SAAG+C,WAAW,CAACC,GAAG,EAAE,GAAGF,SAAS;IAEnD;IACA,MAAMmJ,YAAY;IAAA;IAAA,CAAArN,aAAA,GAAAoB,CAAA,SAAyB;MACzC+E,EAAE;MAAE;MAAA,CAAAnG,aAAA,GAAAsB,CAAA,eAAI,CAACgB,cAAc,EAAE6D,EAAE;MAAA;MAAA,CAAAnG,aAAA,GAAAsB,CAAA,WAAI,aAAa;MAC5CkE,SAAS,EAAE,EAAE;MACbc,eAAe,EAAE,EAAE;MACnBC,oBAAoB,EAAE,EAAE;MACxBC,QAAQ;MAAE;MAAA,CAAAxG,aAAA,GAAAsB,CAAA,eAAI,CAACgB,cAAc,EAAEkE,QAAQ;MAAA;MAAA,CAAAxG,aAAA,GAAAsB,CAAA,WAAI,KAAK;MAChD+E,OAAO;MAAE;MAAA,CAAArG,aAAA,GAAAsB,CAAA,eAAI,CAACgB,cAAc,EAAE+D,OAAO;MAAA;MAAA,CAAArG,aAAA,GAAAsB,CAAA,WAAIkG,MAAM,CAACC,SAAS;MACzD6F,mBAAmB,EAAEvJ,OAAO,CAACuJ,mBAAmB;MAAE;MAClDC,kBAAkB,EAAE;KACrB;IAED;IAAA;IAAAvN,aAAA,GAAAoB,CAAA;IACA,IAAI,IAAI,CAACkB,cAAc,EAAE;MAAA;MAAAtC,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACvB2C,OAAO,CAACyB,SAAS,CAACkD,OAAO,CAAC,CAACnD,QAAQ,EAAEqC,KAAK,KAAI;QAAA;QAAA5H,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAC5CiM,YAAY,CAAC7H,SAAS,CAACD,QAAQ,CAACY,EAAE,CAAC,GAAG,IAAI,CAAC7D,cAAe,CAACgD,KAAK,CAACsC,KAAK,CAAC;MACzE,CAAC,CAAC;MAEF;MAAA;MAAA5H,aAAA,GAAAoB,CAAA;MACA2C,OAAO,CAAC4C,UAAU,CAACA,UAAU,CAAC+B,OAAO,CAAC,CAAC7B,SAAS,EAAEe,KAAK,KAAI;QAAA;QAAA5H,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACzDiM,YAAY,CAAC/G,eAAe,CAACO,SAAS,CAACV,EAAE,CAAC;QAAG;QAAA,CAAAnG,aAAA,GAAAsB,CAAA,eAAI,CAACgB,cAAe,CAACgE,eAAe,CAACsB,KAAK,CAAC;QAAA;QAAA,CAAA5H,aAAA,GAAAsB,CAAA,WAAI,CAAC;MAC/F,CAAC,CAAC;IACJ,CAAC;IAAA;IAAA;MAAAtB,aAAA,GAAAsB,CAAA;IAAA;IAED,MAAMkM,UAAU;IAAA;IAAA,CAAAxN,aAAA,GAAAoB,CAAA,SAA2B;MACzCqM,eAAe,EAAE,IAAI,CAACjL,UAAU;MAChCkL,gBAAgB,EAAE,IAAI,CAACjL,eAAe;MACtCkL,oBAAoB,EAAE,IAAI,CAACnL,UAAU;MACrC4K,aAAa;MACbQ,kBAAkB,EAAE,IAAI,CAAClL,OAAO,CAAC6E,GAAG,CAACsG,CAAC,IAAI;QAAA;QAAA7N,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAyM,CAAC,CAAC9B,WAAW;MAAX,CAAW,CAAC;MACxD+B,qBAAqB,EAAE,IAAI,CAACpL,OAAO,CAAC6E,GAAG,CAACsG,CAAC,IAAI;QAAA;QAAA7N,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAyM,CAAC,CAAC7B,cAAc;MAAd,CAAc,CAAC;MAC9D+B,gBAAgB,EAAE,IAAI,CAACrL,OAAO,CAAC6E,GAAG,CAACsG,CAAC,IAAI;QAAA;QAAA7N,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAyM,CAAC,CAAC3B,SAAS;MAAT,CAAS,CAAC;MACpD8B,0BAA0B,EAAE,IAAI,CAACtL,OAAO,CAAC6E,GAAG,CAACsG,CAAC,IAAI;QAAA;QAAA7N,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAyM,CAAC,CAACtH,oBAAoB;MAApB,CAAoB,CAAC;MACzE0H,sBAAsB,EAAE;QACtBtL,cAAc,EAAE,IAAI,CAACN,UAAU,CAACM,cAAc;QAC9CuL,iBAAiB,EAAE,IAAI,CAAC7L,UAAU,CAACS,YAAY;QAC/CqL,kBAAkB,EAAE,IAAI,CAAC9L,UAAU,CAACQ;;KAEvC;IAED,MAAMuL,mBAAmB;IAAA;IAAA,CAAApO,aAAA,GAAAoB,CAAA,SAAwB;MAC/CiN,UAAU,EAAE,IAAI,CAAC3L,OAAO;MACxB4L,iBAAiB,EAAE,EAAE;MACrBC,gBAAgB,EAAE,EAAE;MACpBC,kBAAkB,EAAE;KACrB;IAAC;IAAAxO,aAAA,GAAAoB,CAAA;IAEF,OAAO;MACLqN,SAAS,EAAE1K,OAAO,CAACoC,EAAE;MACrBuI,MAAM,EAAEzM,yBAAA,CAAA0M,kBAAkB,CAACC,SAAS;MACpCvB,YAAY;MACZ9K,WAAW,EAAE,EAAE;MAAE;MACjBiL,UAAU;MACV9K,OAAO,EAAE0L,mBAAmB;MAC5BS,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;KACT;EACH;EAEA;EACQ5G,WAAWA,CAAC6G,MAAkB;IAAA;IAAAjP,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACpC,OAAO;MACL+E,EAAE,EAAE,IAAI,CAACC,oBAAoB,EAAE;MAC/Bd,KAAK,EAAE,CAAC,GAAG2J,MAAM,CAAC3J,KAAK,CAAC;MACxBe,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE,EAAE;MACnBC,oBAAoB,EAAE,EAAE;MACxBC,QAAQ,EAAE,IAAI;MACdC,GAAG,EAAE;KACN;EACH;EAEQL,oBAAoBA,CAAA;IAAA;IAAApG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC1B,OAAO,OAAOiL,IAAI,CAACjI,GAAG,EAAE,IAAIR,IAAI,CAACF,MAAM,EAAE,CAACwL,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;EACvE;EAEQxL,kBAAkBA,CAACyL,IAAY;IAAA;IAAApP,aAAA,GAAAqB,CAAA;IACrC,IAAIgO,KAAK;IAAA;IAAA,CAAArP,aAAA,GAAAoB,CAAA,SAAGgO,IAAI;IAAC;IAAApP,aAAA,GAAAoB,CAAA;IACjB,OAAO,MAAK;MAAA;MAAApB,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACViO,KAAK,GAAG,CAACA,KAAK,GAAG,IAAI,GAAG,KAAK,IAAI,MAAM;MAAC;MAAArP,aAAA,GAAAoB,CAAA;MACxC,OAAOiO,KAAK,GAAG,MAAM;IACvB,CAAC;EACH;EAEQrE,cAAcA,CAAA;IAAA;IAAAhL,aAAA,GAAAqB,CAAA;IACpB;IACA,MAAMiO,EAAE;IAAA;IAAA,CAAAtP,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsC,MAAM,EAAE;IACxB,MAAM6L,EAAE;IAAA;IAAA,CAAAvP,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsC,MAAM,EAAE;IAAC;IAAA1D,aAAA,GAAAoB,CAAA;IACzB,OAAOwC,IAAI,CAACiJ,IAAI,CAAC,CAAC,CAAC,GAAGjJ,IAAI,CAACkB,GAAG,CAACwK,EAAE,CAAC,CAAC,GAAG1L,IAAI,CAAC4L,GAAG,CAAC,CAAC,GAAG5L,IAAI,CAAC6L,EAAE,GAAGF,EAAE,CAAC;EAClE;;AACD;AAAAvP,aAAA,GAAAoB,CAAA;AAjyBDsO,OAAA,CAAAvN,gBAAA,GAAAA,gBAAA","ignoreList":[]}