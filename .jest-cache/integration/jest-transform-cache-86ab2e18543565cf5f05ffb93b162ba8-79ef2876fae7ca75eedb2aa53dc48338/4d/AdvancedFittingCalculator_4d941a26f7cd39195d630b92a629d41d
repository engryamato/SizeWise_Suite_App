1b78b61eef8161648fb558508d0c67cd
"use strict";

/**
 * Advanced Fitting Calculator for Phase 3 Duct Physics Implementation
 *
 * This service extends the basic FittingLossCalculator with advanced capabilities including:
 * - Multi-parameter K-factor calculations
 * - Performance curve interpolation
 * - Interaction effects between adjacent fittings
 * - Method selection algorithms
 * - Complex fitting configurations
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_2ikx9gugjk() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/AdvancedFittingCalculator.ts";
  var hash = "859d0cce45e877089da82926072b78e9ca80fd7e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/AdvancedFittingCalculator.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "1": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "2": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "3": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "5": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "6": {
        start: {
          line: 19,
          column: 51
        },
        end: {
          line: 19,
          column: 63
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "9": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "11": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 30,
          column: 2
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "14": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 47,
          column: 4
        }
      },
      "15": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "17": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 95
        }
      },
      "19": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 95
        }
      },
      "20": {
        start: {
          line: 35,
          column: 77
        },
        end: {
          line: 35,
          column: 95
        }
      },
      "21": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 22
        }
      },
      "22": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 26
        }
      },
      "23": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 46,
          column: 6
        }
      },
      "24": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "25": {
        start: {
          line: 41,
          column: 35
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "26": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 23
        }
      },
      "27": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 137
        }
      },
      "28": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 43,
          column: 137
        }
      },
      "29": {
        start: {
          line: 43,
          column: 38
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "30": {
        start: {
          line: 43,
          column: 56
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "31": {
        start: {
          line: 43,
          column: 78
        },
        end: {
          line: 43,
          column: 137
        }
      },
      "32": {
        start: {
          line: 43,
          column: 102
        },
        end: {
          line: 43,
          column: 137
        }
      },
      "33": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "34": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 22
        }
      },
      "35": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 62
        }
      },
      "36": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 43
        }
      },
      "37": {
        start: {
          line: 50,
          column: 11
        },
        end: {
          line: 50,
          column: 38
        }
      },
      "38": {
        start: {
          line: 51,
          column: 13
        },
        end: {
          line: 51,
          column: 42
        }
      },
      "39": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 66
        }
      },
      "40": {
        start: {
          line: 53,
          column: 31
        },
        end: {
          line: 53,
          column: 70
        }
      },
      "41": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "42": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "43": {
        start: {
          line: 61,
          column: 36
        },
        end: {
          line: 61,
          column: 80
        }
      },
      "44": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 68
        }
      },
      "45": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 78
        }
      },
      "46": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 77
        }
      },
      "47": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "48": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 67
        }
      },
      "49": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 75
        }
      },
      "50": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 87
        }
      },
      "51": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 91
        }
      },
      "52": {
        start: {
          line: 84,
          column: 35
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "53": {
        start: {
          line: 88,
          column: 34
        },
        end: {
          line: 88,
          column: 91
        }
      },
      "54": {
        start: {
          line: 90,
          column: 35
        },
        end: {
          line: 90,
          column: 110
        }
      },
      "55": {
        start: {
          line: 92,
          column: 34
        },
        end: {
          line: 92,
          column: 97
        }
      },
      "56": {
        start: {
          line: 94,
          column: 32
        },
        end: {
          line: 94,
          column: 123
        }
      },
      "57": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "58": {
        start: {
          line: 100,
          column: 58
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "59": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "60": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 72
        }
      },
      "61": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "62": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 76
        }
      },
      "63": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "64": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 78
        }
      },
      "65": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 72
        }
      },
      "66": {
        start: {
          line: 135,
          column: 33
        },
        end: {
          line: 135,
          column: 115
        }
      },
      "67": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "68": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 81
        }
      },
      "69": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 98
        }
      },
      "70": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 100
        }
      },
      "71": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 94
        }
      },
      "72": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 77
        }
      },
      "73": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 85
        }
      },
      "74": {
        start: {
          line: 159,
          column: 22
        },
        end: {
          line: 159,
          column: 72
        }
      },
      "75": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "76": {
        start: {
          line: 162,
          column: 35
        },
        end: {
          line: 162,
          column: 103
        }
      },
      "77": {
        start: {
          line: 163,
          column: 31
        },
        end: {
          line: 163,
          column: 92
        }
      },
      "78": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 34
        }
      },
      "79": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "80": {
        start: {
          line: 168,
          column: 39
        },
        end: {
          line: 168,
          column: 161
        }
      },
      "81": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 42
        }
      },
      "82": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "83": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 51
        }
      },
      "84": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 42
        }
      },
      "85": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "86": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 75
        }
      },
      "87": {
        start: {
          line: 185,
          column: 22
        },
        end: {
          line: 185,
          column: 111
        }
      },
      "88": {
        start: {
          line: 187,
          column: 31
        },
        end: {
          line: 187,
          column: 94
        }
      },
      "89": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 189,
          column: 84
        }
      },
      "90": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 28
        }
      },
      "91": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 90
        }
      },
      "92": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "93": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 165
        }
      },
      "94": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "95": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 96
        }
      },
      "96": {
        start: {
          line: 211,
          column: 29
        },
        end: {
          line: 211,
          column: 30
        }
      },
      "97": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 214,
          column: 17
        }
      },
      "98": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 212,
          column: 30
        }
      },
      "99": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 87
        }
      },
      "100": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 30
        }
      },
      "101": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 106
        }
      },
      "102": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 27
        }
      },
      "103": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 93
        }
      },
      "104": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "105": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 47
        }
      },
      "106": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 53
        }
      },
      "107": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "108": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 50
        }
      },
      "109": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 47
        }
      },
      "110": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 128
        }
      },
      "111": {
        start: {
          line: 245,
          column: 34
        },
        end: {
          line: 245,
          column: 119
        }
      },
      "112": {
        start: {
          line: 246,
          column: 35
        },
        end: {
          line: 246,
          column: 121
        }
      },
      "113": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 46
        }
      },
      "114": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 112
        }
      },
      "115": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 89
        }
      },
      "116": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 27
        }
      },
      "117": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "118": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 23
        }
      },
      "119": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "120": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 114
        }
      },
      "121": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 105
        }
      },
      "122": {
        start: {
          line: 272,
          column: 29
        },
        end: {
          line: 272,
          column: 30
        }
      },
      "123": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 275,
          column: 17
        }
      },
      "124": {
        start: {
          line: 273,
          column: 29
        },
        end: {
          line: 273,
          column: 30
        }
      },
      "125": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 274,
          column: 87
        }
      },
      "126": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 30
        }
      },
      "127": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 27
        }
      },
      "128": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 25
        }
      },
      "129": {
        start: {
          line: 294,
          column: 23
        },
        end: {
          line: 294,
          column: 65
        }
      },
      "130": {
        start: {
          line: 294,
          column: 55
        },
        end: {
          line: 294,
          column: 64
        }
      },
      "131": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "132": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 31
        }
      },
      "133": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "134": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "135": {
        start: {
          line: 302,
          column: 32
        },
        end: {
          line: 302,
          column: 48
        }
      },
      "136": {
        start: {
          line: 303,
          column: 30
        },
        end: {
          line: 303,
          column: 91
        }
      },
      "137": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 78
        }
      },
      "138": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 51
        }
      },
      "139": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "140": {
        start: {
          line: 311,
          column: 21
        },
        end: {
          line: 311,
          column: 22
        }
      },
      "141": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "142": {
        start: {
          line: 314,
          column: 30
        },
        end: {
          line: 314,
          column: 94
        }
      },
      "143": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 77
        }
      },
      "144": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 27
        }
      },
      "145": {
        start: {
          line: 324,
          column: 28
        },
        end: {
          line: 324,
          column: 36
        }
      },
      "146": {
        start: {
          line: 325,
          column: 28
        },
        end: {
          line: 325,
          column: 72
        }
      },
      "147": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "148": {
        start: {
          line: 328,
          column: 35
        },
        end: {
          line: 328,
          column: 98
        }
      },
      "149": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 44
        }
      },
      "150": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "151": {
        start: {
          line: 333,
          column: 38
        },
        end: {
          line: 333,
          column: 71
        }
      },
      "152": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 47
        }
      },
      "153": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "154": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 33
        }
      },
      "155": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 29
        }
      },
      "156": {
        start: {
          line: 347,
          column: 29
        },
        end: {
          line: 347,
          column: 31
        }
      },
      "157": {
        start: {
          line: 348,
          column: 26
        },
        end: {
          line: 348,
          column: 74
        }
      },
      "158": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 36
        }
      },
      "159": {
        start: {
          line: 355,
          column: 33
        },
        end: {
          line: 355,
          column: 81
        }
      },
      "160": {
        start: {
          line: 356,
          column: 35
        },
        end: {
          line: 356,
          column: 85
        }
      },
      "161": {
        start: {
          line: 357,
          column: 32
        },
        end: {
          line: 357,
          column: 35
        }
      },
      "162": {
        start: {
          line: 358,
          column: 29
        },
        end: {
          line: 358,
          column: 31
        }
      },
      "163": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "164": {
        start: {
          line: 361,
          column: 32
        },
        end: {
          line: 361,
          column: 83
        }
      },
      "165": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 52
        }
      },
      "166": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 43
        }
      },
      "167": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "168": {
        start: {
          line: 367,
          column: 32
        },
        end: {
          line: 367,
          column: 87
        }
      },
      "169": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 52
        }
      },
      "170": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 43
        }
      },
      "171": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 375,
          column: 10
        }
      },
      "172": {
        start: {
          line: 374,
          column: 62
        },
        end: {
          line: 374,
          column: 93
        }
      },
      "173": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 385,
          column: 10
        }
      },
      "174": {
        start: {
          line: 393,
          column: 21
        },
        end: {
          line: 393,
          column: 24
        }
      },
      "175": {
        start: {
          line: 394,
          column: 27
        },
        end: {
          line: 394,
          column: 32
        }
      },
      "176": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "177": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 409,
          column: 13
        }
      },
      "178": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 42
        }
      },
      "179": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 407,
          column: 17
        }
      },
      "180": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 400,
          column: 42
        }
      },
      "181": {
        start: {
          line: 402,
          column: 21
        },
        end: {
          line: 407,
          column: 17
        }
      },
      "182": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 44
        }
      },
      "183": {
        start: {
          line: 406,
          column: 20
        },
        end: {
          line: 406,
          column: 41
        }
      },
      "184": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 408,
          column: 22
        }
      },
      "185": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 417,
          column: 10
        }
      },
      "186": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 430,
          column: 10
        }
      },
      "187": {
        start: {
          line: 436,
          column: 33
        },
        end: {
          line: 436,
          column: 115
        }
      },
      "188": {
        start: {
          line: 438,
          column: 27
        },
        end: {
          line: 438,
          column: 104
        }
      },
      "189": {
        start: {
          line: 440,
          column: 32
        },
        end: {
          line: 440,
          column: 85
        }
      },
      "190": {
        start: {
          line: 442,
          column: 27
        },
        end: {
          line: 442,
          column: 92
        }
      },
      "191": {
        start: {
          line: 444,
          column: 31
        },
        end: {
          line: 444,
          column: 95
        }
      },
      "192": {
        start: {
          line: 446,
          column: 33
        },
        end: {
          line: 446,
          column: 106
        }
      },
      "193": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 453,
          column: 10
        }
      },
      "194": {
        start: {
          line: 460,
          column: 30
        },
        end: {
          line: 460,
          column: 77
        }
      },
      "195": {
        start: {
          line: 461,
          column: 32
        },
        end: {
          line: 461,
          column: 102
        }
      },
      "196": {
        start: {
          line: 462,
          column: 27
        },
        end: {
          line: 462,
          column: 28
        }
      },
      "197": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "198": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 29
        }
      },
      "199": {
        start: {
          line: 466,
          column: 13
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "200": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 29
        }
      },
      "201": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 75
        }
      },
      "202": {
        start: {
          line: 477,
          column: 30
        },
        end: {
          line: 477,
          column: 34
        }
      },
      "203": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 65
        }
      },
      "204": {
        start: {
          line: 485,
          column: 31
        },
        end: {
          line: 485,
          column: 72
        }
      },
      "205": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "206": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 160
        }
      },
      "207": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 493,
          column: 9
        }
      },
      "208": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 112
        }
      },
      "209": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "210": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 120
        }
      },
      "211": {
        start: {
          line: 503,
          column: 23
        },
        end: {
          line: 503,
          column: 25
        }
      },
      "212": {
        start: {
          line: 504,
          column: 25
        },
        end: {
          line: 504,
          column: 27
        }
      },
      "213": {
        start: {
          line: 506,
          column: 33
        },
        end: {
          line: 506,
          column: 115
        }
      },
      "214": {
        start: {
          line: 507,
          column: 24
        },
        end: {
          line: 507,
          column: 55
        }
      },
      "215": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "216": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 514,
          column: 15
        }
      },
      "217": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "218": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 522,
          column: 15
        }
      },
      "219": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 546,
          column: 9
        }
      },
      "220": {
        start: {
          line: 526,
          column: 35
        },
        end: {
          line: 526,
          column: 107
        }
      },
      "221": {
        start: {
          line: 527,
          column: 31
        },
        end: {
          line: 527,
          column: 92
        }
      },
      "222": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 545,
          column: 13
        }
      },
      "223": {
        start: {
          line: 529,
          column: 16
        },
        end: {
          line: 544,
          column: 17
        }
      },
      "224": {
        start: {
          line: 530,
          column: 20
        },
        end: {
          line: 535,
          column: 23
        }
      },
      "225": {
        start: {
          line: 537,
          column: 21
        },
        end: {
          line: 544,
          column: 17
        }
      },
      "226": {
        start: {
          line: 538,
          column: 20
        },
        end: {
          line: 543,
          column: 23
        }
      },
      "227": {
        start: {
          line: 548,
          column: 34
        },
        end: {
          line: 548,
          column: 78
        }
      },
      "228": {
        start: {
          line: 549,
          column: 33
        },
        end: {
          line: 549,
          column: 115
        }
      },
      "229": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 557,
          column: 9
        }
      },
      "230": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 556,
          column: 15
        }
      },
      "231": {
        start: {
          line: 558,
          column: 33
        },
        end: {
          line: 563,
          column: 9
        }
      },
      "232": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 569,
          column: 10
        }
      },
      "233": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 594,
          column: 9
        }
      },
      "234": {
        start: {
          line: 577,
          column: 16
        },
        end: {
          line: 577,
          column: 63
        }
      },
      "235": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 579,
          column: 63
        }
      },
      "236": {
        start: {
          line: 581,
          column: 16
        },
        end: {
          line: 581,
          column: 64
        }
      },
      "237": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 583,
          column: 64
        }
      },
      "238": {
        start: {
          line: 585,
          column: 16
        },
        end: {
          line: 585,
          column: 49
        }
      },
      "239": {
        start: {
          line: 587,
          column: 16
        },
        end: {
          line: 587,
          column: 49
        }
      },
      "240": {
        start: {
          line: 589,
          column: 16
        },
        end: {
          line: 589,
          column: 89
        }
      },
      "241": {
        start: {
          line: 591,
          column: 16
        },
        end: {
          line: 591,
          column: 90
        }
      },
      "242": {
        start: {
          line: 593,
          column: 16
        },
        end: {
          line: 593,
          column: 29
        }
      },
      "243": {
        start: {
          line: 600,
          column: 32
        },
        end: {
          line: 600,
          column: 34
        }
      },
      "244": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 610,
          column: 9
        }
      },
      "245": {
        start: {
          line: 603,
          column: 12
        },
        end: {
          line: 609,
          column: 15
        }
      },
      "246": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 619,
          column: 9
        }
      },
      "247": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 618,
          column: 15
        }
      },
      "248": {
        start: {
          line: 621,
          column: 31
        },
        end: {
          line: 621,
          column: 72
        }
      },
      "249": {
        start: {
          line: 622,
          column: 26
        },
        end: {
          line: 622,
          column: 76
        }
      },
      "250": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 631,
          column: 9
        }
      },
      "251": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 630,
          column: 15
        }
      },
      "252": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 640,
          column: 9
        }
      },
      "253": {
        start: {
          line: 633,
          column: 12
        },
        end: {
          line: 639,
          column: 15
        }
      },
      "254": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 650,
          column: 9
        }
      },
      "255": {
        start: {
          line: 643,
          column: 12
        },
        end: {
          line: 649,
          column: 15
        }
      },
      "256": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 31
        }
      },
      "257": {
        start: {
          line: 657,
          column: 21
        },
        end: {
          line: 657,
          column: 52
        }
      },
      "258": {
        start: {
          line: 659,
          column: 8
        },
        end: {
          line: 670,
          column: 9
        }
      },
      "259": {
        start: {
          line: 660,
          column: 29
        },
        end: {
          line: 660,
          column: 58
        }
      },
      "260": {
        start: {
          line: 661,
          column: 12
        },
        end: {
          line: 669,
          column: 13
        }
      },
      "261": {
        start: {
          line: 662,
          column: 29
        },
        end: {
          line: 662,
          column: 47
        }
      },
      "262": {
        start: {
          line: 663,
          column: 16
        },
        end: {
          line: 668,
          column: 17
        }
      },
      "263": {
        start: {
          line: 664,
          column: 35
        },
        end: {
          line: 664,
          column: 51
        }
      },
      "264": {
        start: {
          line: 665,
          column: 20
        },
        end: {
          line: 667,
          column: 21
        }
      },
      "265": {
        start: {
          line: 666,
          column: 24
        },
        end: {
          line: 666,
          column: 38
        }
      },
      "266": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 20
        }
      },
      "267": {
        start: {
          line: 677,
          column: 21
        },
        end: {
          line: 677,
          column: 52
        }
      },
      "268": {
        start: {
          line: 678,
          column: 25
        },
        end: {
          line: 678,
          column: 27
        }
      },
      "269": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 692,
          column: 9
        }
      },
      "270": {
        start: {
          line: 680,
          column: 29
        },
        end: {
          line: 680,
          column: 58
        }
      },
      "271": {
        start: {
          line: 681,
          column: 12
        },
        end: {
          line: 691,
          column: 13
        }
      },
      "272": {
        start: {
          line: 682,
          column: 29
        },
        end: {
          line: 682,
          column: 47
        }
      },
      "273": {
        start: {
          line: 683,
          column: 16
        },
        end: {
          line: 690,
          column: 17
        }
      },
      "274": {
        start: {
          line: 684,
          column: 35
        },
        end: {
          line: 684,
          column: 51
        }
      },
      "275": {
        start: {
          line: 685,
          column: 20
        },
        end: {
          line: 689,
          column: 23
        }
      },
      "276": {
        start: {
          line: 693,
          column: 8
        },
        end: {
          line: 693,
          column: 123
        }
      },
      "277": {
        start: {
          line: 693,
          column: 39
        },
        end: {
          line: 693,
          column: 121
        }
      },
      "278": {
        start: {
          line: 696,
          column: 0
        },
        end: {
          line: 696,
          column: 62
        }
      },
      "279": {
        start: {
          line: 697,
          column: 0
        },
        end: {
          line: 697,
          column: 54
        }
      },
      "280": {
        start: {
          line: 698,
          column: 0
        },
        end: {
          line: 698,
          column: 101
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 74
          },
          end: {
            line: 15,
            column: 75
          }
        },
        loc: {
          start: {
            line: 15,
            column: 96
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 38
          },
          end: {
            line: 19,
            column: 39
          }
        },
        loc: {
          start: {
            line: 19,
            column: 49
          },
          end: {
            line: 19,
            column: 65
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 80
          },
          end: {
            line: 26,
            column: 81
          }
        },
        loc: {
          start: {
            line: 26,
            column: 95
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 5
          },
          end: {
            line: 28,
            column: 6
          }
        },
        loc: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 52
          }
        },
        loc: {
          start: {
            line: 31,
            column: 63
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 19
          }
        },
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 33,
            column: 49
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 37,
            column: 9
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 40,
            column: 12
          }
        },
        loc: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 40
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 38
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 58
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 79
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 74
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 100,
            column: 53
          },
          end: {
            line: 100,
            column: 54
          }
        },
        loc: {
          start: {
            line: 100,
            column: 58
          },
          end: {
            line: 100,
            column: 67
          }
        },
        line: 100
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 59
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 111
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 69
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 134
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 64
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 152
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 81
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 158
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 83
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 180
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 77
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 195
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 68
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 202
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 64
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 230
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 67
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 259
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 58
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 285
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 62
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 293
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 294,
            column: 45
          },
          end: {
            line: 294,
            column: 46
          }
        },
        loc: {
          start: {
            line: 294,
            column: 55
          },
          end: {
            line: 294,
            column: 64
          }
        },
        line: 294
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 68
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 323
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 55
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 345
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 62
          },
          end: {
            line: 376,
            column: 5
          }
        },
        line: 354
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 374,
            column: 57
          },
          end: {
            line: 374,
            column: 58
          }
        },
        loc: {
          start: {
            line: 374,
            column: 62
          },
          end: {
            line: 374,
            column: 93
          }
        },
        line: 374
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 42
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 380
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 73
          },
          end: {
            line: 418,
            column: 5
          }
        },
        line: 390
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        loc: {
          start: {
            line: 422,
            column: 77
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 422
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 77
          },
          end: {
            line: 454,
            column: 5
          }
        },
        line: 435
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        },
        loc: {
          start: {
            line: 458,
            column: 60
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 458
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        loc: {
          start: {
            line: 474,
            column: 57
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 474
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 483,
            column: 4
          },
          end: {
            line: 483,
            column: 5
          }
        },
        loc: {
          start: {
            line: 483,
            column: 65
          },
          end: {
            line: 498,
            column: 5
          }
        },
        line: 483
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 502,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        },
        loc: {
          start: {
            line: 502,
            column: 65
          },
          end: {
            line: 570,
            column: 5
          }
        },
        line: 502
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 574,
            column: 5
          }
        },
        loc: {
          start: {
            line: 574,
            column: 54
          },
          end: {
            line: 595,
            column: 5
          }
        },
        line: 574
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 599,
            column: 4
          },
          end: {
            line: 599,
            column: 5
          }
        },
        loc: {
          start: {
            line: 599,
            column: 98
          },
          end: {
            line: 652,
            column: 5
          }
        },
        line: 599
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 656,
            column: 4
          },
          end: {
            line: 656,
            column: 5
          }
        },
        loc: {
          start: {
            line: 656,
            column: 46
          },
          end: {
            line: 672,
            column: 5
          }
        },
        line: 656
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 676,
            column: 4
          },
          end: {
            line: 676,
            column: 5
          }
        },
        loc: {
          start: {
            line: 676,
            column: 35
          },
          end: {
            line: 694,
            column: 5
          }
        },
        line: 676
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 693,
            column: 29
          },
          end: {
            line: 693,
            column: 30
          }
        },
        loc: {
          start: {
            line: 693,
            column: 39
          },
          end: {
            line: 693,
            column: 121
          }
        },
        line: 693
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 27
          }
        }, {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 51
          }
        }, {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 25,
            column: 2
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 25,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 74
          },
          end: {
            line: 22,
            column: 1
          }
        }, {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 84
          }
        }],
        line: 18
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 18,
            column: 47
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 84
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 63
          }
        }, {
          start: {
            line: 18,
            column: 67
          },
          end: {
            line: 18,
            column: 84
          }
        }],
        line: 18
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "8": {
        loc: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 30,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 30
          }
        }, {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 26,
            column: 57
          }
        }, {
          start: {
            line: 26,
            column: 63
          },
          end: {
            line: 30,
            column: 1
          }
        }],
        line: 26
      },
      "9": {
        loc: {
          start: {
            line: 26,
            column: 63
          },
          end: {
            line: 30,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 80
          },
          end: {
            line: 28,
            column: 1
          }
        }, {
          start: {
            line: 28,
            column: 5
          },
          end: {
            line: 30,
            column: 1
          }
        }],
        line: 26
      },
      "10": {
        loc: {
          start: {
            line: 31,
            column: 19
          },
          end: {
            line: 47,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 24
          }
        }, {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 47,
            column: 4
          }
        }],
        line: 31
      },
      "11": {
        loc: {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 33,
            column: 44
          }
        }, {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 37,
            column: 9
          }
        }],
        line: 33
      },
      "12": {
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 15
          }
        }, {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 33
          }
        }],
        line: 41
      },
      "15": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "16": {
        loc: {
          start: {
            line: 43,
            column: 78
          },
          end: {
            line: 43,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 78
          },
          end: {
            line: 43,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "17": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 35
          },
          end: {
            line: 86,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 14
          },
          end: {
            line: 85,
            column: 69
          }
        }, {
          start: {
            line: 86,
            column: 14
          },
          end: {
            line: 86,
            column: 49
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 114,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 50
          }
        }, {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 113
          }
        }],
        line: 113
      },
      "21": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 119,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 43
          }
        }, {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 83
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "24": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 44
          }
        }, {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 56
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 67
          }
        }],
        line: 123
      },
      "25": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 138,
            column: 81
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 140,
            column: 98
          }
        }, {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 142,
            column: 100
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 144,
            column: 94
          }
        }, {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 146,
            column: 77
          }
        }],
        line: 136
      },
      "26": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "27": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "28": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 57
          }
        }, {
          start: {
            line: 181,
            column: 61
          },
          end: {
            line: 181,
            column: 118
          }
        }],
        line: 181
      },
      "29": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "30": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 53
          }
        }, {
          start: {
            line: 204,
            column: 57
          },
          end: {
            line: 204,
            column: 98
          }
        }],
        line: 204
      },
      "31": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 209,
            column: 96
          }
        }, {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 218,
            column: 106
          }
        }, {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 222,
            column: 27
          }
        }, {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 224,
            column: 93
          }
        }],
        line: 207
      },
      "32": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 233,
            column: 47
          }
        }, {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 235,
            column: 53
          }
        }, {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 237,
            column: 49
          }
        }, {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 239,
            column: 50
          }
        }, {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 241,
            column: 47
          }
        }, {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 243,
            column: 128
          }
        }, {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 250,
            column: 112
          }
        }, {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 27
          }
        }],
        line: 231
      },
      "33": {
        loc: {
          start: {
            line: 243,
            column: 70
          },
          end: {
            line: 243,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 70
          },
          end: {
            line: 243,
            column: 120
          }
        }, {
          start: {
            line: 243,
            column: 124
          },
          end: {
            line: 243,
            column: 126
          }
        }],
        line: 243
      },
      "34": {
        loc: {
          start: {
            line: 245,
            column: 54
          },
          end: {
            line: 245,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 54
          },
          end: {
            line: 245,
            column: 104
          }
        }, {
          start: {
            line: 245,
            column: 108
          },
          end: {
            line: 245,
            column: 110
          }
        }],
        line: 245
      },
      "35": {
        loc: {
          start: {
            line: 246,
            column: 55
          },
          end: {
            line: 246,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 55
          },
          end: {
            line: 246,
            column: 106
          }
        }, {
          start: {
            line: 246,
            column: 110
          },
          end: {
            line: 246,
            column: 112
          }
        }],
        line: 246
      },
      "36": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "37": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 260,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 260,
            column: 53
          }
        }, {
          start: {
            line: 260,
            column: 57
          },
          end: {
            line: 260,
            column: 98
          }
        }],
        line: 260
      },
      "38": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 266,
            column: 114
          }
        }, {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 269,
            column: 105
          }
        }, {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 279,
            column: 27
          }
        }],
        line: 263
      },
      "39": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "40": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "41": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        }, {
          start: {
            line: 306,
            column: 17
          },
          end: {
            line: 308,
            column: 13
          }
        }],
        line: 300
      },
      "42": {
        loc: {
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "43": {
        loc: {
          start: {
            line: 312,
            column: 16
          },
          end: {
            line: 312,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 16
          },
          end: {
            line: 312,
            column: 45
          }
        }, {
          start: {
            line: 312,
            column: 49
          },
          end: {
            line: 312,
            column: 82
          }
        }],
        line: 312
      },
      "44": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "45": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "46": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "47": {
        loc: {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 409,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 409,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "48": {
        loc: {
          start: {
            line: 399,
            column: 16
          },
          end: {
            line: 407,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 16
          },
          end: {
            line: 407,
            column: 17
          }
        }, {
          start: {
            line: 402,
            column: 21
          },
          end: {
            line: 407,
            column: 17
          }
        }],
        line: 399
      },
      "49": {
        loc: {
          start: {
            line: 402,
            column: 21
          },
          end: {
            line: 407,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 21
          },
          end: {
            line: 407,
            column: 17
          }
        }, {
          start: {
            line: 405,
            column: 21
          },
          end: {
            line: 407,
            column: 17
          }
        }],
        line: 402
      },
      "50": {
        loc: {
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: 466,
            column: 13
          },
          end: {
            line: 468,
            column: 9
          }
        }],
        line: 463
      },
      "51": {
        loc: {
          start: {
            line: 466,
            column: 13
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 13
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "52": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "53": {
        loc: {
          start: {
            line: 486,
            column: 12
          },
          end: {
            line: 487,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 486,
            column: 12
          },
          end: {
            line: 486,
            column: 62
          }
        }, {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 62
          }
        }],
        line: 486
      },
      "54": {
        loc: {
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 493,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 493,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "55": {
        loc: {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 491,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 491,
            column: 41
          }
        }, {
          start: {
            line: 491,
            column: 45
          },
          end: {
            line: 491,
            column: 75
          }
        }],
        line: 491
      },
      "56": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "57": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "58": {
        loc: {
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "59": {
        loc: {
          start: {
            line: 528,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 528
      },
      "60": {
        loc: {
          start: {
            line: 529,
            column: 16
          },
          end: {
            line: 544,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 529,
            column: 16
          },
          end: {
            line: 544,
            column: 17
          }
        }, {
          start: {
            line: 537,
            column: 21
          },
          end: {
            line: 544,
            column: 17
          }
        }],
        line: 529
      },
      "61": {
        loc: {
          start: {
            line: 537,
            column: 21
          },
          end: {
            line: 544,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 21
          },
          end: {
            line: 544,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "62": {
        loc: {
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 557,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 557,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "63": {
        loc: {
          start: {
            line: 575,
            column: 8
          },
          end: {
            line: 594,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 576,
            column: 12
          },
          end: {
            line: 577,
            column: 63
          }
        }, {
          start: {
            line: 578,
            column: 12
          },
          end: {
            line: 579,
            column: 63
          }
        }, {
          start: {
            line: 580,
            column: 12
          },
          end: {
            line: 581,
            column: 64
          }
        }, {
          start: {
            line: 582,
            column: 12
          },
          end: {
            line: 583,
            column: 64
          }
        }, {
          start: {
            line: 584,
            column: 12
          },
          end: {
            line: 585,
            column: 49
          }
        }, {
          start: {
            line: 586,
            column: 12
          },
          end: {
            line: 587,
            column: 49
          }
        }, {
          start: {
            line: 588,
            column: 12
          },
          end: {
            line: 589,
            column: 89
          }
        }, {
          start: {
            line: 590,
            column: 12
          },
          end: {
            line: 591,
            column: 90
          }
        }, {
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 593,
            column: 29
          }
        }],
        line: 575
      },
      "64": {
        loc: {
          start: {
            line: 589,
            column: 23
          },
          end: {
            line: 589,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 589,
            column: 23
          },
          end: {
            line: 589,
            column: 53
          }
        }, {
          start: {
            line: 589,
            column: 57
          },
          end: {
            line: 589,
            column: 88
          }
        }],
        line: 589
      },
      "65": {
        loc: {
          start: {
            line: 591,
            column: 23
          },
          end: {
            line: 591,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 23
          },
          end: {
            line: 591,
            column: 53
          }
        }, {
          start: {
            line: 591,
            column: 57
          },
          end: {
            line: 591,
            column: 89
          }
        }],
        line: 591
      },
      "66": {
        loc: {
          start: {
            line: 602,
            column: 8
          },
          end: {
            line: 610,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 602,
            column: 8
          },
          end: {
            line: 610,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 602
      },
      "67": {
        loc: {
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 619,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 619,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "68": {
        loc: {
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 631,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 631,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 623
      },
      "69": {
        loc: {
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 640,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 640,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 632
      },
      "70": {
        loc: {
          start: {
            line: 642,
            column: 8
          },
          end: {
            line: 650,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 642,
            column: 8
          },
          end: {
            line: 650,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 642
      },
      "71": {
        loc: {
          start: {
            line: 642,
            column: 12
          },
          end: {
            line: 642,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 642,
            column: 12
          },
          end: {
            line: 642,
            column: 41
          }
        }, {
          start: {
            line: 642,
            column: 45
          },
          end: {
            line: 642,
            column: 75
          }
        }],
        line: 642
      },
      "72": {
        loc: {
          start: {
            line: 665,
            column: 20
          },
          end: {
            line: 667,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 665,
            column: 20
          },
          end: {
            line: 667,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 665
      },
      "73": {
        loc: {
          start: {
            line: 693,
            column: 39
          },
          end: {
            line: 693,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 693,
            column: 39
          },
          end: {
            line: 693,
            column: 75
          }
        }, {
          start: {
            line: 693,
            column: 79
          },
          end: {
            line: 693,
            column: 121
          }
        }],
        line: 693
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0, 0],
      "32": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/AdvancedFittingCalculator.ts",
      mappings: ";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uCAAyB;AACzB,2CAA6B;AAC7B,mEAAgE;AAChE,uEAgBsC;AAEtC,MAAa,yBAA0B,SAAQ,6CAAqB;IAIlE;;OAEG;IACK,MAAM,CAAC,wBAAwB;QACrC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC/B,IAAI,CAAC;gBACH,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;gBACjE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACtD,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;gBAC9D,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,4BAA4B,CACxC,MAAoC,EACpC,cAA8B,EAC9B,aAA6B;QAG7B,wCAAwC;QACxC,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAE3D,wCAAwC;QACxC,MAAM,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAEpE,+BAA+B;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;QAEhF,2BAA2B;QAC3B,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;QAEpF,2DAA2D;QAC3D,MAAM,kBAAkB,GAAG,aAAa;YACtC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,aAAa,CAAC;YACzD,CAAC,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAExC,4BAA4B;QAC5B,MAAM,iBAAiB,GAAG,aAAa,GAAG,kBAAkB,CAAC,sBAAsB,CAAC;QAEpF,gCAAgC;QAChC,MAAM,kBAAkB,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,cAAc,EAAE,iBAAiB,CAAC,CAAC;QAEvG,mBAAmB;QACnB,MAAM,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,cAAc,EAAE,iBAAiB,CAAC,CAAC;QAE1F,2BAA2B;QAC3B,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;QAEpH,gCAAgC;QAChC,OAAO;YACL,YAAY,EAAE,iBAAiB;YAC/B,gBAAgB,EAAE,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,UAAU,CAAC;YACpG,OAAO,EAAE,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,UAAU,CAAC;YAC/G,QAAQ,EAAE,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YACxD,iBAAiB,EAAE,MAAM;YACzB,kBAAkB,EAAE,kBAAkB;YACtC,kBAAkB,EAAE,kBAAkB;YACtC,iBAAiB,EAAE,iBAAiB;YACpC,eAAe,EAAE,eAAe;SACjC,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,uBAAuB,CACpC,MAAoC,EACpC,cAA8B;QAG9B,iEAAiE;QACjE,IAAI,cAAc,CAAC,cAAc,GAAG,MAAM;YACtC,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,KAAK,wCAAiB,CAAC,WAAW,EAAE,CAAC;YACnF,OAAO,wCAAiB,CAAC,WAAW,CAAC;QACvC,CAAC;QAED,2DAA2D;QAC3D,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS;YAC/B,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5E,OAAO,wCAAiB,CAAC,eAAe,CAAC;QAC3C,CAAC;QAED,yDAAyD;QACzD,IAAI,MAAM,CAAC,UAAU,KAAK,UAAU;YAChC,MAAM,CAAC,mBAAmB,CAAC,iBAAiB;YAC5C,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5D,OAAO,wCAAiB,CAAC,iBAAiB,CAAC;QAC7C,CAAC;QAED,iDAAiD;QACjD,OAAO,wCAAiB,CAAC,eAAe,CAAC;IAC3C,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,yBAAyB,CACtC,MAAoC,EACpC,cAA8B,EAC9B,MAAyB;QAGzB,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;QAE5G,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,wCAAiB,CAAC,eAAe;gBACpC,OAAO,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;YAEnE,KAAK,wCAAiB,CAAC,eAAe;gBACpC,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;YAEpF,KAAK,wCAAiB,CAAC,iBAAiB;gBACtC,OAAO,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;YAEtF,KAAK,wCAAiB,CAAC,WAAW;gBAChC,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;YAEhF;gBACE,MAAM,IAAI,KAAK,CAAC,mCAAmC,MAAM,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,0BAA0B,CACvC,MAAoC,EACpC,gBAAwB;QAExB,OAAO,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,WAAW,GAAG,gBAAgB,CAAC;IAC/E,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,2BAA2B,CACxC,MAAoC,EACpC,cAA8B,EAC9B,gBAAwB;QAGxB,IAAI,OAAO,GAAG,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC;QAEjE,+BAA+B;QAC/B,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;YACtF,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;YAC5F,MAAM,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;YACjF,OAAO,IAAI,UAAU,CAAC;QACxB,CAAC;QAED,8CAA8C;QAC9C,IAAI,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,kBAAkB,EAAE,OAAO,EAAE,CAAC;YACvE,MAAM,kBAAkB,GAAG,IAAI,CAAC,2BAA2B,CACzD,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,kBAAkB,EACzD,cAAc,CAAC,cAAc,CAC9B,CAAC;YACF,OAAO,IAAI,kBAAkB,CAAC;QAChC,CAAC;QAED,6BAA6B;QAC7B,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;YACpF,OAAO,IAAI,UAAU,CAAC,gBAAgB,CAAC;QACzC,CAAC;QAED,OAAO,OAAO,GAAG,gBAAgB,CAAC;IACpC,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,6BAA6B,CAC1C,MAAoC,EACpC,cAA8B,EAC9B,gBAAwB;QAGxB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,IAAI,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC/G,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACjE,CAAC;QAED,8CAA8C;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QAExG,wCAAwC;QACxC,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;QAEvF,uCAAuC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAE7E,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,uBAAuB,CACpC,MAAoC,EACpC,cAA8B,EAC9B,gBAAwB;QAGxB,0EAA0E;QAC1E,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;IACpF,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,4BAA4B,CACzC,UAA+B,EAC/B,cAAsB;QAGtB,2CAA2C;QAC3C,IAAI,cAAc,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,cAAc,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3F,OAAO,CAAC,IAAI,CAAC,aAAa,UAAU,CAAC,SAAS,UAAU,cAAc,yBAAyB,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3J,CAAC;QAED,QAAQ,UAAU,CAAC,YAAY,EAAE,CAAC;YAChC,KAAK,QAAQ;gBACX,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;YAElF,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,IAAI,MAAM,GAAG,CAAC,CAAC;gBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACxD,MAAM,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,MAAM,CAAC;YAChB,CAAC;YAED,KAAK,aAAa;gBAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC;YAE5F,KAAK,QAAQ;gBACX,0DAA0D;gBAC1D,kCAAkC;gBAClC,OAAO,GAAG,CAAC;YAEb;gBACE,MAAM,IAAI,KAAK,CAAC,kCAAkC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC;QACjF,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,iBAAiB,CAC9B,SAAiB,EACjB,MAAoC,EACpC,cAA8B;QAG9B,QAAQ,SAAS,EAAE,CAAC;YAClB,KAAK,UAAU;gBACb,OAAO,cAAc,CAAC,QAAQ,CAAC;YACjC,KAAK,iBAAiB;gBACpB,OAAO,cAAc,CAAC,cAAc,CAAC;YACvC,KAAK,aAAa;gBAChB,OAAO,cAAc,CAAC,UAAU,CAAC;YACnC,KAAK,aAAa;gBAChB,OAAO,cAAc,CAAC,WAAW,CAAC;YACpC,KAAK,UAAU;gBACb,OAAO,cAAc,CAAC,QAAQ,CAAC;YACjC,KAAK,0BAA0B;gBAC7B,OAAO,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;YAClH,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,aAAa,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxG,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,cAAc,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1G,OAAO,UAAU,GAAG,SAAS,CAAC;YAChC,CAAC;YACD,KAAK,cAAc;gBACjB,OAAO,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC;YAClG;gBACE,OAAO,CAAC,IAAI,CAAC,sBAAsB,SAAS,2BAA2B,CAAC,CAAC;gBACzE,OAAO,GAAG,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,2BAA2B,CACxC,UAAe,EACf,cAAsB;QAGtB,IAAI,cAAc,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,cAAc,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3F,OAAO,GAAG,CAAC,CAAC,oCAAoC;QAClD,CAAC;QAED,QAAQ,UAAU,CAAC,MAAM,EAAE,CAAC;YAC1B,KAAK,WAAW;gBACd,wCAAwC;gBACxC,OAAO,GAAG,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAEpG,KAAK,SAAS;gBACZ,8BAA8B;gBAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAE3F,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACd,+BAA+B;gBAC/B,IAAI,MAAM,GAAG,CAAC,CAAC;gBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACxD,MAAM,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,MAAM,CAAC;YAChB,CAAC;YAED;gBACE,OAAO,GAAG,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,sBAAsB,CACnC,MAA0B,EAC1B,cAA8B;QAG9B,4CAA4C;QAC5C,mFAAmF;QACnF,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,2BAA2B,CACxC,KAAuB,EACvB,cAAsB;QAGtB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1D,wCAAwC;QACxC,IAAI,cAAc,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAClC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,cAAc,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAClD,IAAI,KAAK,CAAC,oBAAoB,EAAE,CAAC;gBAC/B,8BAA8B;gBAC9B,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5E,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,CAAC;iBAAM,CAAC;gBACN,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;QACH,CAAC;QAED,4CAA4C;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAI,cAAc,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACvE,uBAAuB;gBACvB,MAAM,KAAK,GAAG,CAAC,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC;QAED,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW;IACjC,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,sBAAsB,CACnC,QAAgB,EAChB,MAAoC,EACpC,cAA8B;QAG9B,IAAI,aAAa,GAAG,QAAQ,CAAC;QAC7B,MAAM,WAAW,GAAG,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC;QAEjE,yBAAyB;QACzB,IAAI,WAAW,CAAC,qBAAqB,EAAE,CAAC;YACtC,MAAM,cAAc,GAAG,IAAI,CAAC,8BAA8B,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACvF,aAAa,IAAI,cAAc,CAAC;QAClC,CAAC;QAED,qBAAqB;QACrB,IAAI,WAAW,CAAC,iBAAiB,EAAE,CAAC;YAClC,MAAM,iBAAiB,GAAG,cAAc,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,uBAAuB;YACpF,aAAa,IAAI,iBAAiB,CAAC;QACrC,CAAC;QAED,uCAAuC;QACvC,IAAI,WAAW,CAAC,sBAAsB,EAAE,CAAC;YACvC,aAAa,IAAI,GAAG,CAAC,CAAC,0BAA0B;QAClD,CAAC;QAED,OAAO,aAAa,CAAC;IACvB,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,8BAA8B,CAAC,WAAmB;QAC/D,+BAA+B;QAC/B,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,SAAS,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;QACtG,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,2BAA2B,CACxC,MAAoC,EACpC,aAA4B;QAG5B,MAAM,gBAAgB,GAAG,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe;QAC1F,MAAM,kBAAkB,GAAG,aAAa,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAE9E,IAAI,iBAAiB,GAAG,GAAG,CAAC;QAC5B,MAAM,YAAY,GAAyB,EAAE,CAAC;QAE9C,wBAAwB;QACxB,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE,CAAC;YACxC,MAAM,WAAW,GAAG,IAAI,CAAC,4BAA4B,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACxE,iBAAiB,IAAI,WAAW,CAAC,MAAM,CAAC;YACxC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QAED,0BAA0B;QAC1B,KAAK,MAAM,UAAU,IAAI,kBAAkB,EAAE,CAAC;YAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAC5E,iBAAiB,IAAI,WAAW,CAAC,MAAM,CAAC;YACxC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QAED,OAAO;YACL,sBAAsB,EAAE,iBAAiB;YACzC,sBAAsB,EAAE,YAAY;YACpC,uBAAuB,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;SACnF,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,4BAA4B;QACzC,OAAO;YACL,sBAAsB,EAAE,GAAG;YAC3B,sBAAsB,EAAE,EAAE;YAC1B,uBAAuB,EAAE,EAAE;SAC5B,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,4BAA4B,CACzC,eAA6C,EAC7C,cAA4C;QAG5C,qCAAqC;QACrC,mDAAmD;QACnD,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,IAAI,YAAY,GAA8B,KAAK,CAAC;QAEpD,sCAAsC;QACtC,KAAK,MAAM,MAAM,IAAI,cAAc,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;YAC3E,IAAI,MAAM,CAAC,mBAAmB,KAAK,eAAe,CAAC,IAAI,EAAE,CAAC;gBACxD,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC;gBAC1B,IAAI,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC;oBAC3B,YAAY,GAAG,MAAM,CAAC;gBACxB,CAAC;qBAAM,IAAI,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC;oBAClC,YAAY,GAAG,QAAQ,CAAC;gBAC1B,CAAC;qBAAM,CAAC;oBACN,YAAY,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,MAAM;YACR,CAAC;QACH,CAAC;QAED,OAAO;YACL,iBAAiB,EAAE,eAAe,CAAC,EAAE;YACrC,QAAQ,EAAE,CAAC,EAAE,sBAAsB;YACnC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,UAAU;YAChB,YAAY,EAAE,YAAY;SAC3B,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,8BAA8B,CAC3C,cAA4C,EAC5C,iBAA+C;QAG/C,qDAAqD;QACrD,OAAO;YACL,iBAAiB,EAAE,iBAAiB,CAAC,EAAE;YACvC,QAAQ,EAAE,CAAC;YACX,MAAM,EAAE,GAAG,EAAE,8CAA8C;YAC3D,IAAI,EAAE,YAAY;YAClB,YAAY,EAAE,KAAK;SACpB,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,2BAA2B,CACxC,MAAoC,EACpC,cAA8B,EAC9B,YAAoB;QAGpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;QAE5G,8DAA8D;QAC9D,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,YAAY,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjG,+DAA+D;QAC/D,MAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAE9E,wBAAwB;QACxB,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAErF,6DAA6D;QAC7D,MAAM,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,eAAe,GAAG,GAAG,CAAC;QAExF,8BAA8B;QAC9B,MAAM,gBAAgB,GAAG,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,GAAG,CAAC;QAEnG,OAAO;YACL,UAAU,EAAE,UAAU;YACtB,eAAe,EAAE,eAAe;YAChC,UAAU,EAAE,UAAU;YACtB,cAAc,EAAE,cAAc;YAC9B,gBAAgB,EAAE,gBAAgB;SACnC,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,wBAAwB,CACrC,MAAoC,EACpC,cAA8B;QAG9B,oEAAoE;QACpE,MAAM,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,qBAAqB;QAC5F,MAAM,eAAe,GAAG,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAC/F,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;YACpC,YAAY,GAAG,CAAC,CAAC;QACnB,CAAC;aAAM,IAAI,MAAM,CAAC,UAAU,KAAK,UAAU,EAAE,CAAC;YAC5C,YAAY,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,GAAG,eAAe,GAAG,YAAY,CAAC,CAAC;IACrE,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,mBAAmB,CAAC,UAAkB,EAAE,YAAoB;QACzE,sEAAsE;QACtE,8BAA8B;QAC9B,MAAM,aAAa,GAAG,IAAI,CAAC;QAC3B,OAAO,CAAC,UAAU,GAAG,YAAY,GAAG,GAAG,CAAC,GAAG,aAAa,CAAC;IAC3D,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,6BAA6B,CAC1C,MAAoC,EACpC,cAA8B;QAG9B,oDAAoD;QACpD,MAAM,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC;QACjE,IAAI,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO;YAClD,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC;YACvD,MAAM,IAAI,KAAK,CAAC,QAAQ,cAAc,CAAC,UAAU,yCAAyC,cAAc,CAAC,OAAO,KAAK,cAAc,CAAC,OAAO,OAAO,CAAC,CAAC;QACtJ,CAAC;QAED,kCAAkC;QAClC,IAAI,cAAc,CAAC,QAAQ,GAAG,GAAG,IAAI,cAAc,CAAC,QAAQ,GAAG,IAAI,EAAE,CAAC;YACpE,MAAM,IAAI,KAAK,CAAC,YAAY,cAAc,CAAC,QAAQ,+CAA+C,CAAC,CAAC;QACtG,CAAC;QAED,2BAA2B;QAC3B,IAAI,cAAc,CAAC,cAAc,GAAG,IAAI,EAAE,CAAC;YACzC,MAAM,IAAI,KAAK,CAAC,mBAAmB,cAAc,CAAC,cAAc,0CAA0C,CAAC,CAAC;QAC9G,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,eAAe,CAC5B,MAAoC,EACpC,cAA8B,EAC9B,YAAoB;QAGpB,MAAM,MAAM,GAAsB,EAAE,CAAC;QACrC,MAAM,QAAQ,GAAwB,EAAE,CAAC;QAEzC,uCAAuC;QACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;QAC5G,MAAM,OAAO,GAAG,YAAY,GAAG,gBAAgB,CAAC;QAEhD,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC;gBACV,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,6CAA6C;gBACtD,SAAS,EAAE,UAAU;gBACrB,KAAK,EAAE,OAAO;aACf,CAAC,CAAC;QACL,CAAC;QAED,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;gBACV,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,mCAAmC;gBAC5C,SAAS,EAAE,eAAe;gBAC1B,KAAK,EAAE,YAAY;aACpB,CAAC,CAAC;QACL,CAAC;QAED,4CAA4C;QAC5C,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,eAAe,EAAE,CAAC;YAC1C,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;YAChG,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;YAEjF,IAAI,UAAU,EAAE,CAAC;gBACf,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE,CAAC;oBAC9B,MAAM,CAAC,IAAI,CAAC;wBACV,IAAI,EAAE,IAAI,CAAC,MAAM;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS;wBACnC,KAAK,EAAE,cAAc;qBACtB,CAAC,CAAC;gBACL,CAAC;qBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;oBACvC,QAAQ,CAAC,IAAI,CAAC;wBACZ,IAAI,EAAE,IAAI,CAAC,MAAM;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,QAAQ,EAAE,QAAQ;wBAClB,cAAc,EAAE,6BAA6B;qBAC9C,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;QAED,2BAA2B;QAC3B,MAAM,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC;QACvE,MAAM,gBAAgB,GAAG,YAAY,GAAG,CAAC,iBAAiB,CAAC,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;QAE5G,IAAI,gBAAgB,GAAG,YAAY,GAAG,GAAG,EAAE,CAAC;YAC1C,QAAQ,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,+CAA+C;gBACxD,QAAQ,EAAE,QAAQ;gBAClB,cAAc,EAAE,iDAAiD;aAClE,CAAC,CAAC;QACL,CAAC;QAED,MAAM,gBAAgB,GAAqB;YACzC,eAAe,EAAE,MAAM,CAAC,MAAM,KAAK,CAAC;YACpC,eAAe,EAAE,MAAM,CAAC,MAAM,KAAK,CAAC;YACpC,kBAAkB,EAAE,IAAI;YACxB,wBAAwB,EAAE,IAAI;SAC/B,CAAC;QAEF,OAAO;YACL,OAAO,EAAE,MAAM,CAAC,MAAM,KAAK,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;YAClB,gBAAgB,EAAE,gBAAgB;SACnC,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,wBAAwB,CAAC,SAAc,EAAE,KAAsB;QAC5E,QAAQ,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC3B,KAAK,GAAG;gBACN,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACjD,KAAK,GAAG;gBACN,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACjD,KAAK,IAAI;gBACP,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClD,KAAK,IAAI;gBACP,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClD,KAAK,GAAG;gBACN,OAAO,KAAK,KAAK,SAAS,CAAC,KAAK,CAAC;YACnC,KAAK,IAAI;gBACP,OAAO,KAAK,KAAK,SAAS,CAAC,KAAK,CAAC;YACnC,KAAK,IAAI;gBACP,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC3E,KAAK,QAAQ;gBACX,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC5E;gBACE,OAAO,KAAK,CAAC;QACjB,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,uBAAuB,CACpC,MAAoC,EACpC,cAA8B,EAC9B,kBAAsC,EACtC,iBAAoC;QAGpC,MAAM,eAAe,GAAqB,EAAE,CAAC;QAE7C,oCAAoC;QACpC,IAAI,kBAAkB,CAAC,UAAU,GAAG,EAAE,EAAE,CAAC;YACvC,eAAe,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,wEAAwE;gBACrF,eAAe,EAAE,4DAA4D;gBAC7E,kBAAkB,EAAE,QAAQ;aAC7B,CAAC,CAAC;QACL,CAAC;QAED,IAAI,kBAAkB,CAAC,eAAe,GAAG,EAAE,EAAE,CAAC;YAC5C,eAAe,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,0DAA0D;gBACvE,eAAe,EAAE,2BAA2B;gBAC5C,kBAAkB,EAAE,QAAQ;aAC7B,CAAC,CAAC;QACL,CAAC;QAED,6BAA6B;QAC7B,MAAM,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC;QACjE,MAAM,SAAS,GAAG,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC;QAErE,IAAI,SAAS,GAAG,GAAG,EAAE,CAAC;YACpB,eAAe,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,KAAK;gBACf,WAAW,EAAE,uEAAuE;gBACpF,eAAe,EAAE,mCAAmC;gBACpD,kBAAkB,EAAE,MAAM;aAC3B,CAAC,CAAC;QACL,CAAC;QAED,IAAI,SAAS,GAAG,GAAG,EAAE,CAAC;YACpB,eAAe,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,wDAAwD;gBACrE,eAAe,EAAE,iCAAiC;gBAClD,kBAAkB,EAAE,MAAM;aAC3B,CAAC,CAAC;QACL,CAAC;QAED,8BAA8B;QAC9B,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC;YACpE,eAAe,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,KAAK;gBACf,WAAW,EAAE,oEAAoE;gBACjF,eAAe,EAAE,wCAAwC;gBACzD,kBAAkB,EAAE,KAAK;aAC1B,CAAC,CAAC;QACL,CAAC;QAED,OAAO,eAAe,CAAC;IACzB,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,uBAAuB,CAAC,SAAiB;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAE7C,gDAAgD;QAChD,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAC/C,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC7C,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAChC,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;oBAChC,IAAI,MAAM,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;wBAC5B,OAAO,MAAsC,CAAC;oBAChD,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,qBAAqB;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC7C,MAAM,QAAQ,GAA4D,EAAE,CAAC;QAE7E,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAC/C,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC7C,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAChC,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;oBAChC,QAAQ,CAAC,IAAI,CAAC;wBACZ,EAAE,EAAE,MAAM,CAAC,EAAE;wBACb,WAAW,EAAE,MAAM,CAAC,WAAW;wBAC/B,QAAQ,EAAE,MAAM,CAAC,QAAQ;qBAC1B,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;QAED,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACrH,CAAC;;AAr0BH,8DAs0BC;AAr0BgB,8CAAoB,GAAQ,IAAI,CAAC;AACxB,wCAAc,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAC",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/AdvancedFittingCalculator.ts"],
      sourcesContent: ["/**\n * Advanced Fitting Calculator for Phase 3 Duct Physics Implementation\n * \n * This service extends the basic FittingLossCalculator with advanced capabilities including:\n * - Multi-parameter K-factor calculations\n * - Performance curve interpolation\n * - Interaction effects between adjacent fittings\n * - Method selection algorithms\n * - Complex fitting configurations\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { FittingLossCalculator } from './FittingLossCalculator';\nimport {\n  AdvancedFittingConfiguration,\n  FlowConditions,\n  SystemContext,\n  AdvancedFittingLossResult,\n  CalculationMethod,\n  InteractionEffects,\n  FittingInteraction,\n  PerformanceMetrics,\n  ValidationResults,\n  ValidationError,\n  ValidationWarning,\n  ComplianceStatus,\n  Recommendation,\n  ParameterDependency,\n  PerformanceCurve\n} from './types/AdvancedFittingTypes';\n\nexport class AdvancedFittingCalculator extends FittingLossCalculator {\n  private static advancedFittingsData: any = null;\n  private static readonly DATA_FILE_PATH = path.join(__dirname, '../../data/advanced_fittings.json');\n\n  /**\n   * Load advanced fittings database\n   */\n  private static loadAdvancedFittingsData(): any {\n    if (!this.advancedFittingsData) {\n      try {\n        const dataContent = fs.readFileSync(this.DATA_FILE_PATH, 'utf8');\n        this.advancedFittingsData = JSON.parse(dataContent);\n      } catch (error) {\n        console.error('Error loading advanced fittings data:', error);\n        throw new Error('Failed to load advanced fittings database');\n      }\n    }\n    return this.advancedFittingsData;\n  }\n\n  /**\n   * Calculate pressure loss for advanced fitting configurations\n   */\n  public static calculateAdvancedFittingLoss(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    systemContext?: SystemContext\n  ): AdvancedFittingLossResult {\n    \n    // Validate configuration and conditions\n    this.validateAdvancedConfiguration(config, flowConditions);\n    \n    // Select appropriate calculation method\n    const method = this.selectCalculationMethod(config, flowConditions);\n    \n    // Calculate base pressure loss\n    const baseLoss = this.calculateBasePressureLoss(config, flowConditions, method);\n    \n    // Apply correction factors\n    const correctedLoss = this.applyCorrectionFactors(baseLoss, config, flowConditions);\n    \n    // Calculate interaction effects if system context provided\n    const interactionEffects = systemContext \n      ? this.calculateInteractionEffects(config, systemContext)\n      : this.getDefaultInteractionEffects();\n    \n    // Apply interaction effects\n    const finalPressureLoss = correctedLoss * interactionEffects.totalInteractionFactor;\n    \n    // Calculate performance metrics\n    const performanceMetrics = this.calculatePerformanceMetrics(config, flowConditions, finalPressureLoss);\n    \n    // Validate results\n    const validationResults = this.validateResults(config, flowConditions, finalPressureLoss);\n    \n    // Generate recommendations\n    const recommendations = this.generateRecommendations(config, flowConditions, performanceMetrics, validationResults);\n    \n    // Generate comprehensive result\n    return {\n      pressureLoss: finalPressureLoss,\n      velocityPressure: this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity),\n      kFactor: finalPressureLoss / this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity),\n      warnings: validationResults.warnings.map(w => w.message),\n      calculationMethod: method,\n      interactionEffects: interactionEffects,\n      performanceMetrics: performanceMetrics,\n      validationResults: validationResults,\n      recommendations: recommendations\n    };\n  }\n\n  /**\n   * Select optimal calculation method based on fitting and flow conditions\n   */\n  private static selectCalculationMethod(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions\n  ): CalculationMethod {\n    \n    // High Reynolds number flows - use CFD-derived data if available\n    if (flowConditions.reynoldsNumber > 100000 && \n        config.pressureLossProfile.calculationMethod === CalculationMethod.CFD_DERIVED) {\n      return CalculationMethod.CFD_DERIVED;\n    }\n    \n    // Complex geometry fittings - use multi-parameter approach\n    if (config.complexity === 'complex' && \n        config.pressureLossProfile.kFactorData.parameterDependencies.length > 0) {\n      return CalculationMethod.MULTI_PARAMETER;\n    }\n    \n    // Variable performance fittings - use performance curves\n    if (config.complexity === 'variable' && \n        config.pressureLossProfile.performanceCurves && \n        config.pressureLossProfile.performanceCurves.length > 0) {\n      return CalculationMethod.PERFORMANCE_CURVE;\n    }\n    \n    // Default to single K-factor for simple fittings\n    return CalculationMethod.SINGLE_K_FACTOR;\n  }\n\n  /**\n   * Calculate base pressure loss using selected method\n   */\n  private static calculateBasePressureLoss(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    method: CalculationMethod\n  ): number {\n    \n    const velocityPressure = this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity);\n    \n    switch (method) {\n      case CalculationMethod.SINGLE_K_FACTOR:\n        return this.calculateSingleKFactorLoss(config, velocityPressure);\n        \n      case CalculationMethod.MULTI_PARAMETER:\n        return this.calculateMultiParameterLoss(config, flowConditions, velocityPressure);\n        \n      case CalculationMethod.PERFORMANCE_CURVE:\n        return this.calculatePerformanceCurveLoss(config, flowConditions, velocityPressure);\n        \n      case CalculationMethod.CFD_DERIVED:\n        return this.calculateCFDDerivedLoss(config, flowConditions, velocityPressure);\n        \n      default:\n        throw new Error(`Unsupported calculation method: ${method}`);\n    }\n  }\n\n  /**\n   * Calculate single K-factor pressure loss\n   */\n  private static calculateSingleKFactorLoss(\n    config: AdvancedFittingConfiguration,\n    velocityPressure: number\n  ): number {\n    return config.pressureLossProfile.kFactorData.baseKFactor * velocityPressure;\n  }\n\n  /**\n   * Calculate multi-parameter pressure loss\n   */\n  private static calculateMultiParameterLoss(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    velocityPressure: number\n  ): number {\n    \n    let kFactor = config.pressureLossProfile.kFactorData.baseKFactor;\n    \n    // Apply parameter dependencies\n    for (const dependency of config.pressureLossProfile.kFactorData.parameterDependencies) {\n      const parameterValue = this.getParameterValue(dependency.parameter, config, flowConditions);\n      const correction = this.calculateParameterCorrection(dependency, parameterValue);\n      kFactor *= correction;\n    }\n    \n    // Apply Reynolds number correction if enabled\n    if (config.pressureLossProfile.kFactorData.reynoldsCorrection?.enabled) {\n      const reynoldsCorrection = this.calculateReynoldsCorrection(\n        config.pressureLossProfile.kFactorData.reynoldsCorrection,\n        flowConditions.reynoldsNumber\n      );\n      kFactor *= reynoldsCorrection;\n    }\n    \n    // Apply geometry corrections\n    for (const correction of config.pressureLossProfile.kFactorData.geometryCorrections) {\n      kFactor *= correction.correctionFactor;\n    }\n    \n    return kFactor * velocityPressure;\n  }\n\n  /**\n   * Calculate performance curve-based pressure loss\n   */\n  private static calculatePerformanceCurveLoss(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    velocityPressure: number\n  ): number {\n    \n    if (!config.pressureLossProfile.performanceCurves || config.pressureLossProfile.performanceCurves.length === 0) {\n      throw new Error('No performance curves available for fitting');\n    }\n    \n    // Find the most appropriate performance curve\n    const curve = this.selectPerformanceCurve(config.pressureLossProfile.performanceCurves, flowConditions);\n    \n    // Get parameter value for interpolation\n    const parameterValue = this.getParameterValue(curve.parameter, config, flowConditions);\n    \n    // Interpolate pressure loss from curve\n    const pressureLoss = this.interpolatePerformanceCurve(curve, parameterValue);\n    \n    return pressureLoss;\n  }\n\n  /**\n   * Calculate CFD-derived pressure loss\n   */\n  private static calculateCFDDerivedLoss(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    velocityPressure: number\n  ): number {\n    \n    // For CFD-derived data, use multi-parameter approach with higher accuracy\n    return this.calculateMultiParameterLoss(config, flowConditions, velocityPressure);\n  }\n\n  /**\n   * Calculate parameter correction factor\n   */\n  private static calculateParameterCorrection(\n    dependency: ParameterDependency,\n    parameterValue: number\n  ): number {\n    \n    // Validate parameter is within valid range\n    if (parameterValue < dependency.validRange[0] || parameterValue > dependency.validRange[1]) {\n      console.warn(`Parameter ${dependency.parameter} value ${parameterValue} outside valid range [${dependency.validRange[0]}, ${dependency.validRange[1]}]`);\n    }\n    \n    switch (dependency.relationship) {\n      case 'linear':\n        return dependency.coefficients[0] + dependency.coefficients[1] * parameterValue;\n        \n      case 'polynomial': {\n        let result = 0;\n        for (let i = 0; i < dependency.coefficients.length; i++) {\n          result += dependency.coefficients[i] * Math.pow(parameterValue, i);\n        }\n        return result;\n      }\n        \n      case 'exponential':\n        return dependency.coefficients[0] * Math.exp(dependency.coefficients[1] * parameterValue);\n        \n      case 'lookup':\n        // For lookup tables, would need additional data structure\n        // For now, return base correction\n        return 1.0;\n        \n      default:\n        throw new Error(`Unsupported relationship type: ${dependency.relationship}`);\n    }\n  }\n\n  /**\n   * Get parameter value from configuration or flow conditions\n   */\n  private static getParameterValue(\n    parameter: string,\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions\n  ): number {\n    \n    switch (parameter) {\n      case 'velocity':\n        return flowConditions.velocity;\n      case 'reynolds_number':\n        return flowConditions.reynoldsNumber;\n      case 'volume_flow':\n        return flowConditions.volumeFlow;\n      case 'temperature':\n        return flowConditions.temperature;\n      case 'pressure':\n        return flowConditions.pressure;\n      case 'length_to_diameter_ratio':\n        return config.physicalProperties.dimensions.length / (config.physicalProperties.dimensions.inletDiameter || 12);\n      case 'area_ratio': {\n        const inletArea = Math.PI * Math.pow((config.physicalProperties.dimensions.inletDiameter || 12) / 2, 2);\n        const outletArea = Math.PI * Math.pow((config.physicalProperties.dimensions.outletDiameter || 12) / 2, 2);\n        return outletArea / inletArea;\n      }\n      case 'aspect_ratio':\n        return config.physicalProperties.dimensions.width / config.physicalProperties.dimensions.height;\n      default:\n        console.warn(`Unknown parameter: ${parameter}, using default value 1.0`);\n        return 1.0;\n    }\n  }\n\n  /**\n   * Calculate Reynolds number correction\n   */\n  private static calculateReynoldsCorrection(\n    correction: any,\n    reynoldsNumber: number\n  ): number {\n    \n    if (reynoldsNumber < correction.validRange[0] || reynoldsNumber > correction.validRange[1]) {\n      return 1.0; // No correction outside valid range\n    }\n    \n    switch (correction.method) {\n      case 'colebrook':\n        // Simplified Colebrook-White correction\n        return 1.0 + correction.coefficients[0] * Math.log10(reynoldsNumber) + correction.coefficients[1];\n        \n      case 'blasius':\n        // Blasius equation correction\n        return Math.pow(reynoldsNumber, correction.coefficients[0]) * correction.coefficients[1];\n        \n      case 'custom': {\n        // Custom polynomial correction\n        let result = 0;\n        for (let i = 0; i < correction.coefficients.length; i++) {\n          result += correction.coefficients[i] * Math.pow(reynoldsNumber, i);\n        }\n        return result;\n      }\n        \n      default:\n        return 1.0;\n    }\n  }\n\n  /**\n   * Select appropriate performance curve\n   */\n  private static selectPerformanceCurve(\n    curves: PerformanceCurve[],\n    flowConditions: FlowConditions\n  ): PerformanceCurve {\n    \n    // For now, select the first available curve\n    // In a more sophisticated implementation, would select based on current conditions\n    return curves[0];\n  }\n\n  /**\n   * Interpolate value from performance curve\n   */\n  private static interpolatePerformanceCurve(\n    curve: PerformanceCurve,\n    parameterValue: number\n  ): number {\n    \n    const points = curve.dataPoints.sort((a, b) => a.x - b.x);\n    \n    // Check if value is outside curve range\n    if (parameterValue <= points[0].x) {\n      return points[0].y;\n    }\n    if (parameterValue >= points[points.length - 1].x) {\n      if (curve.extrapolationAllowed) {\n        // Simple linear extrapolation\n        const lastTwo = points.slice(-2);\n        const slope = (lastTwo[1].y - lastTwo[0].y) / (lastTwo[1].x - lastTwo[0].x);\n        return lastTwo[1].y + slope * (parameterValue - lastTwo[1].x);\n      } else {\n        return points[points.length - 1].y;\n      }\n    }\n    \n    // Find surrounding points for interpolation\n    for (let i = 0; i < points.length - 1; i++) {\n      if (parameterValue >= points[i].x && parameterValue <= points[i + 1].x) {\n        // Linear interpolation\n        const ratio = (parameterValue - points[i].x) / (points[i + 1].x - points[i].x);\n        return points[i].y + ratio * (points[i + 1].y - points[i].y);\n      }\n    }\n    \n    return points[0].y; // Fallback\n  }\n\n  /**\n   * Apply correction factors to pressure loss\n   */\n  private static applyCorrectionFactors(\n    baseLoss: number,\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions\n  ): number {\n    \n    let correctedLoss = baseLoss;\n    const corrections = config.pressureLossProfile.correctionFactors;\n    \n    // Temperature correction\n    if (corrections.temperatureCorrection) {\n      const tempCorrection = this.calculateTemperatureCorrection(flowConditions.temperature);\n      correctedLoss *= tempCorrection;\n    }\n    \n    // Density correction\n    if (corrections.densityCorrection) {\n      const densityCorrection = flowConditions.airDensity / 0.075; // Standard air density\n      correctedLoss *= densityCorrection;\n    }\n    \n    // Installation correction (simplified)\n    if (corrections.installationCorrection) {\n      correctedLoss *= 1.1; // 10% installation factor\n    }\n    \n    return correctedLoss;\n  }\n\n  /**\n   * Calculate temperature correction factor\n   */\n  private static calculateTemperatureCorrection(temperature: number): number {\n    // Standard temperature is 70\xB0F\n    const standardTemp = 70;\n    const tempRatio = (temperature + 459.67) / (standardTemp + 459.67); // Convert to absolute temperature\n    return Math.sqrt(tempRatio);\n  }\n\n  /**\n   * Calculate interaction effects between adjacent fittings\n   */\n  private static calculateInteractionEffects(\n    config: AdvancedFittingConfiguration,\n    systemContext: SystemContext\n  ): InteractionEffects {\n    \n    const upstreamFittings = systemContext.getUpstreamFittings(config.id, 10); // 10 diameters\n    const downstreamFittings = systemContext.getDownstreamFittings(config.id, 10);\n    \n    let interactionFactor = 1.0;\n    const interactions: FittingInteraction[] = [];\n    \n    // Upstream interactions\n    for (const upstream of upstreamFittings) {\n      const interaction = this.calculateUpstreamInteraction(upstream, config);\n      interactionFactor *= interaction.factor;\n      interactions.push(interaction);\n    }\n    \n    // Downstream interactions\n    for (const downstream of downstreamFittings) {\n      const interaction = this.calculateDownstreamInteraction(config, downstream);\n      interactionFactor *= interaction.factor;\n      interactions.push(interaction);\n    }\n    \n    return {\n      totalInteractionFactor: interactionFactor,\n      individualInteractions: interactions,\n      significantInteractions: interactions.filter(i => Math.abs(i.factor - 1.0) > 0.05)\n    };\n  }\n\n  /**\n   * Get default interaction effects when no system context provided\n   */\n  private static getDefaultInteractionEffects(): InteractionEffects {\n    return {\n      totalInteractionFactor: 1.0,\n      individualInteractions: [],\n      significantInteractions: []\n    };\n  }\n\n  /**\n   * Calculate upstream fitting interaction\n   */\n  private static calculateUpstreamInteraction(\n    upstreamFitting: AdvancedFittingConfiguration,\n    currentFitting: AdvancedFittingConfiguration\n  ): FittingInteraction {\n    \n    // Simplified interaction calculation\n    // In practice, would use more sophisticated models\n    let factor = 1.0;\n    let significance: 'low' | 'medium' | 'high' = 'low';\n    \n    // Check for known interaction effects\n    for (const effect of currentFitting.compatibilityMatrix.interactionEffects) {\n      if (effect.adjacentFittingType === upstreamFitting.type) {\n        factor = effect.magnitude;\n        if (effect.magnitude > 1.2) {\n          significance = 'high';\n        } else if (effect.magnitude > 1.1) {\n          significance = 'medium';\n        } else {\n          significance = 'low';\n        }\n        break;\n      }\n    }\n    \n    return {\n      adjacentFittingId: upstreamFitting.id,\n      distance: 5, // Simplified distance\n      factor: factor,\n      type: 'upstream',\n      significance: significance\n    };\n  }\n\n  /**\n   * Calculate downstream fitting interaction\n   */\n  private static calculateDownstreamInteraction(\n    currentFitting: AdvancedFittingConfiguration,\n    downstreamFitting: AdvancedFittingConfiguration\n  ): FittingInteraction {\n\n    // Downstream interactions typically have less effect\n    return {\n      adjacentFittingId: downstreamFitting.id,\n      distance: 5,\n      factor: 1.0, // Minimal downstream effect for most fittings\n      type: 'downstream',\n      significance: 'low'\n    };\n  }\n\n  /**\n   * Calculate performance metrics for the fitting\n   */\n  private static calculatePerformanceMetrics(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    pressureLoss: number\n  ): PerformanceMetrics {\n\n    const velocityPressure = this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity);\n\n    // Calculate efficiency (inverse of pressure loss coefficient)\n    const efficiency = Math.max(0, Math.min(100, 100 * (1 - pressureLoss / (velocityPressure * 5))));\n\n    // Estimate noise generation based on velocity and fitting type\n    const noiseGeneration = this.calculateNoiseGeneration(config, flowConditions);\n\n    // Calculate energy loss\n    const energyLoss = this.calculateEnergyLoss(flowConditions.volumeFlow, pressureLoss);\n\n    // Calculate flow uniformity based on fitting characteristics\n    const flowUniformity = config.flowCharacteristics.velocityProfile.uniformityIndex * 100;\n\n    // Calculate pressure recovery\n    const pressureRecovery = config.flowCharacteristics.turbulenceFactors.pressureRecoveryFactor * 100;\n\n    return {\n      efficiency: efficiency,\n      noiseGeneration: noiseGeneration,\n      energyLoss: energyLoss,\n      flowUniformity: flowUniformity,\n      pressureRecovery: pressureRecovery\n    };\n  }\n\n  /**\n   * Calculate noise generation for the fitting\n   */\n  private static calculateNoiseGeneration(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions\n  ): number {\n\n    // Base noise calculation using velocity and fitting characteristics\n    const velocityNoise = 20 * Math.log10(flowConditions.velocity / 1000); // Reference 1000 FPM\n    const turbulenceNoise = config.flowCharacteristics.turbulenceFactors.turbulenceIntensity * 0.5;\n    let fittingNoise = 1;\n    if (config.complexity === 'complex') {\n      fittingNoise = 5;\n    } else if (config.complexity === 'variable') {\n      fittingNoise = 3;\n    }\n\n    return Math.max(0, velocityNoise + turbulenceNoise + fittingNoise);\n  }\n\n  /**\n   * Calculate energy loss in BTU/hr\n   */\n  private static calculateEnergyLoss(volumeFlow: number, pressureLoss: number): number {\n    // Energy loss = (CFM \xD7 Pressure Loss in in wg \xD7 4.5) / Fan Efficiency\n    // Assuming 70% fan efficiency\n    const fanEfficiency = 0.70;\n    return (volumeFlow * pressureLoss * 4.5) / fanEfficiency;\n  }\n\n  /**\n   * Validate advanced configuration and flow conditions\n   */\n  private static validateAdvancedConfiguration(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions\n  ): void {\n\n    // Validate flow is within fitting's operating range\n    const operatingRange = config.flowCharacteristics.operatingRange;\n    if (flowConditions.volumeFlow < operatingRange.minimum ||\n        flowConditions.volumeFlow > operatingRange.maximum) {\n      throw new Error(`Flow ${flowConditions.volumeFlow} CFM outside fitting operating range [${operatingRange.minimum}, ${operatingRange.maximum}] CFM`);\n    }\n\n    // Validate velocity is reasonable\n    if (flowConditions.velocity < 100 || flowConditions.velocity > 6000) {\n      throw new Error(`Velocity ${flowConditions.velocity} FPM outside reasonable range [100, 6000] FPM`);\n    }\n\n    // Validate Reynolds number\n    if (flowConditions.reynoldsNumber < 1000) {\n      throw new Error(`Reynolds number ${flowConditions.reynoldsNumber} too low for turbulent flow calculations`);\n    }\n  }\n\n  /**\n   * Validate calculation results\n   */\n  private static validateResults(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    pressureLoss: number\n  ): ValidationResults {\n\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n\n    // Check for unreasonable pressure loss\n    const velocityPressure = this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity);\n    const kFactor = pressureLoss / velocityPressure;\n\n    if (kFactor > 10) {\n      errors.push({\n        code: 'E001',\n        message: 'Pressure loss coefficient unreasonably high',\n        parameter: 'k_factor',\n        value: kFactor\n      });\n    }\n\n    if (kFactor < 0) {\n      errors.push({\n        code: 'E002',\n        message: 'Negative pressure loss calculated',\n        parameter: 'pressure_loss',\n        value: pressureLoss\n      });\n    }\n\n    // Apply validation rules from configuration\n    for (const rule of config.validationRules) {\n      const parameterValue = this.getParameterValue(rule.condition.parameter, config, flowConditions);\n      const isViolated = this.checkValidationCondition(rule.condition, parameterValue);\n\n      if (isViolated) {\n        if (rule.severity === 'error') {\n          errors.push({\n            code: rule.ruleId,\n            message: rule.message,\n            parameter: rule.condition.parameter,\n            value: parameterValue\n          });\n        } else if (rule.severity === 'warning') {\n          warnings.push({\n            code: rule.ruleId,\n            message: rule.message,\n            severity: 'medium',\n            recommendation: 'Review operating conditions'\n          });\n        }\n      }\n    }\n\n    // Check uncertainty bounds\n    const uncertaintyBounds = config.pressureLossProfile.uncertaintyBounds;\n    const uncertaintyRange = pressureLoss * (uncertaintyBounds.upperBound - uncertaintyBounds.lowerBound) / 100;\n\n    if (uncertaintyRange > pressureLoss * 0.3) {\n      warnings.push({\n        code: 'W001',\n        message: 'High uncertainty in pressure loss calculation',\n        severity: 'medium',\n        recommendation: 'Consider using more accurate calculation method'\n      });\n    }\n\n    const complianceStatus: ComplianceStatus = {\n      smacnaCompliant: errors.length === 0,\n      ashraeCompliant: errors.length === 0,\n      localCodeCompliant: true,\n      customStandardsCompliant: true\n    };\n\n    return {\n      isValid: errors.length === 0,\n      errors: errors,\n      warnings: warnings,\n      complianceStatus: complianceStatus\n    };\n  }\n\n  /**\n   * Check validation condition\n   */\n  private static checkValidationCondition(condition: any, value: number | string): boolean {\n    switch (condition.operator) {\n      case '>':\n        return Number(value) > Number(condition.value);\n      case '<':\n        return Number(value) < Number(condition.value);\n      case '>=':\n        return Number(value) >= Number(condition.value);\n      case '<=':\n        return Number(value) <= Number(condition.value);\n      case '=':\n        return value === condition.value;\n      case '!=':\n        return value !== condition.value;\n      case 'in':\n        return Array.isArray(condition.value) && condition.value.includes(value);\n      case 'not_in':\n        return Array.isArray(condition.value) && !condition.value.includes(value);\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Generate recommendations based on calculation results\n   */\n  private static generateRecommendations(\n    config: AdvancedFittingConfiguration,\n    flowConditions: FlowConditions,\n    performanceMetrics: PerformanceMetrics,\n    validationResults: ValidationResults\n  ): Recommendation[] {\n\n    const recommendations: Recommendation[] = [];\n\n    // Performance-based recommendations\n    if (performanceMetrics.efficiency < 70) {\n      recommendations.push({\n        type: 'optimization',\n        priority: 'medium',\n        description: 'Consider using a more efficient fitting design to reduce pressure loss',\n        expectedBenefit: 'Reduced energy consumption and improved system performance',\n        implementationCost: 'medium'\n      });\n    }\n\n    if (performanceMetrics.noiseGeneration > 50) {\n      recommendations.push({\n        type: 'optimization',\n        priority: 'medium',\n        description: 'Consider adding sound attenuation to reduce noise levels',\n        expectedBenefit: 'Improved acoustic comfort',\n        implementationCost: 'medium'\n      });\n    }\n\n    // Flow-based recommendations\n    const operatingRange = config.flowCharacteristics.operatingRange;\n    const flowRatio = flowConditions.volumeFlow / operatingRange.optimal;\n\n    if (flowRatio < 0.5) {\n      recommendations.push({\n        type: 'adjustment',\n        priority: 'low',\n        description: 'Flow is significantly below optimal range - consider resizing fitting',\n        expectedBenefit: 'Better performance and efficiency',\n        implementationCost: 'high'\n      });\n    }\n\n    if (flowRatio > 1.5) {\n      recommendations.push({\n        type: 'adjustment',\n        priority: 'high',\n        description: 'Flow exceeds optimal range - fitting may be undersized',\n        expectedBenefit: 'Reduced pressure loss and noise',\n        implementationCost: 'high'\n      });\n    }\n\n    // Maintenance recommendations\n    if (config.category === 'control' || config.category === 'terminal') {\n      recommendations.push({\n        type: 'maintenance',\n        priority: 'low',\n        description: 'Regular inspection and calibration recommended for control devices',\n        expectedBenefit: 'Maintained performance and reliability',\n        implementationCost: 'low'\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Get fitting configuration by ID from database\n   */\n  public static getFittingConfiguration(fittingId: string): AdvancedFittingConfiguration | null {\n    const data = this.loadAdvancedFittingsData();\n\n    // Search through all categories for the fitting\n    for (const categoryName of Object.keys(data.categories)) {\n      const category = data.categories[categoryName];\n      for (const typeName of Object.keys(category)) {\n        const type = category[typeName];\n        for (const configName of Object.keys(type)) {\n          const config = type[configName];\n          if (config.id === fittingId) {\n            return config as AdvancedFittingConfiguration;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * List all available fitting configurations\n   */\n  public static listAvailableFittings(): { id: string; description: string; category: string }[] {\n    const data = this.loadAdvancedFittingsData();\n    const fittings: { id: string; description: string; category: string }[] = [];\n\n    for (const categoryName of Object.keys(data.categories)) {\n      const category = data.categories[categoryName];\n      for (const typeName of Object.keys(category)) {\n        const type = category[typeName];\n        for (const configName of Object.keys(type)) {\n          const config = type[configName];\n          fittings.push({\n            id: config.id,\n            description: config.description,\n            category: config.category\n          });\n        }\n      }\n    }\n\n    return fittings.sort((a, b) => a.category.localeCompare(b.category) || a.description.localeCompare(b.description));\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "859d0cce45e877089da82926072b78e9ca80fd7e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ikx9gugjk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ikx9gugjk();
var __createBinding =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[0]++,
/* istanbul ignore next */
(cov_2ikx9gugjk().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2ikx9gugjk().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2ikx9gugjk().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2ikx9gugjk().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2ikx9gugjk().f[0]++;
  cov_2ikx9gugjk().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().b[2][0]++;
    cov_2ikx9gugjk().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2ikx9gugjk().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2ikx9gugjk().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2ikx9gugjk().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2ikx9gugjk().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2ikx9gugjk().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2ikx9gugjk().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2ikx9gugjk().b[5][1]++,
  /* istanbul ignore next */
  (cov_2ikx9gugjk().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2ikx9gugjk().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().b[3][0]++;
    cov_2ikx9gugjk().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2ikx9gugjk().f[1]++;
        cov_2ikx9gugjk().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ikx9gugjk().b[3][1]++;
  }
  cov_2ikx9gugjk().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2ikx9gugjk().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2ikx9gugjk().f[2]++;
  cov_2ikx9gugjk().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().b[7][0]++;
    cov_2ikx9gugjk().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2ikx9gugjk().b[7][1]++;
  }
  cov_2ikx9gugjk().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[11]++,
/* istanbul ignore next */
(cov_2ikx9gugjk().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2ikx9gugjk().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2ikx9gugjk().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2ikx9gugjk().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2ikx9gugjk().f[3]++;
  cov_2ikx9gugjk().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2ikx9gugjk().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2ikx9gugjk().f[4]++;
  cov_2ikx9gugjk().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[14]++,
/* istanbul ignore next */
(cov_2ikx9gugjk().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2ikx9gugjk().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2ikx9gugjk().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2ikx9gugjk().f[5]++;
  cov_2ikx9gugjk().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[6]++;
    cov_2ikx9gugjk().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[17]++, []);
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2ikx9gugjk().b[12][0]++;
          cov_2ikx9gugjk().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2ikx9gugjk().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2ikx9gugjk().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[8]++;
    cov_2ikx9gugjk().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[13][0]++;
      cov_2ikx9gugjk().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[26]++, {});
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[15][0]++;
      cov_2ikx9gugjk().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2ikx9gugjk().b[16][0]++;
          cov_2ikx9gugjk().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2ikx9gugjk().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[15][1]++;
    }
    cov_2ikx9gugjk().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2ikx9gugjk().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ikx9gugjk().s[36]++;
exports.AdvancedFittingCalculator = void 0;
const fs =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[37]++, __importStar(require("fs")));
const path =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[38]++, __importStar(require("path")));
const FittingLossCalculator_1 =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[39]++, require("./FittingLossCalculator"));
const AdvancedFittingTypes_1 =
/* istanbul ignore next */
(cov_2ikx9gugjk().s[40]++, require("./types/AdvancedFittingTypes"));
class AdvancedFittingCalculator extends
/* istanbul ignore next */
(FittingLossCalculator_1.FittingLossCalculator) {
  /**
   * Load advanced fittings database
   */
  static loadAdvancedFittingsData() {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[9]++;
    cov_2ikx9gugjk().s[41]++;
    if (!this.advancedFittingsData) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[17][0]++;
      cov_2ikx9gugjk().s[42]++;
      try {
        const dataContent =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[43]++, fs.readFileSync(this.DATA_FILE_PATH, 'utf8'));
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[44]++;
        this.advancedFittingsData = JSON.parse(dataContent);
      } catch (error) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[45]++;
        console.error('Error loading advanced fittings data:', error);
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[46]++;
        throw new Error('Failed to load advanced fittings database');
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[17][1]++;
    }
    cov_2ikx9gugjk().s[47]++;
    return this.advancedFittingsData;
  }
  /**
   * Calculate pressure loss for advanced fitting configurations
   */
  static calculateAdvancedFittingLoss(config, flowConditions, systemContext) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[10]++;
    cov_2ikx9gugjk().s[48]++;
    // Validate configuration and conditions
    this.validateAdvancedConfiguration(config, flowConditions);
    // Select appropriate calculation method
    const method =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[49]++, this.selectCalculationMethod(config, flowConditions));
    // Calculate base pressure loss
    const baseLoss =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[50]++, this.calculateBasePressureLoss(config, flowConditions, method));
    // Apply correction factors
    const correctedLoss =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[51]++, this.applyCorrectionFactors(baseLoss, config, flowConditions));
    // Calculate interaction effects if system context provided
    const interactionEffects =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[52]++, systemContext ?
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[18][0]++, this.calculateInteractionEffects(config, systemContext)) :
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[18][1]++, this.getDefaultInteractionEffects()));
    // Apply interaction effects
    const finalPressureLoss =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[53]++, correctedLoss * interactionEffects.totalInteractionFactor);
    // Calculate performance metrics
    const performanceMetrics =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[54]++, this.calculatePerformanceMetrics(config, flowConditions, finalPressureLoss));
    // Validate results
    const validationResults =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[55]++, this.validateResults(config, flowConditions, finalPressureLoss));
    // Generate recommendations
    const recommendations =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[56]++, this.generateRecommendations(config, flowConditions, performanceMetrics, validationResults));
    // Generate comprehensive result
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[57]++;
    return {
      pressureLoss: finalPressureLoss,
      velocityPressure: this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity),
      kFactor: finalPressureLoss / this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity),
      warnings: validationResults.warnings.map(w => {
        /* istanbul ignore next */
        cov_2ikx9gugjk().f[11]++;
        cov_2ikx9gugjk().s[58]++;
        return w.message;
      }),
      calculationMethod: method,
      interactionEffects: interactionEffects,
      performanceMetrics: performanceMetrics,
      validationResults: validationResults,
      recommendations: recommendations
    };
  }
  /**
   * Select optimal calculation method based on fitting and flow conditions
   */
  static selectCalculationMethod(config, flowConditions) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[12]++;
    cov_2ikx9gugjk().s[59]++;
    // High Reynolds number flows - use CFD-derived data if available
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[20][0]++, flowConditions.reynoldsNumber > 100000) &&
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[20][1]++, config.pressureLossProfile.calculationMethod === AdvancedFittingTypes_1.CalculationMethod.CFD_DERIVED)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[19][0]++;
      cov_2ikx9gugjk().s[60]++;
      return AdvancedFittingTypes_1.CalculationMethod.CFD_DERIVED;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[19][1]++;
    }
    // Complex geometry fittings - use multi-parameter approach
    cov_2ikx9gugjk().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[22][0]++, config.complexity === 'complex') &&
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[22][1]++, config.pressureLossProfile.kFactorData.parameterDependencies.length > 0)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[21][0]++;
      cov_2ikx9gugjk().s[62]++;
      return AdvancedFittingTypes_1.CalculationMethod.MULTI_PARAMETER;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[21][1]++;
    }
    // Variable performance fittings - use performance curves
    cov_2ikx9gugjk().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[24][0]++, config.complexity === 'variable') &&
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[24][1]++, config.pressureLossProfile.performanceCurves) &&
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[24][2]++, config.pressureLossProfile.performanceCurves.length > 0)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[23][0]++;
      cov_2ikx9gugjk().s[64]++;
      return AdvancedFittingTypes_1.CalculationMethod.PERFORMANCE_CURVE;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[23][1]++;
    }
    // Default to single K-factor for simple fittings
    cov_2ikx9gugjk().s[65]++;
    return AdvancedFittingTypes_1.CalculationMethod.SINGLE_K_FACTOR;
  }
  /**
   * Calculate base pressure loss using selected method
   */
  static calculateBasePressureLoss(config, flowConditions, method) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[13]++;
    const velocityPressure =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[66]++, this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity));
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[67]++;
    switch (method) {
      case AdvancedFittingTypes_1.CalculationMethod.SINGLE_K_FACTOR:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[25][0]++;
        cov_2ikx9gugjk().s[68]++;
        return this.calculateSingleKFactorLoss(config, velocityPressure);
      case AdvancedFittingTypes_1.CalculationMethod.MULTI_PARAMETER:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[25][1]++;
        cov_2ikx9gugjk().s[69]++;
        return this.calculateMultiParameterLoss(config, flowConditions, velocityPressure);
      case AdvancedFittingTypes_1.CalculationMethod.PERFORMANCE_CURVE:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[25][2]++;
        cov_2ikx9gugjk().s[70]++;
        return this.calculatePerformanceCurveLoss(config, flowConditions, velocityPressure);
      case AdvancedFittingTypes_1.CalculationMethod.CFD_DERIVED:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[25][3]++;
        cov_2ikx9gugjk().s[71]++;
        return this.calculateCFDDerivedLoss(config, flowConditions, velocityPressure);
      default:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[25][4]++;
        cov_2ikx9gugjk().s[72]++;
        throw new Error(`Unsupported calculation method: ${method}`);
    }
  }
  /**
   * Calculate single K-factor pressure loss
   */
  static calculateSingleKFactorLoss(config, velocityPressure) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[14]++;
    cov_2ikx9gugjk().s[73]++;
    return config.pressureLossProfile.kFactorData.baseKFactor * velocityPressure;
  }
  /**
   * Calculate multi-parameter pressure loss
   */
  static calculateMultiParameterLoss(config, flowConditions, velocityPressure) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[15]++;
    let kFactor =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[74]++, config.pressureLossProfile.kFactorData.baseKFactor);
    // Apply parameter dependencies
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[75]++;
    for (const dependency of config.pressureLossProfile.kFactorData.parameterDependencies) {
      const parameterValue =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[76]++, this.getParameterValue(dependency.parameter, config, flowConditions));
      const correction =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[77]++, this.calculateParameterCorrection(dependency, parameterValue));
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[78]++;
      kFactor *= correction;
    }
    // Apply Reynolds number correction if enabled
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[79]++;
    if (config.pressureLossProfile.kFactorData.reynoldsCorrection?.enabled) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[26][0]++;
      const reynoldsCorrection =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[80]++, this.calculateReynoldsCorrection(config.pressureLossProfile.kFactorData.reynoldsCorrection, flowConditions.reynoldsNumber));
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[81]++;
      kFactor *= reynoldsCorrection;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[26][1]++;
    }
    // Apply geometry corrections
    cov_2ikx9gugjk().s[82]++;
    for (const correction of config.pressureLossProfile.kFactorData.geometryCorrections) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[83]++;
      kFactor *= correction.correctionFactor;
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[84]++;
    return kFactor * velocityPressure;
  }
  /**
   * Calculate performance curve-based pressure loss
   */
  static calculatePerformanceCurveLoss(config, flowConditions, velocityPressure) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[16]++;
    cov_2ikx9gugjk().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[28][0]++, !config.pressureLossProfile.performanceCurves) ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[28][1]++, config.pressureLossProfile.performanceCurves.length === 0)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[27][0]++;
      cov_2ikx9gugjk().s[86]++;
      throw new Error('No performance curves available for fitting');
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[27][1]++;
    }
    // Find the most appropriate performance curve
    const curve =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[87]++, this.selectPerformanceCurve(config.pressureLossProfile.performanceCurves, flowConditions));
    // Get parameter value for interpolation
    const parameterValue =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[88]++, this.getParameterValue(curve.parameter, config, flowConditions));
    // Interpolate pressure loss from curve
    const pressureLoss =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[89]++, this.interpolatePerformanceCurve(curve, parameterValue));
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[90]++;
    return pressureLoss;
  }
  /**
   * Calculate CFD-derived pressure loss
   */
  static calculateCFDDerivedLoss(config, flowConditions, velocityPressure) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[17]++;
    cov_2ikx9gugjk().s[91]++;
    // For CFD-derived data, use multi-parameter approach with higher accuracy
    return this.calculateMultiParameterLoss(config, flowConditions, velocityPressure);
  }
  /**
   * Calculate parameter correction factor
   */
  static calculateParameterCorrection(dependency, parameterValue) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[18]++;
    cov_2ikx9gugjk().s[92]++;
    // Validate parameter is within valid range
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[30][0]++, parameterValue < dependency.validRange[0]) ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[30][1]++, parameterValue > dependency.validRange[1])) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[29][0]++;
      cov_2ikx9gugjk().s[93]++;
      console.warn(`Parameter ${dependency.parameter} value ${parameterValue} outside valid range [${dependency.validRange[0]}, ${dependency.validRange[1]}]`);
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[29][1]++;
    }
    cov_2ikx9gugjk().s[94]++;
    switch (dependency.relationship) {
      case 'linear':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[31][0]++;
        cov_2ikx9gugjk().s[95]++;
        return dependency.coefficients[0] + dependency.coefficients[1] * parameterValue;
      case 'polynomial':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[31][1]++;
        {
          let result =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[96]++, 0);
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[97]++;
          for (let i =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[98]++, 0); i < dependency.coefficients.length; i++) {
            /* istanbul ignore next */
            cov_2ikx9gugjk().s[99]++;
            result += dependency.coefficients[i] * Math.pow(parameterValue, i);
          }
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[100]++;
          return result;
        }
      case 'exponential':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[31][2]++;
        cov_2ikx9gugjk().s[101]++;
        return dependency.coefficients[0] * Math.exp(dependency.coefficients[1] * parameterValue);
      case 'lookup':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[31][3]++;
        cov_2ikx9gugjk().s[102]++;
        // For lookup tables, would need additional data structure
        // For now, return base correction
        return 1.0;
      default:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[31][4]++;
        cov_2ikx9gugjk().s[103]++;
        throw new Error(`Unsupported relationship type: ${dependency.relationship}`);
    }
  }
  /**
   * Get parameter value from configuration or flow conditions
   */
  static getParameterValue(parameter, config, flowConditions) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[19]++;
    cov_2ikx9gugjk().s[104]++;
    switch (parameter) {
      case 'velocity':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][0]++;
        cov_2ikx9gugjk().s[105]++;
        return flowConditions.velocity;
      case 'reynolds_number':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][1]++;
        cov_2ikx9gugjk().s[106]++;
        return flowConditions.reynoldsNumber;
      case 'volume_flow':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][2]++;
        cov_2ikx9gugjk().s[107]++;
        return flowConditions.volumeFlow;
      case 'temperature':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][3]++;
        cov_2ikx9gugjk().s[108]++;
        return flowConditions.temperature;
      case 'pressure':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][4]++;
        cov_2ikx9gugjk().s[109]++;
        return flowConditions.pressure;
      case 'length_to_diameter_ratio':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][5]++;
        cov_2ikx9gugjk().s[110]++;
        return config.physicalProperties.dimensions.length / (
        /* istanbul ignore next */
        (cov_2ikx9gugjk().b[33][0]++, config.physicalProperties.dimensions.inletDiameter) ||
        /* istanbul ignore next */
        (cov_2ikx9gugjk().b[33][1]++, 12));
      case 'area_ratio':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][6]++;
        {
          const inletArea =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[111]++, Math.PI * Math.pow((
          /* istanbul ignore next */
          (cov_2ikx9gugjk().b[34][0]++, config.physicalProperties.dimensions.inletDiameter) ||
          /* istanbul ignore next */
          (cov_2ikx9gugjk().b[34][1]++, 12)) / 2, 2));
          const outletArea =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[112]++, Math.PI * Math.pow((
          /* istanbul ignore next */
          (cov_2ikx9gugjk().b[35][0]++, config.physicalProperties.dimensions.outletDiameter) ||
          /* istanbul ignore next */
          (cov_2ikx9gugjk().b[35][1]++, 12)) / 2, 2));
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[113]++;
          return outletArea / inletArea;
        }
      case 'aspect_ratio':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][7]++;
        cov_2ikx9gugjk().s[114]++;
        return config.physicalProperties.dimensions.width / config.physicalProperties.dimensions.height;
      default:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[32][8]++;
        cov_2ikx9gugjk().s[115]++;
        console.warn(`Unknown parameter: ${parameter}, using default value 1.0`);
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[116]++;
        return 1.0;
    }
  }
  /**
   * Calculate Reynolds number correction
   */
  static calculateReynoldsCorrection(correction, reynoldsNumber) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[20]++;
    cov_2ikx9gugjk().s[117]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[37][0]++, reynoldsNumber < correction.validRange[0]) ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[37][1]++, reynoldsNumber > correction.validRange[1])) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[36][0]++;
      cov_2ikx9gugjk().s[118]++;
      return 1.0; // No correction outside valid range
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[36][1]++;
    }
    cov_2ikx9gugjk().s[119]++;
    switch (correction.method) {
      case 'colebrook':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[38][0]++;
        cov_2ikx9gugjk().s[120]++;
        // Simplified Colebrook-White correction
        return 1.0 + correction.coefficients[0] * Math.log10(reynoldsNumber) + correction.coefficients[1];
      case 'blasius':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[38][1]++;
        cov_2ikx9gugjk().s[121]++;
        // Blasius equation correction
        return Math.pow(reynoldsNumber, correction.coefficients[0]) * correction.coefficients[1];
      case 'custom':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[38][2]++;
        {
          // Custom polynomial correction
          let result =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[122]++, 0);
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[123]++;
          for (let i =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[124]++, 0); i < correction.coefficients.length; i++) {
            /* istanbul ignore next */
            cov_2ikx9gugjk().s[125]++;
            result += correction.coefficients[i] * Math.pow(reynoldsNumber, i);
          }
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[126]++;
          return result;
        }
      default:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[38][3]++;
        cov_2ikx9gugjk().s[127]++;
        return 1.0;
    }
  }
  /**
   * Select appropriate performance curve
   */
  static selectPerformanceCurve(curves, flowConditions) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[21]++;
    cov_2ikx9gugjk().s[128]++;
    // For now, select the first available curve
    // In a more sophisticated implementation, would select based on current conditions
    return curves[0];
  }
  /**
   * Interpolate value from performance curve
   */
  static interpolatePerformanceCurve(curve, parameterValue) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[22]++;
    const points =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[129]++, curve.dataPoints.sort((a, b) => {
      /* istanbul ignore next */
      cov_2ikx9gugjk().f[23]++;
      cov_2ikx9gugjk().s[130]++;
      return a.x - b.x;
    }));
    // Check if value is outside curve range
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[131]++;
    if (parameterValue <= points[0].x) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[39][0]++;
      cov_2ikx9gugjk().s[132]++;
      return points[0].y;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[39][1]++;
    }
    cov_2ikx9gugjk().s[133]++;
    if (parameterValue >= points[points.length - 1].x) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[40][0]++;
      cov_2ikx9gugjk().s[134]++;
      if (curve.extrapolationAllowed) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[41][0]++;
        // Simple linear extrapolation
        const lastTwo =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[135]++, points.slice(-2));
        const slope =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[136]++, (lastTwo[1].y - lastTwo[0].y) / (lastTwo[1].x - lastTwo[0].x));
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[137]++;
        return lastTwo[1].y + slope * (parameterValue - lastTwo[1].x);
      } else {
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[41][1]++;
        cov_2ikx9gugjk().s[138]++;
        return points[points.length - 1].y;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[40][1]++;
    }
    // Find surrounding points for interpolation
    cov_2ikx9gugjk().s[139]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[140]++, 0); i < points.length - 1; i++) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[141]++;
      if (
      /* istanbul ignore next */
      (cov_2ikx9gugjk().b[43][0]++, parameterValue >= points[i].x) &&
      /* istanbul ignore next */
      (cov_2ikx9gugjk().b[43][1]++, parameterValue <= points[i + 1].x)) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[42][0]++;
        // Linear interpolation
        const ratio =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[142]++, (parameterValue - points[i].x) / (points[i + 1].x - points[i].x));
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[143]++;
        return points[i].y + ratio * (points[i + 1].y - points[i].y);
      } else
      /* istanbul ignore next */
      {
        cov_2ikx9gugjk().b[42][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[144]++;
    return points[0].y; // Fallback
  }
  /**
   * Apply correction factors to pressure loss
   */
  static applyCorrectionFactors(baseLoss, config, flowConditions) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[24]++;
    let correctedLoss =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[145]++, baseLoss);
    const corrections =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[146]++, config.pressureLossProfile.correctionFactors);
    // Temperature correction
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[147]++;
    if (corrections.temperatureCorrection) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[44][0]++;
      const tempCorrection =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[148]++, this.calculateTemperatureCorrection(flowConditions.temperature));
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[149]++;
      correctedLoss *= tempCorrection;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[44][1]++;
    }
    // Density correction
    cov_2ikx9gugjk().s[150]++;
    if (corrections.densityCorrection) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[45][0]++;
      const densityCorrection =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[151]++, flowConditions.airDensity / 0.075); // Standard air density
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[152]++;
      correctedLoss *= densityCorrection;
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[45][1]++;
    }
    // Installation correction (simplified)
    cov_2ikx9gugjk().s[153]++;
    if (corrections.installationCorrection) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[46][0]++;
      cov_2ikx9gugjk().s[154]++;
      correctedLoss *= 1.1; // 10% installation factor
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[46][1]++;
    }
    cov_2ikx9gugjk().s[155]++;
    return correctedLoss;
  }
  /**
   * Calculate temperature correction factor
   */
  static calculateTemperatureCorrection(temperature) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[25]++;
    // Standard temperature is 70°F
    const standardTemp =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[156]++, 70);
    const tempRatio =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[157]++, (temperature + 459.67) / (standardTemp + 459.67)); // Convert to absolute temperature
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[158]++;
    return Math.sqrt(tempRatio);
  }
  /**
   * Calculate interaction effects between adjacent fittings
   */
  static calculateInteractionEffects(config, systemContext) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[26]++;
    const upstreamFittings =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[159]++, systemContext.getUpstreamFittings(config.id, 10)); // 10 diameters
    const downstreamFittings =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[160]++, systemContext.getDownstreamFittings(config.id, 10));
    let interactionFactor =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[161]++, 1.0);
    const interactions =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[162]++, []);
    // Upstream interactions
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[163]++;
    for (const upstream of upstreamFittings) {
      const interaction =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[164]++, this.calculateUpstreamInteraction(upstream, config));
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[165]++;
      interactionFactor *= interaction.factor;
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[166]++;
      interactions.push(interaction);
    }
    // Downstream interactions
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[167]++;
    for (const downstream of downstreamFittings) {
      const interaction =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[168]++, this.calculateDownstreamInteraction(config, downstream));
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[169]++;
      interactionFactor *= interaction.factor;
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[170]++;
      interactions.push(interaction);
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[171]++;
    return {
      totalInteractionFactor: interactionFactor,
      individualInteractions: interactions,
      significantInteractions: interactions.filter(i => {
        /* istanbul ignore next */
        cov_2ikx9gugjk().f[27]++;
        cov_2ikx9gugjk().s[172]++;
        return Math.abs(i.factor - 1.0) > 0.05;
      })
    };
  }
  /**
   * Get default interaction effects when no system context provided
   */
  static getDefaultInteractionEffects() {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[28]++;
    cov_2ikx9gugjk().s[173]++;
    return {
      totalInteractionFactor: 1.0,
      individualInteractions: [],
      significantInteractions: []
    };
  }
  /**
   * Calculate upstream fitting interaction
   */
  static calculateUpstreamInteraction(upstreamFitting, currentFitting) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[29]++;
    // Simplified interaction calculation
    // In practice, would use more sophisticated models
    let factor =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[174]++, 1.0);
    let significance =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[175]++, 'low');
    // Check for known interaction effects
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[176]++;
    for (const effect of currentFitting.compatibilityMatrix.interactionEffects) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[177]++;
      if (effect.adjacentFittingType === upstreamFitting.type) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[47][0]++;
        cov_2ikx9gugjk().s[178]++;
        factor = effect.magnitude;
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[179]++;
        if (effect.magnitude > 1.2) {
          /* istanbul ignore next */
          cov_2ikx9gugjk().b[48][0]++;
          cov_2ikx9gugjk().s[180]++;
          significance = 'high';
        } else {
          /* istanbul ignore next */
          cov_2ikx9gugjk().b[48][1]++;
          cov_2ikx9gugjk().s[181]++;
          if (effect.magnitude > 1.1) {
            /* istanbul ignore next */
            cov_2ikx9gugjk().b[49][0]++;
            cov_2ikx9gugjk().s[182]++;
            significance = 'medium';
          } else {
            /* istanbul ignore next */
            cov_2ikx9gugjk().b[49][1]++;
            cov_2ikx9gugjk().s[183]++;
            significance = 'low';
          }
        }
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[184]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_2ikx9gugjk().b[47][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[185]++;
    return {
      adjacentFittingId: upstreamFitting.id,
      distance: 5,
      // Simplified distance
      factor: factor,
      type: 'upstream',
      significance: significance
    };
  }
  /**
   * Calculate downstream fitting interaction
   */
  static calculateDownstreamInteraction(currentFitting, downstreamFitting) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[30]++;
    cov_2ikx9gugjk().s[186]++;
    // Downstream interactions typically have less effect
    return {
      adjacentFittingId: downstreamFitting.id,
      distance: 5,
      factor: 1.0,
      // Minimal downstream effect for most fittings
      type: 'downstream',
      significance: 'low'
    };
  }
  /**
   * Calculate performance metrics for the fitting
   */
  static calculatePerformanceMetrics(config, flowConditions, pressureLoss) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[31]++;
    const velocityPressure =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[187]++, this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity));
    // Calculate efficiency (inverse of pressure loss coefficient)
    const efficiency =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[188]++, Math.max(0, Math.min(100, 100 * (1 - pressureLoss / (velocityPressure * 5)))));
    // Estimate noise generation based on velocity and fitting type
    const noiseGeneration =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[189]++, this.calculateNoiseGeneration(config, flowConditions));
    // Calculate energy loss
    const energyLoss =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[190]++, this.calculateEnergyLoss(flowConditions.volumeFlow, pressureLoss));
    // Calculate flow uniformity based on fitting characteristics
    const flowUniformity =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[191]++, config.flowCharacteristics.velocityProfile.uniformityIndex * 100);
    // Calculate pressure recovery
    const pressureRecovery =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[192]++, config.flowCharacteristics.turbulenceFactors.pressureRecoveryFactor * 100);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[193]++;
    return {
      efficiency: efficiency,
      noiseGeneration: noiseGeneration,
      energyLoss: energyLoss,
      flowUniformity: flowUniformity,
      pressureRecovery: pressureRecovery
    };
  }
  /**
   * Calculate noise generation for the fitting
   */
  static calculateNoiseGeneration(config, flowConditions) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[32]++;
    // Base noise calculation using velocity and fitting characteristics
    const velocityNoise =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[194]++, 20 * Math.log10(flowConditions.velocity / 1000)); // Reference 1000 FPM
    const turbulenceNoise =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[195]++, config.flowCharacteristics.turbulenceFactors.turbulenceIntensity * 0.5);
    let fittingNoise =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[196]++, 1);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[197]++;
    if (config.complexity === 'complex') {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[50][0]++;
      cov_2ikx9gugjk().s[198]++;
      fittingNoise = 5;
    } else {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[50][1]++;
      cov_2ikx9gugjk().s[199]++;
      if (config.complexity === 'variable') {
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[51][0]++;
        cov_2ikx9gugjk().s[200]++;
        fittingNoise = 3;
      } else
      /* istanbul ignore next */
      {
        cov_2ikx9gugjk().b[51][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[201]++;
    return Math.max(0, velocityNoise + turbulenceNoise + fittingNoise);
  }
  /**
   * Calculate energy loss in BTU/hr
   */
  static calculateEnergyLoss(volumeFlow, pressureLoss) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[33]++;
    // Energy loss = (CFM × Pressure Loss in in wg × 4.5) / Fan Efficiency
    // Assuming 70% fan efficiency
    const fanEfficiency =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[202]++, 0.70);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[203]++;
    return volumeFlow * pressureLoss * 4.5 / fanEfficiency;
  }
  /**
   * Validate advanced configuration and flow conditions
   */
  static validateAdvancedConfiguration(config, flowConditions) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[34]++;
    // Validate flow is within fitting's operating range
    const operatingRange =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[204]++, config.flowCharacteristics.operatingRange);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[205]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[53][0]++, flowConditions.volumeFlow < operatingRange.minimum) ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[53][1]++, flowConditions.volumeFlow > operatingRange.maximum)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[52][0]++;
      cov_2ikx9gugjk().s[206]++;
      throw new Error(`Flow ${flowConditions.volumeFlow} CFM outside fitting operating range [${operatingRange.minimum}, ${operatingRange.maximum}] CFM`);
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[52][1]++;
    }
    // Validate velocity is reasonable
    cov_2ikx9gugjk().s[207]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[55][0]++, flowConditions.velocity < 100) ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[55][1]++, flowConditions.velocity > 6000)) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[54][0]++;
      cov_2ikx9gugjk().s[208]++;
      throw new Error(`Velocity ${flowConditions.velocity} FPM outside reasonable range [100, 6000] FPM`);
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[54][1]++;
    }
    // Validate Reynolds number
    cov_2ikx9gugjk().s[209]++;
    if (flowConditions.reynoldsNumber < 1000) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[56][0]++;
      cov_2ikx9gugjk().s[210]++;
      throw new Error(`Reynolds number ${flowConditions.reynoldsNumber} too low for turbulent flow calculations`);
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[56][1]++;
    }
  }
  /**
   * Validate calculation results
   */
  static validateResults(config, flowConditions, pressureLoss) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[35]++;
    const errors =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[211]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[212]++, []);
    // Check for unreasonable pressure loss
    const velocityPressure =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[213]++, this.calculateVelocityPressure(flowConditions.velocity, flowConditions.airDensity));
    const kFactor =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[214]++, pressureLoss / velocityPressure);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[215]++;
    if (kFactor > 10) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[57][0]++;
      cov_2ikx9gugjk().s[216]++;
      errors.push({
        code: 'E001',
        message: 'Pressure loss coefficient unreasonably high',
        parameter: 'k_factor',
        value: kFactor
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[57][1]++;
    }
    cov_2ikx9gugjk().s[217]++;
    if (kFactor < 0) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[58][0]++;
      cov_2ikx9gugjk().s[218]++;
      errors.push({
        code: 'E002',
        message: 'Negative pressure loss calculated',
        parameter: 'pressure_loss',
        value: pressureLoss
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[58][1]++;
    }
    // Apply validation rules from configuration
    cov_2ikx9gugjk().s[219]++;
    for (const rule of config.validationRules) {
      const parameterValue =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[220]++, this.getParameterValue(rule.condition.parameter, config, flowConditions));
      const isViolated =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[221]++, this.checkValidationCondition(rule.condition, parameterValue));
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[222]++;
      if (isViolated) {
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[59][0]++;
        cov_2ikx9gugjk().s[223]++;
        if (rule.severity === 'error') {
          /* istanbul ignore next */
          cov_2ikx9gugjk().b[60][0]++;
          cov_2ikx9gugjk().s[224]++;
          errors.push({
            code: rule.ruleId,
            message: rule.message,
            parameter: rule.condition.parameter,
            value: parameterValue
          });
        } else {
          /* istanbul ignore next */
          cov_2ikx9gugjk().b[60][1]++;
          cov_2ikx9gugjk().s[225]++;
          if (rule.severity === 'warning') {
            /* istanbul ignore next */
            cov_2ikx9gugjk().b[61][0]++;
            cov_2ikx9gugjk().s[226]++;
            warnings.push({
              code: rule.ruleId,
              message: rule.message,
              severity: 'medium',
              recommendation: 'Review operating conditions'
            });
          } else
          /* istanbul ignore next */
          {
            cov_2ikx9gugjk().b[61][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_2ikx9gugjk().b[59][1]++;
      }
    }
    // Check uncertainty bounds
    const uncertaintyBounds =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[227]++, config.pressureLossProfile.uncertaintyBounds);
    const uncertaintyRange =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[228]++, pressureLoss * (uncertaintyBounds.upperBound - uncertaintyBounds.lowerBound) / 100);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[229]++;
    if (uncertaintyRange > pressureLoss * 0.3) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[62][0]++;
      cov_2ikx9gugjk().s[230]++;
      warnings.push({
        code: 'W001',
        message: 'High uncertainty in pressure loss calculation',
        severity: 'medium',
        recommendation: 'Consider using more accurate calculation method'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[62][1]++;
    }
    const complianceStatus =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[231]++, {
      smacnaCompliant: errors.length === 0,
      ashraeCompliant: errors.length === 0,
      localCodeCompliant: true,
      customStandardsCompliant: true
    });
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[232]++;
    return {
      isValid: errors.length === 0,
      errors: errors,
      warnings: warnings,
      complianceStatus: complianceStatus
    };
  }
  /**
   * Check validation condition
   */
  static checkValidationCondition(condition, value) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[36]++;
    cov_2ikx9gugjk().s[233]++;
    switch (condition.operator) {
      case '>':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][0]++;
        cov_2ikx9gugjk().s[234]++;
        return Number(value) > Number(condition.value);
      case '<':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][1]++;
        cov_2ikx9gugjk().s[235]++;
        return Number(value) < Number(condition.value);
      case '>=':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][2]++;
        cov_2ikx9gugjk().s[236]++;
        return Number(value) >= Number(condition.value);
      case '<=':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][3]++;
        cov_2ikx9gugjk().s[237]++;
        return Number(value) <= Number(condition.value);
      case '=':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][4]++;
        cov_2ikx9gugjk().s[238]++;
        return value === condition.value;
      case '!=':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][5]++;
        cov_2ikx9gugjk().s[239]++;
        return value !== condition.value;
      case 'in':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][6]++;
        cov_2ikx9gugjk().s[240]++;
        return /* istanbul ignore next */(cov_2ikx9gugjk().b[64][0]++, Array.isArray(condition.value)) &&
        /* istanbul ignore next */
        (cov_2ikx9gugjk().b[64][1]++, condition.value.includes(value));
      case 'not_in':
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][7]++;
        cov_2ikx9gugjk().s[241]++;
        return /* istanbul ignore next */(cov_2ikx9gugjk().b[65][0]++, Array.isArray(condition.value)) &&
        /* istanbul ignore next */
        (cov_2ikx9gugjk().b[65][1]++, !condition.value.includes(value));
      default:
        /* istanbul ignore next */
        cov_2ikx9gugjk().b[63][8]++;
        cov_2ikx9gugjk().s[242]++;
        return false;
    }
  }
  /**
   * Generate recommendations based on calculation results
   */
  static generateRecommendations(config, flowConditions, performanceMetrics, validationResults) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[37]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[243]++, []);
    // Performance-based recommendations
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[244]++;
    if (performanceMetrics.efficiency < 70) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[66][0]++;
      cov_2ikx9gugjk().s[245]++;
      recommendations.push({
        type: 'optimization',
        priority: 'medium',
        description: 'Consider using a more efficient fitting design to reduce pressure loss',
        expectedBenefit: 'Reduced energy consumption and improved system performance',
        implementationCost: 'medium'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[66][1]++;
    }
    cov_2ikx9gugjk().s[246]++;
    if (performanceMetrics.noiseGeneration > 50) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[67][0]++;
      cov_2ikx9gugjk().s[247]++;
      recommendations.push({
        type: 'optimization',
        priority: 'medium',
        description: 'Consider adding sound attenuation to reduce noise levels',
        expectedBenefit: 'Improved acoustic comfort',
        implementationCost: 'medium'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[67][1]++;
    }
    // Flow-based recommendations
    const operatingRange =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[248]++, config.flowCharacteristics.operatingRange);
    const flowRatio =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[249]++, flowConditions.volumeFlow / operatingRange.optimal);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[250]++;
    if (flowRatio < 0.5) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[68][0]++;
      cov_2ikx9gugjk().s[251]++;
      recommendations.push({
        type: 'adjustment',
        priority: 'low',
        description: 'Flow is significantly below optimal range - consider resizing fitting',
        expectedBenefit: 'Better performance and efficiency',
        implementationCost: 'high'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[68][1]++;
    }
    cov_2ikx9gugjk().s[252]++;
    if (flowRatio > 1.5) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[69][0]++;
      cov_2ikx9gugjk().s[253]++;
      recommendations.push({
        type: 'adjustment',
        priority: 'high',
        description: 'Flow exceeds optimal range - fitting may be undersized',
        expectedBenefit: 'Reduced pressure loss and noise',
        implementationCost: 'high'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[69][1]++;
    }
    // Maintenance recommendations
    cov_2ikx9gugjk().s[254]++;
    if (
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[71][0]++, config.category === 'control') ||
    /* istanbul ignore next */
    (cov_2ikx9gugjk().b[71][1]++, config.category === 'terminal')) {
      /* istanbul ignore next */
      cov_2ikx9gugjk().b[70][0]++;
      cov_2ikx9gugjk().s[255]++;
      recommendations.push({
        type: 'maintenance',
        priority: 'low',
        description: 'Regular inspection and calibration recommended for control devices',
        expectedBenefit: 'Maintained performance and reliability',
        implementationCost: 'low'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ikx9gugjk().b[70][1]++;
    }
    cov_2ikx9gugjk().s[256]++;
    return recommendations;
  }
  /**
   * Get fitting configuration by ID from database
   */
  static getFittingConfiguration(fittingId) {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[38]++;
    const data =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[257]++, this.loadAdvancedFittingsData());
    // Search through all categories for the fitting
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[258]++;
    for (const categoryName of Object.keys(data.categories)) {
      const category =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[259]++, data.categories[categoryName]);
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[260]++;
      for (const typeName of Object.keys(category)) {
        const type =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[261]++, category[typeName]);
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[262]++;
        for (const configName of Object.keys(type)) {
          const config =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[263]++, type[configName]);
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[264]++;
          if (config.id === fittingId) {
            /* istanbul ignore next */
            cov_2ikx9gugjk().b[72][0]++;
            cov_2ikx9gugjk().s[265]++;
            return config;
          } else
          /* istanbul ignore next */
          {
            cov_2ikx9gugjk().b[72][1]++;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[266]++;
    return null;
  }
  /**
   * List all available fitting configurations
   */
  static listAvailableFittings() {
    /* istanbul ignore next */
    cov_2ikx9gugjk().f[39]++;
    const data =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[267]++, this.loadAdvancedFittingsData());
    const fittings =
    /* istanbul ignore next */
    (cov_2ikx9gugjk().s[268]++, []);
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[269]++;
    for (const categoryName of Object.keys(data.categories)) {
      const category =
      /* istanbul ignore next */
      (cov_2ikx9gugjk().s[270]++, data.categories[categoryName]);
      /* istanbul ignore next */
      cov_2ikx9gugjk().s[271]++;
      for (const typeName of Object.keys(category)) {
        const type =
        /* istanbul ignore next */
        (cov_2ikx9gugjk().s[272]++, category[typeName]);
        /* istanbul ignore next */
        cov_2ikx9gugjk().s[273]++;
        for (const configName of Object.keys(type)) {
          const config =
          /* istanbul ignore next */
          (cov_2ikx9gugjk().s[274]++, type[configName]);
          /* istanbul ignore next */
          cov_2ikx9gugjk().s[275]++;
          fittings.push({
            id: config.id,
            description: config.description,
            category: config.category
          });
        }
      }
    }
    /* istanbul ignore next */
    cov_2ikx9gugjk().s[276]++;
    return fittings.sort((a, b) => {
      /* istanbul ignore next */
      cov_2ikx9gugjk().f[40]++;
      cov_2ikx9gugjk().s[277]++;
      return /* istanbul ignore next */(cov_2ikx9gugjk().b[73][0]++, a.category.localeCompare(b.category)) ||
      /* istanbul ignore next */
      (cov_2ikx9gugjk().b[73][1]++, a.description.localeCompare(b.description));
    });
  }
}
/* istanbul ignore next */
cov_2ikx9gugjk().s[278]++;
exports.AdvancedFittingCalculator = AdvancedFittingCalculator;
/* istanbul ignore next */
cov_2ikx9gugjk().s[279]++;
AdvancedFittingCalculator.advancedFittingsData = null;
/* istanbul ignore next */
cov_2ikx9gugjk().s[280]++;
AdvancedFittingCalculator.DATA_FILE_PATH = path.join(__dirname, '../../data/advanced_fittings.json');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,