apiVersion: apps/v1
kind: Deployment
metadata:
  name: sizewise-api
  namespace: sizewise-suite
  labels:
    app: sizewise-suite
    component: api
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sizewise-suite
      component: api
  template:
    metadata:
      labels:
        app: sizewise-suite
        component: api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sizewise-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: sizewise-api
        image: sizewise/api:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: FLASK_ENV
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: POSTGRES_HOST
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: sizewise-database-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sizewise-database-secrets
              key: POSTGRES_PASSWORD
        - name: MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: MONGODB_HOST
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: REDIS_HOST
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sizewise-app-secrets
              key: FLASK_SECRET_KEY
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: app-config
        configMap:
          name: sizewise-config
      - name: logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sizewise-calculation
  namespace: sizewise-suite
  labels:
    app: sizewise-suite
    component: calculation
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sizewise-suite
      component: calculation
  template:
    metadata:
      labels:
        app: sizewise-suite
        component: calculation
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: sizewise-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: sizewise-calculation
        image: sizewise/calculation:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5001
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: CALCULATION_TIMEOUT_SECONDS
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: CALCULATION_TIMEOUT_SECONDS
        - name: MAX_CONCURRENT_CALCULATIONS
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: MAX_CONCURRENT_CALCULATIONS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sizewise-config
              key: REDIS_HOST
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: calculation-cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: calculation-cache
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sizewise-frontend
  namespace: sizewise-suite
  labels:
    app: sizewise-suite
    component: frontend
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sizewise-suite
      component: frontend
  template:
    metadata:
      labels:
        app: sizewise-suite
        component: frontend
        version: v1.0.0
    spec:
      serviceAccountName: sizewise-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: sizewise-frontend
        image: sizewise/frontend:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_BASE_URL
          value: "http://sizewise-api-service:5000"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
  namespace: sizewise-suite
  labels:
    app: sizewise-suite
    component: ingress
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sizewise-suite
      component: ingress
  template:
    metadata:
      labels:
        app: sizewise-suite
        component: ingress
        version: v1.0.0
    spec:
      serviceAccountName: sizewise-service-account
      containers:
      - name: nginx
        image: nginx:1.21-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: tls-certs
          mountPath: /etc/nginx/certs
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: tls-certs
        secret:
          secretName: sizewise-tls-secrets
