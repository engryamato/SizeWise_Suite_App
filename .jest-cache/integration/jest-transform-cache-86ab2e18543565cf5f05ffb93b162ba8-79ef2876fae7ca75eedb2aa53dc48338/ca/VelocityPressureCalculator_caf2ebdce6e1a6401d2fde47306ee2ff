d64c7a0b3c3e58e317088bb2bcfdb0ae
"use strict";

/**
 * Velocity Pressure Calculator
 *
 * Comprehensive velocity pressure calculation service for Phase 3: Advanced Calculation Modules
 * Provides multiple calculation methods, environmental corrections, and performance optimization
 * for HVAC duct system velocity pressure calculations.
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_25xu0s905i() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/VelocityPressureCalculator.ts";
  var hash = "7ad1854967468810b84fe1e7ddf1a3a1294bf1e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/VelocityPressureCalculator.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 103
        }
      },
      "2": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 70
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 25,
          column: 93
        }
      },
      "4": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 50
        }
      },
      "5": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "6": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "7": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 68
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "9": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "10": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 37
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 45
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "14": {
        start: {
          line: 47,
          column: 229
        },
        end: {
          line: 47,
          column: 234
        }
      },
      "15": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 27
        }
      },
      "16": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 62
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "19": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "20": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 56
        }
      },
      "21": {
        start: {
          line: 59,
          column: 13
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "22": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 60,
          column: 116
        }
      },
      "23": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 48
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 68
        }
      },
      "25": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "26": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "27": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "28": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 149
        }
      },
      "29": {
        start: {
          line: 72,
          column: 37
        },
        end: {
          line: 72,
          column: 94
        }
      },
      "30": {
        start: {
          line: 74,
          column: 42
        },
        end: {
          line: 74,
          column: 85
        }
      },
      "31": {
        start: {
          line: 76,
          column: 34
        },
        end: {
          line: 76,
          column: 123
        }
      },
      "32": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 85
        }
      },
      "33": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "34": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "35": {
        start: {
          line: 109,
          column: 27
        },
        end: {
          line: 110,
          column: 62
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "37": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 56
        }
      },
      "38": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "39": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 55
        }
      },
      "40": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "41": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 55
        }
      },
      "42": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "43": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 27
        }
      },
      "44": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "45": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 42
        }
      },
      "46": {
        start: {
          line: 133,
          column: 13
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "47": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 134,
          column: 116
        }
      },
      "48": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 48
        }
      },
      "49": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 48
        }
      },
      "50": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 57
        }
      },
      "51": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 142,
          column: 73
        }
      },
      "52": {
        start: {
          line: 143,
          column: 27
        },
        end: {
          line: 143,
          column: 58
        }
      },
      "53": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 80
        }
      },
      "54": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "55": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 156,
          column: 19
        }
      },
      "56": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 19
        }
      },
      "57": {
        start: {
          line: 157,
          column: 79
        },
        end: {
          line: 157,
          column: 84
        }
      },
      "58": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "59": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 59
        }
      },
      "60": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "61": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "62": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "63": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 79
        }
      },
      "64": {
        start: {
          line: 168,
          column: 22
        },
        end: {
          line: 168,
          column: 50
        }
      },
      "65": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "66": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 132
        }
      },
      "67": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "68": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "69": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 91
        }
      },
      "70": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "71": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 92
        }
      },
      "72": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "73": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "74": {
        start: {
          line: 197,
          column: 33
        },
        end: {
          line: 197,
          column: 71
        }
      },
      "75": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 51
        }
      },
      "76": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 48
        }
      },
      "77": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 48
        }
      },
      "78": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "79": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "80": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "81": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 46
        }
      },
      "82": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "83": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 46
        }
      },
      "84": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 65
        }
      },
      "85": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 27
        }
      },
      "86": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "87": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 57
        }
      },
      "88": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 71
        }
      },
      "89": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 73
        }
      },
      "90": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 65
        }
      },
      "91": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 73
        }
      },
      "92": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 77
        }
      },
      "93": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 71
        }
      },
      "94": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "95": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 253,
          column: 14
        }
      },
      "96": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 48
        }
      },
      "97": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 45
        }
      },
      "98": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 86
        }
      },
      "99": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 53
        }
      },
      "100": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 63
        }
      },
      "101": {
        start: {
          line: 274,
          column: 23
        },
        end: {
          line: 274,
          column: 78
        }
      },
      "102": {
        start: {
          line: 276,
          column: 35
        },
        end: {
          line: 276,
          column: 67
        }
      },
      "103": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 75
        }
      },
      "104": {
        start: {
          line: 284,
          column: 23
        },
        end: {
          line: 284,
          column: 56
        }
      },
      "105": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 286,
          column: 31
        }
      },
      "106": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "107": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 33
        }
      },
      "108": {
        start: {
          line: 290,
          column: 13
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "109": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 33
        }
      },
      "110": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 99
        }
      },
      "111": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 38
        }
      },
      "112": {
        start: {
          line: 300,
          column: 29
        },
        end: {
          line: 300,
          column: 57
        }
      },
      "113": {
        start: {
          line: 302,
          column: 31
        },
        end: {
          line: 302,
          column: 43
        }
      },
      "114": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "115": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 37
        }
      },
      "116": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "117": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 37
        }
      },
      "118": {
        start: {
          line: 309,
          column: 28
        },
        end: {
          line: 309,
          column: 69
        }
      },
      "119": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "120": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "121": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 108
        }
      },
      "122": {
        start: {
          line: 324,
          column: 13
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "123": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 101
        }
      },
      "124": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "125": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 116
        }
      },
      "126": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "127": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 106
        }
      },
      "128": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "129": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 40
        }
      },
      "130": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 56
        }
      },
      "131": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 64
        }
      },
      "132": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 76
        }
      },
      "133": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 69
        }
      },
      "134": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 40
        }
      },
      "135": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "136": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 57
        }
      },
      "137": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 57
        }
      },
      "138": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 62
        }
      },
      "139": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 46
        }
      },
      "140": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 373,
          column: 64
        }
      },
      "141": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 374,
          column: 45
        }
      },
      "142": {
        start: {
          line: 375,
          column: 0
        },
        end: {
          line: 375,
          column: 56
        }
      },
      "143": {
        start: {
          line: 376,
          column: 0
        },
        end: {
          line: 376,
          column: 61
        }
      },
      "144": {
        start: {
          line: 378,
          column: 0
        },
        end: {
          line: 384,
          column: 2
        }
      },
      "145": {
        start: {
          line: 386,
          column: 0
        },
        end: {
          line: 392,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 1
          },
          end: {
            line: 19,
            column: 2
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 1
          },
          end: {
            line: 30,
            column: 2
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 44
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 76
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 105
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 86
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 126
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 60
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 154
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 122
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 185
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 64
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 223
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 40
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 242
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 54
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 248
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 56
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 265
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 48
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 272
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 56
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 282
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 87
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 299
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 83
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 319
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        loc: {
          start: {
            line: 339,
            column: 41
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 339
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 40
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 358
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 3
          },
          end: {
            line: 25,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 3
          },
          end: {
            line: 25,
            column: 25
          }
        }, {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 90
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 3
          },
          end: {
            line: 35,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 3
          },
          end: {
            line: 35,
            column: 18
          }
        }, {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 69
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 47,
            column: 74
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 117
          },
          end: {
            line: 47,
            column: 145
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 140
          },
          end: {
            line: 47,
            column: 145
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 147
          },
          end: {
            line: 47,
            column: 180
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 175
          },
          end: {
            line: 47,
            column: 180
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 182
          },
          end: {
            line: 47,
            column: 224
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 200
          },
          end: {
            line: 47,
            column: 224
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 68,
            column: 9
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: 65,
            column: 13
          },
          end: {
            line: 68,
            column: 9
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 105,
            column: 53
          },
          end: {
            line: 105,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 64
          },
          end: {
            line: 105,
            column: 74
          }
        }],
        line: 105
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 108,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 107,
            column: 78
          }
        }, {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 108,
            column: 61
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 110,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 109,
            column: 77
          }
        }, {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 62
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "12": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 34
          }
        }, {
          start: {
            line: 112,
            column: 38
          },
          end: {
            line: 112,
            column: 48
          }
        }],
        line: 112
      },
      "13": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 31
          }
        }, {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 47
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "16": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 24
          }
        }, {
          start: {
            line: 118,
            column: 28
          },
          end: {
            line: 118,
            column: 42
          }
        }],
        line: 118
      },
      "17": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: 133,
            column: 13
          },
          end: {
            line: 140,
            column: 9
          }
        }],
        line: 130
      },
      "18": {
        loc: {
          start: {
            line: 133,
            column: 13
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 13
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: 138,
            column: 13
          },
          end: {
            line: 140,
            column: 9
          }
        }],
        line: 133
      },
      "19": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 156,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 156,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "20": {
        loc: {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 74
          }
        }],
        line: 157
      },
      "21": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "22": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 163,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 163,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "23": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "24": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "25": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 169,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 169,
            column: 32
          }
        }, {
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 169,
            column: 56
          }
        }],
        line: 169
      },
      "26": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "27": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "28": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "29": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "30": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "31": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 32
          }
        }, {
          start: {
            line: 204,
            column: 36
          },
          end: {
            line: 204,
            column: 48
          }
        }],
        line: 204
      },
      "32": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "33": {
        loc: {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 52
          }
        }, {
          start: {
            line: 205,
            column: 56
          },
          end: {
            line: 205,
            column: 80
          }
        }, {
          start: {
            line: 205,
            column: 84
          },
          end: {
            line: 205,
            column: 112
          }
        }],
        line: 205
      },
      "34": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "35": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 210,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 210,
            column: 37
          }
        }, {
          start: {
            line: 210,
            column: 41
          },
          end: {
            line: 210,
            column: 54
          }
        }],
        line: 210
      },
      "36": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 226,
            column: 57
          }
        }, {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 228,
            column: 71
          }
        }, {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 230,
            column: 73
          }
        }, {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 232,
            column: 65
          }
        }, {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 234,
            column: 73
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 236,
            column: 77
          }
        }],
        line: 224
      },
      "37": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: 290,
            column: 13
          },
          end: {
            line: 292,
            column: 9
          }
        }],
        line: 287
      },
      "38": {
        loc: {
          start: {
            line: 290,
            column: 13
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 13
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "39": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "40": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 26
          }
        }, {
          start: {
            line: 303,
            column: 30
          },
          end: {
            line: 303,
            column: 45
          }
        }],
        line: 303
      },
      "41": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "42": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 326,
            column: 9
          }
        }],
        line: 321
      },
      "43": {
        loc: {
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "44": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "45": {
        loc: {
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 328,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 328,
            column: 53
          }
        }, {
          start: {
            line: 328,
            column: 57
          },
          end: {
            line: 328,
            column: 72
          }
        }, {
          start: {
            line: 328,
            column: 76
          },
          end: {
            line: 328,
            column: 92
          }
        }],
        line: 328
      },
      "46": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "47": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 342,
            column: 40
          }
        }, {
          start: {
            line: 343,
            column: 12
          },
          end: {
            line: 344,
            column: 56
          }
        }, {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 346,
            column: 64
          }
        }, {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 348,
            column: 76
          }
        }, {
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 350,
            column: 69
          }
        }, {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 352,
            column: 40
          }
        }],
        line: 340
      },
      "48": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 48
          }
        }, {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 362,
            column: 57
          }
        }, {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 363,
            column: 53
          }
        }, {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 365,
            column: 57
          }
        }, {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 367,
            column: 62
          }
        }, {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 369,
            column: 46
          }
        }],
        line: 359
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0, 0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0],
      "46": [0, 0],
      "47": [0, 0, 0, 0, 0, 0],
      "48": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/VelocityPressureCalculator.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/VelocityPressureCalculator.ts"],
      sourcesContent: ["/**\n * Velocity Pressure Calculator\n * \n * Comprehensive velocity pressure calculation service for Phase 3: Advanced Calculation Modules\n * Provides multiple calculation methods, environmental corrections, and performance optimization\n * for HVAC duct system velocity pressure calculations.\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport { AirPropertiesCalculator, AirConditions } from './AirPropertiesCalculator';\n\n/**\n * Velocity pressure calculation method options\n */\nexport enum VelocityPressureMethod {\n  FORMULA = 'formula',\n  LOOKUP_TABLE = 'lookup_table',\n  INTERPOLATED = 'interpolated',\n  ENHANCED_FORMULA = 'enhanced_formula',\n  CFD_CORRECTED = 'cfd_corrected'\n}\n\n/**\n * Velocity pressure calculation input parameters\n */\nexport interface VelocityPressureInput {\n  velocity: number;                    // FPM\n  method?: VelocityPressureMethod;     // Calculation method\n  airConditions?: AirConditions;       // Environmental conditions\n  airDensity?: number;                 // lb/ft\xB3 (overrides calculated density)\n  ductGeometry?: DuctGeometry;         // Duct geometry for advanced corrections\n  turbulenceCorrection?: boolean;      // Apply turbulence corrections\n  compressibilityCorrection?: boolean; // Apply compressibility corrections\n  validationLevel?: ValidationLevel;   // Input validation strictness\n}\n\n/**\n * Duct geometry for advanced velocity pressure calculations\n */\nexport interface DuctGeometry {\n  shape: 'round' | 'rectangular' | 'oval';\n  diameter?: number;                   // inches (for round ducts)\n  width?: number;                      // inches (for rectangular ducts)\n  height?: number;                     // inches (for rectangular ducts)\n  majorAxis?: number;                  // inches (for oval ducts)\n  minorAxis?: number;                  // inches (for oval ducts)\n  hydraulicDiameter?: number;          // inches (calculated if not provided)\n  aspectRatio?: number;                // width/height (calculated if not provided)\n}\n\n/**\n * Validation level for input checking\n */\nexport enum ValidationLevel {\n  NONE = 'none',\n  BASIC = 'basic',\n  STANDARD = 'standard',\n  STRICT = 'strict'\n}\n\n/**\n * Velocity pressure calculation result\n */\nexport interface VelocityPressureResult {\n  velocityPressure: number;            // inches w.g.\n  method: VelocityPressureMethod;      // Method used\n  velocity: number;                    // FPM (input velocity)\n  airDensity: number;                  // lb/ft\xB3 (actual density used)\n  densityRatio: number;                // Ratio to standard density\n  corrections: {\n    temperature: number;               // Temperature correction factor\n    pressure: number;                  // Pressure correction factor\n    altitude: number;                  // Altitude correction factor\n    humidity: number;                  // Humidity correction factor\n    turbulence: number;                // Turbulence correction factor\n    compressibility: number;           // Compressibility correction factor\n    combined: number;                  // Combined correction factor\n  };\n  accuracy: number;                    // Estimated accuracy (0-1)\n  uncertaintyBounds?: {\n    lower: number;                     // Lower bound (inches w.g.)\n    upper: number;                     // Upper bound (inches w.g.)\n    confidenceLevel: number;           // Confidence level (0-1)\n  };\n  warnings: string[];\n  recommendations: string[];\n  calculationDetails: {\n    formula: string;                   // Formula used\n    intermediateValues: Record<string, number>;\n    dataSource: string;                // Source of calculation data\n    standardReference: string;         // Reference standard\n  };\n}\n\n/**\n * Velocity Pressure Calculator\n * \n * Comprehensive velocity pressure calculation service providing multiple calculation\n * methods, environmental corrections, and advanced features for HVAC applications.\n */\nexport class VelocityPressureCalculator {\n  private static readonly VERSION = '3.0.0';\n  private static readonly STANDARD_AIR_DENSITY = 0.075; // lb/ft\xB3\n  private static readonly STANDARD_VELOCITY_CONSTANT = 4005; // For VP = (V/4005)\xB2\n  \n  // Velocity ranges for different calculation methods\n  private static readonly VELOCITY_RANGES = {\n    FORMULA: { min: 0, max: 10000 },\n    LOOKUP_TABLE: { min: 100, max: 5000 },\n    INTERPOLATED: { min: 50, max: 6000 },\n    ENHANCED_FORMULA: { min: 0, max: 15000 },\n    CFD_CORRECTED: { min: 500, max: 8000 }\n  };\n\n  // Accuracy estimates for different methods\n  private static readonly METHOD_ACCURACY = {\n    [VelocityPressureMethod.FORMULA]: 0.95,\n    [VelocityPressureMethod.LOOKUP_TABLE]: 0.98,\n    [VelocityPressureMethod.INTERPOLATED]: 0.97,\n    [VelocityPressureMethod.ENHANCED_FORMULA]: 0.96,\n    [VelocityPressureMethod.CFD_CORRECTED]: 0.99\n  };\n\n  /**\n   * Calculate velocity pressure using specified method and conditions\n   */\n  public static calculateVelocityPressure(input: VelocityPressureInput): VelocityPressureResult {\n    const {\n      velocity,\n      method = VelocityPressureMethod.ENHANCED_FORMULA,\n      airConditions,\n      airDensity,\n      ductGeometry,\n      turbulenceCorrection = false,\n      compressibilityCorrection = false,\n      validationLevel = ValidationLevel.STANDARD\n    } = input;\n\n    const warnings: string[] = [];\n    const recommendations: string[] = [];\n\n    // Validate inputs\n    this.validateInputs(input, validationLevel, warnings);\n\n    // Determine air density\n    let actualAirDensity: number;\n    let densityCalculationMethod: string;\n    \n    if (airDensity !== undefined) {\n      actualAirDensity = airDensity;\n      densityCalculationMethod = 'User specified';\n    } else if (airConditions) {\n      const airProps = AirPropertiesCalculator.calculateAirProperties(airConditions);\n      actualAirDensity = airProps.density;\n      densityCalculationMethod = 'Calculated from conditions';\n      warnings.push(...airProps.warnings);\n    } else {\n      actualAirDensity = this.STANDARD_AIR_DENSITY;\n      densityCalculationMethod = 'Standard conditions assumed';\n    }\n\n    // Calculate corrections\n    const corrections = this.calculateCorrections(\n      airConditions,\n      actualAirDensity,\n      ductGeometry,\n      turbulenceCorrection,\n      compressibilityCorrection\n    );\n\n    // Select and execute calculation method\n    const baseVelocityPressure = this.executeCalculationMethod(method, velocity, warnings);\n    \n    // Apply corrections\n    const correctedVelocityPressure = baseVelocityPressure * corrections.combined;\n\n    // Calculate uncertainty bounds\n    const uncertaintyBounds = this.calculateUncertaintyBounds(\n      correctedVelocityPressure,\n      method,\n      velocity,\n      corrections\n    );\n\n    // Generate recommendations\n    this.generateRecommendations(velocity, method, corrections, recommendations);\n\n    return {\n      velocityPressure: correctedVelocityPressure,\n      method,\n      velocity,\n      airDensity: actualAirDensity,\n      densityRatio: actualAirDensity / this.STANDARD_AIR_DENSITY,\n      corrections,\n      accuracy: this.METHOD_ACCURACY[method],\n      uncertaintyBounds,\n      warnings,\n      recommendations,\n      calculationDetails: {\n        formula: this.getFormulaDescription(method),\n        intermediateValues: {\n          baseVelocityPressure,\n          densityRatio: actualAirDensity / this.STANDARD_AIR_DENSITY,\n          combinedCorrection: corrections.combined\n        },\n        dataSource: densityCalculationMethod,\n        standardReference: this.getStandardReference(method)\n      }\n    };\n  }\n\n  /**\n   * Get optimal calculation method for given conditions\n   */\n  public static getOptimalMethod(\n    velocity: number,\n    airConditions?: AirConditions,\n    accuracy: 'standard' | 'high' | 'maximum' = 'standard'\n  ): VelocityPressureMethod {\n    // Check velocity ranges\n    const inTableRange = velocity >= this.VELOCITY_RANGES.LOOKUP_TABLE.min && \n                        velocity <= this.VELOCITY_RANGES.LOOKUP_TABLE.max;\n    const inCFDRange = velocity >= this.VELOCITY_RANGES.CFD_CORRECTED.min && \n                      velocity <= this.VELOCITY_RANGES.CFD_CORRECTED.max;\n\n    // Determine optimal method based on accuracy requirements and conditions\n    if (accuracy === 'maximum' && inCFDRange) {\n      return VelocityPressureMethod.CFD_CORRECTED;\n    }\n    \n    if (accuracy === 'high' && inTableRange) {\n      return VelocityPressureMethod.LOOKUP_TABLE;\n    }\n    \n    if (inTableRange && !airConditions) {\n      return VelocityPressureMethod.INTERPOLATED;\n    }\n    \n    return VelocityPressureMethod.ENHANCED_FORMULA;\n  }\n\n  /**\n   * Calculate velocity from velocity pressure (inverse calculation)\n   */\n  public static calculateVelocityFromPressure(\n    velocityPressure: number,\n    airConditions?: AirConditions,\n    airDensity?: number\n  ): { velocity: number; accuracy: number; warnings: string[] } {\n    const warnings: string[] = [];\n    \n    // Determine air density\n    let actualAirDensity: number;\n    if (airDensity !== undefined) {\n      actualAirDensity = airDensity;\n    } else if (airConditions) {\n      const airProps = AirPropertiesCalculator.calculateAirProperties(airConditions);\n      actualAirDensity = airProps.density;\n      warnings.push(...airProps.warnings);\n    } else {\n      actualAirDensity = this.STANDARD_AIR_DENSITY;\n    }\n\n    // Calculate velocity using inverse formula\n    const densityRatio = actualAirDensity / this.STANDARD_AIR_DENSITY;\n    const adjustedVP = velocityPressure / densityRatio;\n    const velocity = this.STANDARD_VELOCITY_CONSTANT * Math.sqrt(adjustedVP);\n\n    return {\n      velocity,\n      accuracy: 0.95,\n      warnings\n    };\n  }\n\n  /**\n   * Validate input parameters\n   */\n  private static validateInputs(\n    input: VelocityPressureInput,\n    validationLevel: ValidationLevel,\n    warnings: string[]\n  ): void {\n    if (validationLevel === ValidationLevel.NONE) return;\n\n    const { velocity, method = VelocityPressureMethod.ENHANCED_FORMULA } = input;\n\n    // Basic validation\n    if (velocity < 0) {\n      throw new Error('Velocity cannot be negative');\n    }\n\n    if (validationLevel === ValidationLevel.BASIC) return;\n\n    // Standard validation\n    if (velocity > 10000) {\n      warnings.push('Velocity exceeds typical HVAC range (>10,000 FPM)');\n    }\n\n    const range = this.VELOCITY_RANGES[method];\n    if (velocity < range.min || velocity > range.max) {\n      warnings.push(`Velocity ${velocity} FPM is outside optimal range for ${method} method (${range.min}-${range.max} FPM)`);\n    }\n\n    if (validationLevel === ValidationLevel.STRICT) {\n      // Strict validation\n      if (velocity < 100) {\n        warnings.push('Very low velocity may indicate measurement or input error');\n      }\n      \n      if (velocity > 6000) {\n        warnings.push('High velocity may cause noise and energy efficiency issues');\n      }\n    }\n  }\n\n  /**\n   * Calculate environmental and geometric corrections\n   */\n  private static calculateCorrections(\n    airConditions?: AirConditions,\n    airDensity?: number,\n    ductGeometry?: DuctGeometry,\n    turbulenceCorrection?: boolean,\n    compressibilityCorrection?: boolean\n  ): VelocityPressureResult['corrections'] {\n    const corrections = {\n      temperature: 1.0,\n      pressure: 1.0,\n      altitude: 1.0,\n      humidity: 1.0,\n      turbulence: 1.0,\n      compressibility: 1.0,\n      combined: 1.0\n    };\n\n    // Density-based corrections\n    if (airDensity) {\n      const densityRatio = airDensity / this.STANDARD_AIR_DENSITY;\n      corrections.temperature = densityRatio;\n      corrections.pressure = densityRatio;\n      corrections.altitude = densityRatio;\n      corrections.humidity = densityRatio;\n    }\n\n    // Turbulence correction (simplified)\n    if (turbulenceCorrection && ductGeometry) {\n      if (ductGeometry.shape === 'rectangular' && ductGeometry.aspectRatio && ductGeometry.aspectRatio > 3) {\n        corrections.turbulence = 1.05; // 5% increase for high aspect ratio\n      }\n    }\n\n    // Compressibility correction (simplified)\n    if (compressibilityCorrection && airConditions) {\n      // Negligible for typical HVAC velocities, but included for completeness\n      corrections.compressibility = 1.0;\n    }\n\n    // Calculate combined correction\n    corrections.combined = corrections.temperature * corrections.pressure * \n                          corrections.altitude * corrections.humidity * \n                          corrections.turbulence * corrections.compressibility;\n\n    return corrections;\n  }\n\n  /**\n   * Execute the specified calculation method\n   */\n  private static executeCalculationMethod(\n    method: VelocityPressureMethod,\n    velocity: number,\n    warnings: string[]\n  ): number {\n    switch (method) {\n      case VelocityPressureMethod.FORMULA:\n        return this.calculateByFormula(velocity);\n        \n      case VelocityPressureMethod.LOOKUP_TABLE:\n        return this.calculateByLookupTable(velocity, warnings);\n        \n      case VelocityPressureMethod.INTERPOLATED:\n        return this.calculateByInterpolation(velocity, warnings);\n        \n      case VelocityPressureMethod.ENHANCED_FORMULA:\n        return this.calculateByEnhancedFormula(velocity);\n        \n      case VelocityPressureMethod.CFD_CORRECTED:\n        return this.calculateByCFDCorrection(velocity, warnings);\n        \n      default:\n        throw new Error(`Unsupported calculation method: ${method}`);\n    }\n  }\n\n  /**\n   * Calculate velocity pressure using standard formula\n   */\n  private static calculateByFormula(velocity: number): number {\n    return Math.pow(velocity / this.STANDARD_VELOCITY_CONSTANT, 2);\n  }\n\n  /**\n   * Calculate velocity pressure using lookup table\n   */\n  private static calculateByLookupTable(velocity: number, warnings: string[]): number {\n    try {\n      const vpResult = AirPropertiesCalculator.calculateVelocityPressure({\n        velocity,\n        useTable: true\n      });\n      warnings.push(...vpResult.warnings);\n      return vpResult.velocityPressure;\n    } catch (error) {\n      warnings.push('Lookup table unavailable, falling back to formula method');\n      return this.calculateByFormula(velocity);\n    }\n  }\n\n  /**\n   * Calculate velocity pressure using interpolation\n   */\n  private static calculateByInterpolation(velocity: number, warnings: string[]): number {\n    // Use AirPropertiesCalculator's interpolation method\n    return this.calculateByLookupTable(velocity, warnings);\n  }\n\n  /**\n   * Calculate velocity pressure using enhanced formula with corrections\n   */\n  private static calculateByEnhancedFormula(velocity: number): number {\n    // Enhanced formula with slight corrections for real-world conditions\n    const baseVP = Math.pow(velocity / this.STANDARD_VELOCITY_CONSTANT, 2);\n    \n    // Apply minor correction for velocity-dependent effects\n    const velocityCorrection = 1 + (velocity - 2000) * 0.000001; // Very small correction\n    \n    return baseVP * Math.max(0.98, Math.min(1.02, velocityCorrection));\n  }\n\n  /**\n   * Calculate velocity pressure using CFD-derived corrections\n   */\n  private static calculateByCFDCorrection(velocity: number, warnings: string[]): number {\n    // CFD-derived corrections for improved accuracy\n    const baseVP = this.calculateByFormula(velocity);\n    \n    // Apply CFD-derived correction factors (simplified)\n    let cfdCorrection = 1.0;\n    \n    if (velocity < 1000) {\n      cfdCorrection = 0.98; // Slight under-prediction at low velocities\n    } else if (velocity > 4000) {\n      cfdCorrection = 1.02; // Slight over-prediction at high velocities\n    }\n    \n    warnings.push('CFD corrections applied - results may vary with actual duct configuration');\n    \n    return baseVP * cfdCorrection;\n  }\n\n  /**\n   * Calculate uncertainty bounds for the result\n   */\n  private static calculateUncertaintyBounds(\n    velocityPressure: number,\n    method: VelocityPressureMethod,\n    velocity: number,\n    corrections: VelocityPressureResult['corrections']\n  ): VelocityPressureResult['uncertaintyBounds'] {\n    const baseAccuracy = this.METHOD_ACCURACY[method];\n    \n    // Adjust accuracy based on velocity range and corrections\n    let adjustedAccuracy = baseAccuracy;\n    \n    if (velocity < 500 || velocity > 5000) {\n      adjustedAccuracy *= 0.95; // Reduced accuracy outside optimal range\n    }\n    \n    if (Math.abs(corrections.combined - 1.0) > 0.1) {\n      adjustedAccuracy *= 0.98; // Reduced accuracy with large corrections\n    }\n    \n    const uncertainty = velocityPressure * (1 - adjustedAccuracy);\n    \n    return {\n      lower: velocityPressure - uncertainty,\n      upper: velocityPressure + uncertainty,\n      confidenceLevel: adjustedAccuracy\n    };\n  }\n\n  /**\n   * Generate recommendations based on calculation results\n   */\n  private static generateRecommendations(\n    velocity: number,\n    method: VelocityPressureMethod,\n    corrections: VelocityPressureResult['corrections'],\n    recommendations: string[]\n  ): void {\n    // Velocity-based recommendations\n    if (velocity < 500) {\n      recommendations.push('Consider increasing velocity to improve accuracy and system performance');\n    } else if (velocity > 4000) {\n      recommendations.push('High velocity may cause noise issues - consider larger duct size');\n    }\n    \n    // Method-based recommendations\n    if (method === VelocityPressureMethod.FORMULA && velocity >= 100 && velocity <= 5000) {\n      recommendations.push('Consider using lookup table method for improved accuracy in this velocity range');\n    }\n    \n    // Correction-based recommendations\n    if (Math.abs(corrections.combined - 1.0) > 0.05) {\n      recommendations.push('Significant environmental corrections applied - verify air conditions');\n    }\n  }\n\n  /**\n   * Get formula description for the method\n   */\n  private static getFormulaDescription(method: VelocityPressureMethod): string {\n    switch (method) {\n      case VelocityPressureMethod.FORMULA:\n        return 'VP = (V/4005)\xB2';\n      case VelocityPressureMethod.LOOKUP_TABLE:\n        return 'Table lookup with exact values';\n      case VelocityPressureMethod.INTERPOLATED:\n        return 'Table lookup with linear interpolation';\n      case VelocityPressureMethod.ENHANCED_FORMULA:\n        return 'VP = (V/4005)\xB2 with velocity-dependent corrections';\n      case VelocityPressureMethod.CFD_CORRECTED:\n        return 'VP = (V/4005)\xB2 with CFD-derived corrections';\n      default:\n        return 'Unknown method';\n    }\n  }\n\n  /**\n   * Get standard reference for the method\n   */\n  private static getStandardReference(method: VelocityPressureMethod): string {\n    switch (method) {\n      case VelocityPressureMethod.FORMULA:\n      case VelocityPressureMethod.ENHANCED_FORMULA:\n        return 'ASHRAE Fundamentals, Chapter 21';\n      case VelocityPressureMethod.LOOKUP_TABLE:\n      case VelocityPressureMethod.INTERPOLATED:\n        return 'ASHRAE Fundamentals, Table 21-1';\n      case VelocityPressureMethod.CFD_CORRECTED:\n        return 'CFD Analysis and ASHRAE Fundamentals';\n      default:\n        return 'Internal calculation';\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7ad1854967468810b84fe1e7ddf1a3a1294bf1e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25xu0s905i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25xu0s905i();
cov_25xu0s905i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25xu0s905i().s[1]++;
exports.VelocityPressureCalculator = exports.ValidationLevel = exports.VelocityPressureMethod = void 0;
const AirPropertiesCalculator_1 =
/* istanbul ignore next */
(cov_25xu0s905i().s[2]++, require("./AirPropertiesCalculator"));
/**
 * Velocity pressure calculation method options
 */
var VelocityPressureMethod;
/* istanbul ignore next */
cov_25xu0s905i().s[3]++;
(function (VelocityPressureMethod) {
  /* istanbul ignore next */
  cov_25xu0s905i().f[0]++;
  cov_25xu0s905i().s[4]++;
  VelocityPressureMethod["FORMULA"] = "formula";
  /* istanbul ignore next */
  cov_25xu0s905i().s[5]++;
  VelocityPressureMethod["LOOKUP_TABLE"] = "lookup_table";
  /* istanbul ignore next */
  cov_25xu0s905i().s[6]++;
  VelocityPressureMethod["INTERPOLATED"] = "interpolated";
  /* istanbul ignore next */
  cov_25xu0s905i().s[7]++;
  VelocityPressureMethod["ENHANCED_FORMULA"] = "enhanced_formula";
  /* istanbul ignore next */
  cov_25xu0s905i().s[8]++;
  VelocityPressureMethod["CFD_CORRECTED"] = "cfd_corrected";
})(
/* istanbul ignore next */
(cov_25xu0s905i().b[0][0]++, VelocityPressureMethod) ||
/* istanbul ignore next */
(cov_25xu0s905i().b[0][1]++, exports.VelocityPressureMethod = VelocityPressureMethod = {}));
/**
 * Validation level for input checking
 */
var ValidationLevel;
/* istanbul ignore next */
cov_25xu0s905i().s[9]++;
(function (ValidationLevel) {
  /* istanbul ignore next */
  cov_25xu0s905i().f[1]++;
  cov_25xu0s905i().s[10]++;
  ValidationLevel["NONE"] = "none";
  /* istanbul ignore next */
  cov_25xu0s905i().s[11]++;
  ValidationLevel["BASIC"] = "basic";
  /* istanbul ignore next */
  cov_25xu0s905i().s[12]++;
  ValidationLevel["STANDARD"] = "standard";
  /* istanbul ignore next */
  cov_25xu0s905i().s[13]++;
  ValidationLevel["STRICT"] = "strict";
})(
/* istanbul ignore next */
(cov_25xu0s905i().b[1][0]++, ValidationLevel) ||
/* istanbul ignore next */
(cov_25xu0s905i().b[1][1]++, exports.ValidationLevel = ValidationLevel = {}));
/**
 * Velocity Pressure Calculator
 *
 * Comprehensive velocity pressure calculation service providing multiple calculation
 * methods, environmental corrections, and advanced features for HVAC applications.
 */
class VelocityPressureCalculator {
  /**
   * Calculate velocity pressure using specified method and conditions
   */
  static calculateVelocityPressure(input) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[2]++;
    const {
      velocity,
      method =
      /* istanbul ignore next */
      (cov_25xu0s905i().b[2][0]++, VelocityPressureMethod.ENHANCED_FORMULA),
      airConditions,
      airDensity,
      ductGeometry,
      turbulenceCorrection =
      /* istanbul ignore next */
      (cov_25xu0s905i().b[3][0]++, false),
      compressibilityCorrection =
      /* istanbul ignore next */
      (cov_25xu0s905i().b[4][0]++, false),
      validationLevel =
      /* istanbul ignore next */
      (cov_25xu0s905i().b[5][0]++, ValidationLevel.STANDARD)
    } =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[14]++, input);
    const warnings =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[15]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[16]++, []);
    // Validate inputs
    /* istanbul ignore next */
    cov_25xu0s905i().s[17]++;
    this.validateInputs(input, validationLevel, warnings);
    // Determine air density
    let actualAirDensity;
    let densityCalculationMethod;
    /* istanbul ignore next */
    cov_25xu0s905i().s[18]++;
    if (airDensity !== undefined) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[6][0]++;
      cov_25xu0s905i().s[19]++;
      actualAirDensity = airDensity;
      /* istanbul ignore next */
      cov_25xu0s905i().s[20]++;
      densityCalculationMethod = 'User specified';
    } else {
      /* istanbul ignore next */
      cov_25xu0s905i().b[6][1]++;
      cov_25xu0s905i().s[21]++;
      if (airConditions) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[7][0]++;
        const airProps =
        /* istanbul ignore next */
        (cov_25xu0s905i().s[22]++, AirPropertiesCalculator_1.AirPropertiesCalculator.calculateAirProperties(airConditions));
        /* istanbul ignore next */
        cov_25xu0s905i().s[23]++;
        actualAirDensity = airProps.density;
        /* istanbul ignore next */
        cov_25xu0s905i().s[24]++;
        densityCalculationMethod = 'Calculated from conditions';
        /* istanbul ignore next */
        cov_25xu0s905i().s[25]++;
        warnings.push(...airProps.warnings);
      } else {
        /* istanbul ignore next */
        cov_25xu0s905i().b[7][1]++;
        cov_25xu0s905i().s[26]++;
        actualAirDensity = this.STANDARD_AIR_DENSITY;
        /* istanbul ignore next */
        cov_25xu0s905i().s[27]++;
        densityCalculationMethod = 'Standard conditions assumed';
      }
    }
    // Calculate corrections
    const corrections =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[28]++, this.calculateCorrections(airConditions, actualAirDensity, ductGeometry, turbulenceCorrection, compressibilityCorrection));
    // Select and execute calculation method
    const baseVelocityPressure =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[29]++, this.executeCalculationMethod(method, velocity, warnings));
    // Apply corrections
    const correctedVelocityPressure =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[30]++, baseVelocityPressure * corrections.combined);
    // Calculate uncertainty bounds
    const uncertaintyBounds =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[31]++, this.calculateUncertaintyBounds(correctedVelocityPressure, method, velocity, corrections));
    // Generate recommendations
    /* istanbul ignore next */
    cov_25xu0s905i().s[32]++;
    this.generateRecommendations(velocity, method, corrections, recommendations);
    /* istanbul ignore next */
    cov_25xu0s905i().s[33]++;
    return {
      velocityPressure: correctedVelocityPressure,
      method,
      velocity,
      airDensity: actualAirDensity,
      densityRatio: actualAirDensity / this.STANDARD_AIR_DENSITY,
      corrections,
      accuracy: this.METHOD_ACCURACY[method],
      uncertaintyBounds,
      warnings,
      recommendations,
      calculationDetails: {
        formula: this.getFormulaDescription(method),
        intermediateValues: {
          baseVelocityPressure,
          densityRatio: actualAirDensity / this.STANDARD_AIR_DENSITY,
          combinedCorrection: corrections.combined
        },
        dataSource: densityCalculationMethod,
        standardReference: this.getStandardReference(method)
      }
    };
  }
  /**
   * Get optimal calculation method for given conditions
   */
  static getOptimalMethod(velocity, airConditions, accuracy =
  /* istanbul ignore next */
  (cov_25xu0s905i().b[8][0]++, 'standard')) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[3]++;
    // Check velocity ranges
    const inTableRange =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[34]++,
    /* istanbul ignore next */
    (cov_25xu0s905i().b[9][0]++, velocity >= this.VELOCITY_RANGES.LOOKUP_TABLE.min) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[9][1]++, velocity <= this.VELOCITY_RANGES.LOOKUP_TABLE.max));
    const inCFDRange =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[35]++,
    /* istanbul ignore next */
    (cov_25xu0s905i().b[10][0]++, velocity >= this.VELOCITY_RANGES.CFD_CORRECTED.min) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[10][1]++, velocity <= this.VELOCITY_RANGES.CFD_CORRECTED.max));
    // Determine optimal method based on accuracy requirements and conditions
    /* istanbul ignore next */
    cov_25xu0s905i().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[12][0]++, accuracy === 'maximum') &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[12][1]++, inCFDRange)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[11][0]++;
      cov_25xu0s905i().s[37]++;
      return VelocityPressureMethod.CFD_CORRECTED;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[11][1]++;
    }
    cov_25xu0s905i().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[14][0]++, accuracy === 'high') &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[14][1]++, inTableRange)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[13][0]++;
      cov_25xu0s905i().s[39]++;
      return VelocityPressureMethod.LOOKUP_TABLE;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[13][1]++;
    }
    cov_25xu0s905i().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[16][0]++, inTableRange) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[16][1]++, !airConditions)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[15][0]++;
      cov_25xu0s905i().s[41]++;
      return VelocityPressureMethod.INTERPOLATED;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[15][1]++;
    }
    cov_25xu0s905i().s[42]++;
    return VelocityPressureMethod.ENHANCED_FORMULA;
  }
  /**
   * Calculate velocity from velocity pressure (inverse calculation)
   */
  static calculateVelocityFromPressure(velocityPressure, airConditions, airDensity) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[4]++;
    const warnings =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[43]++, []);
    // Determine air density
    let actualAirDensity;
    /* istanbul ignore next */
    cov_25xu0s905i().s[44]++;
    if (airDensity !== undefined) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[17][0]++;
      cov_25xu0s905i().s[45]++;
      actualAirDensity = airDensity;
    } else {
      /* istanbul ignore next */
      cov_25xu0s905i().b[17][1]++;
      cov_25xu0s905i().s[46]++;
      if (airConditions) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[18][0]++;
        const airProps =
        /* istanbul ignore next */
        (cov_25xu0s905i().s[47]++, AirPropertiesCalculator_1.AirPropertiesCalculator.calculateAirProperties(airConditions));
        /* istanbul ignore next */
        cov_25xu0s905i().s[48]++;
        actualAirDensity = airProps.density;
        /* istanbul ignore next */
        cov_25xu0s905i().s[49]++;
        warnings.push(...airProps.warnings);
      } else {
        /* istanbul ignore next */
        cov_25xu0s905i().b[18][1]++;
        cov_25xu0s905i().s[50]++;
        actualAirDensity = this.STANDARD_AIR_DENSITY;
      }
    }
    // Calculate velocity using inverse formula
    const densityRatio =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[51]++, actualAirDensity / this.STANDARD_AIR_DENSITY);
    const adjustedVP =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[52]++, velocityPressure / densityRatio);
    const velocity =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[53]++, this.STANDARD_VELOCITY_CONSTANT * Math.sqrt(adjustedVP));
    /* istanbul ignore next */
    cov_25xu0s905i().s[54]++;
    return {
      velocity,
      accuracy: 0.95,
      warnings
    };
  }
  /**
   * Validate input parameters
   */
  static validateInputs(input, validationLevel, warnings) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[5]++;
    cov_25xu0s905i().s[55]++;
    if (validationLevel === ValidationLevel.NONE) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[19][0]++;
      cov_25xu0s905i().s[56]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[19][1]++;
    }
    const {
      velocity,
      method =
      /* istanbul ignore next */
      (cov_25xu0s905i().b[20][0]++, VelocityPressureMethod.ENHANCED_FORMULA)
    } =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[57]++, input);
    // Basic validation
    /* istanbul ignore next */
    cov_25xu0s905i().s[58]++;
    if (velocity < 0) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[21][0]++;
      cov_25xu0s905i().s[59]++;
      throw new Error('Velocity cannot be negative');
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[21][1]++;
    }
    cov_25xu0s905i().s[60]++;
    if (validationLevel === ValidationLevel.BASIC) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[22][0]++;
      cov_25xu0s905i().s[61]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[22][1]++;
    }
    // Standard validation
    cov_25xu0s905i().s[62]++;
    if (velocity > 10000) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[23][0]++;
      cov_25xu0s905i().s[63]++;
      warnings.push('Velocity exceeds typical HVAC range (>10,000 FPM)');
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[23][1]++;
    }
    const range =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[64]++, this.VELOCITY_RANGES[method]);
    /* istanbul ignore next */
    cov_25xu0s905i().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[25][0]++, velocity < range.min) ||
    /* istanbul ignore next */
    (cov_25xu0s905i().b[25][1]++, velocity > range.max)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[24][0]++;
      cov_25xu0s905i().s[66]++;
      warnings.push(`Velocity ${velocity} FPM is outside optimal range for ${method} method (${range.min}-${range.max} FPM)`);
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[24][1]++;
    }
    cov_25xu0s905i().s[67]++;
    if (validationLevel === ValidationLevel.STRICT) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[26][0]++;
      cov_25xu0s905i().s[68]++;
      // Strict validation
      if (velocity < 100) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[27][0]++;
        cov_25xu0s905i().s[69]++;
        warnings.push('Very low velocity may indicate measurement or input error');
      } else
      /* istanbul ignore next */
      {
        cov_25xu0s905i().b[27][1]++;
      }
      cov_25xu0s905i().s[70]++;
      if (velocity > 6000) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[28][0]++;
        cov_25xu0s905i().s[71]++;
        warnings.push('High velocity may cause noise and energy efficiency issues');
      } else
      /* istanbul ignore next */
      {
        cov_25xu0s905i().b[28][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[26][1]++;
    }
  }
  /**
   * Calculate environmental and geometric corrections
   */
  static calculateCorrections(airConditions, airDensity, ductGeometry, turbulenceCorrection, compressibilityCorrection) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[6]++;
    const corrections =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[72]++, {
      temperature: 1.0,
      pressure: 1.0,
      altitude: 1.0,
      humidity: 1.0,
      turbulence: 1.0,
      compressibility: 1.0,
      combined: 1.0
    });
    // Density-based corrections
    /* istanbul ignore next */
    cov_25xu0s905i().s[73]++;
    if (airDensity) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[29][0]++;
      const densityRatio =
      /* istanbul ignore next */
      (cov_25xu0s905i().s[74]++, airDensity / this.STANDARD_AIR_DENSITY);
      /* istanbul ignore next */
      cov_25xu0s905i().s[75]++;
      corrections.temperature = densityRatio;
      /* istanbul ignore next */
      cov_25xu0s905i().s[76]++;
      corrections.pressure = densityRatio;
      /* istanbul ignore next */
      cov_25xu0s905i().s[77]++;
      corrections.altitude = densityRatio;
      /* istanbul ignore next */
      cov_25xu0s905i().s[78]++;
      corrections.humidity = densityRatio;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[29][1]++;
    }
    // Turbulence correction (simplified)
    cov_25xu0s905i().s[79]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[31][0]++, turbulenceCorrection) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[31][1]++, ductGeometry)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[30][0]++;
      cov_25xu0s905i().s[80]++;
      if (
      /* istanbul ignore next */
      (cov_25xu0s905i().b[33][0]++, ductGeometry.shape === 'rectangular') &&
      /* istanbul ignore next */
      (cov_25xu0s905i().b[33][1]++, ductGeometry.aspectRatio) &&
      /* istanbul ignore next */
      (cov_25xu0s905i().b[33][2]++, ductGeometry.aspectRatio > 3)) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[32][0]++;
        cov_25xu0s905i().s[81]++;
        corrections.turbulence = 1.05; // 5% increase for high aspect ratio
      } else
      /* istanbul ignore next */
      {
        cov_25xu0s905i().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[30][1]++;
    }
    // Compressibility correction (simplified)
    cov_25xu0s905i().s[82]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[35][0]++, compressibilityCorrection) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[35][1]++, airConditions)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[34][0]++;
      cov_25xu0s905i().s[83]++;
      // Negligible for typical HVAC velocities, but included for completeness
      corrections.compressibility = 1.0;
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[34][1]++;
    }
    // Calculate combined correction
    cov_25xu0s905i().s[84]++;
    corrections.combined = corrections.temperature * corrections.pressure * corrections.altitude * corrections.humidity * corrections.turbulence * corrections.compressibility;
    /* istanbul ignore next */
    cov_25xu0s905i().s[85]++;
    return corrections;
  }
  /**
   * Execute the specified calculation method
   */
  static executeCalculationMethod(method, velocity, warnings) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[7]++;
    cov_25xu0s905i().s[86]++;
    switch (method) {
      case VelocityPressureMethod.FORMULA:
        /* istanbul ignore next */
        cov_25xu0s905i().b[36][0]++;
        cov_25xu0s905i().s[87]++;
        return this.calculateByFormula(velocity);
      case VelocityPressureMethod.LOOKUP_TABLE:
        /* istanbul ignore next */
        cov_25xu0s905i().b[36][1]++;
        cov_25xu0s905i().s[88]++;
        return this.calculateByLookupTable(velocity, warnings);
      case VelocityPressureMethod.INTERPOLATED:
        /* istanbul ignore next */
        cov_25xu0s905i().b[36][2]++;
        cov_25xu0s905i().s[89]++;
        return this.calculateByInterpolation(velocity, warnings);
      case VelocityPressureMethod.ENHANCED_FORMULA:
        /* istanbul ignore next */
        cov_25xu0s905i().b[36][3]++;
        cov_25xu0s905i().s[90]++;
        return this.calculateByEnhancedFormula(velocity);
      case VelocityPressureMethod.CFD_CORRECTED:
        /* istanbul ignore next */
        cov_25xu0s905i().b[36][4]++;
        cov_25xu0s905i().s[91]++;
        return this.calculateByCFDCorrection(velocity, warnings);
      default:
        /* istanbul ignore next */
        cov_25xu0s905i().b[36][5]++;
        cov_25xu0s905i().s[92]++;
        throw new Error(`Unsupported calculation method: ${method}`);
    }
  }
  /**
   * Calculate velocity pressure using standard formula
   */
  static calculateByFormula(velocity) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[8]++;
    cov_25xu0s905i().s[93]++;
    return Math.pow(velocity / this.STANDARD_VELOCITY_CONSTANT, 2);
  }
  /**
   * Calculate velocity pressure using lookup table
   */
  static calculateByLookupTable(velocity, warnings) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[9]++;
    cov_25xu0s905i().s[94]++;
    try {
      const vpResult =
      /* istanbul ignore next */
      (cov_25xu0s905i().s[95]++, AirPropertiesCalculator_1.AirPropertiesCalculator.calculateVelocityPressure({
        velocity,
        useTable: true
      }));
      /* istanbul ignore next */
      cov_25xu0s905i().s[96]++;
      warnings.push(...vpResult.warnings);
      /* istanbul ignore next */
      cov_25xu0s905i().s[97]++;
      return vpResult.velocityPressure;
    } catch (error) {
      /* istanbul ignore next */
      cov_25xu0s905i().s[98]++;
      warnings.push('Lookup table unavailable, falling back to formula method');
      /* istanbul ignore next */
      cov_25xu0s905i().s[99]++;
      return this.calculateByFormula(velocity);
    }
  }
  /**
   * Calculate velocity pressure using interpolation
   */
  static calculateByInterpolation(velocity, warnings) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[10]++;
    cov_25xu0s905i().s[100]++;
    // Use AirPropertiesCalculator's interpolation method
    return this.calculateByLookupTable(velocity, warnings);
  }
  /**
   * Calculate velocity pressure using enhanced formula with corrections
   */
  static calculateByEnhancedFormula(velocity) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[11]++;
    // Enhanced formula with slight corrections for real-world conditions
    const baseVP =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[101]++, Math.pow(velocity / this.STANDARD_VELOCITY_CONSTANT, 2));
    // Apply minor correction for velocity-dependent effects
    const velocityCorrection =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[102]++, 1 + (velocity - 2000) * 0.000001); // Very small correction
    /* istanbul ignore next */
    cov_25xu0s905i().s[103]++;
    return baseVP * Math.max(0.98, Math.min(1.02, velocityCorrection));
  }
  /**
   * Calculate velocity pressure using CFD-derived corrections
   */
  static calculateByCFDCorrection(velocity, warnings) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[12]++;
    // CFD-derived corrections for improved accuracy
    const baseVP =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[104]++, this.calculateByFormula(velocity));
    // Apply CFD-derived correction factors (simplified)
    let cfdCorrection =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[105]++, 1.0);
    /* istanbul ignore next */
    cov_25xu0s905i().s[106]++;
    if (velocity < 1000) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[37][0]++;
      cov_25xu0s905i().s[107]++;
      cfdCorrection = 0.98; // Slight under-prediction at low velocities
    } else {
      /* istanbul ignore next */
      cov_25xu0s905i().b[37][1]++;
      cov_25xu0s905i().s[108]++;
      if (velocity > 4000) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[38][0]++;
        cov_25xu0s905i().s[109]++;
        cfdCorrection = 1.02; // Slight over-prediction at high velocities
      } else
      /* istanbul ignore next */
      {
        cov_25xu0s905i().b[38][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25xu0s905i().s[110]++;
    warnings.push('CFD corrections applied - results may vary with actual duct configuration');
    /* istanbul ignore next */
    cov_25xu0s905i().s[111]++;
    return baseVP * cfdCorrection;
  }
  /**
   * Calculate uncertainty bounds for the result
   */
  static calculateUncertaintyBounds(velocityPressure, method, velocity, corrections) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[13]++;
    const baseAccuracy =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[112]++, this.METHOD_ACCURACY[method]);
    // Adjust accuracy based on velocity range and corrections
    let adjustedAccuracy =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[113]++, baseAccuracy);
    /* istanbul ignore next */
    cov_25xu0s905i().s[114]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[40][0]++, velocity < 500) ||
    /* istanbul ignore next */
    (cov_25xu0s905i().b[40][1]++, velocity > 5000)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[39][0]++;
      cov_25xu0s905i().s[115]++;
      adjustedAccuracy *= 0.95; // Reduced accuracy outside optimal range
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[39][1]++;
    }
    cov_25xu0s905i().s[116]++;
    if (Math.abs(corrections.combined - 1.0) > 0.1) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[41][0]++;
      cov_25xu0s905i().s[117]++;
      adjustedAccuracy *= 0.98; // Reduced accuracy with large corrections
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[41][1]++;
    }
    const uncertainty =
    /* istanbul ignore next */
    (cov_25xu0s905i().s[118]++, velocityPressure * (1 - adjustedAccuracy));
    /* istanbul ignore next */
    cov_25xu0s905i().s[119]++;
    return {
      lower: velocityPressure - uncertainty,
      upper: velocityPressure + uncertainty,
      confidenceLevel: adjustedAccuracy
    };
  }
  /**
   * Generate recommendations based on calculation results
   */
  static generateRecommendations(velocity, method, corrections, recommendations) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[14]++;
    cov_25xu0s905i().s[120]++;
    // Velocity-based recommendations
    if (velocity < 500) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[42][0]++;
      cov_25xu0s905i().s[121]++;
      recommendations.push('Consider increasing velocity to improve accuracy and system performance');
    } else {
      /* istanbul ignore next */
      cov_25xu0s905i().b[42][1]++;
      cov_25xu0s905i().s[122]++;
      if (velocity > 4000) {
        /* istanbul ignore next */
        cov_25xu0s905i().b[43][0]++;
        cov_25xu0s905i().s[123]++;
        recommendations.push('High velocity may cause noise issues - consider larger duct size');
      } else
      /* istanbul ignore next */
      {
        cov_25xu0s905i().b[43][1]++;
      }
    }
    // Method-based recommendations
    /* istanbul ignore next */
    cov_25xu0s905i().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_25xu0s905i().b[45][0]++, method === VelocityPressureMethod.FORMULA) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[45][1]++, velocity >= 100) &&
    /* istanbul ignore next */
    (cov_25xu0s905i().b[45][2]++, velocity <= 5000)) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[44][0]++;
      cov_25xu0s905i().s[125]++;
      recommendations.push('Consider using lookup table method for improved accuracy in this velocity range');
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[44][1]++;
    }
    // Correction-based recommendations
    cov_25xu0s905i().s[126]++;
    if (Math.abs(corrections.combined - 1.0) > 0.05) {
      /* istanbul ignore next */
      cov_25xu0s905i().b[46][0]++;
      cov_25xu0s905i().s[127]++;
      recommendations.push('Significant environmental corrections applied - verify air conditions');
    } else
    /* istanbul ignore next */
    {
      cov_25xu0s905i().b[46][1]++;
    }
  }
  /**
   * Get formula description for the method
   */
  static getFormulaDescription(method) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[15]++;
    cov_25xu0s905i().s[128]++;
    switch (method) {
      case VelocityPressureMethod.FORMULA:
        /* istanbul ignore next */
        cov_25xu0s905i().b[47][0]++;
        cov_25xu0s905i().s[129]++;
        return 'VP = (V/4005)²';
      case VelocityPressureMethod.LOOKUP_TABLE:
        /* istanbul ignore next */
        cov_25xu0s905i().b[47][1]++;
        cov_25xu0s905i().s[130]++;
        return 'Table lookup with exact values';
      case VelocityPressureMethod.INTERPOLATED:
        /* istanbul ignore next */
        cov_25xu0s905i().b[47][2]++;
        cov_25xu0s905i().s[131]++;
        return 'Table lookup with linear interpolation';
      case VelocityPressureMethod.ENHANCED_FORMULA:
        /* istanbul ignore next */
        cov_25xu0s905i().b[47][3]++;
        cov_25xu0s905i().s[132]++;
        return 'VP = (V/4005)² with velocity-dependent corrections';
      case VelocityPressureMethod.CFD_CORRECTED:
        /* istanbul ignore next */
        cov_25xu0s905i().b[47][4]++;
        cov_25xu0s905i().s[133]++;
        return 'VP = (V/4005)² with CFD-derived corrections';
      default:
        /* istanbul ignore next */
        cov_25xu0s905i().b[47][5]++;
        cov_25xu0s905i().s[134]++;
        return 'Unknown method';
    }
  }
  /**
   * Get standard reference for the method
   */
  static getStandardReference(method) {
    /* istanbul ignore next */
    cov_25xu0s905i().f[16]++;
    cov_25xu0s905i().s[135]++;
    switch (method) {
      case VelocityPressureMethod.FORMULA:
        /* istanbul ignore next */
        cov_25xu0s905i().b[48][0]++;
      case VelocityPressureMethod.ENHANCED_FORMULA:
        /* istanbul ignore next */
        cov_25xu0s905i().b[48][1]++;
        cov_25xu0s905i().s[136]++;
        return 'ASHRAE Fundamentals, Chapter 21';
      case VelocityPressureMethod.LOOKUP_TABLE:
        /* istanbul ignore next */
        cov_25xu0s905i().b[48][2]++;
      case VelocityPressureMethod.INTERPOLATED:
        /* istanbul ignore next */
        cov_25xu0s905i().b[48][3]++;
        cov_25xu0s905i().s[137]++;
        return 'ASHRAE Fundamentals, Table 21-1';
      case VelocityPressureMethod.CFD_CORRECTED:
        /* istanbul ignore next */
        cov_25xu0s905i().b[48][4]++;
        cov_25xu0s905i().s[138]++;
        return 'CFD Analysis and ASHRAE Fundamentals';
      default:
        /* istanbul ignore next */
        cov_25xu0s905i().b[48][5]++;
        cov_25xu0s905i().s[139]++;
        return 'Internal calculation';
    }
  }
}
/* istanbul ignore next */
cov_25xu0s905i().s[140]++;
exports.VelocityPressureCalculator = VelocityPressureCalculator;
/* istanbul ignore next */
cov_25xu0s905i().s[141]++;
VelocityPressureCalculator.VERSION = '3.0.0';
/* istanbul ignore next */
cov_25xu0s905i().s[142]++;
VelocityPressureCalculator.STANDARD_AIR_DENSITY = 0.075; // lb/ft³
/* istanbul ignore next */
cov_25xu0s905i().s[143]++;
VelocityPressureCalculator.STANDARD_VELOCITY_CONSTANT = 4005; // For VP = (V/4005)²
// Velocity ranges for different calculation methods
/* istanbul ignore next */
cov_25xu0s905i().s[144]++;
VelocityPressureCalculator.VELOCITY_RANGES = {
  FORMULA: {
    min: 0,
    max: 10000
  },
  LOOKUP_TABLE: {
    min: 100,
    max: 5000
  },
  INTERPOLATED: {
    min: 50,
    max: 6000
  },
  ENHANCED_FORMULA: {
    min: 0,
    max: 15000
  },
  CFD_CORRECTED: {
    min: 500,
    max: 8000
  }
};
// Accuracy estimates for different methods
/* istanbul ignore next */
cov_25xu0s905i().s[145]++;
VelocityPressureCalculator.METHOD_ACCURACY = {
  [VelocityPressureMethod.FORMULA]: 0.95,
  [VelocityPressureMethod.LOOKUP_TABLE]: 0.98,
  [VelocityPressureMethod.INTERPOLATED]: 0.97,
  [VelocityPressureMethod.ENHANCED_FORMULA]: 0.96,
  [VelocityPressureMethod.CFD_CORRECTED]: 0.99
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,