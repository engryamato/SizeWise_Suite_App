286e47eef7caf70d3c9f6cdbbbda2693
"use strict";

/**
 * Gradient Descent Algorithm Implementation for System Optimization
 *
 * Implements gradient descent optimization with:
 * - Multiple variants (standard, momentum, Adam, RMSprop)
 * - Numerical gradient computation with finite differences
 * - Adaptive learning rate and step size control
 * - Line search optimization
 * - Constraint handling with projected gradients
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_2qpojs2dt6() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GradientDescent.ts";
  var hash = "7ae4df74c3bd355ca396441b18fdf003dad36785";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GradientDescent.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "2": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 77
        }
      },
      "3": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "6": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "8": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "9": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 77
        }
      },
      "10": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 38
        }
      },
      "11": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 43
        }
      },
      "12": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "13": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "14": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 46
        }
      },
      "15": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 94
        }
      },
      "16": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "17": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 93
        }
      },
      "18": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 37
        }
      },
      "19": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "20": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 45
        }
      },
      "21": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "22": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 74
        }
      },
      "23": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 24
        }
      },
      "24": {
        start: {
          line: 91,
          column: 37
        },
        end: {
          line: 91,
          column: 113
        }
      },
      "25": {
        start: {
          line: 91,
          column: 65
        },
        end: {
          line: 91,
          column: 112
        }
      },
      "26": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "27": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 133
        }
      },
      "28": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 33
        }
      },
      "29": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 33
        }
      },
      "30": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 26
        }
      },
      "31": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 33
        }
      },
      "32": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 134
        }
      },
      "33": {
        start: {
          line: 111,
          column: 32
        },
        end: {
          line: 111,
          column: 66
        }
      },
      "34": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 102
        }
      },
      "35": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 114,
          column: 53
        }
      },
      "36": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "37": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 51
        }
      },
      "38": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "39": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "40": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "41": {
        start: {
          line: 139,
          column: 36
        },
        end: {
          line: 139,
          column: 94
        }
      },
      "42": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 78
        }
      },
      "43": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 144,
          column: 101
        }
      },
      "44": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 101
        }
      },
      "45": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 75
        }
      },
      "46": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 158,
          column: 10
        }
      },
      "47": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "48": {
        start: {
          line: 166,
          column: 30
        },
        end: {
          line: 166,
          column: 83
        }
      },
      "49": {
        start: {
          line: 168,
          column: 35
        },
        end: {
          line: 168,
          column: 63
        }
      },
      "50": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "51": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "52": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 95
        }
      },
      "53": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 47
        }
      },
      "54": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "55": {
        start: {
          line: 176,
          column: 25
        },
        end: {
          line: 176,
          column: 26
        }
      },
      "56": {
        start: {
          line: 177,
          column: 34
        },
        end: {
          line: 177,
          column: 67
        }
      },
      "57": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "58": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 94
        }
      },
      "59": {
        start: {
          line: 188,
          column: 73
        },
        end: {
          line: 188,
          column: 92
        }
      },
      "60": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "61": {
        start: {
          line: 191,
          column: 37
        },
        end: {
          line: 193,
          column: 59
        }
      },
      "62": {
        start: {
          line: 192,
          column: 33
        },
        end: {
          line: 192,
          column: 51
        }
      },
      "63": {
        start: {
          line: 193,
          column: 40
        },
        end: {
          line: 193,
          column: 55
        }
      },
      "64": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 49
        }
      },
      "65": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 35
        }
      },
      "66": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 63
        }
      },
      "67": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 48
        }
      },
      "68": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 38
        }
      },
      "69": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 211,
          column: 12
        }
      },
      "70": {
        start: {
          line: 208,
          column: 50
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "71": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 218,
          column: 19
        }
      },
      "72": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 19
        }
      },
      "73": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 84
        }
      },
      "74": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 83
        }
      },
      "75": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "76": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 42
        }
      },
      "77": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "78": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 66
        }
      },
      "79": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 38
        }
      },
      "80": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "81": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "82": {
        start: {
          line: 239,
          column: 33
        },
        end: {
          line: 239,
          column: 104
        }
      },
      "83": {
        start: {
          line: 240,
          column: 18
        },
        end: {
          line: 240,
          column: 54
        }
      },
      "84": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "85": {
        start: {
          line: 241,
          column: 21
        },
        end: {
          line: 241,
          column: 22
        }
      },
      "86": {
        start: {
          line: 242,
          column: 29
        },
        end: {
          line: 242,
          column: 49
        }
      },
      "87": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "88": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 50
        }
      },
      "89": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 25
        }
      },
      "90": {
        start: {
          line: 248,
          column: 34
        },
        end: {
          line: 248,
          column: 66
        }
      },
      "91": {
        start: {
          line: 249,
          column: 27
        },
        end: {
          line: 249,
          column: 28
        }
      },
      "92": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "93": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "94": {
        start: {
          line: 254,
          column: 41
        },
        end: {
          line: 254,
          column: 76
        }
      },
      "95": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 255,
          column: 84
        }
      },
      "96": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 26
        }
      },
      "97": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 73
        }
      },
      "98": {
        start: {
          line: 260,
          column: 42
        },
        end: {
          line: 260,
          column: 77
        }
      },
      "99": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 85
        }
      },
      "100": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 262,
          column: 26
        }
      },
      "101": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 265,
          column: 73
        }
      },
      "102": {
        start: {
          line: 266,
          column: 39
        },
        end: {
          line: 266,
          column: 74
        }
      },
      "103": {
        start: {
          line: 267,
          column: 20
        },
        end: {
          line: 267,
          column: 73
        }
      },
      "104": {
        start: {
          line: 268,
          column: 40
        },
        end: {
          line: 268,
          column: 75
        }
      },
      "105": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 68
        }
      },
      "106": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 26
        }
      },
      "107": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 61
        }
      },
      "108": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 53
        }
      },
      "109": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 89
        }
      },
      "110": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 114
        }
      },
      "111": {
        start: {
          line: 278,
          column: 97
        },
        end: {
          line: 278,
          column: 108
        }
      },
      "112": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "113": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "114": {
        start: {
          line: 286,
          column: 30
        },
        end: {
          line: 286,
          column: 57
        }
      },
      "115": {
        start: {
          line: 288,
          column: 23
        },
        end: {
          line: 288,
          column: 53
        }
      },
      "116": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "117": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 116
        }
      },
      "118": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 31
        }
      },
      "119": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "120": {
        start: {
          line: 294,
          column: 21
        },
        end: {
          line: 294,
          column: 22
        }
      },
      "121": {
        start: {
          line: 295,
          column: 29
        },
        end: {
          line: 295,
          column: 49
        }
      },
      "122": {
        start: {
          line: 296,
          column: 33
        },
        end: {
          line: 296,
          column: 82
        }
      },
      "123": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "124": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 57
        }
      },
      "125": {
        start: {
          line: 301,
          column: 17
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "126": {
        start: {
          line: 303,
          column: 33
        },
        end: {
          line: 303,
          column: 75
        }
      },
      "127": {
        start: {
          line: 305,
          column: 28
        },
        end: {
          line: 305,
          column: 109
        }
      },
      "128": {
        start: {
          line: 306,
          column: 28
        },
        end: {
          line: 306,
          column: 108
        }
      },
      "129": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 83
        }
      },
      "130": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 57
        }
      },
      "131": {
        start: {
          line: 314,
          column: 28
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "132": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 98
        }
      },
      "133": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 49
        }
      },
      "134": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 46
        }
      },
      "135": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 62
        }
      },
      "136": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 331,
          column: 22
        }
      },
      "137": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 22
        }
      },
      "138": {
        start: {
          line: 332,
          column: 25
        },
        end: {
          line: 332,
          column: 51
        }
      },
      "139": {
        start: {
          line: 333,
          column: 30
        },
        end: {
          line: 333,
          column: 56
        }
      },
      "140": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 389,
          column: 9
        }
      },
      "141": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 339,
          column: 17
        }
      },
      "142": {
        start: {
          line: 337,
          column: 29
        },
        end: {
          line: 337,
          column: 30
        }
      },
      "143": {
        start: {
          line: 338,
          column: 20
        },
        end: {
          line: 338,
          column: 51
        }
      },
      "144": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 22
        }
      },
      "145": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 346,
          column: 17
        }
      },
      "146": {
        start: {
          line: 343,
          column: 29
        },
        end: {
          line: 343,
          column: 30
        }
      },
      "147": {
        start: {
          line: 344,
          column: 20
        },
        end: {
          line: 344,
          column: 134
        }
      },
      "148": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 345,
          column: 69
        }
      },
      "149": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 22
        }
      },
      "150": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 350,
          column: 55
        }
      },
      "151": {
        start: {
          line: 351,
          column: 30
        },
        end: {
          line: 351,
          column: 55
        }
      },
      "152": {
        start: {
          line: 352,
          column: 32
        },
        end: {
          line: 352,
          column: 59
        }
      },
      "153": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 57
        }
      },
      "154": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 365,
          column: 17
        }
      },
      "155": {
        start: {
          line: 354,
          column: 29
        },
        end: {
          line: 354,
          column: 30
        }
      },
      "156": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 112
        }
      },
      "157": {
        start: {
          line: 358,
          column: 20
        },
        end: {
          line: 358,
          column: 126
        }
      },
      "158": {
        start: {
          line: 360,
          column: 33
        },
        end: {
          line: 360,
          column: 86
        }
      },
      "159": {
        start: {
          line: 362,
          column: 33
        },
        end: {
          line: 362,
          column: 86
        }
      },
      "160": {
        start: {
          line: 364,
          column: 20
        },
        end: {
          line: 364,
          column: 74
        }
      },
      "161": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 22
        }
      },
      "162": {
        start: {
          line: 369,
          column: 30
        },
        end: {
          line: 369,
          column: 62
        }
      },
      "163": {
        start: {
          line: 370,
          column: 28
        },
        end: {
          line: 370,
          column: 58
        }
      },
      "164": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 374,
          column: 17
        }
      },
      "165": {
        start: {
          line: 371,
          column: 29
        },
        end: {
          line: 371,
          column: 30
        }
      },
      "166": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 132
        }
      },
      "167": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 102
        }
      },
      "168": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 375,
          column: 22
        }
      },
      "169": {
        start: {
          line: 378,
          column: 35
        },
        end: {
          line: 378,
          column: 62
        }
      },
      "170": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 382,
          column: 17
        }
      },
      "171": {
        start: {
          line: 379,
          column: 29
        },
        end: {
          line: 379,
          column: 30
        }
      },
      "172": {
        start: {
          line: 380,
          column: 20
        },
        end: {
          line: 380,
          column: 79
        }
      },
      "173": {
        start: {
          line: 381,
          column: 20
        },
        end: {
          line: 381,
          column: 109
        }
      },
      "174": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 22
        }
      },
      "175": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 388,
          column: 17
        }
      },
      "176": {
        start: {
          line: 386,
          column: 29
        },
        end: {
          line: 386,
          column: 30
        }
      },
      "177": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 51
        }
      },
      "178": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 29
        }
      },
      "179": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 397,
          column: 48
        }
      },
      "180": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 48
        }
      },
      "181": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 407,
          column: 9
        }
      },
      "182": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 400,
          column: 109
        }
      },
      "183": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 402,
          column: 108
        }
      },
      "184": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 116
        }
      },
      "185": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 406,
          column: 52
        }
      },
      "186": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 414,
          column: 48
        }
      },
      "187": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 48
        }
      },
      "188": {
        start: {
          line: 415,
          column: 19
        },
        end: {
          line: 415,
          column: 23
        }
      },
      "189": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 416,
          column: 48
        }
      },
      "190": {
        start: {
          line: 417,
          column: 29
        },
        end: {
          line: 417,
          column: 31
        }
      },
      "191": {
        start: {
          line: 418,
          column: 29
        },
        end: {
          line: 418,
          column: 60
        }
      },
      "192": {
        start: {
          line: 419,
          column: 37
        },
        end: {
          line: 419,
          column: 116
        }
      },
      "193": {
        start: {
          line: 419,
          column: 86
        },
        end: {
          line: 419,
          column: 112
        }
      },
      "194": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "195": {
        start: {
          line: 420,
          column: 21
        },
        end: {
          line: 420,
          column: 22
        }
      },
      "196": {
        start: {
          line: 422,
          column: 34
        },
        end: {
          line: 422,
          column: 89
        }
      },
      "197": {
        start: {
          line: 423,
          column: 30
        },
        end: {
          line: 423,
          column: 62
        }
      },
      "198": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 35
        }
      },
      "199": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 428,
          column: 13
        }
      },
      "200": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 427,
          column: 29
        }
      },
      "201": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 25
        }
      },
      "202": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 21
        }
      },
      "203": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 101
        }
      },
      "204": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 42
        }
      },
      "205": {
        start: {
          line: 445,
          column: 23
        },
        end: {
          line: 445,
          column: 30
        }
      },
      "206": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 446,
          column: 17
        }
      },
      "207": {
        start: {
          line: 447,
          column: 16
        },
        end: {
          line: 447,
          column: 48
        }
      },
      "208": {
        start: {
          line: 448,
          column: 20
        },
        end: {
          line: 448,
          column: 24
        }
      },
      "209": {
        start: {
          line: 450,
          column: 17
        },
        end: {
          line: 450,
          column: 37
        }
      },
      "210": {
        start: {
          line: 451,
          column: 17
        },
        end: {
          line: 451,
          column: 43
        }
      },
      "211": {
        start: {
          line: 452,
          column: 17
        },
        end: {
          line: 452,
          column: 83
        }
      },
      "212": {
        start: {
          line: 453,
          column: 17
        },
        end: {
          line: 453,
          column: 83
        }
      },
      "213": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "214": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 468,
          column: 13
        }
      },
      "215": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 23
        }
      },
      "216": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 24
        }
      },
      "217": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 24
        }
      },
      "218": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 42
        }
      },
      "219": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 88
        }
      },
      "220": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 23
        }
      },
      "221": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 464,
          column: 24
        }
      },
      "222": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 24
        }
      },
      "223": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 48
        }
      },
      "224": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 88
        }
      },
      "225": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 27
        }
      },
      "226": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 477,
          column: 22
        }
      },
      "227": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 22
        }
      },
      "228": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 495,
          column: 11
        }
      },
      "229": {
        start: {
          line: 479,
          column: 33
        },
        end: {
          line: 479,
          column: 82
        }
      },
      "230": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 494,
          column: 13
        }
      },
      "231": {
        start: {
          line: 481,
          column: 33
        },
        end: {
          line: 481,
          column: 72
        }
      },
      "232": {
        start: {
          line: 482,
          column: 28
        },
        end: {
          line: 482,
          column: 109
        }
      },
      "233": {
        start: {
          line: 483,
          column: 28
        },
        end: {
          line: 483,
          column: 108
        }
      },
      "234": {
        start: {
          line: 484,
          column: 16
        },
        end: {
          line: 487,
          column: 18
        }
      },
      "235": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 493,
          column: 18
        }
      },
      "236": {
        start: {
          line: 501,
          column: 30
        },
        end: {
          line: 501,
          column: 85
        }
      },
      "237": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 31
        }
      },
      "238": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 48
        }
      },
      "239": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 510,
          column: 19
        }
      },
      "240": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 510,
          column: 19
        }
      },
      "241": {
        start: {
          line: 512,
          column: 35
        },
        end: {
          line: 512,
          column: 37
        }
      },
      "242": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "243": {
        start: {
          line: 514,
          column: 33
        },
        end: {
          line: 514,
          column: 82
        }
      },
      "244": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 522,
          column: 13
        }
      },
      "245": {
        start: {
          line: 516,
          column: 28
        },
        end: {
          line: 516,
          column: 109
        }
      },
      "246": {
        start: {
          line: 517,
          column: 28
        },
        end: {
          line: 517,
          column: 108
        }
      },
      "247": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 518,
          column: 93
        }
      },
      "248": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 521,
          column: 63
        }
      },
      "249": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 66
        }
      },
      "250": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 531,
          column: 19
        }
      },
      "251": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 19
        }
      },
      "252": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 540,
          column: 9
        }
      },
      "253": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 125
        }
      },
      "254": {
        start: {
          line: 537,
          column: 13
        },
        end: {
          line: 540,
          column: 9
        }
      },
      "255": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 125
        }
      },
      "256": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 547,
          column: 24
        }
      },
      "257": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 24
        }
      },
      "258": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "259": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 550,
          column: 24
        }
      },
      "260": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 555,
          column: 9
        }
      },
      "261": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 554,
          column: 24
        }
      },
      "262": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 563,
          column: 9
        }
      },
      "263": {
        start: {
          line: 558,
          column: 34
        },
        end: {
          line: 558,
          column: 57
        }
      },
      "264": {
        start: {
          line: 559,
          column: 40
        },
        end: {
          line: 559,
          column: 122
        }
      },
      "265": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 562,
          column: 13
        }
      },
      "266": {
        start: {
          line: 561,
          column: 16
        },
        end: {
          line: 561,
          column: 28
        }
      },
      "267": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 21
        }
      },
      "268": {
        start: {
          line: 570,
          column: 8
        },
        end: {
          line: 571,
          column: 19
        }
      },
      "269": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 571,
          column: 19
        }
      },
      "270": {
        start: {
          line: 572,
          column: 24
        },
        end: {
          line: 580,
          column: 9
        }
      },
      "271": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 35
        }
      },
      "272": {
        start: {
          line: 587,
          column: 30
        },
        end: {
          line: 587,
          column: 59
        }
      },
      "273": {
        start: {
          line: 588,
          column: 27
        },
        end: {
          line: 603,
          column: 9
        }
      },
      "274": {
        start: {
          line: 593,
          column: 54
        },
        end: {
          line: 593,
          column: 67
        }
      },
      "275": {
        start: {
          line: 594,
          column: 57
        },
        end: {
          line: 594,
          column: 73
        }
      },
      "276": {
        start: {
          line: 595,
          column: 52
        },
        end: {
          line: 595,
          column: 63
        }
      },
      "277": {
        start: {
          line: 596,
          column: 62
        },
        end: {
          line: 596,
          column: 84
        }
      },
      "278": {
        start: {
          line: 604,
          column: 36
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "279": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 620,
          column: 10
        }
      },
      "280": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 81
        }
      },
      "281": {
        start: {
          line: 627,
          column: 20
        },
        end: {
          line: 627,
          column: 24
        }
      },
      "282": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 631,
          column: 10
        }
      },
      "283": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 52
        }
      },
      "284": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 34
        }
      },
      "285": {
        start: {
          line: 634,
          column: 0
        },
        end: {
          line: 634,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 68
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 29
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 60
          },
          end: {
            line: 91,
            column: 61
          }
        },
        loc: {
          start: {
            line: 91,
            column: 65
          },
          end: {
            line: 91,
            column: 112
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 81
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 109
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 34
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 134
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 86
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 163
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 188,
            column: 68
          },
          end: {
            line: 188,
            column: 69
          }
        },
        loc: {
          start: {
            line: 188,
            column: 73
          },
          end: {
            line: 188,
            column: 92
          }
        },
        line: 188
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 29
          }
        },
        loc: {
          start: {
            line: 192,
            column: 33
          },
          end: {
            line: 192,
            column: 51
          }
        },
        line: 192
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 193,
            column: 29
          }
        },
        loc: {
          start: {
            line: 193,
            column: 40
          },
          end: {
            line: 193,
            column: 55
          }
        },
        line: 193
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 53
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 207
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 208,
            column: 37
          },
          end: {
            line: 208,
            column: 38
          }
        },
        loc: {
          start: {
            line: 208,
            column: 50
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 208
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 76
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 216
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 75
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 236
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 278,
            column: 85
          },
          end: {
            line: 278,
            column: 86
          }
        },
        loc: {
          start: {
            line: 278,
            column: 97
          },
          end: {
            line: 278,
            column: 108
          }
        },
        line: 278
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 74
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 283
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 27
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 329
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 395,
            column: 5
          }
        },
        loc: {
          start: {
            line: 395,
            column: 92
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 395
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        },
        loc: {
          start: {
            line: 412,
            column: 91
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 412
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 419,
            column: 71
          },
          end: {
            line: 419,
            column: 72
          }
        },
        loc: {
          start: {
            line: 419,
            column: 86
          },
          end: {
            line: 419,
            column: 112
          }
        },
        line: 419
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 90
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 436
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 98
          },
          end: {
            line: 471,
            column: 5
          }
        },
        line: 443
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 475,
            column: 4
          },
          end: {
            line: 475,
            column: 5
          }
        },
        loc: {
          start: {
            line: 475,
            column: 55
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 475
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 478,
            column: 37
          },
          end: {
            line: 478,
            column: 38
          }
        },
        loc: {
          start: {
            line: 478,
            column: 54
          },
          end: {
            line: 495,
            column: 9
          }
        },
        line: 478
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        },
        loc: {
          start: {
            line: 500,
            column: 69
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 500
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 29
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 508
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        loc: {
          start: {
            line: 529,
            column: 24
          },
          end: {
            line: 541,
            column: 5
          }
        },
        line: 529
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        },
        loc: {
          start: {
            line: 545,
            column: 22
          },
          end: {
            line: 565,
            column: 5
          }
        },
        line: 545
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 569,
            column: 4
          },
          end: {
            line: 569,
            column: 5
          }
        },
        loc: {
          start: {
            line: 569,
            column: 20
          },
          end: {
            line: 582,
            column: 5
          }
        },
        line: 569
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        },
        loc: {
          start: {
            line: 586,
            column: 49
          },
          end: {
            line: 621,
            column: 5
          }
        },
        line: 586
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 593,
            column: 49
          },
          end: {
            line: 593,
            column: 50
          }
        },
        loc: {
          start: {
            line: 593,
            column: 54
          },
          end: {
            line: 593,
            column: 67
          }
        },
        line: 593
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 594,
            column: 52
          },
          end: {
            line: 594,
            column: 53
          }
        },
        loc: {
          start: {
            line: 594,
            column: 57
          },
          end: {
            line: 594,
            column: 73
          }
        },
        line: 594
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 595,
            column: 47
          },
          end: {
            line: 595,
            column: 48
          }
        },
        loc: {
          start: {
            line: 595,
            column: 52
          },
          end: {
            line: 595,
            column: 63
          }
        },
        line: 595
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 596,
            column: 57
          },
          end: {
            line: 596,
            column: 58
          }
        },
        loc: {
          start: {
            line: 596,
            column: 62
          },
          end: {
            line: 596,
            column: 84
          }
        },
        line: 596
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 623,
            column: 4
          },
          end: {
            line: 623,
            column: 5
          }
        },
        loc: {
          start: {
            line: 623,
            column: 25
          },
          end: {
            line: 625,
            column: 5
          }
        },
        line: 623
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 626,
            column: 4
          },
          end: {
            line: 626,
            column: 5
          }
        },
        loc: {
          start: {
            line: 626,
            column: 29
          },
          end: {
            line: 632,
            column: 5
          }
        },
        line: 626
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 628,
            column: 15
          },
          end: {
            line: 628,
            column: 16
          }
        },
        loc: {
          start: {
            line: 628,
            column: 21
          },
          end: {
            line: 631,
            column: 9
          }
        },
        line: 628
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: 54,
            column: 13
          },
          end: {
            line: 56,
            column: 9
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 91,
            column: 65
          },
          end: {
            line: 91,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 65
          },
          end: {
            line: 91,
            column: 81
          }
        }, {
          start: {
            line: 91,
            column: 85
          },
          end: {
            line: 91,
            column: 112
          }
        }],
        line: 91
      },
      "3": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "4": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: 142,
            column: 17
          },
          end: {
            line: 147,
            column: 13
          }
        }],
        line: 137
      },
      "5": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 39
          }
        }, {
          start: {
            line: 137,
            column: 43
          },
          end: {
            line: 137,
            column: 77
          }
        }],
        line: 137
      },
      "6": {
        loc: {
          start: {
            line: 144,
            column: 28
          },
          end: {
            line: 144,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 74
          },
          end: {
            line: 144,
            column: 97
          }
        }, {
          start: {
            line: 144,
            column: 100
          },
          end: {
            line: 144,
            column: 101
          }
        }],
        line: 144
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 145,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 74
          },
          end: {
            line: 145,
            column: 97
          }
        }, {
          start: {
            line: 145,
            column: 100
          },
          end: {
            line: 145,
            column: 101
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 180,
            column: 35
          },
          end: {
            line: 180,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 51
          },
          end: {
            line: 180,
            column: 63
          }
        }, {
          start: {
            line: 180,
            column: 66
          },
          end: {
            line: 180,
            column: 76
          }
        }],
        line: 180
      },
      "10": {
        loc: {
          start: {
            line: 183,
            column: 30
          },
          end: {
            line: 183,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 53
          }
        }, {
          start: {
            line: 183,
            column: 56
          },
          end: {
            line: 183,
            column: 63
          }
        }],
        line: 183
      },
      "11": {
        loc: {
          start: {
            line: 184,
            column: 29
          },
          end: {
            line: 184,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 45
          },
          end: {
            line: 184,
            column: 91
          }
        }, {
          start: {
            line: 184,
            column: 94
          },
          end: {
            line: 184,
            column: 95
          }
        }],
        line: 184
      },
      "12": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "13": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 34
          }
        }, {
          start: {
            line: 190,
            column: 38
          },
          end: {
            line: 190,
            column: 86
          }
        }],
        line: 190
      },
      "14": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 218,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 218,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "15": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "16": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "17": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 238,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 238,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "18": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "19": {
        loc: {
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 244,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 244,
            column: 39
          }
        }, {
          start: {
            line: 244,
            column: 43
          },
          end: {
            line: 244,
            column: 77
          }
        }],
        line: 244
      },
      "20": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 256,
            column: 26
          }
        }, {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 262,
            column: 26
          }
        }, {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 270,
            column: 26
          }
        }],
        line: 250
      },
      "21": {
        loc: {
          start: {
            line: 275,
            column: 36
          },
          end: {
            line: 275,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 83
          },
          end: {
            line: 275,
            column: 84
          }
        }, {
          start: {
            line: 275,
            column: 87
          },
          end: {
            line: 275,
            column: 88
          }
        }],
        line: 275
      },
      "22": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 285,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 285,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "23": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "24": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 311,
            column: 13
          }
        }],
        line: 297
      },
      "25": {
        loc: {
          start: {
            line: 297,
            column: 16
          },
          end: {
            line: 297,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 16
          },
          end: {
            line: 297,
            column: 39
          }
        }, {
          start: {
            line: 297,
            column: 43
          },
          end: {
            line: 297,
            column: 77
          }
        }],
        line: 297
      },
      "26": {
        loc: {
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: 309,
            column: 17
          },
          end: {
            line: 311,
            column: 13
          }
        }],
        line: 301
      },
      "27": {
        loc: {
          start: {
            line: 305,
            column: 28
          },
          end: {
            line: 305,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 74
          },
          end: {
            line: 305,
            column: 97
          }
        }, {
          start: {
            line: 305,
            column: 100
          },
          end: {
            line: 305,
            column: 109
          }
        }],
        line: 305
      },
      "28": {
        loc: {
          start: {
            line: 306,
            column: 28
          },
          end: {
            line: 306,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 74
          },
          end: {
            line: 306,
            column: 97
          }
        }, {
          start: {
            line: 306,
            column: 100
          },
          end: {
            line: 306,
            column: 108
          }
        }],
        line: 306
      },
      "29": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 331,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 331,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "30": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 340,
            column: 22
          }
        }, {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 347,
            column: 22
          }
        }, {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 366,
            column: 22
          }
        }, {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 375,
            column: 22
          }
        }, {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 383,
            column: 22
          }
        }, {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 388,
            column: 17
          }
        }],
        line: 334
      },
      "31": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 397,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 397,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "32": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 407,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 399,
            column: 12
          },
          end: {
            line: 400,
            column: 109
          }
        }, {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 402,
            column: 108
          }
        }, {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 404,
            column: 116
          }
        }, {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 406,
            column: 52
          }
        }],
        line: 398
      },
      "33": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 414,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 414,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "34": {
        loc: {
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 428,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 428,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "35": {
        loc: {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        }, {
          start: {
            line: 462,
            column: 17
          },
          end: {
            line: 468,
            column: 13
          }
        }],
        line: 455
      },
      "36": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 477,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 477,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "37": {
        loc: {
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        }, {
          start: {
            line: 489,
            column: 17
          },
          end: {
            line: 494,
            column: 13
          }
        }],
        line: 480
      },
      "38": {
        loc: {
          start: {
            line: 482,
            column: 28
          },
          end: {
            line: 482,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 482,
            column: 74
          },
          end: {
            line: 482,
            column: 97
          }
        }, {
          start: {
            line: 482,
            column: 100
          },
          end: {
            line: 482,
            column: 109
          }
        }],
        line: 482
      },
      "39": {
        loc: {
          start: {
            line: 483,
            column: 28
          },
          end: {
            line: 483,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 483,
            column: 74
          },
          end: {
            line: 483,
            column: 97
          }
        }, {
          start: {
            line: 483,
            column: 100
          },
          end: {
            line: 483,
            column: 108
          }
        }],
        line: 483
      },
      "40": {
        loc: {
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 510,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 510,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 509
      },
      "41": {
        loc: {
          start: {
            line: 515,
            column: 12
          },
          end: {
            line: 522,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 12
          },
          end: {
            line: 522,
            column: 13
          }
        }, {
          start: {
            line: 520,
            column: 17
          },
          end: {
            line: 522,
            column: 13
          }
        }],
        line: 515
      },
      "42": {
        loc: {
          start: {
            line: 516,
            column: 28
          },
          end: {
            line: 516,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 516,
            column: 74
          },
          end: {
            line: 516,
            column: 97
          }
        }, {
          start: {
            line: 516,
            column: 100
          },
          end: {
            line: 516,
            column: 109
          }
        }],
        line: 516
      },
      "43": {
        loc: {
          start: {
            line: 517,
            column: 28
          },
          end: {
            line: 517,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 517,
            column: 74
          },
          end: {
            line: 517,
            column: 97
          }
        }, {
          start: {
            line: 517,
            column: 100
          },
          end: {
            line: 517,
            column: 108
          }
        }],
        line: 517
      },
      "44": {
        loc: {
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 531,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 531,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 530
      },
      "45": {
        loc: {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        }, {
          start: {
            line: 537,
            column: 13
          },
          end: {
            line: 540,
            column: 9
          }
        }],
        line: 533
      },
      "46": {
        loc: {
          start: {
            line: 537,
            column: 13
          },
          end: {
            line: 540,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 13
          },
          end: {
            line: 540,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "47": {
        loc: {
          start: {
            line: 546,
            column: 8
          },
          end: {
            line: 547,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 8
          },
          end: {
            line: 547,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 546
      },
      "48": {
        loc: {
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "49": {
        loc: {
          start: {
            line: 553,
            column: 8
          },
          end: {
            line: 555,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 553,
            column: 8
          },
          end: {
            line: 555,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 553
      },
      "50": {
        loc: {
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "51": {
        loc: {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 562,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 562,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "52": {
        loc: {
          start: {
            line: 570,
            column: 8
          },
          end: {
            line: 571,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 8
          },
          end: {
            line: 571,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      },
      "53": {
        loc: {
          start: {
            line: 574,
            column: 25
          },
          end: {
            line: 574,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 574,
            column: 25
          },
          end: {
            line: 574,
            column: 51
          }
        }, {
          start: {
            line: 574,
            column: 55
          },
          end: {
            line: 574,
            column: 86
          }
        }],
        line: 574
      },
      "54": {
        loc: {
          start: {
            line: 578,
            column: 34
          },
          end: {
            line: 578,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 578,
            column: 72
          },
          end: {
            line: 578,
            column: 73
          }
        }, {
          start: {
            line: 578,
            column: 76
          },
          end: {
            line: 578,
            column: 77
          }
        }],
        line: 578
      },
      "55": {
        loc: {
          start: {
            line: 589,
            column: 29
          },
          end: {
            line: 589,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 589,
            column: 29
          },
          end: {
            line: 589,
            column: 57
          }
        }, {
          start: {
            line: 589,
            column: 61
          },
          end: {
            line: 589,
            column: 62
          }
        }],
        line: 589
      },
      "56": {
        loc: {
          start: {
            line: 591,
            column: 34
          },
          end: {
            line: 591,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 34
          },
          end: {
            line: 591,
            column: 62
          }
        }, {
          start: {
            line: 591,
            column: 66
          },
          end: {
            line: 591,
            column: 67
          }
        }],
        line: 591
      },
      "57": {
        loc: {
          start: {
            line: 599,
            column: 35
          },
          end: {
            line: 599,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 599,
            column: 35
          },
          end: {
            line: 599,
            column: 66
          }
        }, {
          start: {
            line: 599,
            column: 70
          },
          end: {
            line: 599,
            column: 71
          }
        }],
        line: 599
      },
      "58": {
        loc: {
          start: {
            line: 600,
            column: 35
          },
          end: {
            line: 600,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 35
          },
          end: {
            line: 600,
            column: 66
          }
        }, {
          start: {
            line: 600,
            column: 70
          },
          end: {
            line: 600,
            column: 71
          }
        }],
        line: 600
      },
      "59": {
        loc: {
          start: {
            line: 601,
            column: 31
          },
          end: {
            line: 601,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 601,
            column: 31
          },
          end: {
            line: 601,
            column: 58
          }
        }, {
          start: {
            line: 601,
            column: 62
          },
          end: {
            line: 601,
            column: 63
          }
        }],
        line: 601
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GradientDescent.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GradientDescent.ts"],
      sourcesContent: ["/**\n * Gradient Descent Algorithm Implementation for System Optimization\n * \n * Implements gradient descent optimization with:\n * - Multiple variants (standard, momentum, Adam, RMSprop)\n * - Numerical gradient computation with finite differences\n * - Adaptive learning rate and step size control\n * - Line search optimization\n * - Constraint handling with projected gradients\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport {\n  OptimizationSolution,\n  OptimizationVariable,\n  OptimizationProblem,\n  OptimizationResult,\n  OptimizationStatus,\n  OptimizationStatistics,\n  OptimizationHistory,\n  IterationHistory,\n  SolutionPerformanceMetrics,\n  ObjectiveFunctionType,\n  ConstraintFunctionType\n} from '../types/SystemOptimizationTypes';\n\nexport interface GradientDescentParameters {\n  maxIterations: number;\n  learningRate: number;\n  learningRateMin: number;\n  learningRateMax: number;\n  variant: 'standard' | 'momentum' | 'adam' | 'rmsprop' | 'adagrad';\n  momentumCoefficient: number;\n  adamBeta1: number;\n  adamBeta2: number;\n  adamEpsilon: number;\n  rmspropDecayRate: number;\n  rmspropEpsilon: number;\n  gradientMethod: 'forward' | 'backward' | 'central';\n  finiteDifferenceStep: number;\n  adaptiveLearningRate: boolean;\n  lineSearch: boolean;\n  lineSearchMethod: 'armijo' | 'wolfe' | 'golden_section';\n  constraintHandling: 'penalty' | 'projection' | 'barrier';\n  penaltyCoefficient: number;\n  convergenceTolerance: number;\n  gradientTolerance: number;\n  seedValue?: number;\n}\n\nexport interface GradientState {\n  solution: OptimizationSolution;\n  gradient: number[];\n  momentum: number[];\n  adamM: number[];\n  adamV: number[];\n  rmspropV: number[];\n  adagradG: number[];\n  iteration: number;\n  learningRate: number;\n  gradientNorm: number;\n  stepSize: number;\n  functionValue: number;\n}\n\n/**\n * Gradient Descent optimizer for continuous optimization problems\n */\nexport class GradientDescent {\n  private parameters: GradientDescentParameters;\n  private currentState: GradientState | null = null;\n  private bestSolution: OptimizationSolution | null = null;\n  private history: IterationHistory[] = [];\n  private random: () => number;\n  private evaluationCount: number = 0;\n\n  constructor(parameters?: Partial<GradientDescentParameters>) {\n    this.parameters = {\n      maxIterations: 1000,\n      learningRate: 0.01,\n      learningRateMin: 1e-6,\n      learningRateMax: 1.0,\n      variant: 'adam',\n      momentumCoefficient: 0.9,\n      adamBeta1: 0.9,\n      adamBeta2: 0.999,\n      adamEpsilon: 1e-8,\n      rmspropDecayRate: 0.9,\n      rmspropEpsilon: 1e-8,\n      gradientMethod: 'central',\n      finiteDifferenceStep: 1e-6,\n      adaptiveLearningRate: true,\n      lineSearch: true,\n      lineSearchMethod: 'armijo',\n      constraintHandling: 'projection',\n      penaltyCoefficient: 1000,\n      convergenceTolerance: 1e-6,\n      gradientTolerance: 1e-6,\n      ...parameters\n    };\n\n    // Initialize random number generator\n    if (this.parameters.seedValue !== undefined) {\n      this.random = this.createSeededRandom(this.parameters.seedValue);\n    } else {\n      this.random = Math.random;\n    }\n  }\n\n  /**\n   * Main optimization method\n   */\n  public async optimize(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<OptimizationResult> {\n    const startTime = performance.now();\n    \n    try {\n      // Validate problem for gradient descent\n      this.validateProblem(problem);\n      \n      // Initialize algorithm\n      this.initializeAlgorithm(problem);\n      \n      // Create initial solution\n      await this.createInitialSolution(problem, objectiveFunction, constraintFunctions);\n      \n      // Main optimization loop\n      while (!this.shouldTerminate()) {\n        await this.performIteration(problem, objectiveFunction, constraintFunctions);\n        this.updateHistory();\n        \n        if (this.parameters.adaptiveLearningRate) {\n          this.adaptLearningRate();\n        }\n      }\n      \n      // Create final result\n      return this.createOptimizationResult(problem, startTime);\n      \n    } catch (error) {\n      console.error('Gradient descent optimization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Validate problem for gradient descent\n   */\n  private validateProblem(problem: OptimizationProblem): void {\n    // Check for continuous variables only\n    const hasDiscreteVariables = problem.variables.some(v => v.discreteValues && v.discreteValues.length > 0);\n    if (hasDiscreteVariables) {\n      console.warn('Gradient descent works best with continuous variables. Discrete variables will be treated as continuous.');\n    }\n  }\n\n  /**\n   * Initialize algorithm state\n   */\n  private initializeAlgorithm(problem: OptimizationProblem): void {\n    this.currentState = null;\n    this.bestSolution = null;\n    this.history = [];\n    this.evaluationCount = 0;\n    \n    console.log(`Initializing Gradient Descent (${this.parameters.variant}) with learning rate: ${this.parameters.learningRate}`);\n  }\n\n  /**\n   * Create initial solution\n   */\n  private async createInitialSolution(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    // Generate initial solution\n    const initialSolution = this.createRandomSolution(problem);\n    await this.evaluateSolution(initialSolution, problem, objectiveFunction, constraintFunctions);\n    \n    // Initialize gradient state\n    const numVariables = problem.variables.length;\n    this.currentState = {\n      solution: initialSolution,\n      gradient: new Array(numVariables).fill(0),\n      momentum: new Array(numVariables).fill(0),\n      adamM: new Array(numVariables).fill(0),\n      adamV: new Array(numVariables).fill(0),\n      rmspropV: new Array(numVariables).fill(0),\n      adagradG: new Array(numVariables).fill(0),\n      iteration: 0,\n      learningRate: this.parameters.learningRate,\n      gradientNorm: 0,\n      stepSize: 0,\n      functionValue: initialSolution.fitness\n    };\n    \n    this.bestSolution = { ...initialSolution };\n  }\n\n  /**\n   * Create a random solution\n   */\n  private createRandomSolution(problem: OptimizationProblem): OptimizationSolution {\n    const variables: { [variableId: string]: number | string } = {};\n    \n    for (const variable of problem.variables) {\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        // Discrete variable - select random value\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n        variables[variable.id] = variable.discreteValues[randomIndex];\n      } else {\n        // Continuous variable\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n        variables[variable.id] = min + this.random() * (max - min);\n      }\n    }\n    \n    return {\n      id: this.generateSolutionId(),\n      variables,\n      objectiveValues: {},\n      constraintViolations: [],\n      feasible: true,\n      fitness: 0,\n      systemConfiguration: problem.systemConfiguration,\n      performanceMetrics: {} as SolutionPerformanceMetrics\n    };\n  }\n\n  /**\n   * Evaluate solution fitness and constraints\n   */\n  private async evaluateSolution(\n    solution: OptimizationSolution,\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    try {\n      // Convert solution to optimization variables\n      const variables = this.solutionToVariables(solution, problem.variables);\n      \n      // Evaluate objective function\n      const objectiveValue = objectiveFunction(variables);\n      solution.fitness = objectiveValue;\n      \n      // Store objective values\n      if (problem.objectives.objectives.length > 0) {\n        solution.objectiveValues[problem.objectives.objectives[0].id] = objectiveValue;\n      }\n      \n      // Evaluate constraints\n      solution.constraintViolations = [];\n      for (let i = 0; i < constraintFunctions.length; i++) {\n        const violation = constraintFunctions[i](variables);\n        solution.constraintViolations.push({\n          constraintId: `constraint_${i}`,\n          violationType: violation > 0 ? 'inequality' : 'boundary',\n          currentValue: violation,\n          requiredValue: 0,\n          severity: violation > 0 ? 'major' : 'minor',\n          penalty: violation > 0 ? violation * this.parameters.penaltyCoefficient : 0\n        });\n      }\n      \n      // Check feasibility\n      solution.feasible = solution.constraintViolations.every(v => v.currentValue <= 0);\n      \n      // Apply constraint handling\n      if (!solution.feasible && this.parameters.constraintHandling === 'penalty') {\n        const totalPenalty = solution.constraintViolations\n          .filter(v => v.currentValue > 0)\n          .reduce((sum, v) => sum + v.penalty, 0);\n        solution.fitness += totalPenalty;\n      }\n      \n      this.evaluationCount++;\n      \n    } catch (error) {\n      console.error('Error evaluating solution:', error);\n      solution.fitness = Number.MAX_VALUE;\n      solution.feasible = false;\n    }\n  }\n\n  /**\n   * Convert solution to optimization variables\n   */\n  private solutionToVariables(solution: OptimizationSolution, variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\n    return variableTemplates.map(template => ({\n      ...template,\n      currentValue: solution.variables[template.id]\n    }));\n  }\n\n  /**\n   * Perform one iteration of gradient descent\n   */\n  private async performIteration(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    if (!this.currentState) return;\n    \n    // Compute gradient\n    await this.computeGradient(problem, objectiveFunction, constraintFunctions);\n    \n    // Update solution based on variant\n    await this.updateSolution(problem, objectiveFunction, constraintFunctions);\n    \n    // Apply constraints if using projection\n    if (this.parameters.constraintHandling === 'projection') {\n      this.projectSolution(problem);\n    }\n    \n    // Update best solution\n    if (this.currentState.solution.fitness < this.bestSolution!.fitness) {\n      this.bestSolution = { ...this.currentState.solution };\n    }\n    \n    this.currentState.iteration++;\n  }\n\n  /**\n   * Compute numerical gradient\n   */\n  private async computeGradient(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    if (!this.currentState) return;\n    \n    const currentVariables = this.solutionToVariables(this.currentState.solution, problem.variables);\n    const h = this.parameters.finiteDifferenceStep;\n    \n    for (let i = 0; i < problem.variables.length; i++) {\n      const variable = problem.variables[i];\n      \n      // Skip discrete variables\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        this.currentState.gradient[i] = 0;\n        continue;\n      }\n      \n      const originalValue = currentVariables[i].currentValue as number;\n      \n      let gradient = 0;\n      \n      switch (this.parameters.gradientMethod) {\n        case 'forward':\n          // f'(x) \u2248 (f(x+h) - f(x)) / h\n          currentVariables[i].currentValue = originalValue + h;\n          const forwardValue = objectiveFunction(currentVariables);\n          gradient = (forwardValue - this.currentState.functionValue) / h;\n          break;\n          \n        case 'backward':\n          // f'(x) \u2248 (f(x) - f(x-h)) / h\n          currentVariables[i].currentValue = originalValue - h;\n          const backwardValue = objectiveFunction(currentVariables);\n          gradient = (this.currentState.functionValue - backwardValue) / h;\n          break;\n          \n        case 'central':\n          // f'(x) \u2248 (f(x+h) - f(x-h)) / (2h)\n          currentVariables[i].currentValue = originalValue + h;\n          const forwardVal = objectiveFunction(currentVariables);\n          currentVariables[i].currentValue = originalValue - h;\n          const backwardVal = objectiveFunction(currentVariables);\n          gradient = (forwardVal - backwardVal) / (2 * h);\n          break;\n      }\n      \n      // Restore original value\n      currentVariables[i].currentValue = originalValue;\n      \n      this.currentState.gradient[i] = gradient;\n      this.evaluationCount += this.parameters.gradientMethod === 'central' ? 2 : 1;\n    }\n    \n    // Compute gradient norm\n    this.currentState.gradientNorm = Math.sqrt(\n      this.currentState.gradient.reduce((sum, g) => sum + g * g, 0)\n    );\n  }\n\n  /**\n   * Update solution based on gradient descent variant\n   */\n  private async updateSolution(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    if (!this.currentState) return;\n    \n    const stepDirection = this.computeStepDirection();\n    \n    // Determine step size\n    let stepSize = this.currentState.learningRate;\n    if (this.parameters.lineSearch) {\n      stepSize = await this.performLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);\n    }\n    \n    // Update solution\n    const newVariables: { [variableId: string]: number | string } = {};\n    \n    for (let i = 0; i < problem.variables.length; i++) {\n      const variable = problem.variables[i];\n      const currentValue = this.currentState.solution.variables[variable.id];\n      \n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        // Keep discrete variables unchanged\n        newVariables[variable.id] = currentValue;\n      } else if (typeof currentValue === 'number') {\n        // Update continuous variables\n        const newValue = currentValue - stepSize * stepDirection[i];\n        \n        // Apply bounds\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : -Infinity;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : Infinity;\n        newVariables[variable.id] = Math.max(min, Math.min(max, newValue));\n      } else {\n        newVariables[variable.id] = currentValue;\n      }\n    }\n    \n    // Create new solution\n    const newSolution: OptimizationSolution = {\n      ...this.currentState.solution,\n      id: this.generateSolutionId(),\n      variables: newVariables\n    };\n    \n    // Evaluate new solution\n    await this.evaluateSolution(newSolution, problem, objectiveFunction, constraintFunctions);\n    \n    // Update state\n    this.currentState.solution = newSolution;\n    this.currentState.stepSize = stepSize;\n    this.currentState.functionValue = newSolution.fitness;\n  }\n\n  /**\n   * Compute step direction based on variant\n   */\n  private computeStepDirection(): number[] {\n    if (!this.currentState) return [];\n    \n    const gradient = this.currentState.gradient;\n    const stepDirection = new Array(gradient.length);\n    \n    switch (this.parameters.variant) {\n      case 'standard':\n        // Standard gradient descent: d = -\u2207f\n        for (let i = 0; i < gradient.length; i++) {\n          stepDirection[i] = gradient[i];\n        }\n        break;\n        \n      case 'momentum':\n        // Momentum: v = \u03B2*v + \u2207f, d = v\n        for (let i = 0; i < gradient.length; i++) {\n          this.currentState.momentum[i] = this.parameters.momentumCoefficient * this.currentState.momentum[i] + gradient[i];\n          stepDirection[i] = this.currentState.momentum[i];\n        }\n        break;\n        \n      case 'adam':\n        // Adam optimizer\n        const beta1 = this.parameters.adamBeta1;\n        const beta2 = this.parameters.adamBeta2;\n        const epsilon = this.parameters.adamEpsilon;\n        const t = this.currentState.iteration + 1;\n        \n        for (let i = 0; i < gradient.length; i++) {\n          // Update biased first moment estimate\n          this.currentState.adamM[i] = beta1 * this.currentState.adamM[i] + (1 - beta1) * gradient[i];\n          \n          // Update biased second raw moment estimate\n          this.currentState.adamV[i] = beta2 * this.currentState.adamV[i] + (1 - beta2) * gradient[i] * gradient[i];\n          \n          // Compute bias-corrected first moment estimate\n          const mHat = this.currentState.adamM[i] / (1 - Math.pow(beta1, t));\n          \n          // Compute bias-corrected second raw moment estimate\n          const vHat = this.currentState.adamV[i] / (1 - Math.pow(beta2, t));\n          \n          // Update step direction\n          stepDirection[i] = mHat / (Math.sqrt(vHat) + epsilon);\n        }\n        break;\n        \n      case 'rmsprop':\n        // RMSprop\n        const decay = this.parameters.rmspropDecayRate;\n        const eps = this.parameters.rmspropEpsilon;\n        \n        for (let i = 0; i < gradient.length; i++) {\n          this.currentState.rmspropV[i] = decay * this.currentState.rmspropV[i] + (1 - decay) * gradient[i] * gradient[i];\n          stepDirection[i] = gradient[i] / (Math.sqrt(this.currentState.rmspropV[i]) + eps);\n        }\n        break;\n        \n      case 'adagrad':\n        // Adagrad\n        const adagradEps = this.parameters.adamEpsilon;\n        \n        for (let i = 0; i < gradient.length; i++) {\n          this.currentState.adagradG[i] += gradient[i] * gradient[i];\n          stepDirection[i] = gradient[i] / (Math.sqrt(this.currentState.adagradG[i]) + adagradEps);\n        }\n        break;\n        \n      default:\n        // Default to standard gradient descent\n        for (let i = 0; i < gradient.length; i++) {\n          stepDirection[i] = gradient[i];\n        }\n    }\n    \n    return stepDirection;\n  }\n\n  /**\n   * Perform line search to find optimal step size\n   */\n  private async performLineSearch(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[],\n    stepDirection: number[]\n  ): Promise<number> {\n    if (!this.currentState) return this.parameters.learningRate;\n    \n    switch (this.parameters.lineSearchMethod) {\n      case 'armijo':\n        return this.armijoLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);\n      case 'wolfe':\n        return this.wolfeLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);\n      case 'golden_section':\n        return this.goldenSectionLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);\n      default:\n        return this.parameters.learningRate;\n    }\n  }\n\n  /**\n   * Armijo line search\n   */\n  private async armijoLineSearch(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[],\n    stepDirection: number[]\n  ): Promise<number> {\n    if (!this.currentState) return this.parameters.learningRate;\n    \n    const c1 = 1e-4; // Armijo constant\n    let alpha = this.parameters.learningRate;\n    const maxBacktrack = 20;\n    \n    const currentValue = this.currentState.functionValue;\n    const gradientDotDirection = this.currentState.gradient.reduce((sum, g, i) => sum + g * stepDirection[i], 0);\n    \n    for (let i = 0; i < maxBacktrack; i++) {\n      // Test step\n      const testVariables = this.createTestVariables(problem, stepDirection, alpha);\n      const testValue = objectiveFunction(testVariables);\n      this.evaluationCount++;\n      \n      // Armijo condition\n      if (testValue <= currentValue - c1 * alpha * gradientDotDirection) {\n        return alpha;\n      }\n      \n      alpha *= 0.5; // Backtrack\n    }\n    \n    return alpha;\n  }\n\n  /**\n   * Wolfe line search (simplified)\n   */\n  private async wolfeLineSearch(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[],\n    stepDirection: number[]\n  ): Promise<number> {\n    // Simplified implementation - use Armijo for now\n    return this.armijoLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);\n  }\n\n  /**\n   * Golden section line search\n   */\n  private async goldenSectionLineSearch(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[],\n    stepDirection: number[]\n  ): Promise<number> {\n    const phi = (1 + Math.sqrt(5)) / 2; // Golden ratio\n    const resphi = 2 - phi;\n    \n    let a = 0;\n    let b = this.parameters.learningRate * 2;\n    const tol = 1e-6;\n    \n    // Find initial bracket\n    let x1 = a + resphi * (b - a);\n    let x2 = a + (1 - resphi) * (b - a);\n    \n    let f1 = this.evaluateAtStep(problem, objectiveFunction, stepDirection, x1);\n    let f2 = this.evaluateAtStep(problem, objectiveFunction, stepDirection, x2);\n    \n    while (Math.abs(b - a) > tol) {\n      if (f1 < f2) {\n        b = x2;\n        x2 = x1;\n        f2 = f1;\n        x1 = a + resphi * (b - a);\n        f1 = this.evaluateAtStep(problem, objectiveFunction, stepDirection, x1);\n      } else {\n        a = x1;\n        x1 = x2;\n        f1 = f2;\n        x2 = a + (1 - resphi) * (b - a);\n        f2 = this.evaluateAtStep(problem, objectiveFunction, stepDirection, x2);\n      }\n    }\n    \n    return (a + b) / 2;\n  }\n\n  /**\n   * Create test variables for line search\n   */\n  private createTestVariables(problem: OptimizationProblem, stepDirection: number[], alpha: number): OptimizationVariable[] {\n    if (!this.currentState) return [];\n    \n    return problem.variables.map((variable, i) => {\n      const currentValue = this.currentState!.solution.variables[variable.id];\n      \n      if (typeof currentValue === 'number') {\n        const newValue = currentValue - alpha * stepDirection[i];\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : -Infinity;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : Infinity;\n        \n        return {\n          ...variable,\n          currentValue: Math.max(min, Math.min(max, newValue))\n        };\n      } else {\n        return {\n          ...variable,\n          currentValue\n        };\n      }\n    });\n  }\n\n  /**\n   * Evaluate function at specific step size\n   */\n  private evaluateAtStep(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    stepDirection: number[],\n    alpha: number\n  ): number {\n    const testVariables = this.createTestVariables(problem, stepDirection, alpha);\n    this.evaluationCount++;\n    return objectiveFunction(testVariables);\n  }\n\n  /**\n   * Project solution onto feasible region\n   */\n  private projectSolution(problem: OptimizationProblem): void {\n    if (!this.currentState) return;\n    \n    // Simple box constraint projection\n    const projectedVariables: { [variableId: string]: number | string } = {};\n    \n    for (const variable of problem.variables) {\n      const currentValue = this.currentState.solution.variables[variable.id];\n      \n      if (typeof currentValue === 'number') {\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : -Infinity;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : Infinity;\n        projectedVariables[variable.id] = Math.max(min, Math.min(max, currentValue));\n      } else {\n        projectedVariables[variable.id] = currentValue;\n      }\n    }\n    \n    this.currentState.solution.variables = projectedVariables;\n  }\n\n  /**\n   * Adapt learning rate based on progress\n   */\n  private adaptLearningRate(): void {\n    if (!this.currentState) return;\n    \n    // Simple adaptive scheme based on gradient norm\n    if (this.currentState.gradientNorm > 1.0) {\n      // Large gradient - decrease learning rate\n      this.currentState.learningRate = Math.max(\n        this.parameters.learningRateMin,\n        this.currentState.learningRate * 0.9\n      );\n    } else if (this.currentState.gradientNorm < 0.1) {\n      // Small gradient - increase learning rate\n      this.currentState.learningRate = Math.min(\n        this.parameters.learningRateMax,\n        this.currentState.learningRate * 1.1\n      );\n    }\n  }\n\n  /**\n   * Check termination criteria\n   */\n  private shouldTerminate(): boolean {\n    if (!this.currentState) return true;\n    \n    // Maximum iterations\n    if (this.currentState.iteration >= this.parameters.maxIterations) {\n      return true;\n    }\n    \n    // Gradient tolerance\n    if (this.currentState.gradientNorm < this.parameters.gradientTolerance) {\n      return true;\n    }\n    \n    // Function value convergence\n    if (this.history.length >= 10) {\n      const recentHistory = this.history.slice(-10);\n      const functionImprovement = recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness;\n      \n      if (Math.abs(functionImprovement) < this.parameters.convergenceTolerance) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n\n  /**\n   * Update optimization history\n   */\n  private updateHistory(): void {\n    if (!this.currentState) return;\n    \n    const history: IterationHistory = {\n      iteration: this.currentState.iteration,\n      bestFitness: this.bestSolution?.fitness || this.currentState.functionValue,\n      averageFitness: this.currentState.functionValue,\n      worstFitness: this.currentState.functionValue,\n      diversity: 0, // Not applicable for single solution\n      constraintViolations: this.currentState.solution.feasible ? 0 : 1,\n      timestamp: new Date()\n    };\n    \n    this.history.push(history);\n  }\n\n  /**\n   * Create optimization result\n   */\n  private createOptimizationResult(problem: OptimizationProblem, startTime: number): OptimizationResult {\n    const executionTime = performance.now() - startTime;\n    \n    const statistics: OptimizationStatistics = {\n      totalIterations: this.currentState?.iteration || 0,\n      totalEvaluations: this.evaluationCount,\n      convergenceIteration: this.currentState?.iteration || 0,\n      executionTime,\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\n      diversityHistory: this.history.map(h => h.diversity),\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\n      algorithmSpecificStats: {\n        variant: this.parameters.variant,\n        finalLearningRate: this.currentState?.learningRate || 0,\n        finalGradientNorm: this.currentState?.gradientNorm || 0,\n        finalStepSize: this.currentState?.stepSize || 0\n      }\n    };\n    \n    const optimizationHistory: OptimizationHistory = {\n      iterations: this.history,\n      populationHistory: [],\n      parameterHistory: [],\n      convergenceMetrics: []\n    };\n    \n    return {\n      problemId: problem.id,\n      status: OptimizationStatus.CONVERGED,\n      bestSolution: this.bestSolution!,\n      statistics,\n      history: optimizationHistory,\n      analysis: {},\n      recommendations: [],\n      warnings: [],\n      errors: []\n    };\n  }\n\n  // Utility methods\n  private generateSolutionId(): string {\n    return `gd_sol_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private createSeededRandom(seed: number): () => number {\n    let state = seed;\n    return () => {\n      state = (state * 9301 + 49297) % 233280;\n      return state / 233280;\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7ae4df74c3bd355ca396441b18fdf003dad36785"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qpojs2dt6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qpojs2dt6();
cov_2qpojs2dt6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2qpojs2dt6().s[1]++;
exports.GradientDescent = void 0;
const SystemOptimizationTypes_1 =
/* istanbul ignore next */
(cov_2qpojs2dt6().s[2]++, require("../types/SystemOptimizationTypes"));
/**
 * Gradient Descent optimizer for continuous optimization problems
 */
class GradientDescent {
  constructor(parameters) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[0]++;
    cov_2qpojs2dt6().s[3]++;
    this.currentState = null;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[4]++;
    this.bestSolution = null;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[5]++;
    this.history = [];
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[6]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[7]++;
    this.parameters = {
      maxIterations: 1000,
      learningRate: 0.01,
      learningRateMin: 1e-6,
      learningRateMax: 1.0,
      variant: 'adam',
      momentumCoefficient: 0.9,
      adamBeta1: 0.9,
      adamBeta2: 0.999,
      adamEpsilon: 1e-8,
      rmspropDecayRate: 0.9,
      rmspropEpsilon: 1e-8,
      gradientMethod: 'central',
      finiteDifferenceStep: 1e-6,
      adaptiveLearningRate: true,
      lineSearch: true,
      lineSearchMethod: 'armijo',
      constraintHandling: 'projection',
      penaltyCoefficient: 1000,
      convergenceTolerance: 1e-6,
      gradientTolerance: 1e-6,
      ...parameters
    };
    // Initialize random number generator
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[8]++;
    if (this.parameters.seedValue !== undefined) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[0][0]++;
      cov_2qpojs2dt6().s[9]++;
      this.random = this.createSeededRandom(this.parameters.seedValue);
    } else {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[0][1]++;
      cov_2qpojs2dt6().s[10]++;
      this.random = Math.random;
    }
  }
  /**
   * Main optimization method
   */
  async optimize(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[11]++, performance.now());
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[12]++;
    try {
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[13]++;
      // Validate problem for gradient descent
      this.validateProblem(problem);
      // Initialize algorithm
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[14]++;
      this.initializeAlgorithm(problem);
      // Create initial solution
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[15]++;
      await this.createInitialSolution(problem, objectiveFunction, constraintFunctions);
      // Main optimization loop
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[16]++;
      while (!this.shouldTerminate()) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[17]++;
        await this.performIteration(problem, objectiveFunction, constraintFunctions);
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[18]++;
        this.updateHistory();
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[19]++;
        if (this.parameters.adaptiveLearningRate) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().b[1][0]++;
          cov_2qpojs2dt6().s[20]++;
          this.adaptLearningRate();
        } else
        /* istanbul ignore next */
        {
          cov_2qpojs2dt6().b[1][1]++;
        }
      }
      // Create final result
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[21]++;
      return this.createOptimizationResult(problem, startTime);
    } catch (error) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[22]++;
      console.error('Gradient descent optimization failed:', error);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[23]++;
      throw error;
    }
  }
  /**
   * Validate problem for gradient descent
   */
  validateProblem(problem) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[2]++;
    // Check for continuous variables only
    const hasDiscreteVariables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[24]++, problem.variables.some(v => {
      /* istanbul ignore next */
      cov_2qpojs2dt6().f[3]++;
      cov_2qpojs2dt6().s[25]++;
      return /* istanbul ignore next */(cov_2qpojs2dt6().b[2][0]++, v.discreteValues) &&
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[2][1]++, v.discreteValues.length > 0);
    }));
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[26]++;
    if (hasDiscreteVariables) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[3][0]++;
      cov_2qpojs2dt6().s[27]++;
      console.warn('Gradient descent works best with continuous variables. Discrete variables will be treated as continuous.');
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[3][1]++;
    }
  }
  /**
   * Initialize algorithm state
   */
  initializeAlgorithm(problem) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[4]++;
    cov_2qpojs2dt6().s[28]++;
    this.currentState = null;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[29]++;
    this.bestSolution = null;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[30]++;
    this.history = [];
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[31]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[32]++;
    console.log(`Initializing Gradient Descent (${this.parameters.variant}) with learning rate: ${this.parameters.learningRate}`);
  }
  /**
   * Create initial solution
   */
  async createInitialSolution(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[5]++;
    // Generate initial solution
    const initialSolution =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[33]++, this.createRandomSolution(problem));
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[34]++;
    await this.evaluateSolution(initialSolution, problem, objectiveFunction, constraintFunctions);
    // Initialize gradient state
    const numVariables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[35]++, problem.variables.length);
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[36]++;
    this.currentState = {
      solution: initialSolution,
      gradient: new Array(numVariables).fill(0),
      momentum: new Array(numVariables).fill(0),
      adamM: new Array(numVariables).fill(0),
      adamV: new Array(numVariables).fill(0),
      rmspropV: new Array(numVariables).fill(0),
      adagradG: new Array(numVariables).fill(0),
      iteration: 0,
      learningRate: this.parameters.learningRate,
      gradientNorm: 0,
      stepSize: 0,
      functionValue: initialSolution.fitness
    };
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[37]++;
    this.bestSolution = {
      ...initialSolution
    };
  }
  /**
   * Create a random solution
   */
  createRandomSolution(problem) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[6]++;
    const variables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[38]++, {});
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[39]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[40]++;
      if (
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[5][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[5][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[4][0]++;
        // Discrete variable - select random value
        const randomIndex =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[41]++, Math.floor(this.random() * variable.discreteValues.length));
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[42]++;
        variables[variable.id] = variable.discreteValues[randomIndex];
      } else {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[4][1]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[43]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[6][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[6][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[44]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[7][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[7][1]++, 1));
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[45]++;
        variables[variable.id] = min + this.random() * (max - min);
      }
    }
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[46]++;
    return {
      id: this.generateSolutionId(),
      variables,
      objectiveValues: {},
      constraintViolations: [],
      feasible: true,
      fitness: 0,
      systemConfiguration: problem.systemConfiguration,
      performanceMetrics: {}
    };
  }
  /**
   * Evaluate solution fitness and constraints
   */
  async evaluateSolution(solution, problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[7]++;
    cov_2qpojs2dt6().s[47]++;
    try {
      // Convert solution to optimization variables
      const variables =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[48]++, this.solutionToVariables(solution, problem.variables));
      // Evaluate objective function
      const objectiveValue =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[49]++, objectiveFunction(variables));
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[50]++;
      solution.fitness = objectiveValue;
      // Store objective values
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[51]++;
      if (problem.objectives.objectives.length > 0) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[8][0]++;
        cov_2qpojs2dt6().s[52]++;
        solution.objectiveValues[problem.objectives.objectives[0].id] = objectiveValue;
      } else
      /* istanbul ignore next */
      {
        cov_2qpojs2dt6().b[8][1]++;
      }
      // Evaluate constraints
      cov_2qpojs2dt6().s[53]++;
      solution.constraintViolations = [];
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[54]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[55]++, 0); i < constraintFunctions.length; i++) {
        const violation =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[56]++, constraintFunctions[i](variables));
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[57]++;
        solution.constraintViolations.push({
          constraintId: `constraint_${i}`,
          violationType: violation > 0 ?
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[9][0]++, 'inequality') :
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[9][1]++, 'boundary'),
          currentValue: violation,
          requiredValue: 0,
          severity: violation > 0 ?
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[10][0]++, 'major') :
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[10][1]++, 'minor'),
          penalty: violation > 0 ?
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[11][0]++, violation * this.parameters.penaltyCoefficient) :
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[11][1]++, 0)
        });
      }
      // Check feasibility
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[58]++;
      solution.feasible = solution.constraintViolations.every(v => {
        /* istanbul ignore next */
        cov_2qpojs2dt6().f[8]++;
        cov_2qpojs2dt6().s[59]++;
        return v.currentValue <= 0;
      });
      // Apply constraint handling
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[60]++;
      if (
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[13][0]++, !solution.feasible) &&
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[13][1]++, this.parameters.constraintHandling === 'penalty')) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[12][0]++;
        const totalPenalty =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[61]++, solution.constraintViolations.filter(v => {
          /* istanbul ignore next */
          cov_2qpojs2dt6().f[9]++;
          cov_2qpojs2dt6().s[62]++;
          return v.currentValue > 0;
        }).reduce((sum, v) => {
          /* istanbul ignore next */
          cov_2qpojs2dt6().f[10]++;
          cov_2qpojs2dt6().s[63]++;
          return sum + v.penalty;
        }, 0));
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[64]++;
        solution.fitness += totalPenalty;
      } else
      /* istanbul ignore next */
      {
        cov_2qpojs2dt6().b[12][1]++;
      }
      cov_2qpojs2dt6().s[65]++;
      this.evaluationCount++;
    } catch (error) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[66]++;
      console.error('Error evaluating solution:', error);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[67]++;
      solution.fitness = Number.MAX_VALUE;
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[68]++;
      solution.feasible = false;
    }
  }
  /**
   * Convert solution to optimization variables
   */
  solutionToVariables(solution, variableTemplates) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[11]++;
    cov_2qpojs2dt6().s[69]++;
    return variableTemplates.map(template => {
      /* istanbul ignore next */
      cov_2qpojs2dt6().f[12]++;
      cov_2qpojs2dt6().s[70]++;
      return {
        ...template,
        currentValue: solution.variables[template.id]
      };
    });
  }
  /**
   * Perform one iteration of gradient descent
   */
  async performIteration(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[13]++;
    cov_2qpojs2dt6().s[71]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[14][0]++;
      cov_2qpojs2dt6().s[72]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[14][1]++;
    }
    // Compute gradient
    cov_2qpojs2dt6().s[73]++;
    await this.computeGradient(problem, objectiveFunction, constraintFunctions);
    // Update solution based on variant
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[74]++;
    await this.updateSolution(problem, objectiveFunction, constraintFunctions);
    // Apply constraints if using projection
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[75]++;
    if (this.parameters.constraintHandling === 'projection') {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[15][0]++;
      cov_2qpojs2dt6().s[76]++;
      this.projectSolution(problem);
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[15][1]++;
    }
    // Update best solution
    cov_2qpojs2dt6().s[77]++;
    if (this.currentState.solution.fitness < this.bestSolution.fitness) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[16][0]++;
      cov_2qpojs2dt6().s[78]++;
      this.bestSolution = {
        ...this.currentState.solution
      };
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[16][1]++;
    }
    cov_2qpojs2dt6().s[79]++;
    this.currentState.iteration++;
  }
  /**
   * Compute numerical gradient
   */
  async computeGradient(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[14]++;
    cov_2qpojs2dt6().s[80]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[17][0]++;
      cov_2qpojs2dt6().s[81]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[17][1]++;
    }
    const currentVariables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[82]++, this.solutionToVariables(this.currentState.solution, problem.variables));
    const h =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[83]++, this.parameters.finiteDifferenceStep);
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[84]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[85]++, 0); i < problem.variables.length; i++) {
      const variable =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[86]++, problem.variables[i]);
      // Skip discrete variables
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[19][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[19][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[18][0]++;
        cov_2qpojs2dt6().s[88]++;
        this.currentState.gradient[i] = 0;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[89]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2qpojs2dt6().b[18][1]++;
      }
      const originalValue =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[90]++, currentVariables[i].currentValue);
      let gradient =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[91]++, 0);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[92]++;
      switch (this.parameters.gradientMethod) {
        case 'forward':
          /* istanbul ignore next */
          cov_2qpojs2dt6().b[20][0]++;
          cov_2qpojs2dt6().s[93]++;
          // f'(x) ≈ (f(x+h) - f(x)) / h
          currentVariables[i].currentValue = originalValue + h;
          const forwardValue =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[94]++, objectiveFunction(currentVariables));
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[95]++;
          gradient = (forwardValue - this.currentState.functionValue) / h;
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[96]++;
          break;
        case 'backward':
          /* istanbul ignore next */
          cov_2qpojs2dt6().b[20][1]++;
          cov_2qpojs2dt6().s[97]++;
          // f'(x) ≈ (f(x) - f(x-h)) / h
          currentVariables[i].currentValue = originalValue - h;
          const backwardValue =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[98]++, objectiveFunction(currentVariables));
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[99]++;
          gradient = (this.currentState.functionValue - backwardValue) / h;
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[100]++;
          break;
        case 'central':
          /* istanbul ignore next */
          cov_2qpojs2dt6().b[20][2]++;
          cov_2qpojs2dt6().s[101]++;
          // f'(x) ≈ (f(x+h) - f(x-h)) / (2h)
          currentVariables[i].currentValue = originalValue + h;
          const forwardVal =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[102]++, objectiveFunction(currentVariables));
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[103]++;
          currentVariables[i].currentValue = originalValue - h;
          const backwardVal =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[104]++, objectiveFunction(currentVariables));
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[105]++;
          gradient = (forwardVal - backwardVal) / (2 * h);
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[106]++;
          break;
      }
      // Restore original value
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[107]++;
      currentVariables[i].currentValue = originalValue;
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[108]++;
      this.currentState.gradient[i] = gradient;
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[109]++;
      this.evaluationCount += this.parameters.gradientMethod === 'central' ?
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[21][0]++, 2) :
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[21][1]++, 1);
    }
    // Compute gradient norm
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[110]++;
    this.currentState.gradientNorm = Math.sqrt(this.currentState.gradient.reduce((sum, g) => {
      /* istanbul ignore next */
      cov_2qpojs2dt6().f[15]++;
      cov_2qpojs2dt6().s[111]++;
      return sum + g * g;
    }, 0));
  }
  /**
   * Update solution based on gradient descent variant
   */
  async updateSolution(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[16]++;
    cov_2qpojs2dt6().s[112]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[22][0]++;
      cov_2qpojs2dt6().s[113]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[22][1]++;
    }
    const stepDirection =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[114]++, this.computeStepDirection());
    // Determine step size
    let stepSize =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[115]++, this.currentState.learningRate);
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[116]++;
    if (this.parameters.lineSearch) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[23][0]++;
      cov_2qpojs2dt6().s[117]++;
      stepSize = await this.performLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[23][1]++;
    }
    // Update solution
    const newVariables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[118]++, {});
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[119]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[120]++, 0); i < problem.variables.length; i++) {
      const variable =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[121]++, problem.variables[i]);
      const currentValue =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[122]++, this.currentState.solution.variables[variable.id]);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[123]++;
      if (
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[25][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[25][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[24][0]++;
        cov_2qpojs2dt6().s[124]++;
        // Keep discrete variables unchanged
        newVariables[variable.id] = currentValue;
      } else {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[24][1]++;
        cov_2qpojs2dt6().s[125]++;
        if (typeof currentValue === 'number') {
          /* istanbul ignore next */
          cov_2qpojs2dt6().b[26][0]++;
          // Update continuous variables
          const newValue =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[126]++, currentValue - stepSize * stepDirection[i]);
          // Apply bounds
          const min =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[127]++, typeof variable.bounds.minimum === 'number' ?
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[27][0]++, variable.bounds.minimum) :
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[27][1]++, -Infinity));
          const max =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[128]++, typeof variable.bounds.maximum === 'number' ?
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[28][0]++, variable.bounds.maximum) :
          /* istanbul ignore next */
          (cov_2qpojs2dt6().b[28][1]++, Infinity));
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[129]++;
          newVariables[variable.id] = Math.max(min, Math.min(max, newValue));
        } else {
          /* istanbul ignore next */
          cov_2qpojs2dt6().b[26][1]++;
          cov_2qpojs2dt6().s[130]++;
          newVariables[variable.id] = currentValue;
        }
      }
    }
    // Create new solution
    const newSolution =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[131]++, {
      ...this.currentState.solution,
      id: this.generateSolutionId(),
      variables: newVariables
    });
    // Evaluate new solution
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[132]++;
    await this.evaluateSolution(newSolution, problem, objectiveFunction, constraintFunctions);
    // Update state
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[133]++;
    this.currentState.solution = newSolution;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[134]++;
    this.currentState.stepSize = stepSize;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[135]++;
    this.currentState.functionValue = newSolution.fitness;
  }
  /**
   * Compute step direction based on variant
   */
  computeStepDirection() {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[17]++;
    cov_2qpojs2dt6().s[136]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[29][0]++;
      cov_2qpojs2dt6().s[137]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[29][1]++;
    }
    const gradient =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[138]++, this.currentState.gradient);
    const stepDirection =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[139]++, new Array(gradient.length));
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[140]++;
    switch (this.parameters.variant) {
      case 'standard':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[30][0]++;
        cov_2qpojs2dt6().s[141]++;
        // Standard gradient descent: d = -∇f
        for (let i =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[142]++, 0); i < gradient.length; i++) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[143]++;
          stepDirection[i] = gradient[i];
        }
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[144]++;
        break;
      case 'momentum':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[30][1]++;
        cov_2qpojs2dt6().s[145]++;
        // Momentum: v = β*v + ∇f, d = v
        for (let i =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[146]++, 0); i < gradient.length; i++) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[147]++;
          this.currentState.momentum[i] = this.parameters.momentumCoefficient * this.currentState.momentum[i] + gradient[i];
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[148]++;
          stepDirection[i] = this.currentState.momentum[i];
        }
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[149]++;
        break;
      case 'adam':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[30][2]++;
        // Adam optimizer
        const beta1 =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[150]++, this.parameters.adamBeta1);
        const beta2 =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[151]++, this.parameters.adamBeta2);
        const epsilon =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[152]++, this.parameters.adamEpsilon);
        const t =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[153]++, this.currentState.iteration + 1);
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[154]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[155]++, 0); i < gradient.length; i++) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[156]++;
          // Update biased first moment estimate
          this.currentState.adamM[i] = beta1 * this.currentState.adamM[i] + (1 - beta1) * gradient[i];
          // Update biased second raw moment estimate
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[157]++;
          this.currentState.adamV[i] = beta2 * this.currentState.adamV[i] + (1 - beta2) * gradient[i] * gradient[i];
          // Compute bias-corrected first moment estimate
          const mHat =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[158]++, this.currentState.adamM[i] / (1 - Math.pow(beta1, t)));
          // Compute bias-corrected second raw moment estimate
          const vHat =
          /* istanbul ignore next */
          (cov_2qpojs2dt6().s[159]++, this.currentState.adamV[i] / (1 - Math.pow(beta2, t)));
          // Update step direction
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[160]++;
          stepDirection[i] = mHat / (Math.sqrt(vHat) + epsilon);
        }
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[161]++;
        break;
      case 'rmsprop':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[30][3]++;
        // RMSprop
        const decay =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[162]++, this.parameters.rmspropDecayRate);
        const eps =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[163]++, this.parameters.rmspropEpsilon);
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[164]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[165]++, 0); i < gradient.length; i++) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[166]++;
          this.currentState.rmspropV[i] = decay * this.currentState.rmspropV[i] + (1 - decay) * gradient[i] * gradient[i];
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[167]++;
          stepDirection[i] = gradient[i] / (Math.sqrt(this.currentState.rmspropV[i]) + eps);
        }
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[168]++;
        break;
      case 'adagrad':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[30][4]++;
        // Adagrad
        const adagradEps =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[169]++, this.parameters.adamEpsilon);
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[170]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[171]++, 0); i < gradient.length; i++) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[172]++;
          this.currentState.adagradG[i] += gradient[i] * gradient[i];
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[173]++;
          stepDirection[i] = gradient[i] / (Math.sqrt(this.currentState.adagradG[i]) + adagradEps);
        }
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[174]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[30][5]++;
        cov_2qpojs2dt6().s[175]++;
        // Default to standard gradient descent
        for (let i =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[176]++, 0); i < gradient.length; i++) {
          /* istanbul ignore next */
          cov_2qpojs2dt6().s[177]++;
          stepDirection[i] = gradient[i];
        }
    }
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[178]++;
    return stepDirection;
  }
  /**
   * Perform line search to find optimal step size
   */
  async performLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[18]++;
    cov_2qpojs2dt6().s[179]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[31][0]++;
      cov_2qpojs2dt6().s[180]++;
      return this.parameters.learningRate;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[31][1]++;
    }
    cov_2qpojs2dt6().s[181]++;
    switch (this.parameters.lineSearchMethod) {
      case 'armijo':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[32][0]++;
        cov_2qpojs2dt6().s[182]++;
        return this.armijoLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);
      case 'wolfe':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[32][1]++;
        cov_2qpojs2dt6().s[183]++;
        return this.wolfeLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);
      case 'golden_section':
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[32][2]++;
        cov_2qpojs2dt6().s[184]++;
        return this.goldenSectionLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);
      default:
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[32][3]++;
        cov_2qpojs2dt6().s[185]++;
        return this.parameters.learningRate;
    }
  }
  /**
   * Armijo line search
   */
  async armijoLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[19]++;
    cov_2qpojs2dt6().s[186]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[33][0]++;
      cov_2qpojs2dt6().s[187]++;
      return this.parameters.learningRate;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[33][1]++;
    }
    const c1 =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[188]++, 1e-4); // Armijo constant
    let alpha =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[189]++, this.parameters.learningRate);
    const maxBacktrack =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[190]++, 20);
    const currentValue =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[191]++, this.currentState.functionValue);
    const gradientDotDirection =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[192]++, this.currentState.gradient.reduce((sum, g, i) => {
      /* istanbul ignore next */
      cov_2qpojs2dt6().f[20]++;
      cov_2qpojs2dt6().s[193]++;
      return sum + g * stepDirection[i];
    }, 0));
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[194]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[195]++, 0); i < maxBacktrack; i++) {
      // Test step
      const testVariables =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[196]++, this.createTestVariables(problem, stepDirection, alpha));
      const testValue =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[197]++, objectiveFunction(testVariables));
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[198]++;
      this.evaluationCount++;
      // Armijo condition
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[199]++;
      if (testValue <= currentValue - c1 * alpha * gradientDotDirection) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[34][0]++;
        cov_2qpojs2dt6().s[200]++;
        return alpha;
      } else
      /* istanbul ignore next */
      {
        cov_2qpojs2dt6().b[34][1]++;
      }
      cov_2qpojs2dt6().s[201]++;
      alpha *= 0.5; // Backtrack
    }
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[202]++;
    return alpha;
  }
  /**
   * Wolfe line search (simplified)
   */
  async wolfeLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[21]++;
    cov_2qpojs2dt6().s[203]++;
    // Simplified implementation - use Armijo for now
    return this.armijoLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection);
  }
  /**
   * Golden section line search
   */
  async goldenSectionLineSearch(problem, objectiveFunction, constraintFunctions, stepDirection) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[22]++;
    const phi =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[204]++, (1 + Math.sqrt(5)) / 2); // Golden ratio
    const resphi =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[205]++, 2 - phi);
    let a =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[206]++, 0);
    let b =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[207]++, this.parameters.learningRate * 2);
    const tol =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[208]++, 1e-6);
    // Find initial bracket
    let x1 =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[209]++, a + resphi * (b - a));
    let x2 =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[210]++, a + (1 - resphi) * (b - a));
    let f1 =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[211]++, this.evaluateAtStep(problem, objectiveFunction, stepDirection, x1));
    let f2 =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[212]++, this.evaluateAtStep(problem, objectiveFunction, stepDirection, x2));
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[213]++;
    while (Math.abs(b - a) > tol) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[214]++;
      if (f1 < f2) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[35][0]++;
        cov_2qpojs2dt6().s[215]++;
        b = x2;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[216]++;
        x2 = x1;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[217]++;
        f2 = f1;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[218]++;
        x1 = a + resphi * (b - a);
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[219]++;
        f1 = this.evaluateAtStep(problem, objectiveFunction, stepDirection, x1);
      } else {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[35][1]++;
        cov_2qpojs2dt6().s[220]++;
        a = x1;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[221]++;
        x1 = x2;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[222]++;
        f1 = f2;
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[223]++;
        x2 = a + (1 - resphi) * (b - a);
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[224]++;
        f2 = this.evaluateAtStep(problem, objectiveFunction, stepDirection, x2);
      }
    }
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[225]++;
    return (a + b) / 2;
  }
  /**
   * Create test variables for line search
   */
  createTestVariables(problem, stepDirection, alpha) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[23]++;
    cov_2qpojs2dt6().s[226]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[36][0]++;
      cov_2qpojs2dt6().s[227]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[36][1]++;
    }
    cov_2qpojs2dt6().s[228]++;
    return problem.variables.map((variable, i) => {
      /* istanbul ignore next */
      cov_2qpojs2dt6().f[24]++;
      const currentValue =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[229]++, this.currentState.solution.variables[variable.id]);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[230]++;
      if (typeof currentValue === 'number') {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[37][0]++;
        const newValue =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[231]++, currentValue - alpha * stepDirection[i]);
        const min =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[232]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[38][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[38][1]++, -Infinity));
        const max =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[233]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[39][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[39][1]++, Infinity));
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[234]++;
        return {
          ...variable,
          currentValue: Math.max(min, Math.min(max, newValue))
        };
      } else {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[37][1]++;
        cov_2qpojs2dt6().s[235]++;
        return {
          ...variable,
          currentValue
        };
      }
    });
  }
  /**
   * Evaluate function at specific step size
   */
  evaluateAtStep(problem, objectiveFunction, stepDirection, alpha) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[25]++;
    const testVariables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[236]++, this.createTestVariables(problem, stepDirection, alpha));
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[237]++;
    this.evaluationCount++;
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[238]++;
    return objectiveFunction(testVariables);
  }
  /**
   * Project solution onto feasible region
   */
  projectSolution(problem) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[26]++;
    cov_2qpojs2dt6().s[239]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[40][0]++;
      cov_2qpojs2dt6().s[240]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[40][1]++;
    }
    // Simple box constraint projection
    const projectedVariables =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[241]++, {});
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[242]++;
    for (const variable of problem.variables) {
      const currentValue =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[243]++, this.currentState.solution.variables[variable.id]);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[244]++;
      if (typeof currentValue === 'number') {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[41][0]++;
        const min =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[245]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[42][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[42][1]++, -Infinity));
        const max =
        /* istanbul ignore next */
        (cov_2qpojs2dt6().s[246]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[43][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[43][1]++, Infinity));
        /* istanbul ignore next */
        cov_2qpojs2dt6().s[247]++;
        projectedVariables[variable.id] = Math.max(min, Math.min(max, currentValue));
      } else {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[41][1]++;
        cov_2qpojs2dt6().s[248]++;
        projectedVariables[variable.id] = currentValue;
      }
    }
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[249]++;
    this.currentState.solution.variables = projectedVariables;
  }
  /**
   * Adapt learning rate based on progress
   */
  adaptLearningRate() {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[27]++;
    cov_2qpojs2dt6().s[250]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[44][0]++;
      cov_2qpojs2dt6().s[251]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[44][1]++;
    }
    // Simple adaptive scheme based on gradient norm
    cov_2qpojs2dt6().s[252]++;
    if (this.currentState.gradientNorm > 1.0) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[45][0]++;
      cov_2qpojs2dt6().s[253]++;
      // Large gradient - decrease learning rate
      this.currentState.learningRate = Math.max(this.parameters.learningRateMin, this.currentState.learningRate * 0.9);
    } else {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[45][1]++;
      cov_2qpojs2dt6().s[254]++;
      if (this.currentState.gradientNorm < 0.1) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[46][0]++;
        cov_2qpojs2dt6().s[255]++;
        // Small gradient - increase learning rate
        this.currentState.learningRate = Math.min(this.parameters.learningRateMax, this.currentState.learningRate * 1.1);
      } else
      /* istanbul ignore next */
      {
        cov_2qpojs2dt6().b[46][1]++;
      }
    }
  }
  /**
   * Check termination criteria
   */
  shouldTerminate() {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[28]++;
    cov_2qpojs2dt6().s[256]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[47][0]++;
      cov_2qpojs2dt6().s[257]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[47][1]++;
    }
    // Maximum iterations
    cov_2qpojs2dt6().s[258]++;
    if (this.currentState.iteration >= this.parameters.maxIterations) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[48][0]++;
      cov_2qpojs2dt6().s[259]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[48][1]++;
    }
    // Gradient tolerance
    cov_2qpojs2dt6().s[260]++;
    if (this.currentState.gradientNorm < this.parameters.gradientTolerance) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[49][0]++;
      cov_2qpojs2dt6().s[261]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[49][1]++;
    }
    // Function value convergence
    cov_2qpojs2dt6().s[262]++;
    if (this.history.length >= 10) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[50][0]++;
      const recentHistory =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[263]++, this.history.slice(-10));
      const functionImprovement =
      /* istanbul ignore next */
      (cov_2qpojs2dt6().s[264]++, recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness);
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[265]++;
      if (Math.abs(functionImprovement) < this.parameters.convergenceTolerance) {
        /* istanbul ignore next */
        cov_2qpojs2dt6().b[51][0]++;
        cov_2qpojs2dt6().s[266]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2qpojs2dt6().b[51][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[50][1]++;
    }
    cov_2qpojs2dt6().s[267]++;
    return false;
  }
  /**
   * Update optimization history
   */
  updateHistory() {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[29]++;
    cov_2qpojs2dt6().s[268]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_2qpojs2dt6().b[52][0]++;
      cov_2qpojs2dt6().s[269]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qpojs2dt6().b[52][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[270]++, {
      iteration: this.currentState.iteration,
      bestFitness:
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[53][0]++, this.bestSolution?.fitness) ||
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[53][1]++, this.currentState.functionValue),
      averageFitness: this.currentState.functionValue,
      worstFitness: this.currentState.functionValue,
      diversity: 0,
      // Not applicable for single solution
      constraintViolations: this.currentState.solution.feasible ?
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[54][0]++, 0) :
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[54][1]++, 1),
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[271]++;
    this.history.push(history);
  }
  /**
   * Create optimization result
   */
  createOptimizationResult(problem, startTime) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[30]++;
    const executionTime =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[272]++, performance.now() - startTime);
    const statistics =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[273]++, {
      totalIterations:
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[55][0]++, this.currentState?.iteration) ||
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[55][1]++, 0),
      totalEvaluations: this.evaluationCount,
      convergenceIteration:
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[56][0]++, this.currentState?.iteration) ||
      /* istanbul ignore next */
      (cov_2qpojs2dt6().b[56][1]++, 0),
      executionTime,
      bestFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2qpojs2dt6().f[31]++;
        cov_2qpojs2dt6().s[274]++;
        return h.bestFitness;
      }),
      averageFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2qpojs2dt6().f[32]++;
        cov_2qpojs2dt6().s[275]++;
        return h.averageFitness;
      }),
      diversityHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2qpojs2dt6().f[33]++;
        cov_2qpojs2dt6().s[276]++;
        return h.diversity;
      }),
      constraintViolationHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_2qpojs2dt6().f[34]++;
        cov_2qpojs2dt6().s[277]++;
        return h.constraintViolations;
      }),
      algorithmSpecificStats: {
        variant: this.parameters.variant,
        finalLearningRate:
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[57][0]++, this.currentState?.learningRate) ||
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[57][1]++, 0),
        finalGradientNorm:
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[58][0]++, this.currentState?.gradientNorm) ||
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[58][1]++, 0),
        finalStepSize:
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[59][0]++, this.currentState?.stepSize) ||
        /* istanbul ignore next */
        (cov_2qpojs2dt6().b[59][1]++, 0)
      }
    });
    const optimizationHistory =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[278]++, {
      iterations: this.history,
      populationHistory: [],
      parameterHistory: [],
      convergenceMetrics: []
    });
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[279]++;
    return {
      problemId: problem.id,
      status: SystemOptimizationTypes_1.OptimizationStatus.CONVERGED,
      bestSolution: this.bestSolution,
      statistics,
      history: optimizationHistory,
      analysis: {},
      recommendations: [],
      warnings: [],
      errors: []
    };
  }
  // Utility methods
  generateSolutionId() {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[35]++;
    cov_2qpojs2dt6().s[280]++;
    return `gd_sol_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  createSeededRandom(seed) {
    /* istanbul ignore next */
    cov_2qpojs2dt6().f[36]++;
    let state =
    /* istanbul ignore next */
    (cov_2qpojs2dt6().s[281]++, seed);
    /* istanbul ignore next */
    cov_2qpojs2dt6().s[282]++;
    return () => {
      /* istanbul ignore next */
      cov_2qpojs2dt6().f[37]++;
      cov_2qpojs2dt6().s[283]++;
      state = (state * 9301 + 49297) % 233280;
      /* istanbul ignore next */
      cov_2qpojs2dt6().s[284]++;
      return state / 233280;
    };
  }
}
/* istanbul ignore next */
cov_2qpojs2dt6().s[285]++;
exports.GradientDescent = GradientDescent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnFwb2pzMmR0NiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlN5c3RlbU9wdGltaXphdGlvblR5cGVzXzEiLCJyZXF1aXJlIiwiR3JhZGllbnREZXNjZW50IiwiY29uc3RydWN0b3IiLCJwYXJhbWV0ZXJzIiwiY3VycmVudFN0YXRlIiwiYmVzdFNvbHV0aW9uIiwiaGlzdG9yeSIsImV2YWx1YXRpb25Db3VudCIsIm1heEl0ZXJhdGlvbnMiLCJsZWFybmluZ1JhdGUiLCJsZWFybmluZ1JhdGVNaW4iLCJsZWFybmluZ1JhdGVNYXgiLCJ2YXJpYW50IiwibW9tZW50dW1Db2VmZmljaWVudCIsImFkYW1CZXRhMSIsImFkYW1CZXRhMiIsImFkYW1FcHNpbG9uIiwicm1zcHJvcERlY2F5UmF0ZSIsInJtc3Byb3BFcHNpbG9uIiwiZ3JhZGllbnRNZXRob2QiLCJmaW5pdGVEaWZmZXJlbmNlU3RlcCIsImFkYXB0aXZlTGVhcm5pbmdSYXRlIiwibGluZVNlYXJjaCIsImxpbmVTZWFyY2hNZXRob2QiLCJjb25zdHJhaW50SGFuZGxpbmciLCJwZW5hbHR5Q29lZmZpY2llbnQiLCJjb252ZXJnZW5jZVRvbGVyYW5jZSIsImdyYWRpZW50VG9sZXJhbmNlIiwic2VlZFZhbHVlIiwicmFuZG9tIiwiY3JlYXRlU2VlZGVkUmFuZG9tIiwiTWF0aCIsIm9wdGltaXplIiwicHJvYmxlbSIsIm9iamVjdGl2ZUZ1bmN0aW9uIiwiY29uc3RyYWludEZ1bmN0aW9ucyIsInN0YXJ0VGltZSIsInBlcmZvcm1hbmNlIiwibm93IiwidmFsaWRhdGVQcm9ibGVtIiwiaW5pdGlhbGl6ZUFsZ29yaXRobSIsImNyZWF0ZUluaXRpYWxTb2x1dGlvbiIsInNob3VsZFRlcm1pbmF0ZSIsInBlcmZvcm1JdGVyYXRpb24iLCJ1cGRhdGVIaXN0b3J5IiwiYWRhcHRMZWFybmluZ1JhdGUiLCJjcmVhdGVPcHRpbWl6YXRpb25SZXN1bHQiLCJlcnJvciIsImNvbnNvbGUiLCJoYXNEaXNjcmV0ZVZhcmlhYmxlcyIsInZhcmlhYmxlcyIsInNvbWUiLCJ2IiwiZGlzY3JldGVWYWx1ZXMiLCJsZW5ndGgiLCJ3YXJuIiwibG9nIiwiaW5pdGlhbFNvbHV0aW9uIiwiY3JlYXRlUmFuZG9tU29sdXRpb24iLCJldmFsdWF0ZVNvbHV0aW9uIiwibnVtVmFyaWFibGVzIiwic29sdXRpb24iLCJncmFkaWVudCIsIkFycmF5IiwiZmlsbCIsIm1vbWVudHVtIiwiYWRhbU0iLCJhZGFtViIsInJtc3Byb3BWIiwiYWRhZ3JhZEciLCJpdGVyYXRpb24iLCJncmFkaWVudE5vcm0iLCJzdGVwU2l6ZSIsImZ1bmN0aW9uVmFsdWUiLCJmaXRuZXNzIiwidmFyaWFibGUiLCJyYW5kb21JbmRleCIsImZsb29yIiwiaWQiLCJtaW4iLCJib3VuZHMiLCJtaW5pbXVtIiwibWF4IiwibWF4aW11bSIsImdlbmVyYXRlU29sdXRpb25JZCIsIm9iamVjdGl2ZVZhbHVlcyIsImNvbnN0cmFpbnRWaW9sYXRpb25zIiwiZmVhc2libGUiLCJzeXN0ZW1Db25maWd1cmF0aW9uIiwicGVyZm9ybWFuY2VNZXRyaWNzIiwic29sdXRpb25Ub1ZhcmlhYmxlcyIsIm9iamVjdGl2ZVZhbHVlIiwib2JqZWN0aXZlcyIsImkiLCJ2aW9sYXRpb24iLCJwdXNoIiwiY29uc3RyYWludElkIiwidmlvbGF0aW9uVHlwZSIsImN1cnJlbnRWYWx1ZSIsInJlcXVpcmVkVmFsdWUiLCJzZXZlcml0eSIsInBlbmFsdHkiLCJldmVyeSIsInRvdGFsUGVuYWx0eSIsImZpbHRlciIsInJlZHVjZSIsInN1bSIsIk51bWJlciIsIk1BWF9WQUxVRSIsInZhcmlhYmxlVGVtcGxhdGVzIiwibWFwIiwidGVtcGxhdGUiLCJjb21wdXRlR3JhZGllbnQiLCJ1cGRhdGVTb2x1dGlvbiIsInByb2plY3RTb2x1dGlvbiIsImN1cnJlbnRWYXJpYWJsZXMiLCJoIiwib3JpZ2luYWxWYWx1ZSIsImZvcndhcmRWYWx1ZSIsImJhY2t3YXJkVmFsdWUiLCJmb3J3YXJkVmFsIiwiYmFja3dhcmRWYWwiLCJzcXJ0IiwiZyIsInN0ZXBEaXJlY3Rpb24iLCJjb21wdXRlU3RlcERpcmVjdGlvbiIsInBlcmZvcm1MaW5lU2VhcmNoIiwibmV3VmFyaWFibGVzIiwibmV3VmFsdWUiLCJJbmZpbml0eSIsIm5ld1NvbHV0aW9uIiwiYmV0YTEiLCJiZXRhMiIsImVwc2lsb24iLCJ0IiwibUhhdCIsInBvdyIsInZIYXQiLCJkZWNheSIsImVwcyIsImFkYWdyYWRFcHMiLCJhcm1pam9MaW5lU2VhcmNoIiwid29sZmVMaW5lU2VhcmNoIiwiZ29sZGVuU2VjdGlvbkxpbmVTZWFyY2giLCJjMSIsImFscGhhIiwibWF4QmFja3RyYWNrIiwiZ3JhZGllbnREb3REaXJlY3Rpb24iLCJ0ZXN0VmFyaWFibGVzIiwiY3JlYXRlVGVzdFZhcmlhYmxlcyIsInRlc3RWYWx1ZSIsInBoaSIsInJlc3BoaSIsImEiLCJ0b2wiLCJ4MSIsIngyIiwiZjEiLCJldmFsdWF0ZUF0U3RlcCIsImYyIiwiYWJzIiwicHJvamVjdGVkVmFyaWFibGVzIiwicmVjZW50SGlzdG9yeSIsInNsaWNlIiwiZnVuY3Rpb25JbXByb3ZlbWVudCIsImJlc3RGaXRuZXNzIiwiYXZlcmFnZUZpdG5lc3MiLCJ3b3JzdEZpdG5lc3MiLCJkaXZlcnNpdHkiLCJ0aW1lc3RhbXAiLCJEYXRlIiwiZXhlY3V0aW9uVGltZSIsInN0YXRpc3RpY3MiLCJ0b3RhbEl0ZXJhdGlvbnMiLCJ0b3RhbEV2YWx1YXRpb25zIiwiY29udmVyZ2VuY2VJdGVyYXRpb24iLCJiZXN0Rml0bmVzc0hpc3RvcnkiLCJhdmVyYWdlRml0bmVzc0hpc3RvcnkiLCJkaXZlcnNpdHlIaXN0b3J5IiwiY29uc3RyYWludFZpb2xhdGlvbkhpc3RvcnkiLCJhbGdvcml0aG1TcGVjaWZpY1N0YXRzIiwiZmluYWxMZWFybmluZ1JhdGUiLCJmaW5hbEdyYWRpZW50Tm9ybSIsImZpbmFsU3RlcFNpemUiLCJvcHRpbWl6YXRpb25IaXN0b3J5IiwiaXRlcmF0aW9ucyIsInBvcHVsYXRpb25IaXN0b3J5IiwicGFyYW1ldGVySGlzdG9yeSIsImNvbnZlcmdlbmNlTWV0cmljcyIsInByb2JsZW1JZCIsInN0YXR1cyIsIk9wdGltaXphdGlvblN0YXR1cyIsIkNPTlZFUkdFRCIsImFuYWx5c2lzIiwicmVjb21tZW5kYXRpb25zIiwid2FybmluZ3MiLCJlcnJvcnMiLCJ0b1N0cmluZyIsInN1YnN0ciIsInNlZWQiLCJzdGF0ZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvVXNlcnMvam9obnJleXJhem9uYWJsZS9Eb2N1bWVudHMvU2l6ZVdpc2VfU3VpdGVfQXBwL2JhY2tlbmQvc2VydmljZXMvY2FsY3VsYXRpb25zL2FsZ29yaXRobXMvR3JhZGllbnREZXNjZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR3JhZGllbnQgRGVzY2VudCBBbGdvcml0aG0gSW1wbGVtZW50YXRpb24gZm9yIFN5c3RlbSBPcHRpbWl6YXRpb25cbiAqIFxuICogSW1wbGVtZW50cyBncmFkaWVudCBkZXNjZW50IG9wdGltaXphdGlvbiB3aXRoOlxuICogLSBNdWx0aXBsZSB2YXJpYW50cyAoc3RhbmRhcmQsIG1vbWVudHVtLCBBZGFtLCBSTVNwcm9wKVxuICogLSBOdW1lcmljYWwgZ3JhZGllbnQgY29tcHV0YXRpb24gd2l0aCBmaW5pdGUgZGlmZmVyZW5jZXNcbiAqIC0gQWRhcHRpdmUgbGVhcm5pbmcgcmF0ZSBhbmQgc3RlcCBzaXplIGNvbnRyb2xcbiAqIC0gTGluZSBzZWFyY2ggb3B0aW1pemF0aW9uXG4gKiAtIENvbnN0cmFpbnQgaGFuZGxpbmcgd2l0aCBwcm9qZWN0ZWQgZ3JhZGllbnRzXG4gKiBcbiAqIEB2ZXJzaW9uIDMuMC4wXG4gKiBAYXV0aG9yIFNpemVXaXNlIFN1aXRlIERldmVsb3BtZW50IFRlYW1cbiAqL1xuXG5pbXBvcnQge1xuICBPcHRpbWl6YXRpb25Tb2x1dGlvbixcbiAgT3B0aW1pemF0aW9uVmFyaWFibGUsXG4gIE9wdGltaXphdGlvblByb2JsZW0sXG4gIE9wdGltaXphdGlvblJlc3VsdCxcbiAgT3B0aW1pemF0aW9uU3RhdHVzLFxuICBPcHRpbWl6YXRpb25TdGF0aXN0aWNzLFxuICBPcHRpbWl6YXRpb25IaXN0b3J5LFxuICBJdGVyYXRpb25IaXN0b3J5LFxuICBTb2x1dGlvblBlcmZvcm1hbmNlTWV0cmljcyxcbiAgT2JqZWN0aXZlRnVuY3Rpb25UeXBlLFxuICBDb25zdHJhaW50RnVuY3Rpb25UeXBlXG59IGZyb20gJy4uL3R5cGVzL1N5c3RlbU9wdGltaXphdGlvblR5cGVzJztcblxuZXhwb3J0IGludGVyZmFjZSBHcmFkaWVudERlc2NlbnRQYXJhbWV0ZXJzIHtcbiAgbWF4SXRlcmF0aW9uczogbnVtYmVyO1xuICBsZWFybmluZ1JhdGU6IG51bWJlcjtcbiAgbGVhcm5pbmdSYXRlTWluOiBudW1iZXI7XG4gIGxlYXJuaW5nUmF0ZU1heDogbnVtYmVyO1xuICB2YXJpYW50OiAnc3RhbmRhcmQnIHwgJ21vbWVudHVtJyB8ICdhZGFtJyB8ICdybXNwcm9wJyB8ICdhZGFncmFkJztcbiAgbW9tZW50dW1Db2VmZmljaWVudDogbnVtYmVyO1xuICBhZGFtQmV0YTE6IG51bWJlcjtcbiAgYWRhbUJldGEyOiBudW1iZXI7XG4gIGFkYW1FcHNpbG9uOiBudW1iZXI7XG4gIHJtc3Byb3BEZWNheVJhdGU6IG51bWJlcjtcbiAgcm1zcHJvcEVwc2lsb246IG51bWJlcjtcbiAgZ3JhZGllbnRNZXRob2Q6ICdmb3J3YXJkJyB8ICdiYWNrd2FyZCcgfCAnY2VudHJhbCc7XG4gIGZpbml0ZURpZmZlcmVuY2VTdGVwOiBudW1iZXI7XG4gIGFkYXB0aXZlTGVhcm5pbmdSYXRlOiBib29sZWFuO1xuICBsaW5lU2VhcmNoOiBib29sZWFuO1xuICBsaW5lU2VhcmNoTWV0aG9kOiAnYXJtaWpvJyB8ICd3b2xmZScgfCAnZ29sZGVuX3NlY3Rpb24nO1xuICBjb25zdHJhaW50SGFuZGxpbmc6ICdwZW5hbHR5JyB8ICdwcm9qZWN0aW9uJyB8ICdiYXJyaWVyJztcbiAgcGVuYWx0eUNvZWZmaWNpZW50OiBudW1iZXI7XG4gIGNvbnZlcmdlbmNlVG9sZXJhbmNlOiBudW1iZXI7XG4gIGdyYWRpZW50VG9sZXJhbmNlOiBudW1iZXI7XG4gIHNlZWRWYWx1ZT86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHcmFkaWVudFN0YXRlIHtcbiAgc29sdXRpb246IE9wdGltaXphdGlvblNvbHV0aW9uO1xuICBncmFkaWVudDogbnVtYmVyW107XG4gIG1vbWVudHVtOiBudW1iZXJbXTtcbiAgYWRhbU06IG51bWJlcltdO1xuICBhZGFtVjogbnVtYmVyW107XG4gIHJtc3Byb3BWOiBudW1iZXJbXTtcbiAgYWRhZ3JhZEc6IG51bWJlcltdO1xuICBpdGVyYXRpb246IG51bWJlcjtcbiAgbGVhcm5pbmdSYXRlOiBudW1iZXI7XG4gIGdyYWRpZW50Tm9ybTogbnVtYmVyO1xuICBzdGVwU2l6ZTogbnVtYmVyO1xuICBmdW5jdGlvblZhbHVlOiBudW1iZXI7XG59XG5cbi8qKlxuICogR3JhZGllbnQgRGVzY2VudCBvcHRpbWl6ZXIgZm9yIGNvbnRpbnVvdXMgb3B0aW1pemF0aW9uIHByb2JsZW1zXG4gKi9cbmV4cG9ydCBjbGFzcyBHcmFkaWVudERlc2NlbnQge1xuICBwcml2YXRlIHBhcmFtZXRlcnM6IEdyYWRpZW50RGVzY2VudFBhcmFtZXRlcnM7XG4gIHByaXZhdGUgY3VycmVudFN0YXRlOiBHcmFkaWVudFN0YXRlIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgYmVzdFNvbHV0aW9uOiBPcHRpbWl6YXRpb25Tb2x1dGlvbiB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIGhpc3Rvcnk6IEl0ZXJhdGlvbkhpc3RvcnlbXSA9IFtdO1xuICBwcml2YXRlIHJhbmRvbTogKCkgPT4gbnVtYmVyO1xuICBwcml2YXRlIGV2YWx1YXRpb25Db3VudDogbnVtYmVyID0gMDtcblxuICBjb25zdHJ1Y3RvcihwYXJhbWV0ZXJzPzogUGFydGlhbDxHcmFkaWVudERlc2NlbnRQYXJhbWV0ZXJzPikge1xuICAgIHRoaXMucGFyYW1ldGVycyA9IHtcbiAgICAgIG1heEl0ZXJhdGlvbnM6IDEwMDAsXG4gICAgICBsZWFybmluZ1JhdGU6IDAuMDEsXG4gICAgICBsZWFybmluZ1JhdGVNaW46IDFlLTYsXG4gICAgICBsZWFybmluZ1JhdGVNYXg6IDEuMCxcbiAgICAgIHZhcmlhbnQ6ICdhZGFtJyxcbiAgICAgIG1vbWVudHVtQ29lZmZpY2llbnQ6IDAuOSxcbiAgICAgIGFkYW1CZXRhMTogMC45LFxuICAgICAgYWRhbUJldGEyOiAwLjk5OSxcbiAgICAgIGFkYW1FcHNpbG9uOiAxZS04LFxuICAgICAgcm1zcHJvcERlY2F5UmF0ZTogMC45LFxuICAgICAgcm1zcHJvcEVwc2lsb246IDFlLTgsXG4gICAgICBncmFkaWVudE1ldGhvZDogJ2NlbnRyYWwnLFxuICAgICAgZmluaXRlRGlmZmVyZW5jZVN0ZXA6IDFlLTYsXG4gICAgICBhZGFwdGl2ZUxlYXJuaW5nUmF0ZTogdHJ1ZSxcbiAgICAgIGxpbmVTZWFyY2g6IHRydWUsXG4gICAgICBsaW5lU2VhcmNoTWV0aG9kOiAnYXJtaWpvJyxcbiAgICAgIGNvbnN0cmFpbnRIYW5kbGluZzogJ3Byb2plY3Rpb24nLFxuICAgICAgcGVuYWx0eUNvZWZmaWNpZW50OiAxMDAwLFxuICAgICAgY29udmVyZ2VuY2VUb2xlcmFuY2U6IDFlLTYsXG4gICAgICBncmFkaWVudFRvbGVyYW5jZTogMWUtNixcbiAgICAgIC4uLnBhcmFtZXRlcnNcbiAgICB9O1xuXG4gICAgLy8gSW5pdGlhbGl6ZSByYW5kb20gbnVtYmVyIGdlbmVyYXRvclxuICAgIGlmICh0aGlzLnBhcmFtZXRlcnMuc2VlZFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMucmFuZG9tID0gdGhpcy5jcmVhdGVTZWVkZWRSYW5kb20odGhpcy5wYXJhbWV0ZXJzLnNlZWRWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmFuZG9tID0gTWF0aC5yYW5kb207XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIE1haW4gb3B0aW1pemF0aW9uIG1ldGhvZFxuICAgKi9cbiAgcHVibGljIGFzeW5jIG9wdGltaXplKFxuICAgIHByb2JsZW06IE9wdGltaXphdGlvblByb2JsZW0sXG4gICAgb2JqZWN0aXZlRnVuY3Rpb246IE9iamVjdGl2ZUZ1bmN0aW9uVHlwZSxcbiAgICBjb25zdHJhaW50RnVuY3Rpb25zOiBDb25zdHJhaW50RnVuY3Rpb25UeXBlW11cbiAgKTogUHJvbWlzZTxPcHRpbWl6YXRpb25SZXN1bHQ+IHtcbiAgICBjb25zdCBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gVmFsaWRhdGUgcHJvYmxlbSBmb3IgZ3JhZGllbnQgZGVzY2VudFxuICAgICAgdGhpcy52YWxpZGF0ZVByb2JsZW0ocHJvYmxlbSk7XG4gICAgICBcbiAgICAgIC8vIEluaXRpYWxpemUgYWxnb3JpdGhtXG4gICAgICB0aGlzLmluaXRpYWxpemVBbGdvcml0aG0ocHJvYmxlbSk7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBpbml0aWFsIHNvbHV0aW9uXG4gICAgICBhd2FpdCB0aGlzLmNyZWF0ZUluaXRpYWxTb2x1dGlvbihwcm9ibGVtLCBvYmplY3RpdmVGdW5jdGlvbiwgY29uc3RyYWludEZ1bmN0aW9ucyk7XG4gICAgICBcbiAgICAgIC8vIE1haW4gb3B0aW1pemF0aW9uIGxvb3BcbiAgICAgIHdoaWxlICghdGhpcy5zaG91bGRUZXJtaW5hdGUoKSkge1xuICAgICAgICBhd2FpdCB0aGlzLnBlcmZvcm1JdGVyYXRpb24ocHJvYmxlbSwgb2JqZWN0aXZlRnVuY3Rpb24sIGNvbnN0cmFpbnRGdW5jdGlvbnMpO1xuICAgICAgICB0aGlzLnVwZGF0ZUhpc3RvcnkoKTtcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLnBhcmFtZXRlcnMuYWRhcHRpdmVMZWFybmluZ1JhdGUpIHtcbiAgICAgICAgICB0aGlzLmFkYXB0TGVhcm5pbmdSYXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ3JlYXRlIGZpbmFsIHJlc3VsdFxuICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlT3B0aW1pemF0aW9uUmVzdWx0KHByb2JsZW0sIHN0YXJ0VGltZSk7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignR3JhZGllbnQgZGVzY2VudCBvcHRpbWl6YXRpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBWYWxpZGF0ZSBwcm9ibGVtIGZvciBncmFkaWVudCBkZXNjZW50XG4gICAqL1xuICBwcml2YXRlIHZhbGlkYXRlUHJvYmxlbShwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtKTogdm9pZCB7XG4gICAgLy8gQ2hlY2sgZm9yIGNvbnRpbnVvdXMgdmFyaWFibGVzIG9ubHlcbiAgICBjb25zdCBoYXNEaXNjcmV0ZVZhcmlhYmxlcyA9IHByb2JsZW0udmFyaWFibGVzLnNvbWUodiA9PiB2LmRpc2NyZXRlVmFsdWVzICYmIHYuZGlzY3JldGVWYWx1ZXMubGVuZ3RoID4gMCk7XG4gICAgaWYgKGhhc0Rpc2NyZXRlVmFyaWFibGVzKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0dyYWRpZW50IGRlc2NlbnQgd29ya3MgYmVzdCB3aXRoIGNvbnRpbnVvdXMgdmFyaWFibGVzLiBEaXNjcmV0ZSB2YXJpYWJsZXMgd2lsbCBiZSB0cmVhdGVkIGFzIGNvbnRpbnVvdXMuJyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgYWxnb3JpdGhtIHN0YXRlXG4gICAqL1xuICBwcml2YXRlIGluaXRpYWxpemVBbGdvcml0aG0ocHJvYmxlbTogT3B0aW1pemF0aW9uUHJvYmxlbSk6IHZvaWQge1xuICAgIHRoaXMuY3VycmVudFN0YXRlID0gbnVsbDtcbiAgICB0aGlzLmJlc3RTb2x1dGlvbiA9IG51bGw7XG4gICAgdGhpcy5oaXN0b3J5ID0gW107XG4gICAgdGhpcy5ldmFsdWF0aW9uQ291bnQgPSAwO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKGBJbml0aWFsaXppbmcgR3JhZGllbnQgRGVzY2VudCAoJHt0aGlzLnBhcmFtZXRlcnMudmFyaWFudH0pIHdpdGggbGVhcm5pbmcgcmF0ZTogJHt0aGlzLnBhcmFtZXRlcnMubGVhcm5pbmdSYXRlfWApO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBpbml0aWFsIHNvbHV0aW9uXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIGNyZWF0ZUluaXRpYWxTb2x1dGlvbihcbiAgICBwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtLFxuICAgIG9iamVjdGl2ZUZ1bmN0aW9uOiBPYmplY3RpdmVGdW5jdGlvblR5cGUsXG4gICAgY29uc3RyYWludEZ1bmN0aW9uczogQ29uc3RyYWludEZ1bmN0aW9uVHlwZVtdXG4gICk6IFByb21pc2U8dm9pZD4ge1xuICAgIC8vIEdlbmVyYXRlIGluaXRpYWwgc29sdXRpb25cbiAgICBjb25zdCBpbml0aWFsU29sdXRpb24gPSB0aGlzLmNyZWF0ZVJhbmRvbVNvbHV0aW9uKHByb2JsZW0pO1xuICAgIGF3YWl0IHRoaXMuZXZhbHVhdGVTb2x1dGlvbihpbml0aWFsU29sdXRpb24sIHByb2JsZW0sIG9iamVjdGl2ZUZ1bmN0aW9uLCBjb25zdHJhaW50RnVuY3Rpb25zKTtcbiAgICBcbiAgICAvLyBJbml0aWFsaXplIGdyYWRpZW50IHN0YXRlXG4gICAgY29uc3QgbnVtVmFyaWFibGVzID0gcHJvYmxlbS52YXJpYWJsZXMubGVuZ3RoO1xuICAgIHRoaXMuY3VycmVudFN0YXRlID0ge1xuICAgICAgc29sdXRpb246IGluaXRpYWxTb2x1dGlvbixcbiAgICAgIGdyYWRpZW50OiBuZXcgQXJyYXkobnVtVmFyaWFibGVzKS5maWxsKDApLFxuICAgICAgbW9tZW50dW06IG5ldyBBcnJheShudW1WYXJpYWJsZXMpLmZpbGwoMCksXG4gICAgICBhZGFtTTogbmV3IEFycmF5KG51bVZhcmlhYmxlcykuZmlsbCgwKSxcbiAgICAgIGFkYW1WOiBuZXcgQXJyYXkobnVtVmFyaWFibGVzKS5maWxsKDApLFxuICAgICAgcm1zcHJvcFY6IG5ldyBBcnJheShudW1WYXJpYWJsZXMpLmZpbGwoMCksXG4gICAgICBhZGFncmFkRzogbmV3IEFycmF5KG51bVZhcmlhYmxlcykuZmlsbCgwKSxcbiAgICAgIGl0ZXJhdGlvbjogMCxcbiAgICAgIGxlYXJuaW5nUmF0ZTogdGhpcy5wYXJhbWV0ZXJzLmxlYXJuaW5nUmF0ZSxcbiAgICAgIGdyYWRpZW50Tm9ybTogMCxcbiAgICAgIHN0ZXBTaXplOiAwLFxuICAgICAgZnVuY3Rpb25WYWx1ZTogaW5pdGlhbFNvbHV0aW9uLmZpdG5lc3NcbiAgICB9O1xuICAgIFxuICAgIHRoaXMuYmVzdFNvbHV0aW9uID0geyAuLi5pbml0aWFsU29sdXRpb24gfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYSByYW5kb20gc29sdXRpb25cbiAgICovXG4gIHByaXZhdGUgY3JlYXRlUmFuZG9tU29sdXRpb24ocHJvYmxlbTogT3B0aW1pemF0aW9uUHJvYmxlbSk6IE9wdGltaXphdGlvblNvbHV0aW9uIHtcbiAgICBjb25zdCB2YXJpYWJsZXM6IHsgW3ZhcmlhYmxlSWQ6IHN0cmluZ106IG51bWJlciB8IHN0cmluZyB9ID0ge307XG4gICAgXG4gICAgZm9yIChjb25zdCB2YXJpYWJsZSBvZiBwcm9ibGVtLnZhcmlhYmxlcykge1xuICAgICAgaWYgKHZhcmlhYmxlLmRpc2NyZXRlVmFsdWVzICYmIHZhcmlhYmxlLmRpc2NyZXRlVmFsdWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gRGlzY3JldGUgdmFyaWFibGUgLSBzZWxlY3QgcmFuZG9tIHZhbHVlXG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcih0aGlzLnJhbmRvbSgpICogdmFyaWFibGUuZGlzY3JldGVWYWx1ZXMubGVuZ3RoKTtcbiAgICAgICAgdmFyaWFibGVzW3ZhcmlhYmxlLmlkXSA9IHZhcmlhYmxlLmRpc2NyZXRlVmFsdWVzW3JhbmRvbUluZGV4XTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIENvbnRpbnVvdXMgdmFyaWFibGVcbiAgICAgICAgY29uc3QgbWluID0gdHlwZW9mIHZhcmlhYmxlLmJvdW5kcy5taW5pbXVtID09PSAnbnVtYmVyJyA/IHZhcmlhYmxlLmJvdW5kcy5taW5pbXVtIDogMDtcbiAgICAgICAgY29uc3QgbWF4ID0gdHlwZW9mIHZhcmlhYmxlLmJvdW5kcy5tYXhpbXVtID09PSAnbnVtYmVyJyA/IHZhcmlhYmxlLmJvdW5kcy5tYXhpbXVtIDogMTtcbiAgICAgICAgdmFyaWFibGVzW3ZhcmlhYmxlLmlkXSA9IG1pbiArIHRoaXMucmFuZG9tKCkgKiAobWF4IC0gbWluKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB0aGlzLmdlbmVyYXRlU29sdXRpb25JZCgpLFxuICAgICAgdmFyaWFibGVzLFxuICAgICAgb2JqZWN0aXZlVmFsdWVzOiB7fSxcbiAgICAgIGNvbnN0cmFpbnRWaW9sYXRpb25zOiBbXSxcbiAgICAgIGZlYXNpYmxlOiB0cnVlLFxuICAgICAgZml0bmVzczogMCxcbiAgICAgIHN5c3RlbUNvbmZpZ3VyYXRpb246IHByb2JsZW0uc3lzdGVtQ29uZmlndXJhdGlvbixcbiAgICAgIHBlcmZvcm1hbmNlTWV0cmljczoge30gYXMgU29sdXRpb25QZXJmb3JtYW5jZU1ldHJpY3NcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEV2YWx1YXRlIHNvbHV0aW9uIGZpdG5lc3MgYW5kIGNvbnN0cmFpbnRzXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIGV2YWx1YXRlU29sdXRpb24oXG4gICAgc29sdXRpb246IE9wdGltaXphdGlvblNvbHV0aW9uLFxuICAgIHByb2JsZW06IE9wdGltaXphdGlvblByb2JsZW0sXG4gICAgb2JqZWN0aXZlRnVuY3Rpb246IE9iamVjdGl2ZUZ1bmN0aW9uVHlwZSxcbiAgICBjb25zdHJhaW50RnVuY3Rpb25zOiBDb25zdHJhaW50RnVuY3Rpb25UeXBlW11cbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENvbnZlcnQgc29sdXRpb24gdG8gb3B0aW1pemF0aW9uIHZhcmlhYmxlc1xuICAgICAgY29uc3QgdmFyaWFibGVzID0gdGhpcy5zb2x1dGlvblRvVmFyaWFibGVzKHNvbHV0aW9uLCBwcm9ibGVtLnZhcmlhYmxlcyk7XG4gICAgICBcbiAgICAgIC8vIEV2YWx1YXRlIG9iamVjdGl2ZSBmdW5jdGlvblxuICAgICAgY29uc3Qgb2JqZWN0aXZlVmFsdWUgPSBvYmplY3RpdmVGdW5jdGlvbih2YXJpYWJsZXMpO1xuICAgICAgc29sdXRpb24uZml0bmVzcyA9IG9iamVjdGl2ZVZhbHVlO1xuICAgICAgXG4gICAgICAvLyBTdG9yZSBvYmplY3RpdmUgdmFsdWVzXG4gICAgICBpZiAocHJvYmxlbS5vYmplY3RpdmVzLm9iamVjdGl2ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBzb2x1dGlvbi5vYmplY3RpdmVWYWx1ZXNbcHJvYmxlbS5vYmplY3RpdmVzLm9iamVjdGl2ZXNbMF0uaWRdID0gb2JqZWN0aXZlVmFsdWU7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEV2YWx1YXRlIGNvbnN0cmFpbnRzXG4gICAgICBzb2x1dGlvbi5jb25zdHJhaW50VmlvbGF0aW9ucyA9IFtdO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb25zdHJhaW50RnVuY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHZpb2xhdGlvbiA9IGNvbnN0cmFpbnRGdW5jdGlvbnNbaV0odmFyaWFibGVzKTtcbiAgICAgICAgc29sdXRpb24uY29uc3RyYWludFZpb2xhdGlvbnMucHVzaCh7XG4gICAgICAgICAgY29uc3RyYWludElkOiBgY29uc3RyYWludF8ke2l9YCxcbiAgICAgICAgICB2aW9sYXRpb25UeXBlOiB2aW9sYXRpb24gPiAwID8gJ2luZXF1YWxpdHknIDogJ2JvdW5kYXJ5JyxcbiAgICAgICAgICBjdXJyZW50VmFsdWU6IHZpb2xhdGlvbixcbiAgICAgICAgICByZXF1aXJlZFZhbHVlOiAwLFxuICAgICAgICAgIHNldmVyaXR5OiB2aW9sYXRpb24gPiAwID8gJ21ham9yJyA6ICdtaW5vcicsXG4gICAgICAgICAgcGVuYWx0eTogdmlvbGF0aW9uID4gMCA/IHZpb2xhdGlvbiAqIHRoaXMucGFyYW1ldGVycy5wZW5hbHR5Q29lZmZpY2llbnQgOiAwXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDaGVjayBmZWFzaWJpbGl0eVxuICAgICAgc29sdXRpb24uZmVhc2libGUgPSBzb2x1dGlvbi5jb25zdHJhaW50VmlvbGF0aW9ucy5ldmVyeSh2ID0+IHYuY3VycmVudFZhbHVlIDw9IDApO1xuICAgICAgXG4gICAgICAvLyBBcHBseSBjb25zdHJhaW50IGhhbmRsaW5nXG4gICAgICBpZiAoIXNvbHV0aW9uLmZlYXNpYmxlICYmIHRoaXMucGFyYW1ldGVycy5jb25zdHJhaW50SGFuZGxpbmcgPT09ICdwZW5hbHR5Jykge1xuICAgICAgICBjb25zdCB0b3RhbFBlbmFsdHkgPSBzb2x1dGlvbi5jb25zdHJhaW50VmlvbGF0aW9uc1xuICAgICAgICAgIC5maWx0ZXIodiA9PiB2LmN1cnJlbnRWYWx1ZSA+IDApXG4gICAgICAgICAgLnJlZHVjZSgoc3VtLCB2KSA9PiBzdW0gKyB2LnBlbmFsdHksIDApO1xuICAgICAgICBzb2x1dGlvbi5maXRuZXNzICs9IHRvdGFsUGVuYWx0eTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy5ldmFsdWF0aW9uQ291bnQrKztcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBldmFsdWF0aW5nIHNvbHV0aW9uOicsIGVycm9yKTtcbiAgICAgIHNvbHV0aW9uLmZpdG5lc3MgPSBOdW1iZXIuTUFYX1ZBTFVFO1xuICAgICAgc29sdXRpb24uZmVhc2libGUgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydCBzb2x1dGlvbiB0byBvcHRpbWl6YXRpb24gdmFyaWFibGVzXG4gICAqL1xuICBwcml2YXRlIHNvbHV0aW9uVG9WYXJpYWJsZXMoc29sdXRpb246IE9wdGltaXphdGlvblNvbHV0aW9uLCB2YXJpYWJsZVRlbXBsYXRlczogT3B0aW1pemF0aW9uVmFyaWFibGVbXSk6IE9wdGltaXphdGlvblZhcmlhYmxlW10ge1xuICAgIHJldHVybiB2YXJpYWJsZVRlbXBsYXRlcy5tYXAodGVtcGxhdGUgPT4gKHtcbiAgICAgIC4uLnRlbXBsYXRlLFxuICAgICAgY3VycmVudFZhbHVlOiBzb2x1dGlvbi52YXJpYWJsZXNbdGVtcGxhdGUuaWRdXG4gICAgfSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFBlcmZvcm0gb25lIGl0ZXJhdGlvbiBvZiBncmFkaWVudCBkZXNjZW50XG4gICAqL1xuICBwcml2YXRlIGFzeW5jIHBlcmZvcm1JdGVyYXRpb24oXG4gICAgcHJvYmxlbTogT3B0aW1pemF0aW9uUHJvYmxlbSxcbiAgICBvYmplY3RpdmVGdW5jdGlvbjogT2JqZWN0aXZlRnVuY3Rpb25UeXBlLFxuICAgIGNvbnN0cmFpbnRGdW5jdGlvbnM6IENvbnN0cmFpbnRGdW5jdGlvblR5cGVbXVxuICApOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBpZiAoIXRoaXMuY3VycmVudFN0YXRlKSByZXR1cm47XG4gICAgXG4gICAgLy8gQ29tcHV0ZSBncmFkaWVudFxuICAgIGF3YWl0IHRoaXMuY29tcHV0ZUdyYWRpZW50KHByb2JsZW0sIG9iamVjdGl2ZUZ1bmN0aW9uLCBjb25zdHJhaW50RnVuY3Rpb25zKTtcbiAgICBcbiAgICAvLyBVcGRhdGUgc29sdXRpb24gYmFzZWQgb24gdmFyaWFudFxuICAgIGF3YWl0IHRoaXMudXBkYXRlU29sdXRpb24ocHJvYmxlbSwgb2JqZWN0aXZlRnVuY3Rpb24sIGNvbnN0cmFpbnRGdW5jdGlvbnMpO1xuICAgIFxuICAgIC8vIEFwcGx5IGNvbnN0cmFpbnRzIGlmIHVzaW5nIHByb2plY3Rpb25cbiAgICBpZiAodGhpcy5wYXJhbWV0ZXJzLmNvbnN0cmFpbnRIYW5kbGluZyA9PT0gJ3Byb2plY3Rpb24nKSB7XG4gICAgICB0aGlzLnByb2plY3RTb2x1dGlvbihwcm9ibGVtKTtcbiAgICB9XG4gICAgXG4gICAgLy8gVXBkYXRlIGJlc3Qgc29sdXRpb25cbiAgICBpZiAodGhpcy5jdXJyZW50U3RhdGUuc29sdXRpb24uZml0bmVzcyA8IHRoaXMuYmVzdFNvbHV0aW9uIS5maXRuZXNzKSB7XG4gICAgICB0aGlzLmJlc3RTb2x1dGlvbiA9IHsgLi4udGhpcy5jdXJyZW50U3RhdGUuc29sdXRpb24gfTtcbiAgICB9XG4gICAgXG4gICAgdGhpcy5jdXJyZW50U3RhdGUuaXRlcmF0aW9uKys7XG4gIH1cblxuICAvKipcbiAgICogQ29tcHV0ZSBudW1lcmljYWwgZ3JhZGllbnRcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgY29tcHV0ZUdyYWRpZW50KFxuICAgIHByb2JsZW06IE9wdGltaXphdGlvblByb2JsZW0sXG4gICAgb2JqZWN0aXZlRnVuY3Rpb246IE9iamVjdGl2ZUZ1bmN0aW9uVHlwZSxcbiAgICBjb25zdHJhaW50RnVuY3Rpb25zOiBDb25zdHJhaW50RnVuY3Rpb25UeXBlW11cbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IGN1cnJlbnRWYXJpYWJsZXMgPSB0aGlzLnNvbHV0aW9uVG9WYXJpYWJsZXModGhpcy5jdXJyZW50U3RhdGUuc29sdXRpb24sIHByb2JsZW0udmFyaWFibGVzKTtcbiAgICBjb25zdCBoID0gdGhpcy5wYXJhbWV0ZXJzLmZpbml0ZURpZmZlcmVuY2VTdGVwO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvYmxlbS52YXJpYWJsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHZhcmlhYmxlID0gcHJvYmxlbS52YXJpYWJsZXNbaV07XG4gICAgICBcbiAgICAgIC8vIFNraXAgZGlzY3JldGUgdmFyaWFibGVzXG4gICAgICBpZiAodmFyaWFibGUuZGlzY3JldGVWYWx1ZXMgJiYgdmFyaWFibGUuZGlzY3JldGVWYWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudFtpXSA9IDA7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBvcmlnaW5hbFZhbHVlID0gY3VycmVudFZhcmlhYmxlc1tpXS5jdXJyZW50VmFsdWUgYXMgbnVtYmVyO1xuICAgICAgXG4gICAgICBsZXQgZ3JhZGllbnQgPSAwO1xuICAgICAgXG4gICAgICBzd2l0Y2ggKHRoaXMucGFyYW1ldGVycy5ncmFkaWVudE1ldGhvZCkge1xuICAgICAgICBjYXNlICdmb3J3YXJkJzpcbiAgICAgICAgICAvLyBmJyh4KSDiiYggKGYoeCtoKSAtIGYoeCkpIC8gaFxuICAgICAgICAgIGN1cnJlbnRWYXJpYWJsZXNbaV0uY3VycmVudFZhbHVlID0gb3JpZ2luYWxWYWx1ZSArIGg7XG4gICAgICAgICAgY29uc3QgZm9yd2FyZFZhbHVlID0gb2JqZWN0aXZlRnVuY3Rpb24oY3VycmVudFZhcmlhYmxlcyk7XG4gICAgICAgICAgZ3JhZGllbnQgPSAoZm9yd2FyZFZhbHVlIC0gdGhpcy5jdXJyZW50U3RhdGUuZnVuY3Rpb25WYWx1ZSkgLyBoO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIFxuICAgICAgICBjYXNlICdiYWNrd2FyZCc6XG4gICAgICAgICAgLy8gZicoeCkg4omIIChmKHgpIC0gZih4LWgpKSAvIGhcbiAgICAgICAgICBjdXJyZW50VmFyaWFibGVzW2ldLmN1cnJlbnRWYWx1ZSA9IG9yaWdpbmFsVmFsdWUgLSBoO1xuICAgICAgICAgIGNvbnN0IGJhY2t3YXJkVmFsdWUgPSBvYmplY3RpdmVGdW5jdGlvbihjdXJyZW50VmFyaWFibGVzKTtcbiAgICAgICAgICBncmFkaWVudCA9ICh0aGlzLmN1cnJlbnRTdGF0ZS5mdW5jdGlvblZhbHVlIC0gYmFja3dhcmRWYWx1ZSkgLyBoO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIFxuICAgICAgICBjYXNlICdjZW50cmFsJzpcbiAgICAgICAgICAvLyBmJyh4KSDiiYggKGYoeCtoKSAtIGYoeC1oKSkgLyAoMmgpXG4gICAgICAgICAgY3VycmVudFZhcmlhYmxlc1tpXS5jdXJyZW50VmFsdWUgPSBvcmlnaW5hbFZhbHVlICsgaDtcbiAgICAgICAgICBjb25zdCBmb3J3YXJkVmFsID0gb2JqZWN0aXZlRnVuY3Rpb24oY3VycmVudFZhcmlhYmxlcyk7XG4gICAgICAgICAgY3VycmVudFZhcmlhYmxlc1tpXS5jdXJyZW50VmFsdWUgPSBvcmlnaW5hbFZhbHVlIC0gaDtcbiAgICAgICAgICBjb25zdCBiYWNrd2FyZFZhbCA9IG9iamVjdGl2ZUZ1bmN0aW9uKGN1cnJlbnRWYXJpYWJsZXMpO1xuICAgICAgICAgIGdyYWRpZW50ID0gKGZvcndhcmRWYWwgLSBiYWNrd2FyZFZhbCkgLyAoMiAqIGgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBSZXN0b3JlIG9yaWdpbmFsIHZhbHVlXG4gICAgICBjdXJyZW50VmFyaWFibGVzW2ldLmN1cnJlbnRWYWx1ZSA9IG9yaWdpbmFsVmFsdWU7XG4gICAgICBcbiAgICAgIHRoaXMuY3VycmVudFN0YXRlLmdyYWRpZW50W2ldID0gZ3JhZGllbnQ7XG4gICAgICB0aGlzLmV2YWx1YXRpb25Db3VudCArPSB0aGlzLnBhcmFtZXRlcnMuZ3JhZGllbnRNZXRob2QgPT09ICdjZW50cmFsJyA/IDIgOiAxO1xuICAgIH1cbiAgICBcbiAgICAvLyBDb21wdXRlIGdyYWRpZW50IG5vcm1cbiAgICB0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudE5vcm0gPSBNYXRoLnNxcnQoXG4gICAgICB0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudC5yZWR1Y2UoKHN1bSwgZykgPT4gc3VtICsgZyAqIGcsIDApXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgc29sdXRpb24gYmFzZWQgb24gZ3JhZGllbnQgZGVzY2VudCB2YXJpYW50XG4gICAqL1xuICBwcml2YXRlIGFzeW5jIHVwZGF0ZVNvbHV0aW9uKFxuICAgIHByb2JsZW06IE9wdGltaXphdGlvblByb2JsZW0sXG4gICAgb2JqZWN0aXZlRnVuY3Rpb246IE9iamVjdGl2ZUZ1bmN0aW9uVHlwZSxcbiAgICBjb25zdHJhaW50RnVuY3Rpb25zOiBDb25zdHJhaW50RnVuY3Rpb25UeXBlW11cbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IHN0ZXBEaXJlY3Rpb24gPSB0aGlzLmNvbXB1dGVTdGVwRGlyZWN0aW9uKCk7XG4gICAgXG4gICAgLy8gRGV0ZXJtaW5lIHN0ZXAgc2l6ZVxuICAgIGxldCBzdGVwU2l6ZSA9IHRoaXMuY3VycmVudFN0YXRlLmxlYXJuaW5nUmF0ZTtcbiAgICBpZiAodGhpcy5wYXJhbWV0ZXJzLmxpbmVTZWFyY2gpIHtcbiAgICAgIHN0ZXBTaXplID0gYXdhaXQgdGhpcy5wZXJmb3JtTGluZVNlYXJjaChwcm9ibGVtLCBvYmplY3RpdmVGdW5jdGlvbiwgY29uc3RyYWludEZ1bmN0aW9ucywgc3RlcERpcmVjdGlvbik7XG4gICAgfVxuICAgIFxuICAgIC8vIFVwZGF0ZSBzb2x1dGlvblxuICAgIGNvbnN0IG5ld1ZhcmlhYmxlczogeyBbdmFyaWFibGVJZDogc3RyaW5nXTogbnVtYmVyIHwgc3RyaW5nIH0gPSB7fTtcbiAgICBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2JsZW0udmFyaWFibGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCB2YXJpYWJsZSA9IHByb2JsZW0udmFyaWFibGVzW2ldO1xuICAgICAgY29uc3QgY3VycmVudFZhbHVlID0gdGhpcy5jdXJyZW50U3RhdGUuc29sdXRpb24udmFyaWFibGVzW3ZhcmlhYmxlLmlkXTtcbiAgICAgIFxuICAgICAgaWYgKHZhcmlhYmxlLmRpc2NyZXRlVmFsdWVzICYmIHZhcmlhYmxlLmRpc2NyZXRlVmFsdWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gS2VlcCBkaXNjcmV0ZSB2YXJpYWJsZXMgdW5jaGFuZ2VkXG4gICAgICAgIG5ld1ZhcmlhYmxlc1t2YXJpYWJsZS5pZF0gPSBjdXJyZW50VmFsdWU7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBjdXJyZW50VmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIC8vIFVwZGF0ZSBjb250aW51b3VzIHZhcmlhYmxlc1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGN1cnJlbnRWYWx1ZSAtIHN0ZXBTaXplICogc3RlcERpcmVjdGlvbltpXTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFwcGx5IGJvdW5kc1xuICAgICAgICBjb25zdCBtaW4gPSB0eXBlb2YgdmFyaWFibGUuYm91bmRzLm1pbmltdW0gPT09ICdudW1iZXInID8gdmFyaWFibGUuYm91bmRzLm1pbmltdW0gOiAtSW5maW5pdHk7XG4gICAgICAgIGNvbnN0IG1heCA9IHR5cGVvZiB2YXJpYWJsZS5ib3VuZHMubWF4aW11bSA9PT0gJ251bWJlcicgPyB2YXJpYWJsZS5ib3VuZHMubWF4aW11bSA6IEluZmluaXR5O1xuICAgICAgICBuZXdWYXJpYWJsZXNbdmFyaWFibGUuaWRdID0gTWF0aC5tYXgobWluLCBNYXRoLm1pbihtYXgsIG5ld1ZhbHVlKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXdWYXJpYWJsZXNbdmFyaWFibGUuaWRdID0gY3VycmVudFZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBDcmVhdGUgbmV3IHNvbHV0aW9uXG4gICAgY29uc3QgbmV3U29sdXRpb246IE9wdGltaXphdGlvblNvbHV0aW9uID0ge1xuICAgICAgLi4udGhpcy5jdXJyZW50U3RhdGUuc29sdXRpb24sXG4gICAgICBpZDogdGhpcy5nZW5lcmF0ZVNvbHV0aW9uSWQoKSxcbiAgICAgIHZhcmlhYmxlczogbmV3VmFyaWFibGVzXG4gICAgfTtcbiAgICBcbiAgICAvLyBFdmFsdWF0ZSBuZXcgc29sdXRpb25cbiAgICBhd2FpdCB0aGlzLmV2YWx1YXRlU29sdXRpb24obmV3U29sdXRpb24sIHByb2JsZW0sIG9iamVjdGl2ZUZ1bmN0aW9uLCBjb25zdHJhaW50RnVuY3Rpb25zKTtcbiAgICBcbiAgICAvLyBVcGRhdGUgc3RhdGVcbiAgICB0aGlzLmN1cnJlbnRTdGF0ZS5zb2x1dGlvbiA9IG5ld1NvbHV0aW9uO1xuICAgIHRoaXMuY3VycmVudFN0YXRlLnN0ZXBTaXplID0gc3RlcFNpemU7XG4gICAgdGhpcy5jdXJyZW50U3RhdGUuZnVuY3Rpb25WYWx1ZSA9IG5ld1NvbHV0aW9uLmZpdG5lc3M7XG4gIH1cblxuICAvKipcbiAgICogQ29tcHV0ZSBzdGVwIGRpcmVjdGlvbiBiYXNlZCBvbiB2YXJpYW50XG4gICAqL1xuICBwcml2YXRlIGNvbXB1dGVTdGVwRGlyZWN0aW9uKCk6IG51bWJlcltdIHtcbiAgICBpZiAoIXRoaXMuY3VycmVudFN0YXRlKSByZXR1cm4gW107XG4gICAgXG4gICAgY29uc3QgZ3JhZGllbnQgPSB0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudDtcbiAgICBjb25zdCBzdGVwRGlyZWN0aW9uID0gbmV3IEFycmF5KGdyYWRpZW50Lmxlbmd0aCk7XG4gICAgXG4gICAgc3dpdGNoICh0aGlzLnBhcmFtZXRlcnMudmFyaWFudCkge1xuICAgICAgY2FzZSAnc3RhbmRhcmQnOlxuICAgICAgICAvLyBTdGFuZGFyZCBncmFkaWVudCBkZXNjZW50OiBkID0gLeKIh2ZcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBncmFkaWVudC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHN0ZXBEaXJlY3Rpb25baV0gPSBncmFkaWVudFtpXTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICBjYXNlICdtb21lbnR1bSc6XG4gICAgICAgIC8vIE1vbWVudHVtOiB2ID0gzrIqdiArIOKIh2YsIGQgPSB2XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JhZGllbnQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZS5tb21lbnR1bVtpXSA9IHRoaXMucGFyYW1ldGVycy5tb21lbnR1bUNvZWZmaWNpZW50ICogdGhpcy5jdXJyZW50U3RhdGUubW9tZW50dW1baV0gKyBncmFkaWVudFtpXTtcbiAgICAgICAgICBzdGVwRGlyZWN0aW9uW2ldID0gdGhpcy5jdXJyZW50U3RhdGUubW9tZW50dW1baV07XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnYWRhbSc6XG4gICAgICAgIC8vIEFkYW0gb3B0aW1pemVyXG4gICAgICAgIGNvbnN0IGJldGExID0gdGhpcy5wYXJhbWV0ZXJzLmFkYW1CZXRhMTtcbiAgICAgICAgY29uc3QgYmV0YTIgPSB0aGlzLnBhcmFtZXRlcnMuYWRhbUJldGEyO1xuICAgICAgICBjb25zdCBlcHNpbG9uID0gdGhpcy5wYXJhbWV0ZXJzLmFkYW1FcHNpbG9uO1xuICAgICAgICBjb25zdCB0ID0gdGhpcy5jdXJyZW50U3RhdGUuaXRlcmF0aW9uICsgMTtcbiAgICAgICAgXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JhZGllbnQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAvLyBVcGRhdGUgYmlhc2VkIGZpcnN0IG1vbWVudCBlc3RpbWF0ZVxuICAgICAgICAgIHRoaXMuY3VycmVudFN0YXRlLmFkYW1NW2ldID0gYmV0YTEgKiB0aGlzLmN1cnJlbnRTdGF0ZS5hZGFtTVtpXSArICgxIC0gYmV0YTEpICogZ3JhZGllbnRbaV07XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gVXBkYXRlIGJpYXNlZCBzZWNvbmQgcmF3IG1vbWVudCBlc3RpbWF0ZVxuICAgICAgICAgIHRoaXMuY3VycmVudFN0YXRlLmFkYW1WW2ldID0gYmV0YTIgKiB0aGlzLmN1cnJlbnRTdGF0ZS5hZGFtVltpXSArICgxIC0gYmV0YTIpICogZ3JhZGllbnRbaV0gKiBncmFkaWVudFtpXTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDb21wdXRlIGJpYXMtY29ycmVjdGVkIGZpcnN0IG1vbWVudCBlc3RpbWF0ZVxuICAgICAgICAgIGNvbnN0IG1IYXQgPSB0aGlzLmN1cnJlbnRTdGF0ZS5hZGFtTVtpXSAvICgxIC0gTWF0aC5wb3coYmV0YTEsIHQpKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDb21wdXRlIGJpYXMtY29ycmVjdGVkIHNlY29uZCByYXcgbW9tZW50IGVzdGltYXRlXG4gICAgICAgICAgY29uc3QgdkhhdCA9IHRoaXMuY3VycmVudFN0YXRlLmFkYW1WW2ldIC8gKDEgLSBNYXRoLnBvdyhiZXRhMiwgdCkpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFVwZGF0ZSBzdGVwIGRpcmVjdGlvblxuICAgICAgICAgIHN0ZXBEaXJlY3Rpb25baV0gPSBtSGF0IC8gKE1hdGguc3FydCh2SGF0KSArIGVwc2lsb24pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ3Jtc3Byb3AnOlxuICAgICAgICAvLyBSTVNwcm9wXG4gICAgICAgIGNvbnN0IGRlY2F5ID0gdGhpcy5wYXJhbWV0ZXJzLnJtc3Byb3BEZWNheVJhdGU7XG4gICAgICAgIGNvbnN0IGVwcyA9IHRoaXMucGFyYW1ldGVycy5ybXNwcm9wRXBzaWxvbjtcbiAgICAgICAgXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JhZGllbnQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZS5ybXNwcm9wVltpXSA9IGRlY2F5ICogdGhpcy5jdXJyZW50U3RhdGUucm1zcHJvcFZbaV0gKyAoMSAtIGRlY2F5KSAqIGdyYWRpZW50W2ldICogZ3JhZGllbnRbaV07XG4gICAgICAgICAgc3RlcERpcmVjdGlvbltpXSA9IGdyYWRpZW50W2ldIC8gKE1hdGguc3FydCh0aGlzLmN1cnJlbnRTdGF0ZS5ybXNwcm9wVltpXSkgKyBlcHMpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ2FkYWdyYWQnOlxuICAgICAgICAvLyBBZGFncmFkXG4gICAgICAgIGNvbnN0IGFkYWdyYWRFcHMgPSB0aGlzLnBhcmFtZXRlcnMuYWRhbUVwc2lsb247XG4gICAgICAgIFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGdyYWRpZW50Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUuYWRhZ3JhZEdbaV0gKz0gZ3JhZGllbnRbaV0gKiBncmFkaWVudFtpXTtcbiAgICAgICAgICBzdGVwRGlyZWN0aW9uW2ldID0gZ3JhZGllbnRbaV0gLyAoTWF0aC5zcXJ0KHRoaXMuY3VycmVudFN0YXRlLmFkYWdyYWRHW2ldKSArIGFkYWdyYWRFcHMpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIC8vIERlZmF1bHQgdG8gc3RhbmRhcmQgZ3JhZGllbnQgZGVzY2VudFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGdyYWRpZW50Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgc3RlcERpcmVjdGlvbltpXSA9IGdyYWRpZW50W2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBzdGVwRGlyZWN0aW9uO1xuICB9XG5cbiAgLyoqXG4gICAqIFBlcmZvcm0gbGluZSBzZWFyY2ggdG8gZmluZCBvcHRpbWFsIHN0ZXAgc2l6ZVxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBwZXJmb3JtTGluZVNlYXJjaChcbiAgICBwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtLFxuICAgIG9iamVjdGl2ZUZ1bmN0aW9uOiBPYmplY3RpdmVGdW5jdGlvblR5cGUsXG4gICAgY29uc3RyYWludEZ1bmN0aW9uczogQ29uc3RyYWludEZ1bmN0aW9uVHlwZVtdLFxuICAgIHN0ZXBEaXJlY3Rpb246IG51bWJlcltdXG4gICk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuIHRoaXMucGFyYW1ldGVycy5sZWFybmluZ1JhdGU7XG4gICAgXG4gICAgc3dpdGNoICh0aGlzLnBhcmFtZXRlcnMubGluZVNlYXJjaE1ldGhvZCkge1xuICAgICAgY2FzZSAnYXJtaWpvJzpcbiAgICAgICAgcmV0dXJuIHRoaXMuYXJtaWpvTGluZVNlYXJjaChwcm9ibGVtLCBvYmplY3RpdmVGdW5jdGlvbiwgY29uc3RyYWludEZ1bmN0aW9ucywgc3RlcERpcmVjdGlvbik7XG4gICAgICBjYXNlICd3b2xmZSc6XG4gICAgICAgIHJldHVybiB0aGlzLndvbGZlTGluZVNlYXJjaChwcm9ibGVtLCBvYmplY3RpdmVGdW5jdGlvbiwgY29uc3RyYWludEZ1bmN0aW9ucywgc3RlcERpcmVjdGlvbik7XG4gICAgICBjYXNlICdnb2xkZW5fc2VjdGlvbic6XG4gICAgICAgIHJldHVybiB0aGlzLmdvbGRlblNlY3Rpb25MaW5lU2VhcmNoKHByb2JsZW0sIG9iamVjdGl2ZUZ1bmN0aW9uLCBjb25zdHJhaW50RnVuY3Rpb25zLCBzdGVwRGlyZWN0aW9uKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtZXRlcnMubGVhcm5pbmdSYXRlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBBcm1pam8gbGluZSBzZWFyY2hcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgYXJtaWpvTGluZVNlYXJjaChcbiAgICBwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtLFxuICAgIG9iamVjdGl2ZUZ1bmN0aW9uOiBPYmplY3RpdmVGdW5jdGlvblR5cGUsXG4gICAgY29uc3RyYWludEZ1bmN0aW9uczogQ29uc3RyYWludEZ1bmN0aW9uVHlwZVtdLFxuICAgIHN0ZXBEaXJlY3Rpb246IG51bWJlcltdXG4gICk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuIHRoaXMucGFyYW1ldGVycy5sZWFybmluZ1JhdGU7XG4gICAgXG4gICAgY29uc3QgYzEgPSAxZS00OyAvLyBBcm1pam8gY29uc3RhbnRcbiAgICBsZXQgYWxwaGEgPSB0aGlzLnBhcmFtZXRlcnMubGVhcm5pbmdSYXRlO1xuICAgIGNvbnN0IG1heEJhY2t0cmFjayA9IDIwO1xuICAgIFxuICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IHRoaXMuY3VycmVudFN0YXRlLmZ1bmN0aW9uVmFsdWU7XG4gICAgY29uc3QgZ3JhZGllbnREb3REaXJlY3Rpb24gPSB0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudC5yZWR1Y2UoKHN1bSwgZywgaSkgPT4gc3VtICsgZyAqIHN0ZXBEaXJlY3Rpb25baV0sIDApO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF4QmFja3RyYWNrOyBpKyspIHtcbiAgICAgIC8vIFRlc3Qgc3RlcFxuICAgICAgY29uc3QgdGVzdFZhcmlhYmxlcyA9IHRoaXMuY3JlYXRlVGVzdFZhcmlhYmxlcyhwcm9ibGVtLCBzdGVwRGlyZWN0aW9uLCBhbHBoYSk7XG4gICAgICBjb25zdCB0ZXN0VmFsdWUgPSBvYmplY3RpdmVGdW5jdGlvbih0ZXN0VmFyaWFibGVzKTtcbiAgICAgIHRoaXMuZXZhbHVhdGlvbkNvdW50Kys7XG4gICAgICBcbiAgICAgIC8vIEFybWlqbyBjb25kaXRpb25cbiAgICAgIGlmICh0ZXN0VmFsdWUgPD0gY3VycmVudFZhbHVlIC0gYzEgKiBhbHBoYSAqIGdyYWRpZW50RG90RGlyZWN0aW9uKSB7XG4gICAgICAgIHJldHVybiBhbHBoYTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgYWxwaGEgKj0gMC41OyAvLyBCYWNrdHJhY2tcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGFscGhhO1xuICB9XG5cbiAgLyoqXG4gICAqIFdvbGZlIGxpbmUgc2VhcmNoIChzaW1wbGlmaWVkKVxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyB3b2xmZUxpbmVTZWFyY2goXG4gICAgcHJvYmxlbTogT3B0aW1pemF0aW9uUHJvYmxlbSxcbiAgICBvYmplY3RpdmVGdW5jdGlvbjogT2JqZWN0aXZlRnVuY3Rpb25UeXBlLFxuICAgIGNvbnN0cmFpbnRGdW5jdGlvbnM6IENvbnN0cmFpbnRGdW5jdGlvblR5cGVbXSxcbiAgICBzdGVwRGlyZWN0aW9uOiBudW1iZXJbXVxuICApOiBQcm9taXNlPG51bWJlcj4ge1xuICAgIC8vIFNpbXBsaWZpZWQgaW1wbGVtZW50YXRpb24gLSB1c2UgQXJtaWpvIGZvciBub3dcbiAgICByZXR1cm4gdGhpcy5hcm1pam9MaW5lU2VhcmNoKHByb2JsZW0sIG9iamVjdGl2ZUZ1bmN0aW9uLCBjb25zdHJhaW50RnVuY3Rpb25zLCBzdGVwRGlyZWN0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHb2xkZW4gc2VjdGlvbiBsaW5lIHNlYXJjaFxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBnb2xkZW5TZWN0aW9uTGluZVNlYXJjaChcbiAgICBwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtLFxuICAgIG9iamVjdGl2ZUZ1bmN0aW9uOiBPYmplY3RpdmVGdW5jdGlvblR5cGUsXG4gICAgY29uc3RyYWludEZ1bmN0aW9uczogQ29uc3RyYWludEZ1bmN0aW9uVHlwZVtdLFxuICAgIHN0ZXBEaXJlY3Rpb246IG51bWJlcltdXG4gICk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgY29uc3QgcGhpID0gKDEgKyBNYXRoLnNxcnQoNSkpIC8gMjsgLy8gR29sZGVuIHJhdGlvXG4gICAgY29uc3QgcmVzcGhpID0gMiAtIHBoaTtcbiAgICBcbiAgICBsZXQgYSA9IDA7XG4gICAgbGV0IGIgPSB0aGlzLnBhcmFtZXRlcnMubGVhcm5pbmdSYXRlICogMjtcbiAgICBjb25zdCB0b2wgPSAxZS02O1xuICAgIFxuICAgIC8vIEZpbmQgaW5pdGlhbCBicmFja2V0XG4gICAgbGV0IHgxID0gYSArIHJlc3BoaSAqIChiIC0gYSk7XG4gICAgbGV0IHgyID0gYSArICgxIC0gcmVzcGhpKSAqIChiIC0gYSk7XG4gICAgXG4gICAgbGV0IGYxID0gdGhpcy5ldmFsdWF0ZUF0U3RlcChwcm9ibGVtLCBvYmplY3RpdmVGdW5jdGlvbiwgc3RlcERpcmVjdGlvbiwgeDEpO1xuICAgIGxldCBmMiA9IHRoaXMuZXZhbHVhdGVBdFN0ZXAocHJvYmxlbSwgb2JqZWN0aXZlRnVuY3Rpb24sIHN0ZXBEaXJlY3Rpb24sIHgyKTtcbiAgICBcbiAgICB3aGlsZSAoTWF0aC5hYnMoYiAtIGEpID4gdG9sKSB7XG4gICAgICBpZiAoZjEgPCBmMikge1xuICAgICAgICBiID0geDI7XG4gICAgICAgIHgyID0geDE7XG4gICAgICAgIGYyID0gZjE7XG4gICAgICAgIHgxID0gYSArIHJlc3BoaSAqIChiIC0gYSk7XG4gICAgICAgIGYxID0gdGhpcy5ldmFsdWF0ZUF0U3RlcChwcm9ibGVtLCBvYmplY3RpdmVGdW5jdGlvbiwgc3RlcERpcmVjdGlvbiwgeDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYSA9IHgxO1xuICAgICAgICB4MSA9IHgyO1xuICAgICAgICBmMSA9IGYyO1xuICAgICAgICB4MiA9IGEgKyAoMSAtIHJlc3BoaSkgKiAoYiAtIGEpO1xuICAgICAgICBmMiA9IHRoaXMuZXZhbHVhdGVBdFN0ZXAocHJvYmxlbSwgb2JqZWN0aXZlRnVuY3Rpb24sIHN0ZXBEaXJlY3Rpb24sIHgyKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIChhICsgYikgLyAyO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSB0ZXN0IHZhcmlhYmxlcyBmb3IgbGluZSBzZWFyY2hcbiAgICovXG4gIHByaXZhdGUgY3JlYXRlVGVzdFZhcmlhYmxlcyhwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtLCBzdGVwRGlyZWN0aW9uOiBudW1iZXJbXSwgYWxwaGE6IG51bWJlcik6IE9wdGltaXphdGlvblZhcmlhYmxlW10ge1xuICAgIGlmICghdGhpcy5jdXJyZW50U3RhdGUpIHJldHVybiBbXTtcbiAgICBcbiAgICByZXR1cm4gcHJvYmxlbS52YXJpYWJsZXMubWFwKCh2YXJpYWJsZSwgaSkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudFZhbHVlID0gdGhpcy5jdXJyZW50U3RhdGUhLnNvbHV0aW9uLnZhcmlhYmxlc1t2YXJpYWJsZS5pZF07XG4gICAgICBcbiAgICAgIGlmICh0eXBlb2YgY3VycmVudFZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGN1cnJlbnRWYWx1ZSAtIGFscGhhICogc3RlcERpcmVjdGlvbltpXTtcbiAgICAgICAgY29uc3QgbWluID0gdHlwZW9mIHZhcmlhYmxlLmJvdW5kcy5taW5pbXVtID09PSAnbnVtYmVyJyA/IHZhcmlhYmxlLmJvdW5kcy5taW5pbXVtIDogLUluZmluaXR5O1xuICAgICAgICBjb25zdCBtYXggPSB0eXBlb2YgdmFyaWFibGUuYm91bmRzLm1heGltdW0gPT09ICdudW1iZXInID8gdmFyaWFibGUuYm91bmRzLm1heGltdW0gOiBJbmZpbml0eTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4udmFyaWFibGUsXG4gICAgICAgICAgY3VycmVudFZhbHVlOiBNYXRoLm1heChtaW4sIE1hdGgubWluKG1heCwgbmV3VmFsdWUpKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi52YXJpYWJsZSxcbiAgICAgICAgICBjdXJyZW50VmFsdWVcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFdmFsdWF0ZSBmdW5jdGlvbiBhdCBzcGVjaWZpYyBzdGVwIHNpemVcbiAgICovXG4gIHByaXZhdGUgZXZhbHVhdGVBdFN0ZXAoXG4gICAgcHJvYmxlbTogT3B0aW1pemF0aW9uUHJvYmxlbSxcbiAgICBvYmplY3RpdmVGdW5jdGlvbjogT2JqZWN0aXZlRnVuY3Rpb25UeXBlLFxuICAgIHN0ZXBEaXJlY3Rpb246IG51bWJlcltdLFxuICAgIGFscGhhOiBudW1iZXJcbiAgKTogbnVtYmVyIHtcbiAgICBjb25zdCB0ZXN0VmFyaWFibGVzID0gdGhpcy5jcmVhdGVUZXN0VmFyaWFibGVzKHByb2JsZW0sIHN0ZXBEaXJlY3Rpb24sIGFscGhhKTtcbiAgICB0aGlzLmV2YWx1YXRpb25Db3VudCsrO1xuICAgIHJldHVybiBvYmplY3RpdmVGdW5jdGlvbih0ZXN0VmFyaWFibGVzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9qZWN0IHNvbHV0aW9uIG9udG8gZmVhc2libGUgcmVnaW9uXG4gICAqL1xuICBwcml2YXRlIHByb2plY3RTb2x1dGlvbihwcm9ibGVtOiBPcHRpbWl6YXRpb25Qcm9ibGVtKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuO1xuICAgIFxuICAgIC8vIFNpbXBsZSBib3ggY29uc3RyYWludCBwcm9qZWN0aW9uXG4gICAgY29uc3QgcHJvamVjdGVkVmFyaWFibGVzOiB7IFt2YXJpYWJsZUlkOiBzdHJpbmddOiBudW1iZXIgfCBzdHJpbmcgfSA9IHt9O1xuICAgIFxuICAgIGZvciAoY29uc3QgdmFyaWFibGUgb2YgcHJvYmxlbS52YXJpYWJsZXMpIHtcbiAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IHRoaXMuY3VycmVudFN0YXRlLnNvbHV0aW9uLnZhcmlhYmxlc1t2YXJpYWJsZS5pZF07XG4gICAgICBcbiAgICAgIGlmICh0eXBlb2YgY3VycmVudFZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICBjb25zdCBtaW4gPSB0eXBlb2YgdmFyaWFibGUuYm91bmRzLm1pbmltdW0gPT09ICdudW1iZXInID8gdmFyaWFibGUuYm91bmRzLm1pbmltdW0gOiAtSW5maW5pdHk7XG4gICAgICAgIGNvbnN0IG1heCA9IHR5cGVvZiB2YXJpYWJsZS5ib3VuZHMubWF4aW11bSA9PT0gJ251bWJlcicgPyB2YXJpYWJsZS5ib3VuZHMubWF4aW11bSA6IEluZmluaXR5O1xuICAgICAgICBwcm9qZWN0ZWRWYXJpYWJsZXNbdmFyaWFibGUuaWRdID0gTWF0aC5tYXgobWluLCBNYXRoLm1pbihtYXgsIGN1cnJlbnRWYWx1ZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvamVjdGVkVmFyaWFibGVzW3ZhcmlhYmxlLmlkXSA9IGN1cnJlbnRWYWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgdGhpcy5jdXJyZW50U3RhdGUuc29sdXRpb24udmFyaWFibGVzID0gcHJvamVjdGVkVmFyaWFibGVzO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkYXB0IGxlYXJuaW5nIHJhdGUgYmFzZWQgb24gcHJvZ3Jlc3NcbiAgICovXG4gIHByaXZhdGUgYWRhcHRMZWFybmluZ1JhdGUoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuO1xuICAgIFxuICAgIC8vIFNpbXBsZSBhZGFwdGl2ZSBzY2hlbWUgYmFzZWQgb24gZ3JhZGllbnQgbm9ybVxuICAgIGlmICh0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudE5vcm0gPiAxLjApIHtcbiAgICAgIC8vIExhcmdlIGdyYWRpZW50IC0gZGVjcmVhc2UgbGVhcm5pbmcgcmF0ZVxuICAgICAgdGhpcy5jdXJyZW50U3RhdGUubGVhcm5pbmdSYXRlID0gTWF0aC5tYXgoXG4gICAgICAgIHRoaXMucGFyYW1ldGVycy5sZWFybmluZ1JhdGVNaW4sXG4gICAgICAgIHRoaXMuY3VycmVudFN0YXRlLmxlYXJuaW5nUmF0ZSAqIDAuOVxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudFN0YXRlLmdyYWRpZW50Tm9ybSA8IDAuMSkge1xuICAgICAgLy8gU21hbGwgZ3JhZGllbnQgLSBpbmNyZWFzZSBsZWFybmluZyByYXRlXG4gICAgICB0aGlzLmN1cnJlbnRTdGF0ZS5sZWFybmluZ1JhdGUgPSBNYXRoLm1pbihcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzLmxlYXJuaW5nUmF0ZU1heCxcbiAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUubGVhcm5pbmdSYXRlICogMS4xXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0ZXJtaW5hdGlvbiBjcml0ZXJpYVxuICAgKi9cbiAgcHJpdmF0ZSBzaG91bGRUZXJtaW5hdGUoKTogYm9vbGVhbiB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuIHRydWU7XG4gICAgXG4gICAgLy8gTWF4aW11bSBpdGVyYXRpb25zXG4gICAgaWYgKHRoaXMuY3VycmVudFN0YXRlLml0ZXJhdGlvbiA+PSB0aGlzLnBhcmFtZXRlcnMubWF4SXRlcmF0aW9ucykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIFxuICAgIC8vIEdyYWRpZW50IHRvbGVyYW5jZVxuICAgIGlmICh0aGlzLmN1cnJlbnRTdGF0ZS5ncmFkaWVudE5vcm0gPCB0aGlzLnBhcmFtZXRlcnMuZ3JhZGllbnRUb2xlcmFuY2UpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBcbiAgICAvLyBGdW5jdGlvbiB2YWx1ZSBjb252ZXJnZW5jZVxuICAgIGlmICh0aGlzLmhpc3RvcnkubGVuZ3RoID49IDEwKSB7XG4gICAgICBjb25zdCByZWNlbnRIaXN0b3J5ID0gdGhpcy5oaXN0b3J5LnNsaWNlKC0xMCk7XG4gICAgICBjb25zdCBmdW5jdGlvbkltcHJvdmVtZW50ID0gcmVjZW50SGlzdG9yeVswXS5iZXN0Rml0bmVzcyAtIHJlY2VudEhpc3RvcnlbcmVjZW50SGlzdG9yeS5sZW5ndGggLSAxXS5iZXN0Rml0bmVzcztcbiAgICAgIFxuICAgICAgaWYgKE1hdGguYWJzKGZ1bmN0aW9uSW1wcm92ZW1lbnQpIDwgdGhpcy5wYXJhbWV0ZXJzLmNvbnZlcmdlbmNlVG9sZXJhbmNlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlIG9wdGltaXphdGlvbiBoaXN0b3J5XG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZUhpc3RvcnkoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRTdGF0ZSkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IGhpc3Rvcnk6IEl0ZXJhdGlvbkhpc3RvcnkgPSB7XG4gICAgICBpdGVyYXRpb246IHRoaXMuY3VycmVudFN0YXRlLml0ZXJhdGlvbixcbiAgICAgIGJlc3RGaXRuZXNzOiB0aGlzLmJlc3RTb2x1dGlvbj8uZml0bmVzcyB8fCB0aGlzLmN1cnJlbnRTdGF0ZS5mdW5jdGlvblZhbHVlLFxuICAgICAgYXZlcmFnZUZpdG5lc3M6IHRoaXMuY3VycmVudFN0YXRlLmZ1bmN0aW9uVmFsdWUsXG4gICAgICB3b3JzdEZpdG5lc3M6IHRoaXMuY3VycmVudFN0YXRlLmZ1bmN0aW9uVmFsdWUsXG4gICAgICBkaXZlcnNpdHk6IDAsIC8vIE5vdCBhcHBsaWNhYmxlIGZvciBzaW5nbGUgc29sdXRpb25cbiAgICAgIGNvbnN0cmFpbnRWaW9sYXRpb25zOiB0aGlzLmN1cnJlbnRTdGF0ZS5zb2x1dGlvbi5mZWFzaWJsZSA/IDAgOiAxLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpXG4gICAgfTtcbiAgICBcbiAgICB0aGlzLmhpc3RvcnkucHVzaChoaXN0b3J5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgb3B0aW1pemF0aW9uIHJlc3VsdFxuICAgKi9cbiAgcHJpdmF0ZSBjcmVhdGVPcHRpbWl6YXRpb25SZXN1bHQocHJvYmxlbTogT3B0aW1pemF0aW9uUHJvYmxlbSwgc3RhcnRUaW1lOiBudW1iZXIpOiBPcHRpbWl6YXRpb25SZXN1bHQge1xuICAgIGNvbnN0IGV4ZWN1dGlvblRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBcbiAgICBjb25zdCBzdGF0aXN0aWNzOiBPcHRpbWl6YXRpb25TdGF0aXN0aWNzID0ge1xuICAgICAgdG90YWxJdGVyYXRpb25zOiB0aGlzLmN1cnJlbnRTdGF0ZT8uaXRlcmF0aW9uIHx8IDAsXG4gICAgICB0b3RhbEV2YWx1YXRpb25zOiB0aGlzLmV2YWx1YXRpb25Db3VudCxcbiAgICAgIGNvbnZlcmdlbmNlSXRlcmF0aW9uOiB0aGlzLmN1cnJlbnRTdGF0ZT8uaXRlcmF0aW9uIHx8IDAsXG4gICAgICBleGVjdXRpb25UaW1lLFxuICAgICAgYmVzdEZpdG5lc3NIaXN0b3J5OiB0aGlzLmhpc3RvcnkubWFwKGggPT4gaC5iZXN0Rml0bmVzcyksXG4gICAgICBhdmVyYWdlRml0bmVzc0hpc3Rvcnk6IHRoaXMuaGlzdG9yeS5tYXAoaCA9PiBoLmF2ZXJhZ2VGaXRuZXNzKSxcbiAgICAgIGRpdmVyc2l0eUhpc3Rvcnk6IHRoaXMuaGlzdG9yeS5tYXAoaCA9PiBoLmRpdmVyc2l0eSksXG4gICAgICBjb25zdHJhaW50VmlvbGF0aW9uSGlzdG9yeTogdGhpcy5oaXN0b3J5Lm1hcChoID0+IGguY29uc3RyYWludFZpb2xhdGlvbnMpLFxuICAgICAgYWxnb3JpdGhtU3BlY2lmaWNTdGF0czoge1xuICAgICAgICB2YXJpYW50OiB0aGlzLnBhcmFtZXRlcnMudmFyaWFudCxcbiAgICAgICAgZmluYWxMZWFybmluZ1JhdGU6IHRoaXMuY3VycmVudFN0YXRlPy5sZWFybmluZ1JhdGUgfHwgMCxcbiAgICAgICAgZmluYWxHcmFkaWVudE5vcm06IHRoaXMuY3VycmVudFN0YXRlPy5ncmFkaWVudE5vcm0gfHwgMCxcbiAgICAgICAgZmluYWxTdGVwU2l6ZTogdGhpcy5jdXJyZW50U3RhdGU/LnN0ZXBTaXplIHx8IDBcbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IG9wdGltaXphdGlvbkhpc3Rvcnk6IE9wdGltaXphdGlvbkhpc3RvcnkgPSB7XG4gICAgICBpdGVyYXRpb25zOiB0aGlzLmhpc3RvcnksXG4gICAgICBwb3B1bGF0aW9uSGlzdG9yeTogW10sXG4gICAgICBwYXJhbWV0ZXJIaXN0b3J5OiBbXSxcbiAgICAgIGNvbnZlcmdlbmNlTWV0cmljczogW11cbiAgICB9O1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBwcm9ibGVtSWQ6IHByb2JsZW0uaWQsXG4gICAgICBzdGF0dXM6IE9wdGltaXphdGlvblN0YXR1cy5DT05WRVJHRUQsXG4gICAgICBiZXN0U29sdXRpb246IHRoaXMuYmVzdFNvbHV0aW9uISxcbiAgICAgIHN0YXRpc3RpY3MsXG4gICAgICBoaXN0b3J5OiBvcHRpbWl6YXRpb25IaXN0b3J5LFxuICAgICAgYW5hbHlzaXM6IHt9LFxuICAgICAgcmVjb21tZW5kYXRpb25zOiBbXSxcbiAgICAgIHdhcm5pbmdzOiBbXSxcbiAgICAgIGVycm9yczogW11cbiAgICB9O1xuICB9XG5cbiAgLy8gVXRpbGl0eSBtZXRob2RzXG4gIHByaXZhdGUgZ2VuZXJhdGVTb2x1dGlvbklkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBnZF9zb2xfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVTZWVkZWRSYW5kb20oc2VlZDogbnVtYmVyKTogKCkgPT4gbnVtYmVyIHtcbiAgICBsZXQgc3RhdGUgPSBzZWVkO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdGF0ZSA9IChzdGF0ZSAqIDkzMDEgKyA0OTI5NykgJSAyMzMyODA7XG4gICAgICByZXR1cm4gc3RhdGUgLyAyMzMyODA7XG4gICAgfTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lB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