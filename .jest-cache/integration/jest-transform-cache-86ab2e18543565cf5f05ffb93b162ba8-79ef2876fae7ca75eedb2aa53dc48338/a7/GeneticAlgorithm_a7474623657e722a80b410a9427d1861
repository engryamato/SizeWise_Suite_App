f79bd77f90ba0f342d7f3ea9bfc061da
"use strict";

/**
 * Genetic Algorithm Implementation for System Optimization
 *
 * Implements genetic algorithm optimization with:
 * - Multi-objective optimization support (NSGA-II)
 * - Configurable selection, crossover, and mutation operators
 * - Constraint handling with penalty methods
 * - Elitism and diversity preservation
 * - Parallel evaluation support
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_zeioaqpul() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GeneticAlgorithm.ts";
  var hash = "e95c30f89b897e30c8fa69a26d14154120c39feb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GeneticAlgorithm.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "2": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 77
        }
      },
      "3": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "6": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "9": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "10": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 77
        }
      },
      "11": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 38
        }
      },
      "12": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "13": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 58,
          column: 43
        }
      },
      "14": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "15": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "16": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 96
        }
      },
      "17": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "18": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 93
        }
      },
      "19": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 37
        }
      },
      "20": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "21": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "22": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 69
        }
      },
      "23": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 24
        }
      },
      "25": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 28
        }
      },
      "26": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 33
        }
      },
      "27": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 29
        }
      },
      "28": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "29": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "30": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 26
        }
      },
      "31": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 110
        }
      },
      "32": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 29
        }
      },
      "33": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "34": {
        start: {
          line: 97,
          column: 21
        },
        end: {
          line: 97,
          column: 22
        }
      },
      "35": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 98,
          column: 67
        }
      },
      "36": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 103
        }
      },
      "37": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "38": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 36
        }
      },
      "39": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 33
        }
      },
      "40": {
        start: {
          line: 109,
          column: 22
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "41": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "42": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "43": {
        start: {
          line: 113,
          column: 36
        },
        end: {
          line: 113,
          column: 94
        }
      },
      "44": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "45": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 101
        }
      },
      "46": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 119,
          column: 101
        }
      },
      "47": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 120,
          column: 63
        }
      },
      "48": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 34
        }
      },
      "49": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "50": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "51": {
        start: {
          line: 140,
          column: 30
        },
        end: {
          line: 140,
          column: 88
        }
      },
      "52": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "53": {
        start: {
          line: 144,
          column: 39
        },
        end: {
          line: 144,
          column: 67
        }
      },
      "54": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 62
        }
      },
      "55": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 52
        }
      },
      "56": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 48
        }
      },
      "57": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "58": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 73
        }
      },
      "59": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 59
        }
      },
      "60": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 39
        }
      },
      "61": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 49
        }
      },
      "62": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "63": {
        start: {
          line: 161,
          column: 34
        },
        end: {
          line: 161,
          column: 63
        }
      },
      "64": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 64
        }
      },
      "65": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 85
        }
      },
      "66": {
        start: {
          line: 165,
          column: 77
        },
        end: {
          line: 165,
          column: 83
        }
      },
      "67": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "68": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 170,
          column: 88
        }
      },
      "69": {
        start: {
          line: 169,
          column: 33
        },
        end: {
          line: 169,
          column: 38
        }
      },
      "70": {
        start: {
          line: 170,
          column: 40
        },
        end: {
          line: 170,
          column: 47
        }
      },
      "71": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 177,
          column: 17
        }
      },
      "72": {
        start: {
          line: 172,
          column: 20
        },
        end: {
          line: 172,
          column: 50
        }
      },
      "73": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 98
        }
      },
      "74": {
        start: {
          line: 176,
          column: 85
        },
        end: {
          line: 176,
          column: 96
        }
      },
      "75": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "76": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 65
        }
      },
      "77": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 50
        }
      },
      "78": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 40
        }
      },
      "79": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 194,
          column: 12
        }
      },
      "80": {
        start: {
          line: 191,
          column: 59
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "81": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 40
        }
      },
      "82": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 203,
          column: 28
        }
      },
      "83": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "84": {
        start: {
          line: 204,
          column: 21
        },
        end: {
          line: 204,
          column: 22
        }
      },
      "85": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 205,
          column: 38
        }
      },
      "86": {
        start: {
          line: 206,
          column: 28
        },
        end: {
          line: 206,
          column: 56
        }
      },
      "87": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 207,
          column: 50
        }
      },
      "88": {
        start: {
          line: 208,
          column: 25
        },
        end: {
          line: 208,
          column: 50
        }
      },
      "89": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "90": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 77
        }
      },
      "91": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "92": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 54
        }
      },
      "93": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "94": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 54
        }
      },
      "95": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 43
        }
      },
      "96": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "97": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 98
        }
      },
      "98": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 36
        }
      },
      "99": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 64
        }
      },
      "100": {
        start: {
          line: 229,
          column: 46
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "101": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 26
        }
      },
      "102": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 36
        }
      },
      "103": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 33
        }
      },
      "104": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "105": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 50
        }
      },
      "106": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 53
        }
      },
      "107": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 44
        }
      },
      "108": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 46
        }
      },
      "109": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 50
        }
      },
      "110": {
        start: {
          line: 255,
          column: 25
        },
        end: {
          line: 255,
          column: 27
        }
      },
      "111": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 66
        }
      },
      "112": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "113": {
        start: {
          line: 257,
          column: 21
        },
        end: {
          line: 257,
          column: 22
        }
      },
      "114": {
        start: {
          line: 258,
          column: 31
        },
        end: {
          line: 258,
          column: 33
        }
      },
      "115": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "116": {
        start: {
          line: 259,
          column: 25
        },
        end: {
          line: 259,
          column: 26
        }
      },
      "117": {
        start: {
          line: 260,
          column: 36
        },
        end: {
          line: 260,
          column: 86
        }
      },
      "118": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 62
        }
      },
      "119": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 61
        }
      },
      "120": {
        start: {
          line: 264,
          column: 38
        },
        end: {
          line: 264,
          column: 59
        }
      },
      "121": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 41
        }
      },
      "122": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 24
        }
      },
      "123": {
        start: {
          line: 273,
          column: 25
        },
        end: {
          line: 273,
          column: 27
        }
      },
      "124": {
        start: {
          line: 275,
          column: 27
        },
        end: {
          line: 275,
          column: 79
        }
      },
      "125": {
        start: {
          line: 275,
          column: 66
        },
        end: {
          line: 275,
          column: 77
        }
      },
      "126": {
        start: {
          line: 276,
          column: 32
        },
        end: {
          line: 276,
          column: 88
        }
      },
      "127": {
        start: {
          line: 276,
          column: 59
        },
        end: {
          line: 276,
          column: 87
        }
      },
      "128": {
        start: {
          line: 277,
          column: 29
        },
        end: {
          line: 277,
          column: 87
        }
      },
      "129": {
        start: {
          line: 277,
          column: 70
        },
        end: {
          line: 277,
          column: 83
        }
      },
      "130": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "131": {
        start: {
          line: 278,
          column: 21
        },
        end: {
          line: 278,
          column: 22
        }
      },
      "132": {
        start: {
          line: 279,
          column: 32
        },
        end: {
          line: 279,
          column: 60
        }
      },
      "133": {
        start: {
          line: 280,
          column: 36
        },
        end: {
          line: 280,
          column: 37
        }
      },
      "134": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "135": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 26
        }
      },
      "136": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 56
        }
      },
      "137": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 286,
          column: 17
        }
      },
      "138": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 54
        }
      },
      "139": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 26
        }
      },
      "140": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 24
        }
      },
      "141": {
        start: {
          line: 295,
          column: 25
        },
        end: {
          line: 295,
          column: 27
        }
      },
      "142": {
        start: {
          line: 297,
          column: 33
        },
        end: {
          line: 297,
          column: 91
        }
      },
      "143": {
        start: {
          line: 297,
          column: 69
        },
        end: {
          line: 297,
          column: 90
        }
      },
      "144": {
        start: {
          line: 299,
          column: 22
        },
        end: {
          line: 299,
          column: 67
        }
      },
      "145": {
        start: {
          line: 299,
          column: 57
        },
        end: {
          line: 299,
          column: 66
        }
      },
      "146": {
        start: {
          line: 300,
          column: 26
        },
        end: {
          line: 300,
          column: 68
        }
      },
      "147": {
        start: {
          line: 300,
          column: 54
        },
        end: {
          line: 300,
          column: 64
        }
      },
      "148": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "149": {
        start: {
          line: 301,
          column: 21
        },
        end: {
          line: 301,
          column: 22
        }
      },
      "150": {
        start: {
          line: 302,
          column: 32
        },
        end: {
          line: 302,
          column: 57
        }
      },
      "151": {
        start: {
          line: 303,
          column: 33
        },
        end: {
          line: 303,
          column: 34
        }
      },
      "152": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "153": {
        start: {
          line: 304,
          column: 25
        },
        end: {
          line: 304,
          column: 26
        }
      },
      "154": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 43
        }
      },
      "155": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 309,
          column: 17
        }
      },
      "156": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 55
        }
      },
      "157": {
        start: {
          line: 308,
          column: 20
        },
        end: {
          line: 308,
          column: 26
        }
      },
      "158": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 24
        }
      },
      "159": {
        start: {
          line: 318,
          column: 25
        },
        end: {
          line: 318,
          column: 27
        }
      },
      "160": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "161": {
        start: {
          line: 319,
          column: 21
        },
        end: {
          line: 319,
          column: 22
        }
      },
      "162": {
        start: {
          line: 320,
          column: 32
        },
        end: {
          line: 320,
          column: 82
        }
      },
      "163": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 56
        }
      },
      "164": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 24
        }
      },
      "165": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "166": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 67
        }
      },
      "167": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 64
        }
      },
      "168": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 63
        }
      },
      "169": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 66
        }
      },
      "170": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 64
        }
      },
      "171": {
        start: {
          line: 346,
          column: 31
        },
        end: {
          line: 346,
          column: 79
        }
      },
      "172": {
        start: {
          line: 347,
          column: 23
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "173": {
        start: {
          line: 348,
          column: 23
        },
        end: {
          line: 348,
          column: 48
        }
      },
      "174": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 352,
          column: 10
        }
      },
      "175": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 356,
          column: 10
        }
      },
      "176": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 32
        }
      },
      "177": {
        start: {
          line: 363,
          column: 23
        },
        end: {
          line: 363,
          column: 71
        }
      },
      "178": {
        start: {
          line: 364,
          column: 23
        },
        end: {
          line: 364,
          column: 71
        }
      },
      "179": {
        start: {
          line: 365,
          column: 29
        },
        end: {
          line: 365,
          column: 81
        }
      },
      "180": {
        start: {
          line: 366,
          column: 23
        },
        end: {
          line: 366,
          column: 48
        }
      },
      "181": {
        start: {
          line: 367,
          column: 23
        },
        end: {
          line: 367,
          column: 48
        }
      },
      "182": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 372,
          column: 10
        }
      },
      "183": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 377,
          column: 10
        }
      },
      "184": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 32
        }
      },
      "185": {
        start: {
          line: 384,
          column: 23
        },
        end: {
          line: 384,
          column: 48
        }
      },
      "186": {
        start: {
          line: 385,
          column: 23
        },
        end: {
          line: 385,
          column: 48
        }
      },
      "187": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 109
        }
      },
      "188": {
        start: {
          line: 386,
          column: 58
        },
        end: {
          line: 386,
          column: 107
        }
      },
      "189": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 109
        }
      },
      "190": {
        start: {
          line: 387,
          column: 58
        },
        end: {
          line: 387,
          column: 107
        }
      },
      "191": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 32
        }
      },
      "192": {
        start: {
          line: 394,
          column: 22
        },
        end: {
          line: 394,
          column: 35
        }
      },
      "193": {
        start: {
          line: 395,
          column: 23
        },
        end: {
          line: 395,
          column: 48
        }
      },
      "194": {
        start: {
          line: 396,
          column: 23
        },
        end: {
          line: 396,
          column: 48
        }
      },
      "195": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 402,
          column: 11
        }
      },
      "196": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 400,
          column: 13
        }
      },
      "197": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 73
        }
      },
      "198": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 24
        }
      },
      "199": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 408,
          column: 11
        }
      },
      "200": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 406,
          column: 13
        }
      },
      "201": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 73
        }
      },
      "202": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 24
        }
      },
      "203": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 32
        }
      },
      "204": {
        start: {
          line: 415,
          column: 24
        },
        end: {
          line: 415,
          column: 52
        }
      },
      "205": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "206": {
        start: {
          line: 416,
          column: 21
        },
        end: {
          line: 416,
          column: 22
        }
      },
      "207": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 419,
          column: 13
        }
      },
      "208": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 91
        }
      },
      "209": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 23
        }
      },
      "210": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "211": {
        start: {
          line: 429,
          column: 32
        },
        end: {
          line: 429,
          column: 90
        }
      },
      "212": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 56
        }
      },
      "213": {
        start: {
          line: 432,
          column: 13
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "214": {
        start: {
          line: 434,
          column: 24
        },
        end: {
          line: 434,
          column: 97
        }
      },
      "215": {
        start: {
          line: 435,
          column: 24
        },
        end: {
          line: 435,
          column: 97
        }
      },
      "216": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "217": {
        start: {
          line: 438,
          column: 20
        },
        end: {
          line: 438,
          column: 65
        }
      },
      "218": {
        start: {
          line: 440,
          column: 20
        },
        end: {
          line: 440,
          column: 58
        }
      },
      "219": {
        start: {
          line: 442,
          column: 20
        },
        end: {
          line: 442,
          column: 67
        }
      },
      "220": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 65
        }
      },
      "221": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 20
        }
      },
      "222": {
        start: {
          line: 453,
          column: 22
        },
        end: {
          line: 453,
          column: 39
        }
      },
      "223": {
        start: {
          line: 454,
          column: 24
        },
        end: {
          line: 454,
          column: 61
        }
      },
      "224": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 53
        }
      },
      "225": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 461,
          column: 49
        }
      },
      "226": {
        start: {
          line: 467,
          column: 20
        },
        end: {
          line: 467,
          column: 22
        }
      },
      "227": {
        start: {
          line: 468,
          column: 23
        },
        end: {
          line: 468,
          column: 50
        }
      },
      "228": {
        start: {
          line: 469,
          column: 23
        },
        end: {
          line: 469,
          column: 50
        }
      },
      "229": {
        start: {
          line: 470,
          column: 20
        },
        end: {
          line: 470,
          column: 33
        }
      },
      "230": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "231": {
        start: {
          line: 473,
          column: 23
        },
        end: {
          line: 473,
          column: 35
        }
      },
      "232": {
        start: {
          line: 474,
          column: 24
        },
        end: {
          line: 474,
          column: 79
        }
      },
      "233": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 60
        }
      },
      "234": {
        start: {
          line: 478,
          column: 23
        },
        end: {
          line: 478,
          column: 35
        }
      },
      "235": {
        start: {
          line: 479,
          column: 24
        },
        end: {
          line: 479,
          column: 87
        }
      },
      "236": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 60
        }
      },
      "237": {
        start: {
          line: 482,
          column: 24
        },
        end: {
          line: 482,
          column: 52
        }
      },
      "238": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 53
        }
      },
      "239": {
        start: {
          line: 490,
          column: 25
        },
        end: {
          line: 490,
          column: 59
        }
      },
      "240": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 55
        }
      },
      "241": {
        start: {
          line: 492,
          column: 32
        },
        end: {
          line: 492,
          column: 53
        }
      },
      "242": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 76
        }
      },
      "243": {
        start: {
          line: 500,
          column: 21
        },
        end: {
          line: 500,
          column: 111
        }
      },
      "244": {
        start: {
          line: 500,
          column: 63
        },
        end: {
          line: 500,
          column: 110
        }
      },
      "245": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "246": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 46
        }
      },
      "247": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 71
        }
      },
      "248": {
        start: {
          line: 511,
          column: 57
        },
        end: {
          line: 511,
          column: 69
        }
      },
      "249": {
        start: {
          line: 517,
          column: 35
        },
        end: {
          line: 517,
          column: 78
        }
      },
      "250": {
        start: {
          line: 517,
          column: 65
        },
        end: {
          line: 517,
          column: 77
        }
      },
      "251": {
        start: {
          line: 518,
          column: 26
        },
        end: {
          line: 518,
          column: 68
        }
      },
      "252": {
        start: {
          line: 518,
          column: 56
        },
        end: {
          line: 518,
          column: 67
        }
      },
      "253": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "254": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 45
        }
      },
      "255": {
        start: {
          line: 522,
          column: 24
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "256": {
        start: {
          line: 525,
          column: 57
        },
        end: {
          line: 525,
          column: 64
        }
      },
      "257": {
        start: {
          line: 528,
          column: 64
        },
        end: {
          line: 528,
          column: 77
        }
      },
      "258": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 531,
          column: 35
        }
      },
      "259": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 538,
          column: 21
        }
      },
      "260": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 538,
          column: 21
        }
      },
      "261": {
        start: {
          line: 539,
          column: 28
        },
        end: {
          line: 539,
          column: 29
        }
      },
      "262": {
        start: {
          line: 540,
          column: 24
        },
        end: {
          line: 540,
          column: 25
        }
      },
      "263": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 547,
          column: 9
        }
      },
      "264": {
        start: {
          line: 541,
          column: 21
        },
        end: {
          line: 541,
          column: 22
        }
      },
      "265": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 546,
          column: 13
        }
      },
      "266": {
        start: {
          line: 542,
          column: 25
        },
        end: {
          line: 542,
          column: 30
        }
      },
      "267": {
        start: {
          line: 543,
          column: 33
        },
        end: {
          line: 543,
          column: 95
        }
      },
      "268": {
        start: {
          line: 544,
          column: 16
        },
        end: {
          line: 544,
          column: 42
        }
      },
      "269": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 545,
          column: 28
        }
      },
      "270": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 61
        }
      },
      "271": {
        start: {
          line: 554,
          column: 23
        },
        end: {
          line: 554,
          column: 24
        }
      },
      "272": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 560,
          column: 9
        }
      },
      "273": {
        start: {
          line: 555,
          column: 21
        },
        end: {
          line: 555,
          column: 22
        }
      },
      "274": {
        start: {
          line: 556,
          column: 12
        },
        end: {
          line: 559,
          column: 13
        }
      },
      "275": {
        start: {
          line: 557,
          column: 29
        },
        end: {
          line: 557,
          column: 58
        }
      },
      "276": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 40
        }
      },
      "277": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 561,
          column: 35
        }
      },
      "278": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 570,
          column: 9
        }
      },
      "279": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 569,
          column: 24
        }
      },
      "280": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 578,
          column: 9
        }
      },
      "281": {
        start: {
          line: 573,
          column: 34
        },
        end: {
          line: 573,
          column: 57
        }
      },
      "282": {
        start: {
          line: 574,
          column: 39
        },
        end: {
          line: 574,
          column: 121
        }
      },
      "283": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 577,
          column: 13
        }
      },
      "284": {
        start: {
          line: 576,
          column: 16
        },
        end: {
          line: 576,
          column: 28
        }
      },
      "285": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 579,
          column: 21
        }
      },
      "286": {
        start: {
          line: 586,
          column: 26
        },
        end: {
          line: 586,
          column: 51
        }
      },
      "287": {
        start: {
          line: 587,
          column: 35
        },
        end: {
          line: 587,
          column: 38
        }
      },
      "288": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 593,
          column: 9
        }
      },
      "289": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 589,
          column: 93
        }
      },
      "290": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 592,
          column: 94
        }
      },
      "291": {
        start: {
          line: 599,
          column: 30
        },
        end: {
          line: 599,
          column: 59
        }
      },
      "292": {
        start: {
          line: 601,
          column: 29
        },
        end: {
          line: 610,
          column: 9
        }
      },
      "293": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 620,
          column: 9
        }
      },
      "294": {
        start: {
          line: 613,
          column: 12
        },
        end: {
          line: 615,
          column: 15
        }
      },
      "295": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 614,
          column: 87
        }
      },
      "296": {
        start: {
          line: 617,
          column: 12
        },
        end: {
          line: 619,
          column: 15
        }
      },
      "297": {
        start: {
          line: 618,
          column: 16
        },
        end: {
          line: 618,
          column: 109
        }
      },
      "298": {
        start: {
          line: 621,
          column: 27
        },
        end: {
          line: 635,
          column: 9
        }
      },
      "299": {
        start: {
          line: 626,
          column: 54
        },
        end: {
          line: 626,
          column: 67
        }
      },
      "300": {
        start: {
          line: 627,
          column: 57
        },
        end: {
          line: 627,
          column: 73
        }
      },
      "301": {
        start: {
          line: 628,
          column: 52
        },
        end: {
          line: 628,
          column: 63
        }
      },
      "302": {
        start: {
          line: 629,
          column: 62
        },
        end: {
          line: 629,
          column: 84
        }
      },
      "303": {
        start: {
          line: 636,
          column: 36
        },
        end: {
          line: 641,
          column: 9
        }
      },
      "304": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 653,
          column: 10
        }
      },
      "305": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 665,
          column: 10
        }
      },
      "306": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 668,
          column: 78
        }
      },
      "307": {
        start: {
          line: 671,
          column: 20
        },
        end: {
          line: 671,
          column: 24
        }
      },
      "308": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 675,
          column: 10
        }
      },
      "309": {
        start: {
          line: 673,
          column: 12
        },
        end: {
          line: 673,
          column: 52
        }
      },
      "310": {
        start: {
          line: 674,
          column: 12
        },
        end: {
          line: 674,
          column: 34
        }
      },
      "311": {
        start: {
          line: 679,
          column: 19
        },
        end: {
          line: 679,
          column: 32
        }
      },
      "312": {
        start: {
          line: 680,
          column: 19
        },
        end: {
          line: 680,
          column: 32
        }
      },
      "313": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 681,
          column: 73
        }
      },
      "314": {
        start: {
          line: 684,
          column: 0
        },
        end: {
          line: 684,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 68
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 57
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 83
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 83
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 95
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 36
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 108
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 90
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 137
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 165,
            column: 72
          },
          end: {
            line: 165,
            column: 73
          }
        },
        loc: {
          start: {
            line: 165,
            column: 77
          },
          end: {
            line: 165,
            column: 83
          }
        },
        line: 165
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 169,
            column: 29
          }
        },
        loc: {
          start: {
            line: 169,
            column: 33
          },
          end: {
            line: 169,
            column: 38
          }
        },
        line: 169
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 170,
            column: 28
          },
          end: {
            line: 170,
            column: 29
          }
        },
        loc: {
          start: {
            line: 170,
            column: 40
          },
          end: {
            line: 170,
            column: 47
          }
        },
        line: 170
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 176,
            column: 80
          },
          end: {
            line: 176,
            column: 81
          }
        },
        loc: {
          start: {
            line: 176,
            column: 85
          },
          end: {
            line: 176,
            column: 96
          }
        },
        line: 176
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 47
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 190
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 191,
            column: 38
          }
        },
        loc: {
          start: {
            line: 191,
            column: 59
          },
          end: {
            line: 194,
            column: 9
          }
        },
        line: 191
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 76
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 199
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 229,
            column: 32
          },
          end: {
            line: 229,
            column: 33
          }
        },
        loc: {
          start: {
            line: 229,
            column: 46
          },
          end: {
            line: 229,
            column: 62
          }
        },
        line: 229
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 237
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 26
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 254
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 264,
            column: 28
          },
          end: {
            line: 264,
            column: 29
          }
        },
        loc: {
          start: {
            line: 264,
            column: 38
          },
          end: {
            line: 264,
            column: 59
          }
        },
        line: 264
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 29
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 272
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 275,
            column: 59
          },
          end: {
            line: 275,
            column: 60
          }
        },
        loc: {
          start: {
            line: 275,
            column: 66
          },
          end: {
            line: 275,
            column: 77
          }
        },
        line: 275
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 276,
            column: 52
          },
          end: {
            line: 276,
            column: 53
          }
        },
        loc: {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 276,
            column: 87
          }
        },
        line: 276
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 277,
            column: 52
          },
          end: {
            line: 277,
            column: 53
          }
        },
        loc: {
          start: {
            line: 277,
            column: 70
          },
          end: {
            line: 277,
            column: 83
          }
        },
        line: 277
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 294
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 297,
            column: 59
          },
          end: {
            line: 297,
            column: 60
          }
        },
        loc: {
          start: {
            line: 297,
            column: 69
          },
          end: {
            line: 297,
            column: 90
          }
        },
        line: 297
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 299,
            column: 43
          },
          end: {
            line: 299,
            column: 44
          }
        },
        loc: {
          start: {
            line: 299,
            column: 57
          },
          end: {
            line: 299,
            column: 66
          }
        },
        line: 299
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 300,
            column: 39
          },
          end: {
            line: 300,
            column: 40
          }
        },
        loc: {
          start: {
            line: 300,
            column: 54
          },
          end: {
            line: 300,
            column: 64
          }
        },
        line: 300
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 22
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 317
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 41
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 328
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 43
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 345
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 40
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 362
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        },
        loc: {
          start: {
            line: 383,
            column: 39
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 383
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 386,
            column: 41
          },
          end: {
            line: 386,
            column: 42
          }
        },
        loc: {
          start: {
            line: 386,
            column: 58
          },
          end: {
            line: 386,
            column: 107
          }
        },
        line: 386
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 387,
            column: 41
          },
          end: {
            line: 387,
            column: 42
          }
        },
        loc: {
          start: {
            line: 387,
            column: 58
          },
          end: {
            line: 387,
            column: 107
          }
        },
        line: 387
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 42
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 393
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 397,
            column: 41
          },
          end: {
            line: 397,
            column: 42
          }
        },
        loc: {
          start: {
            line: 397,
            column: 58
          },
          end: {
            line: 402,
            column: 9
          }
        },
        line: 397
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 403,
            column: 41
          },
          end: {
            line: 403,
            column: 42
          }
        },
        loc: {
          start: {
            line: 403,
            column: 58
          },
          end: {
            line: 408,
            column: 9
          }
        },
        line: 403
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        loc: {
          start: {
            line: 414,
            column: 32
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 414
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 31
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 426
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        },
        loc: {
          start: {
            line: 452,
            column: 38
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 452
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        loc: {
          start: {
            line: 460,
            column: 30
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 460
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 466,
            column: 5
          }
        },
        loc: {
          start: {
            line: 466,
            column: 40
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 466
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 27
          },
          end: {
            line: 495,
            column: 5
          }
        },
        line: 488
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 492,
            column: 22
          },
          end: {
            line: 492,
            column: 23
          }
        },
        loc: {
          start: {
            line: 492,
            column: 32
          },
          end: {
            line: 492,
            column: 53
          }
        },
        line: 492
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 499,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        },
        loc: {
          start: {
            line: 499,
            column: 27
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 499
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 500,
            column: 44
          },
          end: {
            line: 500,
            column: 45
          }
        },
        loc: {
          start: {
            line: 500,
            column: 63
          },
          end: {
            line: 500,
            column: 110
          }
        },
        line: 500
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 24
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 508
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 511,
            column: 50
          },
          end: {
            line: 511,
            column: 51
          }
        },
        loc: {
          start: {
            line: 511,
            column: 57
          },
          end: {
            line: 511,
            column: 69
          }
        },
        line: 511
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 20
          },
          end: {
            line: 532,
            column: 5
          }
        },
        line: 516
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 517,
            column: 58
          },
          end: {
            line: 517,
            column: 59
          }
        },
        loc: {
          start: {
            line: 517,
            column: 65
          },
          end: {
            line: 517,
            column: 77
          }
        },
        line: 517
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 518,
            column: 49
          },
          end: {
            line: 518,
            column: 50
          }
        },
        loc: {
          start: {
            line: 518,
            column: 56
          },
          end: {
            line: 518,
            column: 67
          }
        },
        line: 518
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 525,
            column: 45
          },
          end: {
            line: 525,
            column: 46
          }
        },
        loc: {
          start: {
            line: 525,
            column: 57
          },
          end: {
            line: 525,
            column: 64
          }
        },
        line: 525
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 528,
            column: 57
          },
          end: {
            line: 528,
            column: 58
          }
        },
        loc: {
          start: {
            line: 528,
            column: 64
          },
          end: {
            line: 528,
            column: 77
          }
        },
        line: 528
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 5
          }
        },
        loc: {
          start: {
            line: 536,
            column: 25
          },
          end: {
            line: 549,
            column: 5
          }
        },
        line: 536
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 553,
            column: 4
          },
          end: {
            line: 553,
            column: 5
          }
        },
        loc: {
          start: {
            line: 553,
            column: 34
          },
          end: {
            line: 562,
            column: 5
          }
        },
        line: 553
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 566,
            column: 4
          },
          end: {
            line: 566,
            column: 5
          }
        },
        loc: {
          start: {
            line: 566,
            column: 29
          },
          end: {
            line: 580,
            column: 5
          }
        },
        line: 566
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 584,
            column: 4
          },
          end: {
            line: 584,
            column: 5
          }
        },
        loc: {
          start: {
            line: 584,
            column: 22
          },
          end: {
            line: 594,
            column: 5
          }
        },
        line: 584
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 598,
            column: 5
          }
        },
        loc: {
          start: {
            line: 598,
            column: 49
          },
          end: {
            line: 654,
            column: 5
          }
        },
        line: 598
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 613,
            column: 38
          },
          end: {
            line: 613,
            column: 39
          }
        },
        loc: {
          start: {
            line: 613,
            column: 59
          },
          end: {
            line: 615,
            column: 13
          }
        },
        line: 613
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 617,
            column: 50
          },
          end: {
            line: 617,
            column: 51
          }
        },
        loc: {
          start: {
            line: 617,
            column: 72
          },
          end: {
            line: 619,
            column: 13
          }
        },
        line: 617
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 626,
            column: 49
          },
          end: {
            line: 626,
            column: 50
          }
        },
        loc: {
          start: {
            line: 626,
            column: 54
          },
          end: {
            line: 626,
            column: 67
          }
        },
        line: 626
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 627,
            column: 52
          },
          end: {
            line: 627,
            column: 53
          }
        },
        loc: {
          start: {
            line: 627,
            column: 57
          },
          end: {
            line: 627,
            column: 73
          }
        },
        line: 627
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 628,
            column: 47
          },
          end: {
            line: 628,
            column: 48
          }
        },
        loc: {
          start: {
            line: 628,
            column: 52
          },
          end: {
            line: 628,
            column: 63
          }
        },
        line: 628
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 629,
            column: 57
          },
          end: {
            line: 629,
            column: 58
          }
        },
        loc: {
          start: {
            line: 629,
            column: 62
          },
          end: {
            line: 629,
            column: 84
          }
        },
        line: 629
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 656,
            column: 4
          },
          end: {
            line: 656,
            column: 5
          }
        },
        loc: {
          start: {
            line: 656,
            column: 24
          },
          end: {
            line: 666,
            column: 5
          }
        },
        line: 656
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 667,
            column: 4
          },
          end: {
            line: 667,
            column: 5
          }
        },
        loc: {
          start: {
            line: 667,
            column: 27
          },
          end: {
            line: 669,
            column: 5
          }
        },
        line: 667
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 670,
            column: 4
          },
          end: {
            line: 670,
            column: 5
          }
        },
        loc: {
          start: {
            line: 670,
            column: 29
          },
          end: {
            line: 676,
            column: 5
          }
        },
        line: 670
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 672,
            column: 15
          },
          end: {
            line: 672,
            column: 16
          }
        },
        loc: {
          start: {
            line: 672,
            column: 21
          },
          end: {
            line: 675,
            column: 9
          }
        },
        line: 672
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 677,
            column: 4
          },
          end: {
            line: 677,
            column: 5
          }
        },
        loc: {
          start: {
            line: 677,
            column: 21
          },
          end: {
            line: 682,
            column: 5
          }
        },
        line: 677
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: 49,
            column: 13
          },
          end: {
            line: 51,
            column: 9
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 122,
            column: 13
          }
        }],
        line: 111
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 39
          }
        }, {
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 111,
            column: 77
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 28
          },
          end: {
            line: 118,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 74
          },
          end: {
            line: 118,
            column: 97
          }
        }, {
          start: {
            line: 118,
            column: 100
          },
          end: {
            line: 118,
            column: 101
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 74
          },
          end: {
            line: 119,
            column: 97
          }
        }, {
          start: {
            line: 119,
            column: 100
          },
          end: {
            line: 119,
            column: 101
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: 148,
            column: 17
          },
          end: {
            line: 157,
            column: 13
          }
        }],
        line: 142
      },
      "7": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "8": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 36
          }
        }, {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 167,
            column: 88
          }
        }],
        line: 167
      },
      "9": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 177,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 177,
            column: 17
          }
        }, {
          start: {
            line: 174,
            column: 21
          },
          end: {
            line: 177,
            column: 17
          }
        }],
        line: 171
      },
      "10": {
        loc: {
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 206,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 206,
            column: 42
          }
        }, {
          start: {
            line: 206,
            column: 46
          },
          end: {
            line: 206,
            column: 56
          }
        }],
        line: 206
      },
      "11": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "12": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "13": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "14": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 240,
            column: 50
          }
        }, {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 242,
            column: 53
          }
        }, {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 244,
            column: 44
          }
        }, {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 246,
            column: 46
          }
        }, {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 248,
            column: 50
          }
        }],
        line: 238
      },
      "15": {
        loc: {
          start: {
            line: 256,
            column: 31
          },
          end: {
            line: 256,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 31
          },
          end: {
            line: 256,
            column: 61
          }
        }, {
          start: {
            line: 256,
            column: 65
          },
          end: {
            line: 256,
            column: 66
          }
        }],
        line: 256
      },
      "16": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 286,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 286,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "17": {
        loc: {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 309,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 309,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "18": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 331,
            column: 67
          }
        }, {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 333,
            column: 64
          }
        }, {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 335,
            column: 63
          }
        }, {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 337,
            column: 66
          }
        }, {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 339,
            column: 64
          }
        }],
        line: 329
      },
      "19": {
        loc: {
          start: {
            line: 386,
            column: 58
          },
          end: {
            line: 386,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 386,
            column: 80
          },
          end: {
            line: 386,
            column: 84
          }
        }, {
          start: {
            line: 386,
            column: 87
          },
          end: {
            line: 386,
            column: 107
          }
        }],
        line: 386
      },
      "20": {
        loc: {
          start: {
            line: 387,
            column: 58
          },
          end: {
            line: 387,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 80
          },
          end: {
            line: 387,
            column: 84
          }
        }, {
          start: {
            line: 387,
            column: 87
          },
          end: {
            line: 387,
            column: 107
          }
        }],
        line: 387
      },
      "21": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 400,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 400,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "22": {
        loc: {
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 398,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 398,
            column: 40
          }
        }, {
          start: {
            line: 398,
            column: 44
          },
          end: {
            line: 398,
            column: 84
          }
        }],
        line: 398
      },
      "23": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 406,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 406,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "24": {
        loc: {
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 404,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 404,
            column: 40
          }
        }, {
          start: {
            line: 404,
            column: 44
          },
          end: {
            line: 404,
            column: 84
          }
        }],
        line: 404
      },
      "25": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "26": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: 432,
            column: 13
          },
          end: {
            line: 446,
            column: 9
          }
        }],
        line: 427
      },
      "27": {
        loc: {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 35
          }
        }, {
          start: {
            line: 427,
            column: 39
          },
          end: {
            line: 427,
            column: 73
          }
        }],
        line: 427
      },
      "28": {
        loc: {
          start: {
            line: 432,
            column: 13
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 13
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "29": {
        loc: {
          start: {
            line: 434,
            column: 24
          },
          end: {
            line: 434,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 434,
            column: 70
          },
          end: {
            line: 434,
            column: 93
          }
        }, {
          start: {
            line: 434,
            column: 96
          },
          end: {
            line: 434,
            column: 97
          }
        }],
        line: 434
      },
      "30": {
        loc: {
          start: {
            line: 435,
            column: 24
          },
          end: {
            line: 435,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 70
          },
          end: {
            line: 435,
            column: 93
          }
        }, {
          start: {
            line: 435,
            column: 96
          },
          end: {
            line: 435,
            column: 97
          }
        }],
        line: 435
      },
      "31": {
        loc: {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 438,
            column: 65
          }
        }, {
          start: {
            line: 439,
            column: 16
          },
          end: {
            line: 440,
            column: 58
          }
        }, {
          start: {
            line: 441,
            column: 16
          },
          end: {
            line: 442,
            column: 67
          }
        }, {
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 444,
            column: 65
          }
        }],
        line: 436
      },
      "32": {
        loc: {
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: 477,
            column: 13
          },
          end: {
            line: 481,
            column: 9
          }
        }],
        line: 472
      },
      "33": {
        loc: {
          start: {
            line: 500,
            column: 63
          },
          end: {
            line: 500,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 500,
            column: 96
          },
          end: {
            line: 500,
            column: 103
          }
        }, {
          start: {
            line: 500,
            column: 106
          },
          end: {
            line: 500,
            column: 110
          }
        }],
        line: 500
      },
      "34": {
        loc: {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 501
      },
      "35": {
        loc: {
          start: {
            line: 501,
            column: 12
          },
          end: {
            line: 501,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 12
          },
          end: {
            line: 501,
            column: 32
          }
        }, {
          start: {
            line: 501,
            column: 36
          },
          end: {
            line: 501,
            column: 78
          }
        }],
        line: 501
      },
      "36": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "37": {
        loc: {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 538,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 538,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "38": {
        loc: {
          start: {
            line: 548,
            column: 15
          },
          end: {
            line: 548,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 548,
            column: 31
          },
          end: {
            line: 548,
            column: 56
          }
        }, {
          start: {
            line: 548,
            column: 59
          },
          end: {
            line: 548,
            column: 60
          }
        }],
        line: 548
      },
      "39": {
        loc: {
          start: {
            line: 556,
            column: 12
          },
          end: {
            line: 559,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 12
          },
          end: {
            line: 559,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      },
      "40": {
        loc: {
          start: {
            line: 556,
            column: 16
          },
          end: {
            line: 556,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 556,
            column: 16
          },
          end: {
            line: 556,
            column: 49
          }
        }, {
          start: {
            line: 556,
            column: 53
          },
          end: {
            line: 556,
            column: 86
          }
        }],
        line: 556
      },
      "41": {
        loc: {
          start: {
            line: 568,
            column: 8
          },
          end: {
            line: 570,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 568,
            column: 8
          },
          end: {
            line: 570,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 568
      },
      "42": {
        loc: {
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 578,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 578,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 572
      },
      "43": {
        loc: {
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 577,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 577,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 575
      },
      "44": {
        loc: {
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 593,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 593,
            column: 9
          }
        }, {
          start: {
            line: 591,
            column: 13
          },
          end: {
            line: 593,
            column: 9
          }
        }],
        line: 588
      },
      "45": {
        loc: {
          start: {
            line: 602,
            column: 16
          },
          end: {
            line: 602,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 602,
            column: 16
          },
          end: {
            line: 602,
            column: 39
          }
        }, {
          start: {
            line: 602,
            column: 43
          },
          end: {
            line: 602,
            column: 56
          }
        }],
        line: 602
      },
      "46": {
        loc: {
          start: {
            line: 606,
            column: 22
          },
          end: {
            line: 606,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 606,
            column: 22
          },
          end: {
            line: 606,
            column: 51
          }
        }, {
          start: {
            line: 606,
            column: 55
          },
          end: {
            line: 606,
            column: 60
          }
        }],
        line: 606
      },
      "47": {
        loc: {
          start: {
            line: 607,
            column: 21
          },
          end: {
            line: 607,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 607,
            column: 21
          },
          end: {
            line: 607,
            column: 49
          }
        }, {
          start: {
            line: 607,
            column: 53
          },
          end: {
            line: 607,
            column: 69
          }
        }],
        line: 607
      },
      "48": {
        loc: {
          start: {
            line: 612,
            column: 8
          },
          end: {
            line: 620,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 612,
            column: 8
          },
          end: {
            line: 620,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 612
      },
      "49": {
        loc: {
          start: {
            line: 618,
            column: 61
          },
          end: {
            line: 618,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 618,
            column: 61
          },
          end: {
            line: 618,
            column: 103
          }
        }, {
          start: {
            line: 618,
            column: 107
          },
          end: {
            line: 618,
            column: 108
          }
        }],
        line: 618
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GeneticAlgorithm.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/algorithms/GeneticAlgorithm.ts"],
      sourcesContent: ["/**\n * Genetic Algorithm Implementation for System Optimization\n * \n * Implements genetic algorithm optimization with:\n * - Multi-objective optimization support (NSGA-II)\n * - Configurable selection, crossover, and mutation operators\n * - Constraint handling with penalty methods\n * - Elitism and diversity preservation\n * - Parallel evaluation support\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport {\n  OptimizationSolution,\n  OptimizationVariable,\n  OptimizationProblem,\n  OptimizationResult,\n  OptimizationStatus,\n  OptimizationStatistics,\n  OptimizationHistory,\n  IterationHistory,\n  PopulationSnapshot,\n  SolutionPerformanceMetrics,\n  ObjectiveFunctionType,\n  ConstraintFunctionType,\n  SelectionFunction,\n  CrossoverFunction,\n  MutationFunction\n} from '../types/SystemOptimizationTypes';\n\nexport interface GeneticAlgorithmParameters {\n  populationSize: number;\n  maxGenerations: number;\n  crossoverRate: number;\n  mutationRate: number;\n  eliteSize: number;\n  selectionMethod: 'tournament' | 'roulette' | 'rank' | 'random';\n  crossoverMethod: 'single_point' | 'two_point' | 'uniform' | 'arithmetic';\n  mutationMethod: 'gaussian' | 'uniform' | 'polynomial' | 'adaptive';\n  tournamentSize?: number;\n  diversityMaintenance: boolean;\n  constraintHandling: 'penalty' | 'repair' | 'death_penalty';\n  penaltyCoefficient: number;\n  adaptiveParameters: boolean;\n  parallelEvaluation: boolean;\n  seedValue?: number;\n}\n\nexport interface Individual {\n  id: string;\n  genes: (number | string)[];\n  fitness: number;\n  objectiveValues: number[];\n  constraintViolations: number[];\n  feasible: boolean;\n  dominationRank?: number;\n  crowdingDistance?: number;\n  age: number;\n}\n\n/**\n * Genetic Algorithm optimizer for single and multi-objective optimization\n */\nexport class GeneticAlgorithm {\n  private parameters: GeneticAlgorithmParameters;\n  private population: Individual[];\n  private bestIndividual: Individual | null = null;\n  private paretoFront: Individual[] = [];\n  private generation: number = 0;\n  private evaluationCount: number = 0;\n  private history: IterationHistory[] = [];\n  private random: () => number;\n\n  constructor(parameters?: Partial<GeneticAlgorithmParameters>) {\n    this.parameters = {\n      populationSize: 50,\n      maxGenerations: 100,\n      crossoverRate: 0.8,\n      mutationRate: 0.1,\n      eliteSize: 2,\n      selectionMethod: 'tournament',\n      crossoverMethod: 'two_point',\n      mutationMethod: 'gaussian',\n      tournamentSize: 3,\n      diversityMaintenance: true,\n      constraintHandling: 'penalty',\n      penaltyCoefficient: 1000,\n      adaptiveParameters: true,\n      parallelEvaluation: false,\n      ...parameters\n    };\n\n    // Initialize random number generator\n    if (this.parameters.seedValue !== undefined) {\n      this.random = this.createSeededRandom(this.parameters.seedValue);\n    } else {\n      this.random = Math.random;\n    }\n\n    this.population = [];\n  }\n\n  /**\n   * Main optimization method\n   */\n  public async optimize(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<OptimizationResult> {\n    const startTime = performance.now();\n    \n    try {\n      // Initialize algorithm\n      this.initializeAlgorithm(problem);\n      \n      // Create initial population\n      await this.createInitialPopulation(problem, objectiveFunction, constraintFunctions);\n      \n      // Evolution loop\n      while (!this.shouldTerminate(problem)) {\n        await this.evolveGeneration(problem, objectiveFunction, constraintFunctions);\n        this.updateHistory();\n        \n        if (this.parameters.adaptiveParameters) {\n          this.adaptParameters();\n        }\n      }\n      \n      // Create final result\n      return this.createOptimizationResult(problem, startTime);\n      \n    } catch (error) {\n      console.error('Genetic algorithm optimization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize algorithm state\n   */\n  private initializeAlgorithm(problem: OptimizationProblem): void {\n    this.generation = 0;\n    this.evaluationCount = 0;\n    this.population = [];\n    this.bestIndividual = null;\n    this.paretoFront = [];\n    this.history = [];\n    \n    console.log(`Initializing Genetic Algorithm with population size: ${this.parameters.populationSize}`);\n  }\n\n  /**\n   * Create initial population\n   */\n  private async createInitialPopulation(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    this.population = [];\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const individual = this.createRandomIndividual(problem);\n      await this.evaluateIndividual(individual, problem, objectiveFunction, constraintFunctions);\n      this.population.push(individual);\n    }\n    \n    this.updateBestIndividual();\n    this.updateParetoFront();\n  }\n\n  /**\n   * Create a random individual\n   */\n  private createRandomIndividual(problem: OptimizationProblem): Individual {\n    const genes: (number | string)[] = [];\n    \n    for (const variable of problem.variables) {\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\n        // Discrete variable\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n        genes.push(variable.discreteValues[randomIndex]);\n      } else {\n        // Continuous variable\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n        const value = min + this.random() * (max - min);\n        genes.push(value);\n      }\n    }\n    \n    return {\n      id: this.generateIndividualId(),\n      genes,\n      fitness: 0,\n      objectiveValues: [],\n      constraintViolations: [],\n      feasible: true,\n      age: 0\n    };\n  }\n\n  /**\n   * Evaluate individual fitness\n   */\n  private async evaluateIndividual(\n    individual: Individual,\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    try {\n      // Convert genes to optimization variables\n      const variables = this.genesToVariables(individual.genes, problem.variables);\n      \n      // Evaluate objectives\n      if (problem.objectives.objectives.length === 1) {\n        // Single objective\n        const objectiveValue = objectiveFunction(variables);\n        individual.objectiveValues = [objectiveValue];\n        individual.fitness = objectiveValue;\n      } else {\n        // Multi-objective - evaluate each objective separately\n        individual.objectiveValues = [];\n        for (const objective of problem.objectives.objectives) {\n          const value = objective.evaluationFunction(variables);\n          individual.objectiveValues.push(value);\n        }\n        // Fitness will be calculated during Pareto ranking\n        individual.fitness = 0;\n      }\n      \n      // Evaluate constraints\n      individual.constraintViolations = [];\n      for (const constraintFunction of constraintFunctions) {\n        const violation = constraintFunction(variables);\n        individual.constraintViolations.push(violation);\n      }\n      \n      // Check feasibility\n      individual.feasible = individual.constraintViolations.every(v => v <= 0);\n      \n      // Apply constraint handling\n      if (!individual.feasible && this.parameters.constraintHandling === 'penalty') {\n        const penalty = individual.constraintViolations\n          .filter(v => v > 0)\n          .reduce((sum, v) => sum + v, 0) * this.parameters.penaltyCoefficient;\n        \n        if (problem.objectives.objectives.length === 1) {\n          individual.fitness += penalty;\n        } else {\n          // Add penalty to all objectives for multi-objective\n          individual.objectiveValues = individual.objectiveValues.map(v => v + penalty);\n        }\n      }\n      \n      this.evaluationCount++;\n      \n    } catch (error) {\n      console.error('Error evaluating individual:', error);\n      individual.fitness = Number.MAX_VALUE;\n      individual.feasible = false;\n    }\n  }\n\n  /**\n   * Convert genes to optimization variables\n   */\n  private genesToVariables(genes: (number | string)[], variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\n    return variableTemplates.map((template, index) => ({\n      ...template,\n      currentValue: genes[index]\n    }));\n  }\n\n  /**\n   * Evolve one generation\n   */\n  private async evolveGeneration(\n    problem: OptimizationProblem,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[]\n  ): Promise<void> {\n    // Selection\n    const parents = this.selection();\n    \n    // Crossover and mutation\n    const offspring: Individual[] = [];\n    \n    for (let i = 0; i < parents.length; i += 2) {\n      const parent1 = parents[i];\n      const parent2 = parents[i + 1] || parents[0]; // Handle odd population sizes\n      \n      let child1 = this.createChild(parent1);\n      let child2 = this.createChild(parent2);\n      \n      // Crossover\n      if (this.random() < this.parameters.crossoverRate) {\n        [child1, child2] = this.crossover(parent1, parent2, problem);\n      }\n      \n      // Mutation\n      if (this.random() < this.parameters.mutationRate) {\n        child1 = this.mutate(child1, problem);\n      }\n      if (this.random() < this.parameters.mutationRate) {\n        child2 = this.mutate(child2, problem);\n      }\n      \n      offspring.push(child1, child2);\n    }\n    \n    // Evaluate offspring\n    for (const child of offspring) {\n      await this.evaluateIndividual(child, problem, objectiveFunction, constraintFunctions);\n    }\n    \n    // Replacement\n    this.replacement(offspring);\n    \n    // Update age\n    this.population.forEach(individual => individual.age++);\n    \n    this.generation++;\n    this.updateBestIndividual();\n    this.updateParetoFront();\n  }\n\n  /**\n   * Selection operator\n   */\n  private selection(): Individual[] {\n    switch (this.parameters.selectionMethod) {\n      case 'tournament':\n        return this.tournamentSelection();\n      case 'roulette':\n        return this.rouletteWheelSelection();\n      case 'rank':\n        return this.rankSelection();\n      case 'random':\n        return this.randomSelection();\n      default:\n        return this.tournamentSelection();\n    }\n  }\n\n  /**\n   * Tournament selection\n   */\n  private tournamentSelection(): Individual[] {\n    const selected: Individual[] = [];\n    const tournamentSize = this.parameters.tournamentSize || 3;\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const tournament: Individual[] = [];\n      \n      for (let j = 0; j < tournamentSize; j++) {\n        const randomIndex = Math.floor(this.random() * this.population.length);\n        tournament.push(this.population[randomIndex]);\n      }\n      \n      // Select best from tournament\n      tournament.sort((a, b) => a.fitness - b.fitness);\n      selected.push(tournament[0]);\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Roulette wheel selection\n   */\n  private rouletteWheelSelection(): Individual[] {\n    const selected: Individual[] = [];\n    \n    // Calculate fitness sum (handle minimization by inverting fitness)\n    const maxFitness = Math.max(...this.population.map(ind => ind.fitness));\n    const adjustedFitness = this.population.map(ind => maxFitness - ind.fitness + 1);\n    const totalFitness = adjustedFitness.reduce((sum, fitness) => sum + fitness, 0);\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const randomValue = this.random() * totalFitness;\n      let cumulativeFitness = 0;\n      \n      for (let j = 0; j < this.population.length; j++) {\n        cumulativeFitness += adjustedFitness[j];\n        if (cumulativeFitness >= randomValue) {\n          selected.push(this.population[j]);\n          break;\n        }\n      }\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Rank selection\n   */\n  private rankSelection(): Individual[] {\n    const selected: Individual[] = [];\n    \n    // Sort population by fitness\n    const sortedPopulation = [...this.population].sort((a, b) => a.fitness - b.fitness);\n    \n    // Assign ranks (best = highest rank)\n    const ranks = sortedPopulation.map((_, index) => index + 1);\n    const totalRank = ranks.reduce((sum, rank) => sum + rank, 0);\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const randomValue = this.random() * totalRank;\n      let cumulativeRank = 0;\n      \n      for (let j = 0; j < ranks.length; j++) {\n        cumulativeRank += ranks[j];\n        if (cumulativeRank >= randomValue) {\n          selected.push(sortedPopulation[j]);\n          break;\n        }\n      }\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Random selection\n   */\n  private randomSelection(): Individual[] {\n    const selected: Individual[] = [];\n    \n    for (let i = 0; i < this.parameters.populationSize; i++) {\n      const randomIndex = Math.floor(this.random() * this.population.length);\n      selected.push(this.population[randomIndex]);\n    }\n    \n    return selected;\n  }\n\n  /**\n   * Crossover operator\n   */\n  private crossover(parent1: Individual, parent2: Individual, problem: OptimizationProblem): [Individual, Individual] {\n    switch (this.parameters.crossoverMethod) {\n      case 'single_point':\n        return this.singlePointCrossover(parent1, parent2);\n      case 'two_point':\n        return this.twoPointCrossover(parent1, parent2);\n      case 'uniform':\n        return this.uniformCrossover(parent1, parent2);\n      case 'arithmetic':\n        return this.arithmeticCrossover(parent1, parent2);\n      default:\n        return this.twoPointCrossover(parent1, parent2);\n    }\n  }\n\n  /**\n   * Single point crossover\n   */\n  private singlePointCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const crossoverPoint = Math.floor(this.random() * parent1.genes.length);\n    \n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = [\n      ...parent1.genes.slice(0, crossoverPoint),\n      ...parent2.genes.slice(crossoverPoint)\n    ];\n    \n    child2.genes = [\n      ...parent2.genes.slice(0, crossoverPoint),\n      ...parent1.genes.slice(crossoverPoint)\n    ];\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Two point crossover\n   */\n  private twoPointCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const point1 = Math.floor(this.random() * parent1.genes.length);\n    const point2 = Math.floor(this.random() * parent1.genes.length);\n    const [start, end] = [Math.min(point1, point2), Math.max(point1, point2)];\n    \n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = [\n      ...parent1.genes.slice(0, start),\n      ...parent2.genes.slice(start, end),\n      ...parent1.genes.slice(end)\n    ];\n    \n    child2.genes = [\n      ...parent2.genes.slice(0, start),\n      ...parent1.genes.slice(start, end),\n      ...parent2.genes.slice(end)\n    ];\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Uniform crossover\n   */\n  private uniformCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = parent1.genes.map((gene, index) => \n      this.random() < 0.5 ? gene : parent2.genes[index]\n    );\n    \n    child2.genes = parent2.genes.map((gene, index) => \n      this.random() < 0.5 ? gene : parent1.genes[index]\n    );\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Arithmetic crossover (for continuous variables)\n   */\n  private arithmeticCrossover(parent1: Individual, parent2: Individual): [Individual, Individual] {\n    const alpha = this.random();\n    \n    const child1 = this.createChild(parent1);\n    const child2 = this.createChild(parent2);\n    \n    child1.genes = parent1.genes.map((gene, index) => {\n      if (typeof gene === 'number' && typeof parent2.genes[index] === 'number') {\n        return alpha * gene + (1 - alpha) * (parent2.genes[index] as number);\n      }\n      return gene;\n    });\n    \n    child2.genes = parent2.genes.map((gene, index) => {\n      if (typeof gene === 'number' && typeof parent1.genes[index] === 'number') {\n        return alpha * gene + (1 - alpha) * (parent1.genes[index] as number);\n      }\n      return gene;\n    });\n    \n    return [child1, child2];\n  }\n\n  /**\n   * Mutation operator\n   */\n  private mutate(individual: Individual, problem: OptimizationProblem): Individual {\n    const mutated = this.createChild(individual);\n    \n    for (let i = 0; i < mutated.genes.length; i++) {\n      if (this.random() < this.parameters.mutationRate) {\n        mutated.genes[i] = this.mutateGene(mutated.genes[i], problem.variables[i]);\n      }\n    }\n    \n    return mutated;\n  }\n\n  /**\n   * Mutate a single gene\n   */\n  private mutateGene(gene: number | string, variable: OptimizationVariable): number | string {\n    if (variable.discreteValues && variable.discreteValues.length > 0) {\n      // Discrete variable - random selection\n      const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\n      return variable.discreteValues[randomIndex];\n    } else if (typeof gene === 'number') {\n      // Continuous variable\n      const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\n      const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\n      \n      switch (this.parameters.mutationMethod) {\n        case 'gaussian':\n          return this.gaussianMutation(gene, min, max);\n        case 'uniform':\n          return this.uniformMutation(min, max);\n        case 'polynomial':\n          return this.polynomialMutation(gene, min, max);\n        default:\n          return this.gaussianMutation(gene, min, max);\n      }\n    }\n    \n    return gene;\n  }\n\n  /**\n   * Gaussian mutation\n   */\n  private gaussianMutation(value: number, min: number, max: number): number {\n    const sigma = (max - min) * 0.1; // 10% of range\n    const mutated = value + this.gaussianRandom() * sigma;\n    return Math.max(min, Math.min(max, mutated));\n  }\n\n  /**\n   * Uniform mutation\n   */\n  private uniformMutation(min: number, max: number): number {\n    return min + this.random() * (max - min);\n  }\n\n  /**\n   * Polynomial mutation\n   */\n  private polynomialMutation(value: number, min: number, max: number): number {\n    const eta = 20; // Distribution index\n    const delta1 = (value - min) / (max - min);\n    const delta2 = (max - value) / (max - min);\n    const rnd = this.random();\n    \n    let deltaq: number;\n    if (rnd <= 0.5) {\n      const xy = 1.0 - delta1;\n      const val = 2.0 * rnd + (1.0 - 2.0 * rnd) * Math.pow(xy, eta + 1.0);\n      deltaq = Math.pow(val, 1.0 / (eta + 1.0)) - 1.0;\n    } else {\n      const xy = 1.0 - delta2;\n      const val = 2.0 * (1.0 - rnd) + 2.0 * (rnd - 0.5) * Math.pow(xy, eta + 1.0);\n      deltaq = 1.0 - Math.pow(val, 1.0 / (eta + 1.0));\n    }\n    \n    const mutated = value + deltaq * (max - min);\n    return Math.max(min, Math.min(max, mutated));\n  }\n\n  /**\n   * Replacement strategy\n   */\n  private replacement(offspring: Individual[]): void {\n    // Combine population and offspring\n    const combined = [...this.population, ...offspring];\n    \n    // Sort by fitness\n    combined.sort((a, b) => a.fitness - b.fitness);\n    \n    // Keep best individuals (elitism)\n    this.population = combined.slice(0, this.parameters.populationSize);\n  }\n\n  /**\n   * Update best individual\n   */\n  private updateBestIndividual(): void {\n    const best = this.population.reduce((best, current) => \n      current.fitness < best.fitness ? current : best\n    );\n    \n    if (!this.bestIndividual || best.fitness < this.bestIndividual.fitness) {\n      this.bestIndividual = { ...best };\n    }\n  }\n\n  /**\n   * Update Pareto front for multi-objective optimization\n   */\n  private updateParetoFront(): void {\n    // Implementation for Pareto front calculation\n    // This is a simplified version - full NSGA-II implementation would be more complex\n    this.paretoFront = this.population.filter(ind => ind.feasible);\n  }\n\n  /**\n   * Update optimization history\n   */\n  private updateHistory(): void {\n    const feasiblePopulation = this.population.filter(ind => ind.feasible);\n    const fitnesses = feasiblePopulation.map(ind => ind.fitness);\n    \n    if (fitnesses.length === 0) {\n      fitnesses.push(Number.MAX_VALUE);\n    }\n    \n    const history: IterationHistory = {\n      iteration: this.generation,\n      bestFitness: Math.min(...fitnesses),\n      averageFitness: fitnesses.reduce((sum, f) => sum + f, 0) / fitnesses.length,\n      worstFitness: Math.max(...fitnesses),\n      diversity: this.calculateDiversity(),\n      constraintViolations: this.population.filter(ind => !ind.feasible).length,\n      timestamp: new Date()\n    };\n    \n    this.history.push(history);\n  }\n\n  /**\n   * Calculate population diversity\n   */\n  private calculateDiversity(): number {\n    if (this.population.length < 2) return 0;\n    \n    let totalDistance = 0;\n    let pairCount = 0;\n    \n    for (let i = 0; i < this.population.length; i++) {\n      for (let j = i + 1; j < this.population.length; j++) {\n        const distance = this.calculateDistance(this.population[i], this.population[j]);\n        totalDistance += distance;\n        pairCount++;\n      }\n    }\n    \n    return pairCount > 0 ? totalDistance / pairCount : 0;\n  }\n\n  /**\n   * Calculate distance between two individuals\n   */\n  private calculateDistance(ind1: Individual, ind2: Individual): number {\n    let distance = 0;\n    \n    for (let i = 0; i < ind1.genes.length; i++) {\n      if (typeof ind1.genes[i] === 'number' && typeof ind2.genes[i] === 'number') {\n        const diff = (ind1.genes[i] as number) - (ind2.genes[i] as number);\n        distance += diff * diff;\n      }\n    }\n    \n    return Math.sqrt(distance);\n  }\n\n  /**\n   * Check termination criteria\n   */\n  private shouldTerminate(problem: OptimizationProblem): boolean {\n    // Maximum generations\n    if (this.generation >= this.parameters.maxGenerations) {\n      return true;\n    }\n    \n    // Convergence check\n    if (this.history.length >= 10) {\n      const recentHistory = this.history.slice(-10);\n      const fitnessImprovement = recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness;\n      \n      if (Math.abs(fitnessImprovement) < problem.convergenceCriteria.toleranceValue) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n\n  /**\n   * Adapt algorithm parameters during evolution\n   */\n  private adaptParameters(): void {\n    // Adaptive mutation rate based on diversity\n    const diversity = this.calculateDiversity();\n    const diversityThreshold = 0.1;\n    \n    if (diversity < diversityThreshold) {\n      this.parameters.mutationRate = Math.min(0.5, this.parameters.mutationRate * 1.1);\n    } else {\n      this.parameters.mutationRate = Math.max(0.01, this.parameters.mutationRate * 0.9);\n    }\n  }\n\n  /**\n   * Create optimization result\n   */\n  private createOptimizationResult(problem: OptimizationProblem, startTime: number): OptimizationResult {\n    const executionTime = performance.now() - startTime;\n    \n    // Convert best individual to optimization solution\n    const bestSolution: OptimizationSolution = {\n      id: this.bestIndividual?.id || 'no_solution',\n      variables: {},\n      objectiveValues: {},\n      constraintViolations: [],\n      feasible: this.bestIndividual?.feasible || false,\n      fitness: this.bestIndividual?.fitness || Number.MAX_VALUE,\n      systemConfiguration: problem.systemConfiguration, // Would be updated with optimized values\n      performanceMetrics: {} as SolutionPerformanceMetrics\n    };\n    \n    // Convert variables\n    if (this.bestIndividual) {\n      problem.variables.forEach((variable, index) => {\n        bestSolution.variables[variable.id] = this.bestIndividual!.genes[index];\n      });\n      \n      // Convert objectives\n      problem.objectives.objectives.forEach((objective, index) => {\n        bestSolution.objectiveValues[objective.id] = this.bestIndividual!.objectiveValues[index] || 0;\n      });\n    }\n    \n    const statistics: OptimizationStatistics = {\n      totalIterations: this.generation,\n      totalEvaluations: this.evaluationCount,\n      convergenceIteration: this.generation,\n      executionTime,\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\n      diversityHistory: this.history.map(h => h.diversity),\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\n      algorithmSpecificStats: {\n        populationSize: this.parameters.populationSize,\n        finalMutationRate: this.parameters.mutationRate,\n        finalCrossoverRate: this.parameters.crossoverRate\n      }\n    };\n    \n    const optimizationHistory: OptimizationHistory = {\n      iterations: this.history,\n      populationHistory: [],\n      parameterHistory: [],\n      convergenceMetrics: []\n    };\n    \n    return {\n      problemId: problem.id,\n      status: OptimizationStatus.CONVERGED,\n      bestSolution,\n      paretoFront: [], // Would include Pareto solutions for multi-objective\n      statistics,\n      history: optimizationHistory,\n      analysis: {},\n      recommendations: [],\n      warnings: [],\n      errors: []\n    };\n  }\n\n  // Utility methods\n  private createChild(parent: Individual): Individual {\n    return {\n      id: this.generateIndividualId(),\n      genes: [...parent.genes],\n      fitness: 0,\n      objectiveValues: [],\n      constraintViolations: [],\n      feasible: true,\n      age: 0\n    };\n  }\n\n  private generateIndividualId(): string {\n    return `ind_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private createSeededRandom(seed: number): () => number {\n    let state = seed;\n    return () => {\n      state = (state * 9301 + 49297) % 233280;\n      return state / 233280;\n    };\n  }\n\n  private gaussianRandom(): number {\n    // Box-Muller transform for Gaussian random numbers\n    const u1 = this.random();\n    const u2 = this.random();\n    return Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e95c30f89b897e30c8fa69a26d14154120c39feb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zeioaqpul = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zeioaqpul();
cov_zeioaqpul().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zeioaqpul().s[1]++;
exports.GeneticAlgorithm = void 0;
const SystemOptimizationTypes_1 =
/* istanbul ignore next */
(cov_zeioaqpul().s[2]++, require("../types/SystemOptimizationTypes"));
/**
 * Genetic Algorithm optimizer for single and multi-objective optimization
 */
class GeneticAlgorithm {
  constructor(parameters) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[0]++;
    cov_zeioaqpul().s[3]++;
    this.bestIndividual = null;
    /* istanbul ignore next */
    cov_zeioaqpul().s[4]++;
    this.paretoFront = [];
    /* istanbul ignore next */
    cov_zeioaqpul().s[5]++;
    this.generation = 0;
    /* istanbul ignore next */
    cov_zeioaqpul().s[6]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_zeioaqpul().s[7]++;
    this.history = [];
    /* istanbul ignore next */
    cov_zeioaqpul().s[8]++;
    this.parameters = {
      populationSize: 50,
      maxGenerations: 100,
      crossoverRate: 0.8,
      mutationRate: 0.1,
      eliteSize: 2,
      selectionMethod: 'tournament',
      crossoverMethod: 'two_point',
      mutationMethod: 'gaussian',
      tournamentSize: 3,
      diversityMaintenance: true,
      constraintHandling: 'penalty',
      penaltyCoefficient: 1000,
      adaptiveParameters: true,
      parallelEvaluation: false,
      ...parameters
    };
    // Initialize random number generator
    /* istanbul ignore next */
    cov_zeioaqpul().s[9]++;
    if (this.parameters.seedValue !== undefined) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[0][0]++;
      cov_zeioaqpul().s[10]++;
      this.random = this.createSeededRandom(this.parameters.seedValue);
    } else {
      /* istanbul ignore next */
      cov_zeioaqpul().b[0][1]++;
      cov_zeioaqpul().s[11]++;
      this.random = Math.random;
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[12]++;
    this.population = [];
  }
  /**
   * Main optimization method
   */
  async optimize(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[13]++, performance.now());
    /* istanbul ignore next */
    cov_zeioaqpul().s[14]++;
    try {
      /* istanbul ignore next */
      cov_zeioaqpul().s[15]++;
      // Initialize algorithm
      this.initializeAlgorithm(problem);
      // Create initial population
      /* istanbul ignore next */
      cov_zeioaqpul().s[16]++;
      await this.createInitialPopulation(problem, objectiveFunction, constraintFunctions);
      // Evolution loop
      /* istanbul ignore next */
      cov_zeioaqpul().s[17]++;
      while (!this.shouldTerminate(problem)) {
        /* istanbul ignore next */
        cov_zeioaqpul().s[18]++;
        await this.evolveGeneration(problem, objectiveFunction, constraintFunctions);
        /* istanbul ignore next */
        cov_zeioaqpul().s[19]++;
        this.updateHistory();
        /* istanbul ignore next */
        cov_zeioaqpul().s[20]++;
        if (this.parameters.adaptiveParameters) {
          /* istanbul ignore next */
          cov_zeioaqpul().b[1][0]++;
          cov_zeioaqpul().s[21]++;
          this.adaptParameters();
        } else
        /* istanbul ignore next */
        {
          cov_zeioaqpul().b[1][1]++;
        }
      }
      // Create final result
      /* istanbul ignore next */
      cov_zeioaqpul().s[22]++;
      return this.createOptimizationResult(problem, startTime);
    } catch (error) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[23]++;
      console.error('Genetic algorithm optimization failed:', error);
      /* istanbul ignore next */
      cov_zeioaqpul().s[24]++;
      throw error;
    }
  }
  /**
   * Initialize algorithm state
   */
  initializeAlgorithm(problem) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[2]++;
    cov_zeioaqpul().s[25]++;
    this.generation = 0;
    /* istanbul ignore next */
    cov_zeioaqpul().s[26]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_zeioaqpul().s[27]++;
    this.population = [];
    /* istanbul ignore next */
    cov_zeioaqpul().s[28]++;
    this.bestIndividual = null;
    /* istanbul ignore next */
    cov_zeioaqpul().s[29]++;
    this.paretoFront = [];
    /* istanbul ignore next */
    cov_zeioaqpul().s[30]++;
    this.history = [];
    /* istanbul ignore next */
    cov_zeioaqpul().s[31]++;
    console.log(`Initializing Genetic Algorithm with population size: ${this.parameters.populationSize}`);
  }
  /**
   * Create initial population
   */
  async createInitialPopulation(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[3]++;
    cov_zeioaqpul().s[32]++;
    this.population = [];
    /* istanbul ignore next */
    cov_zeioaqpul().s[33]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[34]++, 0); i < this.parameters.populationSize; i++) {
      const individual =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[35]++, this.createRandomIndividual(problem));
      /* istanbul ignore next */
      cov_zeioaqpul().s[36]++;
      await this.evaluateIndividual(individual, problem, objectiveFunction, constraintFunctions);
      /* istanbul ignore next */
      cov_zeioaqpul().s[37]++;
      this.population.push(individual);
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[38]++;
    this.updateBestIndividual();
    /* istanbul ignore next */
    cov_zeioaqpul().s[39]++;
    this.updateParetoFront();
  }
  /**
   * Create a random individual
   */
  createRandomIndividual(problem) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[4]++;
    const genes =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[40]++, []);
    /* istanbul ignore next */
    cov_zeioaqpul().s[41]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_zeioaqpul().b[3][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_zeioaqpul().b[3][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[2][0]++;
        // Discrete variable
        const randomIndex =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[43]++, Math.floor(this.random() * variable.discreteValues.length));
        /* istanbul ignore next */
        cov_zeioaqpul().s[44]++;
        genes.push(variable.discreteValues[randomIndex]);
      } else {
        /* istanbul ignore next */
        cov_zeioaqpul().b[2][1]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[45]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_zeioaqpul().b[4][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_zeioaqpul().b[4][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[46]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_zeioaqpul().b[5][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_zeioaqpul().b[5][1]++, 1));
        const value =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[47]++, min + this.random() * (max - min));
        /* istanbul ignore next */
        cov_zeioaqpul().s[48]++;
        genes.push(value);
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[49]++;
    return {
      id: this.generateIndividualId(),
      genes,
      fitness: 0,
      objectiveValues: [],
      constraintViolations: [],
      feasible: true,
      age: 0
    };
  }
  /**
   * Evaluate individual fitness
   */
  async evaluateIndividual(individual, problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[5]++;
    cov_zeioaqpul().s[50]++;
    try {
      // Convert genes to optimization variables
      const variables =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[51]++, this.genesToVariables(individual.genes, problem.variables));
      // Evaluate objectives
      /* istanbul ignore next */
      cov_zeioaqpul().s[52]++;
      if (problem.objectives.objectives.length === 1) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[6][0]++;
        // Single objective
        const objectiveValue =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[53]++, objectiveFunction(variables));
        /* istanbul ignore next */
        cov_zeioaqpul().s[54]++;
        individual.objectiveValues = [objectiveValue];
        /* istanbul ignore next */
        cov_zeioaqpul().s[55]++;
        individual.fitness = objectiveValue;
      } else {
        /* istanbul ignore next */
        cov_zeioaqpul().b[6][1]++;
        cov_zeioaqpul().s[56]++;
        // Multi-objective - evaluate each objective separately
        individual.objectiveValues = [];
        /* istanbul ignore next */
        cov_zeioaqpul().s[57]++;
        for (const objective of problem.objectives.objectives) {
          const value =
          /* istanbul ignore next */
          (cov_zeioaqpul().s[58]++, objective.evaluationFunction(variables));
          /* istanbul ignore next */
          cov_zeioaqpul().s[59]++;
          individual.objectiveValues.push(value);
        }
        // Fitness will be calculated during Pareto ranking
        /* istanbul ignore next */
        cov_zeioaqpul().s[60]++;
        individual.fitness = 0;
      }
      // Evaluate constraints
      /* istanbul ignore next */
      cov_zeioaqpul().s[61]++;
      individual.constraintViolations = [];
      /* istanbul ignore next */
      cov_zeioaqpul().s[62]++;
      for (const constraintFunction of constraintFunctions) {
        const violation =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[63]++, constraintFunction(variables));
        /* istanbul ignore next */
        cov_zeioaqpul().s[64]++;
        individual.constraintViolations.push(violation);
      }
      // Check feasibility
      /* istanbul ignore next */
      cov_zeioaqpul().s[65]++;
      individual.feasible = individual.constraintViolations.every(v => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[6]++;
        cov_zeioaqpul().s[66]++;
        return v <= 0;
      });
      // Apply constraint handling
      /* istanbul ignore next */
      cov_zeioaqpul().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_zeioaqpul().b[8][0]++, !individual.feasible) &&
      /* istanbul ignore next */
      (cov_zeioaqpul().b[8][1]++, this.parameters.constraintHandling === 'penalty')) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[7][0]++;
        const penalty =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[68]++, individual.constraintViolations.filter(v => {
          /* istanbul ignore next */
          cov_zeioaqpul().f[7]++;
          cov_zeioaqpul().s[69]++;
          return v > 0;
        }).reduce((sum, v) => {
          /* istanbul ignore next */
          cov_zeioaqpul().f[8]++;
          cov_zeioaqpul().s[70]++;
          return sum + v;
        }, 0) * this.parameters.penaltyCoefficient);
        /* istanbul ignore next */
        cov_zeioaqpul().s[71]++;
        if (problem.objectives.objectives.length === 1) {
          /* istanbul ignore next */
          cov_zeioaqpul().b[9][0]++;
          cov_zeioaqpul().s[72]++;
          individual.fitness += penalty;
        } else {
          /* istanbul ignore next */
          cov_zeioaqpul().b[9][1]++;
          cov_zeioaqpul().s[73]++;
          // Add penalty to all objectives for multi-objective
          individual.objectiveValues = individual.objectiveValues.map(v => {
            /* istanbul ignore next */
            cov_zeioaqpul().f[9]++;
            cov_zeioaqpul().s[74]++;
            return v + penalty;
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[7][1]++;
      }
      cov_zeioaqpul().s[75]++;
      this.evaluationCount++;
    } catch (error) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[76]++;
      console.error('Error evaluating individual:', error);
      /* istanbul ignore next */
      cov_zeioaqpul().s[77]++;
      individual.fitness = Number.MAX_VALUE;
      /* istanbul ignore next */
      cov_zeioaqpul().s[78]++;
      individual.feasible = false;
    }
  }
  /**
   * Convert genes to optimization variables
   */
  genesToVariables(genes, variableTemplates) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[10]++;
    cov_zeioaqpul().s[79]++;
    return variableTemplates.map((template, index) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[11]++;
      cov_zeioaqpul().s[80]++;
      return {
        ...template,
        currentValue: genes[index]
      };
    });
  }
  /**
   * Evolve one generation
   */
  async evolveGeneration(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[12]++;
    // Selection
    const parents =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[81]++, this.selection());
    // Crossover and mutation
    const offspring =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[82]++, []);
    /* istanbul ignore next */
    cov_zeioaqpul().s[83]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[84]++, 0); i < parents.length; i += 2) {
      const parent1 =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[85]++, parents[i]);
      const parent2 =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[86]++,
      /* istanbul ignore next */
      (cov_zeioaqpul().b[10][0]++, parents[i + 1]) ||
      /* istanbul ignore next */
      (cov_zeioaqpul().b[10][1]++, parents[0])); // Handle odd population sizes
      let child1 =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[87]++, this.createChild(parent1));
      let child2 =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[88]++, this.createChild(parent2));
      // Crossover
      /* istanbul ignore next */
      cov_zeioaqpul().s[89]++;
      if (this.random() < this.parameters.crossoverRate) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[11][0]++;
        cov_zeioaqpul().s[90]++;
        [child1, child2] = this.crossover(parent1, parent2, problem);
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[11][1]++;
      }
      // Mutation
      cov_zeioaqpul().s[91]++;
      if (this.random() < this.parameters.mutationRate) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[12][0]++;
        cov_zeioaqpul().s[92]++;
        child1 = this.mutate(child1, problem);
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[12][1]++;
      }
      cov_zeioaqpul().s[93]++;
      if (this.random() < this.parameters.mutationRate) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[13][0]++;
        cov_zeioaqpul().s[94]++;
        child2 = this.mutate(child2, problem);
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[13][1]++;
      }
      cov_zeioaqpul().s[95]++;
      offspring.push(child1, child2);
    }
    // Evaluate offspring
    /* istanbul ignore next */
    cov_zeioaqpul().s[96]++;
    for (const child of offspring) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[97]++;
      await this.evaluateIndividual(child, problem, objectiveFunction, constraintFunctions);
    }
    // Replacement
    /* istanbul ignore next */
    cov_zeioaqpul().s[98]++;
    this.replacement(offspring);
    // Update age
    /* istanbul ignore next */
    cov_zeioaqpul().s[99]++;
    this.population.forEach(individual => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[13]++;
      cov_zeioaqpul().s[100]++;
      return individual.age++;
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[101]++;
    this.generation++;
    /* istanbul ignore next */
    cov_zeioaqpul().s[102]++;
    this.updateBestIndividual();
    /* istanbul ignore next */
    cov_zeioaqpul().s[103]++;
    this.updateParetoFront();
  }
  /**
   * Selection operator
   */
  selection() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[14]++;
    cov_zeioaqpul().s[104]++;
    switch (this.parameters.selectionMethod) {
      case 'tournament':
        /* istanbul ignore next */
        cov_zeioaqpul().b[14][0]++;
        cov_zeioaqpul().s[105]++;
        return this.tournamentSelection();
      case 'roulette':
        /* istanbul ignore next */
        cov_zeioaqpul().b[14][1]++;
        cov_zeioaqpul().s[106]++;
        return this.rouletteWheelSelection();
      case 'rank':
        /* istanbul ignore next */
        cov_zeioaqpul().b[14][2]++;
        cov_zeioaqpul().s[107]++;
        return this.rankSelection();
      case 'random':
        /* istanbul ignore next */
        cov_zeioaqpul().b[14][3]++;
        cov_zeioaqpul().s[108]++;
        return this.randomSelection();
      default:
        /* istanbul ignore next */
        cov_zeioaqpul().b[14][4]++;
        cov_zeioaqpul().s[109]++;
        return this.tournamentSelection();
    }
  }
  /**
   * Tournament selection
   */
  tournamentSelection() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[15]++;
    const selected =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[110]++, []);
    const tournamentSize =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[111]++,
    /* istanbul ignore next */
    (cov_zeioaqpul().b[15][0]++, this.parameters.tournamentSize) ||
    /* istanbul ignore next */
    (cov_zeioaqpul().b[15][1]++, 3));
    /* istanbul ignore next */
    cov_zeioaqpul().s[112]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[113]++, 0); i < this.parameters.populationSize; i++) {
      const tournament =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[114]++, []);
      /* istanbul ignore next */
      cov_zeioaqpul().s[115]++;
      for (let j =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[116]++, 0); j < tournamentSize; j++) {
        const randomIndex =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[117]++, Math.floor(this.random() * this.population.length));
        /* istanbul ignore next */
        cov_zeioaqpul().s[118]++;
        tournament.push(this.population[randomIndex]);
      }
      // Select best from tournament
      /* istanbul ignore next */
      cov_zeioaqpul().s[119]++;
      tournament.sort((a, b) => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[16]++;
        cov_zeioaqpul().s[120]++;
        return a.fitness - b.fitness;
      });
      /* istanbul ignore next */
      cov_zeioaqpul().s[121]++;
      selected.push(tournament[0]);
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[122]++;
    return selected;
  }
  /**
   * Roulette wheel selection
   */
  rouletteWheelSelection() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[17]++;
    const selected =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[123]++, []);
    // Calculate fitness sum (handle minimization by inverting fitness)
    const maxFitness =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[124]++, Math.max(...this.population.map(ind => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[18]++;
      cov_zeioaqpul().s[125]++;
      return ind.fitness;
    })));
    const adjustedFitness =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[126]++, this.population.map(ind => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[19]++;
      cov_zeioaqpul().s[127]++;
      return maxFitness - ind.fitness + 1;
    }));
    const totalFitness =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[128]++, adjustedFitness.reduce((sum, fitness) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[20]++;
      cov_zeioaqpul().s[129]++;
      return sum + fitness;
    }, 0));
    /* istanbul ignore next */
    cov_zeioaqpul().s[130]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[131]++, 0); i < this.parameters.populationSize; i++) {
      const randomValue =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[132]++, this.random() * totalFitness);
      let cumulativeFitness =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[133]++, 0);
      /* istanbul ignore next */
      cov_zeioaqpul().s[134]++;
      for (let j =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[135]++, 0); j < this.population.length; j++) {
        /* istanbul ignore next */
        cov_zeioaqpul().s[136]++;
        cumulativeFitness += adjustedFitness[j];
        /* istanbul ignore next */
        cov_zeioaqpul().s[137]++;
        if (cumulativeFitness >= randomValue) {
          /* istanbul ignore next */
          cov_zeioaqpul().b[16][0]++;
          cov_zeioaqpul().s[138]++;
          selected.push(this.population[j]);
          /* istanbul ignore next */
          cov_zeioaqpul().s[139]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_zeioaqpul().b[16][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[140]++;
    return selected;
  }
  /**
   * Rank selection
   */
  rankSelection() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[21]++;
    const selected =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[141]++, []);
    // Sort population by fitness
    const sortedPopulation =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[142]++, [...this.population].sort((a, b) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[22]++;
      cov_zeioaqpul().s[143]++;
      return a.fitness - b.fitness;
    }));
    // Assign ranks (best = highest rank)
    const ranks =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[144]++, sortedPopulation.map((_, index) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[23]++;
      cov_zeioaqpul().s[145]++;
      return index + 1;
    }));
    const totalRank =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[146]++, ranks.reduce((sum, rank) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[24]++;
      cov_zeioaqpul().s[147]++;
      return sum + rank;
    }, 0));
    /* istanbul ignore next */
    cov_zeioaqpul().s[148]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[149]++, 0); i < this.parameters.populationSize; i++) {
      const randomValue =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[150]++, this.random() * totalRank);
      let cumulativeRank =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[151]++, 0);
      /* istanbul ignore next */
      cov_zeioaqpul().s[152]++;
      for (let j =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[153]++, 0); j < ranks.length; j++) {
        /* istanbul ignore next */
        cov_zeioaqpul().s[154]++;
        cumulativeRank += ranks[j];
        /* istanbul ignore next */
        cov_zeioaqpul().s[155]++;
        if (cumulativeRank >= randomValue) {
          /* istanbul ignore next */
          cov_zeioaqpul().b[17][0]++;
          cov_zeioaqpul().s[156]++;
          selected.push(sortedPopulation[j]);
          /* istanbul ignore next */
          cov_zeioaqpul().s[157]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_zeioaqpul().b[17][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[158]++;
    return selected;
  }
  /**
   * Random selection
   */
  randomSelection() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[25]++;
    const selected =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[159]++, []);
    /* istanbul ignore next */
    cov_zeioaqpul().s[160]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[161]++, 0); i < this.parameters.populationSize; i++) {
      const randomIndex =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[162]++, Math.floor(this.random() * this.population.length));
      /* istanbul ignore next */
      cov_zeioaqpul().s[163]++;
      selected.push(this.population[randomIndex]);
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[164]++;
    return selected;
  }
  /**
   * Crossover operator
   */
  crossover(parent1, parent2, problem) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[26]++;
    cov_zeioaqpul().s[165]++;
    switch (this.parameters.crossoverMethod) {
      case 'single_point':
        /* istanbul ignore next */
        cov_zeioaqpul().b[18][0]++;
        cov_zeioaqpul().s[166]++;
        return this.singlePointCrossover(parent1, parent2);
      case 'two_point':
        /* istanbul ignore next */
        cov_zeioaqpul().b[18][1]++;
        cov_zeioaqpul().s[167]++;
        return this.twoPointCrossover(parent1, parent2);
      case 'uniform':
        /* istanbul ignore next */
        cov_zeioaqpul().b[18][2]++;
        cov_zeioaqpul().s[168]++;
        return this.uniformCrossover(parent1, parent2);
      case 'arithmetic':
        /* istanbul ignore next */
        cov_zeioaqpul().b[18][3]++;
        cov_zeioaqpul().s[169]++;
        return this.arithmeticCrossover(parent1, parent2);
      default:
        /* istanbul ignore next */
        cov_zeioaqpul().b[18][4]++;
        cov_zeioaqpul().s[170]++;
        return this.twoPointCrossover(parent1, parent2);
    }
  }
  /**
   * Single point crossover
   */
  singlePointCrossover(parent1, parent2) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[27]++;
    const crossoverPoint =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[171]++, Math.floor(this.random() * parent1.genes.length));
    const child1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[172]++, this.createChild(parent1));
    const child2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[173]++, this.createChild(parent2));
    /* istanbul ignore next */
    cov_zeioaqpul().s[174]++;
    child1.genes = [...parent1.genes.slice(0, crossoverPoint), ...parent2.genes.slice(crossoverPoint)];
    /* istanbul ignore next */
    cov_zeioaqpul().s[175]++;
    child2.genes = [...parent2.genes.slice(0, crossoverPoint), ...parent1.genes.slice(crossoverPoint)];
    /* istanbul ignore next */
    cov_zeioaqpul().s[176]++;
    return [child1, child2];
  }
  /**
   * Two point crossover
   */
  twoPointCrossover(parent1, parent2) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[28]++;
    const point1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[177]++, Math.floor(this.random() * parent1.genes.length));
    const point2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[178]++, Math.floor(this.random() * parent1.genes.length));
    const [start, end] =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[179]++, [Math.min(point1, point2), Math.max(point1, point2)]);
    const child1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[180]++, this.createChild(parent1));
    const child2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[181]++, this.createChild(parent2));
    /* istanbul ignore next */
    cov_zeioaqpul().s[182]++;
    child1.genes = [...parent1.genes.slice(0, start), ...parent2.genes.slice(start, end), ...parent1.genes.slice(end)];
    /* istanbul ignore next */
    cov_zeioaqpul().s[183]++;
    child2.genes = [...parent2.genes.slice(0, start), ...parent1.genes.slice(start, end), ...parent2.genes.slice(end)];
    /* istanbul ignore next */
    cov_zeioaqpul().s[184]++;
    return [child1, child2];
  }
  /**
   * Uniform crossover
   */
  uniformCrossover(parent1, parent2) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[29]++;
    const child1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[185]++, this.createChild(parent1));
    const child2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[186]++, this.createChild(parent2));
    /* istanbul ignore next */
    cov_zeioaqpul().s[187]++;
    child1.genes = parent1.genes.map((gene, index) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[30]++;
      cov_zeioaqpul().s[188]++;
      return this.random() < 0.5 ?
      /* istanbul ignore next */
      (cov_zeioaqpul().b[19][0]++, gene) :
      /* istanbul ignore next */
      (cov_zeioaqpul().b[19][1]++, parent2.genes[index]);
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[189]++;
    child2.genes = parent2.genes.map((gene, index) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[31]++;
      cov_zeioaqpul().s[190]++;
      return this.random() < 0.5 ?
      /* istanbul ignore next */
      (cov_zeioaqpul().b[20][0]++, gene) :
      /* istanbul ignore next */
      (cov_zeioaqpul().b[20][1]++, parent1.genes[index]);
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[191]++;
    return [child1, child2];
  }
  /**
   * Arithmetic crossover (for continuous variables)
   */
  arithmeticCrossover(parent1, parent2) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[32]++;
    const alpha =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[192]++, this.random());
    const child1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[193]++, this.createChild(parent1));
    const child2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[194]++, this.createChild(parent2));
    /* istanbul ignore next */
    cov_zeioaqpul().s[195]++;
    child1.genes = parent1.genes.map((gene, index) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[33]++;
      cov_zeioaqpul().s[196]++;
      if (
      /* istanbul ignore next */
      (cov_zeioaqpul().b[22][0]++, typeof gene === 'number') &&
      /* istanbul ignore next */
      (cov_zeioaqpul().b[22][1]++, typeof parent2.genes[index] === 'number')) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[21][0]++;
        cov_zeioaqpul().s[197]++;
        return alpha * gene + (1 - alpha) * parent2.genes[index];
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[21][1]++;
      }
      cov_zeioaqpul().s[198]++;
      return gene;
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[199]++;
    child2.genes = parent2.genes.map((gene, index) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[34]++;
      cov_zeioaqpul().s[200]++;
      if (
      /* istanbul ignore next */
      (cov_zeioaqpul().b[24][0]++, typeof gene === 'number') &&
      /* istanbul ignore next */
      (cov_zeioaqpul().b[24][1]++, typeof parent1.genes[index] === 'number')) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[23][0]++;
        cov_zeioaqpul().s[201]++;
        return alpha * gene + (1 - alpha) * parent1.genes[index];
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[23][1]++;
      }
      cov_zeioaqpul().s[202]++;
      return gene;
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[203]++;
    return [child1, child2];
  }
  /**
   * Mutation operator
   */
  mutate(individual, problem) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[35]++;
    const mutated =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[204]++, this.createChild(individual));
    /* istanbul ignore next */
    cov_zeioaqpul().s[205]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[206]++, 0); i < mutated.genes.length; i++) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[207]++;
      if (this.random() < this.parameters.mutationRate) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[25][0]++;
        cov_zeioaqpul().s[208]++;
        mutated.genes[i] = this.mutateGene(mutated.genes[i], problem.variables[i]);
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[25][1]++;
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[209]++;
    return mutated;
  }
  /**
   * Mutate a single gene
   */
  mutateGene(gene, variable) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[36]++;
    cov_zeioaqpul().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_zeioaqpul().b[27][0]++, variable.discreteValues) &&
    /* istanbul ignore next */
    (cov_zeioaqpul().b[27][1]++, variable.discreteValues.length > 0)) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[26][0]++;
      // Discrete variable - random selection
      const randomIndex =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[211]++, Math.floor(this.random() * variable.discreteValues.length));
      /* istanbul ignore next */
      cov_zeioaqpul().s[212]++;
      return variable.discreteValues[randomIndex];
    } else {
      /* istanbul ignore next */
      cov_zeioaqpul().b[26][1]++;
      cov_zeioaqpul().s[213]++;
      if (typeof gene === 'number') {
        /* istanbul ignore next */
        cov_zeioaqpul().b[28][0]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[214]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_zeioaqpul().b[29][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_zeioaqpul().b[29][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[215]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_zeioaqpul().b[30][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_zeioaqpul().b[30][1]++, 1));
        /* istanbul ignore next */
        cov_zeioaqpul().s[216]++;
        switch (this.parameters.mutationMethod) {
          case 'gaussian':
            /* istanbul ignore next */
            cov_zeioaqpul().b[31][0]++;
            cov_zeioaqpul().s[217]++;
            return this.gaussianMutation(gene, min, max);
          case 'uniform':
            /* istanbul ignore next */
            cov_zeioaqpul().b[31][1]++;
            cov_zeioaqpul().s[218]++;
            return this.uniformMutation(min, max);
          case 'polynomial':
            /* istanbul ignore next */
            cov_zeioaqpul().b[31][2]++;
            cov_zeioaqpul().s[219]++;
            return this.polynomialMutation(gene, min, max);
          default:
            /* istanbul ignore next */
            cov_zeioaqpul().b[31][3]++;
            cov_zeioaqpul().s[220]++;
            return this.gaussianMutation(gene, min, max);
        }
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[28][1]++;
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[221]++;
    return gene;
  }
  /**
   * Gaussian mutation
   */
  gaussianMutation(value, min, max) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[37]++;
    const sigma =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[222]++, (max - min) * 0.1); // 10% of range
    const mutated =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[223]++, value + this.gaussianRandom() * sigma);
    /* istanbul ignore next */
    cov_zeioaqpul().s[224]++;
    return Math.max(min, Math.min(max, mutated));
  }
  /**
   * Uniform mutation
   */
  uniformMutation(min, max) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[38]++;
    cov_zeioaqpul().s[225]++;
    return min + this.random() * (max - min);
  }
  /**
   * Polynomial mutation
   */
  polynomialMutation(value, min, max) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[39]++;
    const eta =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[226]++, 20); // Distribution index
    const delta1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[227]++, (value - min) / (max - min));
    const delta2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[228]++, (max - value) / (max - min));
    const rnd =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[229]++, this.random());
    let deltaq;
    /* istanbul ignore next */
    cov_zeioaqpul().s[230]++;
    if (rnd <= 0.5) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[32][0]++;
      const xy =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[231]++, 1.0 - delta1);
      const val =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[232]++, 2.0 * rnd + (1.0 - 2.0 * rnd) * Math.pow(xy, eta + 1.0));
      /* istanbul ignore next */
      cov_zeioaqpul().s[233]++;
      deltaq = Math.pow(val, 1.0 / (eta + 1.0)) - 1.0;
    } else {
      /* istanbul ignore next */
      cov_zeioaqpul().b[32][1]++;
      const xy =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[234]++, 1.0 - delta2);
      const val =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[235]++, 2.0 * (1.0 - rnd) + 2.0 * (rnd - 0.5) * Math.pow(xy, eta + 1.0));
      /* istanbul ignore next */
      cov_zeioaqpul().s[236]++;
      deltaq = 1.0 - Math.pow(val, 1.0 / (eta + 1.0));
    }
    const mutated =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[237]++, value + deltaq * (max - min));
    /* istanbul ignore next */
    cov_zeioaqpul().s[238]++;
    return Math.max(min, Math.min(max, mutated));
  }
  /**
   * Replacement strategy
   */
  replacement(offspring) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[40]++;
    // Combine population and offspring
    const combined =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[239]++, [...this.population, ...offspring]);
    // Sort by fitness
    /* istanbul ignore next */
    cov_zeioaqpul().s[240]++;
    combined.sort((a, b) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[41]++;
      cov_zeioaqpul().s[241]++;
      return a.fitness - b.fitness;
    });
    // Keep best individuals (elitism)
    /* istanbul ignore next */
    cov_zeioaqpul().s[242]++;
    this.population = combined.slice(0, this.parameters.populationSize);
  }
  /**
   * Update best individual
   */
  updateBestIndividual() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[42]++;
    const best =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[243]++, this.population.reduce((best, current) => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[43]++;
      cov_zeioaqpul().s[244]++;
      return current.fitness < best.fitness ?
      /* istanbul ignore next */
      (cov_zeioaqpul().b[33][0]++, current) :
      /* istanbul ignore next */
      (cov_zeioaqpul().b[33][1]++, best);
    }));
    /* istanbul ignore next */
    cov_zeioaqpul().s[245]++;
    if (
    /* istanbul ignore next */
    (cov_zeioaqpul().b[35][0]++, !this.bestIndividual) ||
    /* istanbul ignore next */
    (cov_zeioaqpul().b[35][1]++, best.fitness < this.bestIndividual.fitness)) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[34][0]++;
      cov_zeioaqpul().s[246]++;
      this.bestIndividual = {
        ...best
      };
    } else
    /* istanbul ignore next */
    {
      cov_zeioaqpul().b[34][1]++;
    }
  }
  /**
   * Update Pareto front for multi-objective optimization
   */
  updateParetoFront() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[44]++;
    cov_zeioaqpul().s[247]++;
    // Implementation for Pareto front calculation
    // This is a simplified version - full NSGA-II implementation would be more complex
    this.paretoFront = this.population.filter(ind => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[45]++;
      cov_zeioaqpul().s[248]++;
      return ind.feasible;
    });
  }
  /**
   * Update optimization history
   */
  updateHistory() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[46]++;
    const feasiblePopulation =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[249]++, this.population.filter(ind => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[47]++;
      cov_zeioaqpul().s[250]++;
      return ind.feasible;
    }));
    const fitnesses =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[251]++, feasiblePopulation.map(ind => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[48]++;
      cov_zeioaqpul().s[252]++;
      return ind.fitness;
    }));
    /* istanbul ignore next */
    cov_zeioaqpul().s[253]++;
    if (fitnesses.length === 0) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[36][0]++;
      cov_zeioaqpul().s[254]++;
      fitnesses.push(Number.MAX_VALUE);
    } else
    /* istanbul ignore next */
    {
      cov_zeioaqpul().b[36][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[255]++, {
      iteration: this.generation,
      bestFitness: Math.min(...fitnesses),
      averageFitness: fitnesses.reduce((sum, f) => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[49]++;
        cov_zeioaqpul().s[256]++;
        return sum + f;
      }, 0) / fitnesses.length,
      worstFitness: Math.max(...fitnesses),
      diversity: this.calculateDiversity(),
      constraintViolations: this.population.filter(ind => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[50]++;
        cov_zeioaqpul().s[257]++;
        return !ind.feasible;
      }).length,
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[258]++;
    this.history.push(history);
  }
  /**
   * Calculate population diversity
   */
  calculateDiversity() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[51]++;
    cov_zeioaqpul().s[259]++;
    if (this.population.length < 2) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[37][0]++;
      cov_zeioaqpul().s[260]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_zeioaqpul().b[37][1]++;
    }
    let totalDistance =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[261]++, 0);
    let pairCount =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[262]++, 0);
    /* istanbul ignore next */
    cov_zeioaqpul().s[263]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[264]++, 0); i < this.population.length; i++) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[265]++;
      for (let j =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[266]++, i + 1); j < this.population.length; j++) {
        const distance =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[267]++, this.calculateDistance(this.population[i], this.population[j]));
        /* istanbul ignore next */
        cov_zeioaqpul().s[268]++;
        totalDistance += distance;
        /* istanbul ignore next */
        cov_zeioaqpul().s[269]++;
        pairCount++;
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[270]++;
    return pairCount > 0 ?
    /* istanbul ignore next */
    (cov_zeioaqpul().b[38][0]++, totalDistance / pairCount) :
    /* istanbul ignore next */
    (cov_zeioaqpul().b[38][1]++, 0);
  }
  /**
   * Calculate distance between two individuals
   */
  calculateDistance(ind1, ind2) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[52]++;
    let distance =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[271]++, 0);
    /* istanbul ignore next */
    cov_zeioaqpul().s[272]++;
    for (let i =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[273]++, 0); i < ind1.genes.length; i++) {
      /* istanbul ignore next */
      cov_zeioaqpul().s[274]++;
      if (
      /* istanbul ignore next */
      (cov_zeioaqpul().b[40][0]++, typeof ind1.genes[i] === 'number') &&
      /* istanbul ignore next */
      (cov_zeioaqpul().b[40][1]++, typeof ind2.genes[i] === 'number')) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[39][0]++;
        const diff =
        /* istanbul ignore next */
        (cov_zeioaqpul().s[275]++, ind1.genes[i] - ind2.genes[i]);
        /* istanbul ignore next */
        cov_zeioaqpul().s[276]++;
        distance += diff * diff;
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[39][1]++;
      }
    }
    /* istanbul ignore next */
    cov_zeioaqpul().s[277]++;
    return Math.sqrt(distance);
  }
  /**
   * Check termination criteria
   */
  shouldTerminate(problem) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[53]++;
    cov_zeioaqpul().s[278]++;
    // Maximum generations
    if (this.generation >= this.parameters.maxGenerations) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[41][0]++;
      cov_zeioaqpul().s[279]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_zeioaqpul().b[41][1]++;
    }
    // Convergence check
    cov_zeioaqpul().s[280]++;
    if (this.history.length >= 10) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[42][0]++;
      const recentHistory =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[281]++, this.history.slice(-10));
      const fitnessImprovement =
      /* istanbul ignore next */
      (cov_zeioaqpul().s[282]++, recentHistory[0].bestFitness - recentHistory[recentHistory.length - 1].bestFitness);
      /* istanbul ignore next */
      cov_zeioaqpul().s[283]++;
      if (Math.abs(fitnessImprovement) < problem.convergenceCriteria.toleranceValue) {
        /* istanbul ignore next */
        cov_zeioaqpul().b[43][0]++;
        cov_zeioaqpul().s[284]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_zeioaqpul().b[43][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_zeioaqpul().b[42][1]++;
    }
    cov_zeioaqpul().s[285]++;
    return false;
  }
  /**
   * Adapt algorithm parameters during evolution
   */
  adaptParameters() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[54]++;
    // Adaptive mutation rate based on diversity
    const diversity =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[286]++, this.calculateDiversity());
    const diversityThreshold =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[287]++, 0.1);
    /* istanbul ignore next */
    cov_zeioaqpul().s[288]++;
    if (diversity < diversityThreshold) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[44][0]++;
      cov_zeioaqpul().s[289]++;
      this.parameters.mutationRate = Math.min(0.5, this.parameters.mutationRate * 1.1);
    } else {
      /* istanbul ignore next */
      cov_zeioaqpul().b[44][1]++;
      cov_zeioaqpul().s[290]++;
      this.parameters.mutationRate = Math.max(0.01, this.parameters.mutationRate * 0.9);
    }
  }
  /**
   * Create optimization result
   */
  createOptimizationResult(problem, startTime) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[55]++;
    const executionTime =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[291]++, performance.now() - startTime);
    // Convert best individual to optimization solution
    const bestSolution =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[292]++, {
      id:
      /* istanbul ignore next */
      (cov_zeioaqpul().b[45][0]++, this.bestIndividual?.id) ||
      /* istanbul ignore next */
      (cov_zeioaqpul().b[45][1]++, 'no_solution'),
      variables: {},
      objectiveValues: {},
      constraintViolations: [],
      feasible:
      /* istanbul ignore next */
      (cov_zeioaqpul().b[46][0]++, this.bestIndividual?.feasible) ||
      /* istanbul ignore next */
      (cov_zeioaqpul().b[46][1]++, false),
      fitness:
      /* istanbul ignore next */
      (cov_zeioaqpul().b[47][0]++, this.bestIndividual?.fitness) ||
      /* istanbul ignore next */
      (cov_zeioaqpul().b[47][1]++, Number.MAX_VALUE),
      systemConfiguration: problem.systemConfiguration,
      // Would be updated with optimized values
      performanceMetrics: {}
    });
    // Convert variables
    /* istanbul ignore next */
    cov_zeioaqpul().s[293]++;
    if (this.bestIndividual) {
      /* istanbul ignore next */
      cov_zeioaqpul().b[48][0]++;
      cov_zeioaqpul().s[294]++;
      problem.variables.forEach((variable, index) => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[56]++;
        cov_zeioaqpul().s[295]++;
        bestSolution.variables[variable.id] = this.bestIndividual.genes[index];
      });
      // Convert objectives
      /* istanbul ignore next */
      cov_zeioaqpul().s[296]++;
      problem.objectives.objectives.forEach((objective, index) => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[57]++;
        cov_zeioaqpul().s[297]++;
        bestSolution.objectiveValues[objective.id] =
        /* istanbul ignore next */
        (cov_zeioaqpul().b[49][0]++, this.bestIndividual.objectiveValues[index]) ||
        /* istanbul ignore next */
        (cov_zeioaqpul().b[49][1]++, 0);
      });
    } else
    /* istanbul ignore next */
    {
      cov_zeioaqpul().b[48][1]++;
    }
    const statistics =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[298]++, {
      totalIterations: this.generation,
      totalEvaluations: this.evaluationCount,
      convergenceIteration: this.generation,
      executionTime,
      bestFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[58]++;
        cov_zeioaqpul().s[299]++;
        return h.bestFitness;
      }),
      averageFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[59]++;
        cov_zeioaqpul().s[300]++;
        return h.averageFitness;
      }),
      diversityHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[60]++;
        cov_zeioaqpul().s[301]++;
        return h.diversity;
      }),
      constraintViolationHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_zeioaqpul().f[61]++;
        cov_zeioaqpul().s[302]++;
        return h.constraintViolations;
      }),
      algorithmSpecificStats: {
        populationSize: this.parameters.populationSize,
        finalMutationRate: this.parameters.mutationRate,
        finalCrossoverRate: this.parameters.crossoverRate
      }
    });
    const optimizationHistory =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[303]++, {
      iterations: this.history,
      populationHistory: [],
      parameterHistory: [],
      convergenceMetrics: []
    });
    /* istanbul ignore next */
    cov_zeioaqpul().s[304]++;
    return {
      problemId: problem.id,
      status: SystemOptimizationTypes_1.OptimizationStatus.CONVERGED,
      bestSolution,
      paretoFront: [],
      // Would include Pareto solutions for multi-objective
      statistics,
      history: optimizationHistory,
      analysis: {},
      recommendations: [],
      warnings: [],
      errors: []
    };
  }
  // Utility methods
  createChild(parent) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[62]++;
    cov_zeioaqpul().s[305]++;
    return {
      id: this.generateIndividualId(),
      genes: [...parent.genes],
      fitness: 0,
      objectiveValues: [],
      constraintViolations: [],
      feasible: true,
      age: 0
    };
  }
  generateIndividualId() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[63]++;
    cov_zeioaqpul().s[306]++;
    return `ind_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  createSeededRandom(seed) {
    /* istanbul ignore next */
    cov_zeioaqpul().f[64]++;
    let state =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[307]++, seed);
    /* istanbul ignore next */
    cov_zeioaqpul().s[308]++;
    return () => {
      /* istanbul ignore next */
      cov_zeioaqpul().f[65]++;
      cov_zeioaqpul().s[309]++;
      state = (state * 9301 + 49297) % 233280;
      /* istanbul ignore next */
      cov_zeioaqpul().s[310]++;
      return state / 233280;
    };
  }
  gaussianRandom() {
    /* istanbul ignore next */
    cov_zeioaqpul().f[66]++;
    // Box-Muller transform for Gaussian random numbers
    const u1 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[311]++, this.random());
    const u2 =
    /* istanbul ignore next */
    (cov_zeioaqpul().s[312]++, this.random());
    /* istanbul ignore next */
    cov_zeioaqpul().s[313]++;
    return Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);
  }
}
/* istanbul ignore next */
cov_zeioaqpul().s[314]++;
exports.GeneticAlgorithm = GeneticAlgorithm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,