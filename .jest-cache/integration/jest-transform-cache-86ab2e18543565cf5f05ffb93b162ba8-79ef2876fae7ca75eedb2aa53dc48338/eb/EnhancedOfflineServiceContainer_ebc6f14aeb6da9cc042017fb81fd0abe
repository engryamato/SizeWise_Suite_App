4009ab989d443de2ca8d7c5080e387dc
"use strict";

/**
 * Enhanced Offline Service Container
 *
 * Implements ChatGPT recommendations with comprehensive DataService integration.
 * Provides robust offline-first architecture with sync preparation.
 *
 * @see docs/refactoring/component-architecture-specification.md
 */
/* istanbul ignore next */
function cov_1w1kp6aaxl() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/frontend/lib/services/EnhancedOfflineServiceContainer.ts";
  var hash = "0d5c8099b8cd187cde935d0ad1f3c61d107fd757";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/frontend/lib/services/EnhancedOfflineServiceContainer.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 235
        }
      },
      "2": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 86
        }
      },
      "3": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "4": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 68
        }
      },
      "5": {
        start: {
          line: 15,
          column: 32
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "8": {
        start: {
          line: 25,
          column: 36
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "9": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 89
        }
      },
      "10": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 59
        }
      },
      "11": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "13": {
        start: {
          line: 35,
          column: 36
        },
        end: {
          line: 35,
          column: 74
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 64
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 60
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "18": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 36
        }
      },
      "19": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "20": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 47
        }
      },
      "21": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 30
        }
      },
      "22": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 62
        }
      },
      "23": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "24": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "25": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 53
        }
      },
      "26": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 62
        }
      },
      "27": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 24
        }
      },
      "28": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "29": {
        start: {
          line: 101,
          column: 37
        },
        end: {
          line: 101,
          column: 86
        }
      },
      "30": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 77
        }
      },
      "31": {
        start: {
          line: 102,
          column: 45
        },
        end: {
          line: 102,
          column: 75
        }
      },
      "32": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 61
        }
      },
      "33": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 24
        }
      },
      "34": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "35": {
        start: {
          line: 111,
          column: 37
        },
        end: {
          line: 111,
          column: 89
        }
      },
      "36": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "37": {
        start: {
          line: 112,
          column: 45
        },
        end: {
          line: 112,
          column: 75
        }
      },
      "38": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 63
        }
      },
      "39": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 24
        }
      },
      "40": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 138,
          column: 10
        }
      },
      "41": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 169,
          column: 10
        }
      },
      "42": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "43": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 173,
          column: 44
        }
      },
      "44": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 174,
          column: 52
        }
      },
      "45": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 34
        }
      },
      "46": {
        start: {
          line: 179,
          column: 26
        },
        end: {
          line: 179,
          column: 57
        }
      },
      "47": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 34
        }
      },
      "48": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 183,
          column: 56
        }
      },
      "49": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 39
        }
      },
      "50": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "51": {
        start: {
          line: 193,
          column: 33
        },
        end: {
          line: 193,
          column: 72
        }
      },
      "52": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 80
        }
      },
      "53": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "54": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 24
        }
      },
      "55": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "56": {
        start: {
          line: 203,
          column: 33
        },
        end: {
          line: 203,
          column: 67
        }
      },
      "57": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 80
        }
      },
      "58": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 56
        }
      },
      "59": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 24
        }
      },
      "60": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "61": {
        start: {
          line: 213,
          column: 33
        },
        end: {
          line: 213,
          column: 65
        }
      },
      "62": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 58
        }
      },
      "63": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 59
        }
      },
      "64": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 24
        }
      },
      "65": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "66": {
        start: {
          line: 235,
          column: 25
        },
        end: {
          line: 235,
          column: 79
        }
      },
      "67": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 260,
          column: 10
        }
      },
      "68": {
        start: {
          line: 263,
          column: 0
        },
        end: {
          line: 263,
          column: 50
        }
      },
      "69": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "70": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 281,
          column: 14
        }
      },
      "71": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 69
        }
      },
      "72": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 24
        }
      },
      "73": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "74": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 294,
          column: 14
        }
      },
      "75": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 64
        }
      },
      "76": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 24
        }
      },
      "77": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "78": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 22
        }
      },
      "79": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 71
        }
      },
      "80": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 24
        }
      },
      "81": {
        start: {
          line: 312,
          column: 0
        },
        end: {
          line: 312,
          column: 64
        }
      },
      "82": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "83": {
        start: {
          line: 324,
          column: 27
        },
        end: {
          line: 324,
          column: 29
        }
      },
      "84": {
        start: {
          line: 325,
          column: 29
        },
        end: {
          line: 325,
          column: 31
        }
      },
      "85": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "86": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 56
        }
      },
      "87": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "88": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 62
        }
      },
      "89": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "90": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 70
        }
      },
      "91": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 339,
          column: 14
        }
      },
      "92": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 64
        }
      },
      "93": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 24
        }
      },
      "94": {
        start: {
          line: 347,
          column: 0
        },
        end: {
          line: 347,
          column: 62
        }
      },
      "95": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 39
        }
      },
      "96": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 78
        }
      },
      "97": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "98": {
        start: {
          line: 358,
          column: 28
        },
        end: {
          line: 358,
          column: 72
        }
      },
      "99": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 361,
          column: 13
        }
      },
      "100": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 66
        }
      },
      "101": {
        start: {
          line: 363,
          column: 38
        },
        end: {
          line: 365,
          column: 34
        }
      },
      "102": {
        start: {
          line: 366,
          column: 27
        },
        end: {
          line: 366,
          column: 103
        }
      },
      "103": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 373,
          column: 14
        }
      },
      "104": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 62
        }
      },
      "105": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 24
        }
      },
      "106": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "107": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 386,
          column: 14
        }
      },
      "108": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 65
        }
      },
      "109": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 24
        }
      },
      "110": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "111": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 82
        }
      },
      "112": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 63
        }
      },
      "113": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 24
        }
      },
      "114": {
        start: {
          line: 403,
          column: 0
        },
        end: {
          line: 403,
          column: 54
        }
      },
      "115": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 39
        }
      },
      "116": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "117": {
        start: {
          line: 413,
          column: 25
        },
        end: {
          line: 413,
          column: 64
        }
      },
      "118": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 40
        }
      },
      "119": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 64
        }
      },
      "120": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 26
        }
      },
      "121": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "122": {
        start: {
          line: 423,
          column: 25
        },
        end: {
          line: 423,
          column: 64
        }
      },
      "123": {
        start: {
          line: 424,
          column: 25
        },
        end: {
          line: 424,
          column: 81
        }
      },
      "124": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 42
        }
      },
      "125": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 68
        }
      },
      "126": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 25
        }
      },
      "127": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "128": {
        start: {
          line: 434,
          column: 25
        },
        end: {
          line: 434,
          column: 52
        }
      },
      "129": {
        start: {
          line: 435,
          column: 27
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "130": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 32
        }
      },
      "131": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 63
        }
      },
      "132": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 485,
          column: 14
        }
      },
      "133": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "134": {
        start: {
          line: 490,
          column: 25
        },
        end: {
          line: 490,
          column: 64
        }
      },
      "135": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 521,
          column: 13
        }
      },
      "136": {
        start: {
          line: 493,
          column: 33
        },
        end: {
          line: 493,
          column: 83
        }
      },
      "137": {
        start: {
          line: 494,
          column: 37
        },
        end: {
          line: 519,
          column: 17
        }
      },
      "138": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 520,
          column: 62
        }
      },
      "139": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 60
        }
      },
      "140": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 24
        }
      },
      "141": {
        start: {
          line: 529,
          column: 0
        },
        end: {
          line: 529,
          column: 50
        }
      },
      "142": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 39
        }
      },
      "143": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 65
        }
      },
      "144": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 54
        }
      },
      "145": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 53
        }
      },
      "146": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 58
        }
      },
      "147": {
        start: {
          line: 550,
          column: 0
        },
        end: {
          line: 550,
          column: 50
        }
      },
      "148": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 605,
          column: 5
        }
      },
      "149": {
        start: {
          line: 556,
          column: 8
        },
        end: {
          line: 556,
          column: 54
        }
      },
      "150": {
        start: {
          line: 558,
          column: 28
        },
        end: {
          line: 558,
          column: 79
        }
      },
      "151": {
        start: {
          line: 560,
          column: 28
        },
        end: {
          line: 560,
          column: 52
        }
      },
      "152": {
        start: {
          line: 561,
          column: 31
        },
        end: {
          line: 565,
          column: 10
        }
      },
      "153": {
        start: {
          line: 562,
          column: 12
        },
        end: {
          line: 564,
          column: 22
        }
      },
      "154": {
        start: {
          line: 563,
          column: 16
        },
        end: {
          line: 563,
          column: 91
        }
      },
      "155": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 566,
          column: 58
        }
      },
      "156": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 62
        }
      },
      "157": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 568,
          column: 56
        }
      },
      "158": {
        start: {
          line: 570,
          column: 31
        },
        end: {
          line: 570,
          column: 70
        }
      },
      "159": {
        start: {
          line: 571,
          column: 28
        },
        end: {
          line: 571,
          column: 64
        }
      },
      "160": {
        start: {
          line: 572,
          column: 35
        },
        end: {
          line: 572,
          column: 67
        }
      },
      "161": {
        start: {
          line: 573,
          column: 34
        },
        end: {
          line: 573,
          column: 65
        }
      },
      "162": {
        start: {
          line: 574,
          column: 30
        },
        end: {
          line: 574,
          column: 68
        }
      },
      "163": {
        start: {
          line: 575,
          column: 28
        },
        end: {
          line: 575,
          column: 64
        }
      },
      "164": {
        start: {
          line: 576,
          column: 28
        },
        end: {
          line: 576,
          column: 64
        }
      },
      "165": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 577,
          column: 57
        }
      },
      "166": {
        start: {
          line: 579,
          column: 30
        },
        end: {
          line: 579,
          column: 78
        }
      },
      "167": {
        start: {
          line: 580,
          column: 30
        },
        end: {
          line: 580,
          column: 78
        }
      },
      "168": {
        start: {
          line: 582,
          column: 31
        },
        end: {
          line: 582,
          column: 100
        }
      },
      "169": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 59
        }
      },
      "170": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 596,
          column: 10
        }
      },
      "171": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 599,
          column: 87
        }
      },
      "172": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 603,
          column: 9
        }
      },
      "173": {
        start: {
          line: 602,
          column: 12
        },
        end: {
          line: 602,
          column: 83
        }
      },
      "174": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 604,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 30
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 90
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 31
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 102,
            column: 40
          },
          end: {
            line: 102,
            column: 41
          }
        },
        loc: {
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 102,
            column: 75
          }
        },
        line: 102
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 109
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 112,
            column: 40
          },
          end: {
            line: 112,
            column: 41
          }
        },
        loc: {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 112,
            column: 75
          }
        },
        line: 112
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 38
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 140
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 19
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 171
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 172,
            column: 71
          },
          end: {
            line: 172,
            column: 72
          }
        },
        loc: {
          start: {
            line: 172,
            column: 84
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 172
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 178
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 29
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 188
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 27
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 191
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 26
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 201
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 211
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 221
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 32
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 233
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 18
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 270
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 38
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 273
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 35
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 288
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        loc: {
          start: {
            line: 301,
            column: 43
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 301
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 18
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 319
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        loc: {
          start: {
            line: 322,
            column: 35
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 322
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 29
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 352
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        loc: {
          start: {
            line: 356,
            column: 44
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 356
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 36
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 380
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 35
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 393
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        loc: {
          start: {
            line: 408,
            column: 29
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 408
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 27
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 411
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        loc: {
          start: {
            line: 421,
            column: 36
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 421
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 432,
            column: 5
          }
        },
        loc: {
          start: {
            line: 432,
            column: 26
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 432
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 31
          },
          end: {
            line: 527,
            column: 5
          }
        },
        line: 488
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 29
          },
          end: {
            line: 536,
            column: 5
          }
        },
        line: 534
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 537,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        },
        loc: {
          start: {
            line: 537,
            column: 33
          },
          end: {
            line: 539,
            column: 5
          }
        },
        line: 537
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 5
          }
        },
        loc: {
          start: {
            line: 540,
            column: 32
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 540
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 25
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 543
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        loc: {
          start: {
            line: 546,
            column: 30
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 546
      },
      "40": {
        name: "createEnhancedOfflineServiceContainer",
        decl: {
          start: {
            line: 554,
            column: 15
          },
          end: {
            line: 554,
            column: 52
          }
        },
        loc: {
          start: {
            line: 554,
            column: 55
          },
          end: {
            line: 606,
            column: 1
          }
        },
        line: 554
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 561,
            column: 43
          },
          end: {
            line: 561,
            column: 44
          }
        },
        loc: {
          start: {
            line: 561,
            column: 58
          },
          end: {
            line: 565,
            column: 9
          }
        },
        line: 561
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 562,
            column: 23
          },
          end: {
            line: 562,
            column: 24
          }
        },
        loc: {
          start: {
            line: 562,
            column: 29
          },
          end: {
            line: 564,
            column: 13
          }
        },
        line: 562
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 26,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 26,
            column: 81
          }
        }, {
          start: {
            line: 26,
            column: 84
          },
          end: {
            line: 26,
            column: 88
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 34
          }
        }, {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 48,
            column: 57
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 42
          }
        }, {
          start: {
            line: 49,
            column: 46
          },
          end: {
            line: 49,
            column: 64
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 30
          },
          end: {
            line: 50,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 30
          },
          end: {
            line: 50,
            column: 54
          }
        }, {
          start: {
            line: 50,
            column: 58
          },
          end: {
            line: 50,
            column: 71
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 58
          }
        }, {
          start: {
            line: 51,
            column: 62
          },
          end: {
            line: 51,
            column: 90
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 68
          }
        }, {
          start: {
            line: 52,
            column: 72
          },
          end: {
            line: 52,
            column: 74
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 53,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 53,
            column: 62
          }
        }, {
          start: {
            line: 53,
            column: 66
          },
          end: {
            line: 53,
            column: 68
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 52
          }
        }, {
          start: {
            line: 54,
            column: 56
          },
          end: {
            line: 54,
            column: 58
          }
        }],
        line: 54
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 58
          }
        }, {
          start: {
            line: 55,
            column: 62
          },
          end: {
            line: 55,
            column: 64
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 54
          }
        }, {
          start: {
            line: 56,
            column: 58
          },
          end: {
            line: 56,
            column: 82
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 44
          }
        }, {
          start: {
            line: 58,
            column: 48
          },
          end: {
            line: 58,
            column: 53
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 40
          }
        }, {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 46
          }
        }],
        line: 59
      },
      "12": {
        loc: {
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 46
          }
        }, {
          start: {
            line: 60,
            column: 50
          },
          end: {
            line: 60,
            column: 52
          }
        }],
        line: 60
      },
      "13": {
        loc: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 48
          }
        }, {
          start: {
            line: 61,
            column: 52
          },
          end: {
            line: 61,
            column: 54
          }
        }],
        line: 61
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 42
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 42
          },
          end: {
            line: 62,
            column: 78
          }
        }, {
          start: {
            line: 62,
            column: 82
          },
          end: {
            line: 73,
            column: 17
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 80,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 74,
            column: 58
          }
        }, {
          start: {
            line: 74,
            column: 62
          },
          end: {
            line: 80,
            column: 17
          }
        }],
        line: 74
      },
      "16": {
        loc: {
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 174,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 174,
            column: 34
          }
        }, {
          start: {
            line: 174,
            column: 38
          },
          end: {
            line: 174,
            column: 51
          }
        }],
        line: 174
      },
      "17": {
        loc: {
          start: {
            line: 194,
            column: 19
          },
          end: {
            line: 194,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 34
          },
          end: {
            line: 194,
            column: 72
          }
        }, {
          start: {
            line: 194,
            column: 75
          },
          end: {
            line: 194,
            column: 79
          }
        }],
        line: 194
      },
      "18": {
        loc: {
          start: {
            line: 204,
            column: 19
          },
          end: {
            line: 204,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 204,
            column: 72
          }
        }, {
          start: {
            line: 204,
            column: 75
          },
          end: {
            line: 204,
            column: 79
          }
        }],
        line: 204
      },
      "19": {
        loc: {
          start: {
            line: 235,
            column: 25
          },
          end: {
            line: 235,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 55
          },
          end: {
            line: 235,
            column: 67
          }
        }, {
          start: {
            line: 235,
            column: 70
          },
          end: {
            line: 235,
            column: 79
          }
        }],
        line: 235
      },
      "20": {
        loc: {
          start: {
            line: 238,
            column: 18
          },
          end: {
            line: 238,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 18
          },
          end: {
            line: 238,
            column: 27
          }
        }, {
          start: {
            line: 238,
            column: 31
          },
          end: {
            line: 238,
            column: 45
          }
        }],
        line: 238
      },
      "21": {
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 42
          }
        }, {
          start: {
            line: 292,
            column: 46
          },
          end: {
            line: 292,
            column: 48
          }
        }],
        line: 292
      },
      "22": {
        loc: {
          start: {
            line: 293,
            column: 24
          },
          end: {
            line: 293,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 42
          },
          end: {
            line: 293,
            column: 44
          }
        }, {
          start: {
            line: 293,
            column: 47
          },
          end: {
            line: 293,
            column: 69
          }
        }],
        line: 293
      },
      "23": {
        loc: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "24": {
        loc: {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 331,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 331,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "25": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "26": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "27": {
        loc: {
          start: {
            line: 363,
            column: 38
          },
          end: {
            line: 365,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 67
          },
          end: {
            line: 363,
            column: 73
          }
        }, {
          start: {
            line: 364,
            column: 16
          },
          end: {
            line: 365,
            column: 34
          }
        }],
        line: 363
      },
      "28": {
        loc: {
          start: {
            line: 364,
            column: 16
          },
          end: {
            line: 365,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 43
          },
          end: {
            line: 364,
            column: 48
          }
        }, {
          start: {
            line: 365,
            column: 20
          },
          end: {
            line: 365,
            column: 34
          }
        }],
        line: 364
      },
      "29": {
        loc: {
          start: {
            line: 414,
            column: 19
          },
          end: {
            line: 414,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 19
          },
          end: {
            line: 414,
            column: 29
          }
        }, {
          start: {
            line: 414,
            column: 33
          },
          end: {
            line: 414,
            column: 39
          }
        }],
        line: 414
      },
      "30": {
        loc: {
          start: {
            line: 425,
            column: 19
          },
          end: {
            line: 425,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 19
          },
          end: {
            line: 425,
            column: 32
          }
        }, {
          start: {
            line: 425,
            column: 36
          },
          end: {
            line: 425,
            column: 41
          }
        }],
        line: 425
      },
      "31": {
        loc: {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 521,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 521,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "32": {
        loc: {
          start: {
            line: 493,
            column: 33
          },
          end: {
            line: 493,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 493,
            column: 61
          },
          end: {
            line: 493,
            column: 73
          }
        }, {
          start: {
            line: 493,
            column: 76
          },
          end: {
            line: 493,
            column: 83
          }
        }],
        line: 493
      },
      "33": {
        loc: {
          start: {
            line: 496,
            column: 26
          },
          end: {
            line: 496,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 26
          },
          end: {
            line: 496,
            column: 35
          }
        }, {
          start: {
            line: 496,
            column: 39
          },
          end: {
            line: 496,
            column: 53
          }
        }],
        line: 496
      },
      "34": {
        loc: {
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 603,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 603,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/frontend/lib/services/EnhancedOfflineServiceContainer.ts",
      mappings: ";AAAA;;;;;;;GAOG;;;AA8kBH,sFA+DC;AA3oBD,qDAAqE;AACrE,qEAA4G;AAC5G,6EAAuG;AAgCvG;;GAEG;AACH,MAAa,sBAAsB;IACjC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,IAAI,CAAC;YACH,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAC9D,OAAO,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/E,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YAC/C,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAAgB;QAChC,IAAI,CAAC;YACH,MAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;YAC/D,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACtD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,IAAsB;QACxC,IAAI,CAAC;YACH,+DAA+D;YAC/D,MAAM,WAAW,GAAG,IAAW,CAAC;YAEhC,MAAM,UAAU,GAAY;gBAC1B,EAAE,EAAE,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE;gBACzC,MAAM,EAAE,WAAW,CAAC,MAAM,IAAI,kBAAkB;gBAChD,YAAY,EAAE,WAAW,CAAC,YAAY,IAAI,aAAa;gBACvD,cAAc,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC1E,mBAAmB,EAAE,WAAW,CAAC,mBAAmB,IAAI,EAAE;gBAC1D,gBAAgB,EAAE,WAAW,CAAC,gBAAgB,IAAI,EAAE;gBACpD,WAAW,EAAE,WAAW,CAAC,WAAW,IAAI,EAAE;gBAC1C,cAAc,EAAE,WAAW,CAAC,cAAc,IAAI,EAAE;gBAChD,YAAY,EAAE,WAAW,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBAClE,aAAa,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACvC,OAAO,EAAE,WAAW,CAAC,OAAO,IAAI,KAAK;gBACrC,KAAK,EAAE,WAAW,CAAC,KAAK,IAAI,EAAE;gBAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ,IAAI,EAAE;gBACpC,SAAS,EAAE,WAAW,CAAC,SAAS,IAAI,EAAE;gBACtC,wBAAwB,EAAE,WAAW,CAAC,wBAAwB,IAAI;oBAChE,KAAK,EAAE,UAAU;oBACjB,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE;oBAC3C,gBAAgB,EAAE,kBAAkB;oBACpC,kBAAkB,EAAE,MAAM;oBAC1B,eAAe,EAAE,UAAU;oBAC3B,gBAAgB,EAAE,MAAM;oBACxB,gBAAgB,EAAE,IAAI;oBACtB,cAAc,EAAE,GAAG;oBACnB,QAAQ,EAAE,CAAC;oBACX,aAAa,EAAE,GAAG;iBACnB;gBACD,cAAc,EAAE,WAAW,CAAC,cAAc,IAAI;oBAC5C,MAAM,EAAE,IAAI;oBACZ,MAAM,EAAE,IAAI;oBACZ,EAAE,EAAE,KAAK;oBACT,GAAG,EAAE,KAAK;oBACV,IAAI,EAAE,KAAK;iBACZ;aACF,CAAC;YAEF,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YACnC,OAAO,UAAU,CAAC;QACpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAU;QAC5B,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAc;QAC/B,IAAI,CAAC;YACH,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAC3E,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YACjD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,KAAa,EAAE,MAAe;QACjD,IAAI,CAAC;YACH,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC9E,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YACnD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAEO,sBAAsB,CAAC,eAAgC;QAC7D,mDAAmD;QACnD,OAAO;YACL,EAAE,EAAE,eAAe,CAAC,EAAE;YACtB,MAAM,EAAE,eAAe,CAAC,MAAM;YAC9B,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,cAAc,EAAE,eAAe,CAAC,cAAc;YAC9C,mBAAmB,EAAE,eAAe,CAAC,mBAAmB;YACxD,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;YAClD,WAAW,EAAE,eAAe,CAAC,WAAW;YACxC,cAAc,EAAE,eAAe,CAAC,cAAc;YAC9C,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,aAAa,EAAE,eAAe,CAAC,aAAa;YAC5C,OAAO,EAAE,eAAe,CAAC,OAAO;YAChC,KAAK,EAAE,eAAe,CAAC,KAAK;YAC5B,QAAQ,EAAE,eAAe,CAAC,QAAQ;YAClC,SAAS,EAAE,eAAe,CAAC,SAAS;YACpC,wBAAwB,EAAE,eAAe,CAAC,wBAAwB;YAClE,cAAc,EAAE,eAAe,CAAC,cAAc;SAC/C,CAAC;IACJ,CAAC;IAEO,wBAAwB,CAAC,OAAgB;QAC/C,mDAAmD;QACnD,OAAO;YACL,GAAG,OAAO;YACV,IAAI,EAAE;gBACJ,OAAO,EAAE,CAAC;gBACV,YAAY,EAAE,IAAI,IAAI,EAAE;gBACxB,cAAc,EAAE,OAAO,CAAC,MAAM;gBAC9B,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,KAAK;aACjB;YACD,aAAa,EAAE;gBACb,OAAO,EAAE;oBACP,QAAQ,EAAE,KAAK;oBACf,UAAU,EAAE,EAAE;oBACd,WAAW,EAAE,EAAE;iBAChB;gBACD,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE;oBACJ,QAAQ,EAAE,KAAK;iBAChB;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE;oBACN,UAAU,EAAE,IAAI;iBACjB;gBACD,OAAO,EAAE,EAAE;aACZ;SACF,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YACvE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACjC,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACzC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,qBAAqB;QAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,OAAO,OAAO,SAAS,EAAE,CAAC;IAC5B,CAAC;CACF;AAvKD,wDAuKC;AAED;;GAEG;AACH,MAAa,mBAAmB;IAC9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC;YACH,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YAC7D,OAAO,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU;QAC1B,IAAI,CAAC;YACH,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACxD,OAAO,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;YAC5C,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAU;QACzB,IAAI,CAAC;YACH,MAAM,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACtD,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAChD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YAC/C,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAEO,mBAAmB,CAAC,YAA0B;QACpD,OAAO;YACL,EAAE,EAAE,YAAY,CAAC,EAAE;YACnB,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,OAAO,EAAE,YAAY,CAAC,OAAO;YAC7B,UAAU,EAAE,YAAY,CAAC,UAAU;YACnC,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,SAAS,EAAE,YAAY,CAAC,SAAS;SAClC,CAAC;IACJ,CAAC;IAEO,qBAAqB,CAAC,IAAU;QACtC,+DAA+D;QAC/D,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAqC,CAAC;QAEzG,OAAO;YACL,GAAG,IAAI;YACP,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,cAAc,EAAE,iCAAiC;YACpE,IAAI,EAAE,QAAQ,EAAE,kBAAkB;YAClC,QAAQ,EAAE,EAAE,EAAE,6BAA6B;YAC3C,IAAI,EAAE;gBACJ,OAAO,EAAE,CAAC;gBACV,YAAY,EAAE,IAAI,IAAI,EAAE;gBACxB,cAAc,EAAE,IAAI,CAAC,EAAE;gBACvB,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,KAAK;aACjB;YACD,OAAO,EAAE;gBACP,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,eAAe,EAAE,QAAQ;oBACzB,YAAY,EAAE,MAAM;iBACrB;gBACD,iBAAiB,EAAE;oBACjB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,cAAc,CAAC;iBACnE;aACF;SACF,CAAC;IACJ,CAAC;CACF;AA5ED,kDA4EC;AAED;;;GAGG;AACH,MAAa,0BAA0B;IACrC,yCAAyC;IAEzC;QACE,6CAA6C;IAC/C,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,MAAwB;QAChD,IAAI,CAAC;YACH,2CAA2C;YAC3C,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,UAAU,EAAE,MAAM;gBAClB,QAAQ,EAAE,CAAC,yCAAyC,CAAC;gBACrD,MAAM,EAAE,CAAC,0CAA0C,CAAC;aACrD,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,OAA0B;QAC9C,IAAI,CAAC;YACH,OAAO;gBACL,KAAK,EAAE,OAAO,CAAC,OAAO;gBACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE;gBAChC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;aACtD,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,qBAAqB,CAAC,SAAiB;QAC3C,IAAI,CAAC;YACH,gDAAgD;YAChD,OAAO,EAAE,CAAC;QACZ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YAC3D,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CACF;AA5CD,gEA4CC;AAED;;;GAGG;AACH,MAAa,yBAAyB;IACpC,4CAA4C;IAE5C;QACE,gDAAgD;IAClD,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,OAAgB;QACpC,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,EAAE,CAAC;YAClB,MAAM,QAAQ,GAAG,EAAE,CAAC;YAEpB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC;gBAClC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC1C,CAAC;YAED,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC/B,QAAQ,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAChD,CAAC;YAED,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAClC,QAAQ,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;YACxD,CAAC;YAED,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,MAAM,KAAK,CAAC;gBAC1B,MAAM;gBACN,QAAQ;aACT,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CACF;AAlCD,8DAkCC;AAED;;GAEG;AACH,MAAa,qBAAqB;IAGhC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFpC,kBAAa,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAEC,CAAC;IAEhD,KAAK,CAAC,aAAa,CAAC,SAAiB,EAAE,OAAsB;QAC3D,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAC7D,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,WAAW,SAAS,YAAY,CAAC,CAAC;YACpD,CAAC;YAED,0CAA0C;YAC1C,MAAM,iBAAiB,GAAG,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACrC,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAClC,OAAO,CAAC,MAAwB,CAAC;YAE3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;YAE5F,kEAAkE;YAClE,OAAO;gBACL,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,EAAE,4BAA4B;gBAC3D,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,KAAK,EAAE,MAAM,CAAC,KAAK;aACpB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,QAAgB;QACpC,IAAI,CAAC;YACH,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,gBAAgB,QAAQ,WAAW;aACjD,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,QAAgB;QACnC,IAAI,CAAC;YACH,OAAO,IAAI,IAAI,CAAC,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACxE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YACnD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CACF;AArDD,sDAqDC;AAED;;GAEG;AACH,MAAa,mBAAmB;IAC9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACrD,OAAO,IAAI,EAAE,IAAI,IAAI,MAAM,CAAC;QAC9B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YACpD,OAAO,MAAM,CAAC;QAChB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,OAAe;QACpC,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACrD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YACtE,OAAO,IAAI,EAAE,OAAO,IAAI,KAAK,CAAC;QAChC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACxD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAEzC,MAAM,MAAM,GAAiC;gBAC3C,IAAI,EAAE;oBACJ,QAAQ,EAAE,CAAC;oBACX,WAAW,EAAE,EAAE;oBACf,WAAW,EAAE,CAAC;oBACd,8BAA8B,EAAE,KAAK;oBACrC,yBAAyB,EAAE,KAAK;oBAChC,gBAAgB,EAAE,KAAK;oBACvB,aAAa,EAAE,KAAK;iBACrB;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,EAAE;oBACZ,WAAW,EAAE,GAAG;oBAChB,WAAW,EAAE,CAAC,CAAC;oBACf,8BAA8B,EAAE,IAAI;oBACpC,yBAAyB,EAAE,IAAI;oBAC/B,gBAAgB,EAAE,IAAI;oBACtB,aAAa,EAAE,IAAI;iBACpB;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,CAAC,CAAC;oBACZ,WAAW,EAAE,CAAC,CAAC;oBACf,WAAW,EAAE,CAAC,CAAC;oBACf,8BAA8B,EAAE,IAAI;oBACpC,yBAAyB,EAAE,IAAI;oBAC/B,gBAAgB,EAAE,IAAI;oBACtB,aAAa,EAAE,IAAI;iBACpB;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,CAAC,CAAC;oBACZ,WAAW,EAAE,CAAC,CAAC;oBACf,WAAW,EAAE,CAAC,CAAC;oBACf,8BAA8B,EAAE,IAAI;oBACpC,yBAAyB,EAAE,IAAI;oBAC/B,gBAAgB,EAAE,IAAI;oBACtB,aAAa,EAAE,IAAI;iBACpB;aACF,CAAC;YAEF,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YACnD,OAAO;gBACL,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,EAAE;gBACf,WAAW,EAAE,CAAC;gBACd,8BAA8B,EAAE,KAAK;gBACrC,yBAAyB,EAAE,KAAK;gBAChC,gBAAgB,EAAE,KAAK;gBACvB,aAAa,EAAE,KAAK;aACrB,CAAC;QACJ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAAiB;QACjC,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACrD,IAAI,IAAI,EAAE,CAAC;gBACT,+DAA+D;gBAC/D,MAAM,QAAQ,GAAG,OAAO,KAAK,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,OAAwC,CAAC;gBAErG,MAAM,YAAY,GAAG;oBACnB,GAAG,IAAI;oBACP,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,cAAc,EAAE,iCAAiC;oBACpE,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,EAAE,EAAE,6BAA6B;oBAC3C,SAAS,EAAE,IAAI,IAAI,EAAE;oBACrB,IAAI,EAAE;wBACJ,OAAO,EAAE,CAAC;wBACV,YAAY,EAAE,IAAI,IAAI,EAAE;wBACxB,cAAc,EAAE,IAAI,CAAC,EAAE;wBACvB,UAAU,EAAE,OAAgB;wBAC5B,SAAS,EAAE,EAAE;wBACb,SAAS,EAAE,KAAK;qBACjB;oBACD,OAAO,EAAE;wBACP,WAAW,EAAE;4BACX,QAAQ,EAAE,IAAI;4BACd,eAAe,EAAE,QAAiB;4BAClC,YAAY,EAAE,MAAe;yBAC9B;wBACD,iBAAiB,EAAE;4BACjB,OAAO,EAAE,IAAI;4BACb,QAAQ,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,cAAc,CAAC;yBACnE;qBACF;iBACF,CAAC;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAChD,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CACF;AA1HD,kDA0HC;AAED;;GAEG;AACH,MAAa,mBAAmB;IAC9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,KAAK,CAAC,oBAAoB;QACxB,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,mBAAmB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;IACpD,CAAC;CACF;AAlBD,kDAkBC;AAED;;GAEG;AACI,KAAK,UAAU,qCAAqC;IACzD,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAE9C,sCAAsC;QACtC,MAAM,WAAW,GAAG,MAAM,IAAA,+BAAiB,EAAC,OAAO,CAAC,CAAC;QAErD,8CAA8C;QAC9C,MAAM,WAAW,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;QAC7C,MAAM,cAAc,GAAG,IAAI,OAAO,CAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;YACtD,UAAU,CAAC,GAAG,EAAE;gBACd,MAAM,CAAC,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC,CAAC;YAC7E,CAAC,EAAE,KAAK,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;QAEtD,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,sCAAsC;QACtC,MAAM,cAAc,GAAG,IAAI,sBAAsB,CAAC,WAAW,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,IAAI,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACzD,MAAM,kBAAkB,GAAG,IAAI,0BAA0B,EAAE,CAAC;QAC5D,MAAM,iBAAiB,GAAG,IAAI,yBAAyB,EAAE,CAAC;QAC1D,MAAM,aAAa,GAAG,IAAI,qBAAqB,CAAC,WAAW,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,IAAI,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACzD,MAAM,WAAW,GAAG,IAAI,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAEzD,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,gCAAgC;QAChC,MAAM,aAAa,GAAG,IAAA,yCAAmB,GAAE,CAAC;QAC5C,MAAM,aAAa,GAAG,IAAA,yCAAmB,GAAE,CAAC;QAE5C,yBAAyB;QACzB,MAAM,cAAc,GAAG,IAAA,mDAA2B,EAAC,WAAW,CAAC,CAAC;QAEhE,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QAEnD,OAAO;YACL,WAAW;YACX,cAAc;YACd,WAAW;YACX,kBAAkB;YAClB,iBAAiB;YACjB,aAAa;YACb,WAAW;YACX,cAAc;YACd,aAAa;YACb,aAAa;YACb,WAAW;SACZ,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,wDAAwD,EAAE,KAAK,CAAC,CAAC;QAE/E,6BAA6B;QAC7B,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,sCAAsC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACzE,CAAC;QAED,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;AACH,CAAC",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/frontend/lib/services/EnhancedOfflineServiceContainer.ts"],
      sourcesContent: ["/**\n * Enhanced Offline Service Container\n * \n * Implements ChatGPT recommendations with comprehensive DataService integration.\n * Provides robust offline-first architecture with sync preparation.\n * \n * @see docs/refactoring/component-architecture-specification.md\n */\n\nimport { createDataService, DataService } from '../data/DataService';\nimport { createExportService, createImportService, createBackupService } from '../data/ImportExportService';\nimport { createBrowserFeatureManager, BrowserFeatureManager } from '../features/BrowserFeatureManager';\nimport {\n  CalculationInput,\n  CalculationResult,\n  ExportOptions,\n  ExportResult,\n  TierLimits\n} from '../../types/air-duct-sizer';\nimport { Project } from '../repositories/interfaces/ProjectRepository';\nimport { User, UserTier } from '../repositories/interfaces/UserRepository';\nimport { SyncableUser, SyncableProject } from '../../types/sync-models';\n\n/**\n * Enhanced service container interface with DataService integration\n */\nexport interface EnhancedOfflineServiceContainer {\n  // Core services\n  dataService: DataService;\n  projectService: EnhancedProjectService;\n  userService: EnhancedUserService;\n  calculationService: EnhancedCalculationService;\n  validationService: EnhancedValidationService;\n  exportService: EnhancedExportService;\n  tierService: EnhancedTierService;\n  featureManager: BrowserFeatureManager;\n  \n  // New services from ChatGPT recommendations\n  importService: any; // ImportService\n  backupService: any; // BackupService\n  syncService: EnhancedSyncService;\n}\n\n/**\n * Enhanced project service with DataService integration\n */\nexport class EnhancedProjectService {\n  constructor(private dataService: DataService) {}\n\n  async getProject(id: string): Promise<Project | null> {\n    try {\n      const syncableProject = await this.dataService.getProject(id);\n      return syncableProject ? this.convertToLegacyProject(syncableProject) : null;\n    } catch (error) {\n      console.error('Failed to get project:', error);\n      throw error;\n    }\n  }\n\n  async saveProject(project: Project): Promise<void> {\n    try {\n      const syncableProject = this.convertToSyncableProject(project);\n      await this.dataService.saveProject(syncableProject);\n    } catch (error) {\n      console.error('Failed to save project:', error);\n      throw error;\n    }\n  }\n\n  async createProject(data: Partial<Project>): Promise<Project> {\n    try {\n      // Cast to any to avoid TypeScript issues with Partial<Project>\n      const projectData = data as any;\n\n      const newProject: Project = {\n        id: projectData.id || this.generateUUID(),\n        userId: projectData.userId || 'offline-user-001',\n        project_name: projectData.project_name || 'New Project',\n        project_number: projectData.project_number || this.generateProjectNumber(),\n        project_description: projectData.project_description || '',\n        project_location: projectData.project_location || '',\n        client_name: projectData.client_name || '',\n        estimator_name: projectData.estimator_name || '',\n        date_created: projectData.date_created || new Date().toISOString(),\n        last_modified: new Date().toISOString(),\n        version: projectData.version || '1.0',\n        rooms: projectData.rooms || [],\n        segments: projectData.segments || [],\n        equipment: projectData.equipment || [],\n        computational_properties: projectData.computational_properties || {\n          units: 'Imperial',\n          default_duct_size: { width: 12, height: 8 },\n          default_material: 'Galvanized Steel',\n          default_insulation: 'None',\n          default_fitting: 'Standard',\n          calibration_mode: 'Auto',\n          default_velocity: 1000,\n          pressure_class: \"2\",\n          altitude: 0,\n          friction_rate: 0.1\n        },\n        code_standards: projectData.code_standards || {\n          smacna: true,\n          ashrae: true,\n          ul: false,\n          imc: false,\n          nfpa: false\n        }\n      };\n\n      await this.saveProject(newProject);\n      return newProject;\n    } catch (error) {\n      console.error('Failed to create project:', error);\n      throw error;\n    }\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    try {\n      await this.dataService.deleteProject(id);\n    } catch (error) {\n      console.error('Failed to delete project:', error);\n      throw error;\n    }\n  }\n\n  async listProjects(userId: string): Promise<Project[]> {\n    try {\n      const syncableProjects = await this.dataService.listProjectsByUser(userId);\n      return syncableProjects.map(p => this.convertToLegacyProject(p));\n    } catch (error) {\n      console.error('Failed to list projects:', error);\n      throw error;\n    }\n  }\n\n  async searchProjects(query: string, userId?: string): Promise<Project[]> {\n    try {\n      const syncableProjects = await this.dataService.searchProjects(query, userId);\n      return syncableProjects.map(p => this.convertToLegacyProject(p));\n    } catch (error) {\n      console.error('Failed to search projects:', error);\n      throw error;\n    }\n  }\n\n  private convertToLegacyProject(syncableProject: SyncableProject): Project {\n    // Convert SyncableProject to legacy Project format\n    return {\n      id: syncableProject.id,\n      userId: syncableProject.userId,\n      project_name: syncableProject.project_name,\n      project_number: syncableProject.project_number,\n      project_description: syncableProject.project_description,\n      project_location: syncableProject.project_location,\n      client_name: syncableProject.client_name,\n      estimator_name: syncableProject.estimator_name,\n      date_created: syncableProject.date_created,\n      last_modified: syncableProject.last_modified,\n      version: syncableProject.version,\n      rooms: syncableProject.rooms,\n      segments: syncableProject.segments,\n      equipment: syncableProject.equipment,\n      computational_properties: syncableProject.computational_properties,\n      code_standards: syncableProject.code_standards\n    };\n  }\n\n  private convertToSyncableProject(project: Project): SyncableProject {\n    // Convert legacy Project to SyncableProject format\n    return {\n      ...project,\n      sync: {\n        version: 1,\n        lastModified: new Date(),\n        lastModifiedBy: project.userId,\n        syncStatus: 'local',\n        changeLog: [],\n        isDeleted: false\n      },\n      collaboration: {\n        sharing: {\n          isShared: false,\n          sharedWith: [],\n          permissions: {}\n        },\n        comments: [],\n        lock: {\n          isLocked: false\n        }\n      },\n      offline: {\n        backup: {\n          autoBackup: true\n        },\n        exports: []\n      }\n    };\n  }\n\n  private generateUUID(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = Math.random() * 16 | 0;\n      const v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  private generateProjectNumber(): string {\n    const timestamp = Date.now().toString().slice(-6);\n    return `PRJ-${timestamp}`;\n  }\n}\n\n/**\n * Enhanced user service with DataService integration\n */\nexport class EnhancedUserService {\n  constructor(private dataService: DataService) {}\n\n  async getCurrentUser(): Promise<User | null> {\n    try {\n      const syncableUser = await this.dataService.getCurrentUser();\n      return syncableUser ? this.convertToLegacyUser(syncableUser) : null;\n    } catch (error) {\n      console.error('Failed to get current user:', error);\n      throw error;\n    }\n  }\n\n  async getUserById(id: string): Promise<User | null> {\n    try {\n      const syncableUser = await this.dataService.getUser(id);\n      return syncableUser ? this.convertToLegacyUser(syncableUser) : null;\n    } catch (error) {\n      console.error('Failed to get user:', error);\n      throw error;\n    }\n  }\n\n  async updateUser(user: User): Promise<void> {\n    try {\n      const syncableUser = this.convertToSyncableUser(user);\n      await this.dataService.saveUser(syncableUser);\n    } catch (error) {\n      console.error('Failed to update user:', error);\n      throw error;\n    }\n  }\n\n  private convertToLegacyUser(syncableUser: SyncableUser): User {\n    return {\n      id: syncableUser.id,\n      email: syncableUser.email,\n      name: syncableUser.name,\n      tier: syncableUser.tier,\n      company: syncableUser.company,\n      licenseKey: syncableUser.licenseKey,\n      createdAt: syncableUser.createdAt,\n      updatedAt: syncableUser.updatedAt\n    };\n  }\n\n  private convertToSyncableUser(user: User): SyncableUser {\n    // Map super_admin to enterprise for SyncableUser compatibility\n    const syncTier = user.tier === 'super_admin' ? 'enterprise' : user.tier as 'free' | 'pro' | 'enterprise';\n\n    return {\n      ...user,\n      name: user.name || 'Unknown User', // Ensure name is always a string\n      tier: syncTier, // Use mapped tier\n      settings: {}, // Add default empty settings\n      sync: {\n        version: 1,\n        lastModified: new Date(),\n        lastModifiedBy: user.id,\n        syncStatus: 'local',\n        changeLog: [],\n        isDeleted: false\n      },\n      offline: {\n        preferences: {\n          autoSave: true,\n          backupFrequency: 'weekly',\n          exportFormat: 'json'\n        },\n        licenseValidation: {\n          isValid: true,\n          features: ['air_duct_sizer', 'project_management', 'basic_export']\n        }\n      }\n    };\n  }\n}\n\n/**\n * Enhanced calculation service\n * TODO: Implement calculation service without backend dependencies\n */\nexport class EnhancedCalculationService {\n  // private calculator: AirDuctCalculator;\n\n  constructor() {\n    // this.calculator = new AirDuctCalculator();\n  }\n\n  async calculateDuctSizing(inputs: CalculationInput): Promise<CalculationResult> {\n    try {\n      // TODO: Implement actual calculation logic\n      return {\n        success: false,\n        input_data: inputs,\n        warnings: ['Calculation service not yet implemented'],\n        errors: ['Calculation service is under development']\n      };\n    } catch (error) {\n      console.error('Failed to calculate duct sizing:', error);\n      throw error;\n    }\n  }\n\n  async validateResults(results: CalculationResult): Promise<any> {\n    try {\n      return {\n        valid: results.success,\n        warnings: results.warnings || [],\n        errors: results.success ? [] : ['Calculation failed']\n      };\n    } catch (error) {\n      console.error('Failed to validate results:', error);\n      throw error;\n    }\n  }\n\n  async getCalculationHistory(projectId: string): Promise<CalculationResult[]> {\n    try {\n      // Future enhancement: store calculation history\n      return [];\n    } catch (error) {\n      console.error('Failed to get calculation history:', error);\n      throw error;\n    }\n  }\n}\n\n/**\n * Enhanced validation service\n * TODO: Implement validation service without backend dependencies\n */\nexport class EnhancedValidationService {\n  // private smacnaValidator: SMACNAValidator;\n\n  constructor() {\n    // this.smacnaValidator = new SMACNAValidator();\n  }\n\n  async validateProject(project: Project): Promise<any> {\n    try {\n      const errors = [];\n      const warnings = [];\n\n      if (!project.project_name?.trim()) {\n        errors.push('Project name is required');\n      }\n\n      if (project.rooms.length === 0) {\n        warnings.push('Project has no rooms defined');\n      }\n\n      if (project.segments.length === 0) {\n        warnings.push('Project has no duct segments defined');\n      }\n\n      return {\n        valid: errors.length === 0,\n        errors,\n        warnings\n      };\n    } catch (error) {\n      console.error('Failed to validate project:', error);\n      throw error;\n    }\n  }\n}\n\n/**\n * Enhanced export service with DataService integration\n */\nexport class EnhancedExportService {\n  private exportService = createExportService();\n\n  constructor(private dataService: DataService) {}\n\n  async exportProject(projectId: string, options: ExportOptions): Promise<ExportResult> {\n    try {\n      const project = await this.dataService.getProject(projectId);\n      if (!project) {\n        throw new Error(`Project ${projectId} not found`);\n      }\n\n      // Map export format to DataService format\n      const dataServiceFormat = options.format === 'excel' ? 'xlsx' :\n                                options.format === 'bom' ? 'csv' :\n                                options.format as 'pdf' | 'json';\n\n      const result = await this.exportService.exportEntity('project', project, dataServiceFormat);\n\n      // Convert DataService ExportResult to air-duct-sizer ExportResult\n      return {\n        success: result.success,\n        exportId: crypto.randomUUID(), // Generate missing exportId\n        downloadUrl: result.downloadUrl,\n        error: result.error\n      };\n    } catch (error) {\n      console.error('Failed to export project:', error);\n      throw error;\n    }\n  }\n\n  async getExportStatus(exportId: string): Promise<ExportResult> {\n    try {\n      return {\n        success: true,\n        exportId: exportId,\n        downloadUrl: `/api/exports/${exportId}/download`\n      };\n    } catch (error) {\n      console.error('Failed to get export status:', error);\n      throw error;\n    }\n  }\n\n  async downloadExport(exportId: string): Promise<Blob> {\n    try {\n      return new Blob(['Mock export content'], { type: 'application/pdf' });\n    } catch (error) {\n      console.error('Failed to download export:', error);\n      throw error;\n    }\n  }\n}\n\n/**\n * Enhanced tier service\n */\nexport class EnhancedTierService {\n  constructor(private dataService: DataService) {}\n\n  async getCurrentTier(): Promise<UserTier> {\n    try {\n      const user = await this.dataService.getCurrentUser();\n      return user?.tier || 'free';\n    } catch (error) {\n      console.error('Failed to get current tier:', error);\n      return 'free';\n    }\n  }\n\n  async hasFeatureAccess(feature: string): Promise<boolean> {\n    try {\n      const user = await this.dataService.getCurrentUser();\n      const flag = await this.dataService.getFeatureFlag(feature, user?.id);\n      return flag?.enabled || false;\n    } catch (error) {\n      console.error('Failed to check feature access:', error);\n      return false;\n    }\n  }\n\n  async getTierLimits(): Promise<TierLimits> {\n    try {\n      const tier = await this.getCurrentTier();\n      \n      const limits: Record<UserTier, TierLimits> = {\n        free: {\n          maxRooms: 5,\n          maxSegments: 10,\n          maxProjects: 3,\n          canEditComputationalProperties: false,\n          canExportWithoutWatermark: false,\n          canUseSimulation: false,\n          canUseCatalog: false\n        },\n        pro: {\n          maxRooms: 50,\n          maxSegments: 100,\n          maxProjects: -1,\n          canEditComputationalProperties: true,\n          canExportWithoutWatermark: true,\n          canUseSimulation: true,\n          canUseCatalog: true\n        },\n        enterprise: {\n          maxRooms: -1,\n          maxSegments: -1,\n          maxProjects: -1,\n          canEditComputationalProperties: true,\n          canExportWithoutWatermark: true,\n          canUseSimulation: true,\n          canUseCatalog: true\n        },\n        super_admin: {\n          maxRooms: -1,\n          maxSegments: -1,\n          maxProjects: -1,\n          canEditComputationalProperties: true,\n          canExportWithoutWatermark: true,\n          canUseSimulation: true,\n          canUseCatalog: true\n        }\n      };\n\n      return limits[tier];\n    } catch (error) {\n      console.error('Failed to get tier limits:', error);\n      return {\n        maxRooms: 5,\n        maxSegments: 10,\n        maxProjects: 3,\n        canEditComputationalProperties: false,\n        canExportWithoutWatermark: false,\n        canUseSimulation: false,\n        canUseCatalog: false\n      };\n    }\n  }\n\n  async upgradeTier(newTier: UserTier): Promise<void> {\n    try {\n      const user = await this.dataService.getCurrentUser();\n      if (user) {\n        // Map super_admin to enterprise for SyncableUser compatibility\n        const syncTier = newTier === 'super_admin' ? 'enterprise' : newTier as 'free' | 'pro' | 'enterprise';\n\n        const syncableUser = {\n          ...user,\n          name: user.name || 'Unknown User', // Ensure name is always a string\n          tier: syncTier,\n          settings: {}, // Add default empty settings\n          updatedAt: new Date(),\n          sync: {\n            version: 1,\n            lastModified: new Date(),\n            lastModifiedBy: user.id,\n            syncStatus: 'local' as const,\n            changeLog: [],\n            isDeleted: false\n          },\n          offline: {\n            preferences: {\n              autoSave: true,\n              backupFrequency: 'weekly' as const,\n              exportFormat: 'json' as const\n            },\n            licenseValidation: {\n              isValid: true,\n              features: ['air_duct_sizer', 'project_management', 'basic_export']\n            }\n          }\n        };\n        await this.dataService.saveUser(syncableUser);\n      }\n    } catch (error) {\n      console.error('Failed to upgrade tier:', error);\n      throw error;\n    }\n  }\n}\n\n/**\n * Enhanced sync service for future online mode\n */\nexport class EnhancedSyncService {\n  constructor(private dataService: DataService) {}\n\n  async getPendingOperations() {\n    return await this.dataService.getPendingSyncOperations();\n  }\n\n  async getConnectionStatus() {\n    return this.dataService.getConnectionStatus();\n  }\n\n  async forceSyncAll() {\n    return await this.dataService.forceSyncAll();\n  }\n\n  async getSyncStatistics() {\n    return await this.dataService.getSyncStatistics();\n  }\n}\n\n/**\n * Create enhanced offline service container with robust error handling\n */\nexport async function createEnhancedOfflineServiceContainer(): Promise<EnhancedOfflineServiceContainer> {\n  try {\n    console.log('\uD83D\uDD27 Initializing DataService...');\n\n    // Initialize DataService with timeout\n    const dataService = await createDataService('local');\n\n    // Add timeout for data service initialization\n    const initPromise = dataService.initialize();\n    const timeoutPromise = new Promise<never>((_, reject) => {\n      setTimeout(() => {\n        reject(new Error('DataService initialization timed out after 20 seconds'));\n      }, 20000);\n    });\n\n    await Promise.race([initPromise, timeoutPromise]);\n    console.log('\u2705 DataService initialized successfully');\n\n    console.log('\uD83D\uDD27 Creating service instances...');\n\n    // Create services with error handling\n    const projectService = new EnhancedProjectService(dataService);\n    const userService = new EnhancedUserService(dataService);\n    const calculationService = new EnhancedCalculationService();\n    const validationService = new EnhancedValidationService();\n    const exportService = new EnhancedExportService(dataService);\n    const tierService = new EnhancedTierService(dataService);\n    const syncService = new EnhancedSyncService(dataService);\n\n    console.log('\uD83D\uDD27 Creating auxiliary services...');\n\n    // Create import/export services\n    const importService = createImportService();\n    const backupService = createBackupService();\n\n    // Create feature manager\n    const featureManager = createBrowserFeatureManager(dataService);\n\n    console.log('\u2705 All services created successfully');\n\n    return {\n      dataService,\n      projectService,\n      userService,\n      calculationService,\n      validationService,\n      exportService,\n      tierService,\n      featureManager,\n      importService,\n      backupService,\n      syncService\n    };\n  } catch (error) {\n    console.error('\u274C Failed to create enhanced offline service container:', error);\n\n    // Re-throw with more context\n    if (error instanceof Error) {\n      throw new Error(`Service container creation failed: ${error.message}`);\n    }\n\n    throw new Error('Unknown error occurred while creating service container');\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0d5c8099b8cd187cde935d0ad1f3c61d107fd757"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1w1kp6aaxl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w1kp6aaxl();
cov_1w1kp6aaxl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1w1kp6aaxl().s[1]++;
exports.EnhancedSyncService = exports.EnhancedTierService = exports.EnhancedExportService = exports.EnhancedValidationService = exports.EnhancedCalculationService = exports.EnhancedUserService = exports.EnhancedProjectService = void 0;
/* istanbul ignore next */
cov_1w1kp6aaxl().s[2]++;
exports.createEnhancedOfflineServiceContainer = createEnhancedOfflineServiceContainer;
const DataService_1 =
/* istanbul ignore next */
(cov_1w1kp6aaxl().s[3]++, require("../data/DataService"));
const ImportExportService_1 =
/* istanbul ignore next */
(cov_1w1kp6aaxl().s[4]++, require("../data/ImportExportService"));
const BrowserFeatureManager_1 =
/* istanbul ignore next */
(cov_1w1kp6aaxl().s[5]++, require("../features/BrowserFeatureManager"));
/**
 * Enhanced project service with DataService integration
 */
class EnhancedProjectService {
  constructor(dataService) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[0]++;
    cov_1w1kp6aaxl().s[6]++;
    this.dataService = dataService;
  }
  async getProject(id) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[1]++;
    cov_1w1kp6aaxl().s[7]++;
    try {
      const syncableProject =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[8]++, await this.dataService.getProject(id));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[9]++;
      return syncableProject ?
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[0][0]++, this.convertToLegacyProject(syncableProject)) :
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[0][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[10]++;
      console.error('Failed to get project:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[11]++;
      throw error;
    }
  }
  async saveProject(project) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[2]++;
    cov_1w1kp6aaxl().s[12]++;
    try {
      const syncableProject =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[13]++, this.convertToSyncableProject(project));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[14]++;
      await this.dataService.saveProject(syncableProject);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[15]++;
      console.error('Failed to save project:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[16]++;
      throw error;
    }
  }
  async createProject(data) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[3]++;
    cov_1w1kp6aaxl().s[17]++;
    try {
      // Cast to any to avoid TypeScript issues with Partial<Project>
      const projectData =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[18]++, data);
      const newProject =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[19]++, {
        id:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[1][0]++, projectData.id) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[1][1]++, this.generateUUID()),
        userId:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[2][0]++, projectData.userId) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[2][1]++, 'offline-user-001'),
        project_name:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[3][0]++, projectData.project_name) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[3][1]++, 'New Project'),
        project_number:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[4][0]++, projectData.project_number) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[4][1]++, this.generateProjectNumber()),
        project_description:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[5][0]++, projectData.project_description) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[5][1]++, ''),
        project_location:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[6][0]++, projectData.project_location) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[6][1]++, ''),
        client_name:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[7][0]++, projectData.client_name) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[7][1]++, ''),
        estimator_name:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[8][0]++, projectData.estimator_name) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[8][1]++, ''),
        date_created:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[9][0]++, projectData.date_created) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[9][1]++, new Date().toISOString()),
        last_modified: new Date().toISOString(),
        version:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[10][0]++, projectData.version) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[10][1]++, '1.0'),
        rooms:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[11][0]++, projectData.rooms) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[11][1]++, []),
        segments:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[12][0]++, projectData.segments) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[12][1]++, []),
        equipment:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[13][0]++, projectData.equipment) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[13][1]++, []),
        computational_properties:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[14][0]++, projectData.computational_properties) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[14][1]++, {
          units: 'Imperial',
          default_duct_size: {
            width: 12,
            height: 8
          },
          default_material: 'Galvanized Steel',
          default_insulation: 'None',
          default_fitting: 'Standard',
          calibration_mode: 'Auto',
          default_velocity: 1000,
          pressure_class: "2",
          altitude: 0,
          friction_rate: 0.1
        }),
        code_standards:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[15][0]++, projectData.code_standards) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[15][1]++, {
          smacna: true,
          ashrae: true,
          ul: false,
          imc: false,
          nfpa: false
        })
      });
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[20]++;
      await this.saveProject(newProject);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[21]++;
      return newProject;
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[22]++;
      console.error('Failed to create project:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[23]++;
      throw error;
    }
  }
  async deleteProject(id) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[4]++;
    cov_1w1kp6aaxl().s[24]++;
    try {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[25]++;
      await this.dataService.deleteProject(id);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[26]++;
      console.error('Failed to delete project:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[27]++;
      throw error;
    }
  }
  async listProjects(userId) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[5]++;
    cov_1w1kp6aaxl().s[28]++;
    try {
      const syncableProjects =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[29]++, await this.dataService.listProjectsByUser(userId));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[30]++;
      return syncableProjects.map(p => {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().f[6]++;
        cov_1w1kp6aaxl().s[31]++;
        return this.convertToLegacyProject(p);
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[32]++;
      console.error('Failed to list projects:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[33]++;
      throw error;
    }
  }
  async searchProjects(query, userId) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[7]++;
    cov_1w1kp6aaxl().s[34]++;
    try {
      const syncableProjects =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[35]++, await this.dataService.searchProjects(query, userId));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[36]++;
      return syncableProjects.map(p => {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().f[8]++;
        cov_1w1kp6aaxl().s[37]++;
        return this.convertToLegacyProject(p);
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[38]++;
      console.error('Failed to search projects:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[39]++;
      throw error;
    }
  }
  convertToLegacyProject(syncableProject) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[9]++;
    cov_1w1kp6aaxl().s[40]++;
    // Convert SyncableProject to legacy Project format
    return {
      id: syncableProject.id,
      userId: syncableProject.userId,
      project_name: syncableProject.project_name,
      project_number: syncableProject.project_number,
      project_description: syncableProject.project_description,
      project_location: syncableProject.project_location,
      client_name: syncableProject.client_name,
      estimator_name: syncableProject.estimator_name,
      date_created: syncableProject.date_created,
      last_modified: syncableProject.last_modified,
      version: syncableProject.version,
      rooms: syncableProject.rooms,
      segments: syncableProject.segments,
      equipment: syncableProject.equipment,
      computational_properties: syncableProject.computational_properties,
      code_standards: syncableProject.code_standards
    };
  }
  convertToSyncableProject(project) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[10]++;
    cov_1w1kp6aaxl().s[41]++;
    // Convert legacy Project to SyncableProject format
    return {
      ...project,
      sync: {
        version: 1,
        lastModified: new Date(),
        lastModifiedBy: project.userId,
        syncStatus: 'local',
        changeLog: [],
        isDeleted: false
      },
      collaboration: {
        sharing: {
          isShared: false,
          sharedWith: [],
          permissions: {}
        },
        comments: [],
        lock: {
          isLocked: false
        }
      },
      offline: {
        backup: {
          autoBackup: true
        },
        exports: []
      }
    };
  }
  generateUUID() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[11]++;
    cov_1w1kp6aaxl().s[42]++;
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().f[12]++;
      const r =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[43]++, Math.random() * 16 | 0);
      const v =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[44]++, c == 'x' ?
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[16][0]++, r) :
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[16][1]++, r & 0x3 | 0x8));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[45]++;
      return v.toString(16);
    });
  }
  generateProjectNumber() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[13]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[46]++, Date.now().toString().slice(-6));
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[47]++;
    return `PRJ-${timestamp}`;
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[48]++;
exports.EnhancedProjectService = EnhancedProjectService;
/**
 * Enhanced user service with DataService integration
 */
class EnhancedUserService {
  constructor(dataService) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[14]++;
    cov_1w1kp6aaxl().s[49]++;
    this.dataService = dataService;
  }
  async getCurrentUser() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[15]++;
    cov_1w1kp6aaxl().s[50]++;
    try {
      const syncableUser =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[51]++, await this.dataService.getCurrentUser());
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[52]++;
      return syncableUser ?
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[17][0]++, this.convertToLegacyUser(syncableUser)) :
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[17][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[53]++;
      console.error('Failed to get current user:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[54]++;
      throw error;
    }
  }
  async getUserById(id) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[16]++;
    cov_1w1kp6aaxl().s[55]++;
    try {
      const syncableUser =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[56]++, await this.dataService.getUser(id));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[57]++;
      return syncableUser ?
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[18][0]++, this.convertToLegacyUser(syncableUser)) :
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[18][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[58]++;
      console.error('Failed to get user:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[59]++;
      throw error;
    }
  }
  async updateUser(user) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[17]++;
    cov_1w1kp6aaxl().s[60]++;
    try {
      const syncableUser =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[61]++, this.convertToSyncableUser(user));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[62]++;
      await this.dataService.saveUser(syncableUser);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[63]++;
      console.error('Failed to update user:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[64]++;
      throw error;
    }
  }
  convertToLegacyUser(syncableUser) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[18]++;
    cov_1w1kp6aaxl().s[65]++;
    return {
      id: syncableUser.id,
      email: syncableUser.email,
      name: syncableUser.name,
      tier: syncableUser.tier,
      company: syncableUser.company,
      licenseKey: syncableUser.licenseKey,
      createdAt: syncableUser.createdAt,
      updatedAt: syncableUser.updatedAt
    };
  }
  convertToSyncableUser(user) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[19]++;
    // Map super_admin to enterprise for SyncableUser compatibility
    const syncTier =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[66]++, user.tier === 'super_admin' ?
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().b[19][0]++, 'enterprise') :
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().b[19][1]++, user.tier));
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[67]++;
    return {
      ...user,
      name:
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[20][0]++, user.name) ||
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[20][1]++, 'Unknown User'),
      // Ensure name is always a string
      tier: syncTier,
      // Use mapped tier
      settings: {},
      // Add default empty settings
      sync: {
        version: 1,
        lastModified: new Date(),
        lastModifiedBy: user.id,
        syncStatus: 'local',
        changeLog: [],
        isDeleted: false
      },
      offline: {
        preferences: {
          autoSave: true,
          backupFrequency: 'weekly',
          exportFormat: 'json'
        },
        licenseValidation: {
          isValid: true,
          features: ['air_duct_sizer', 'project_management', 'basic_export']
        }
      }
    };
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[68]++;
exports.EnhancedUserService = EnhancedUserService;
/**
 * Enhanced calculation service
 * TODO: Implement calculation service without backend dependencies
 */
class EnhancedCalculationService {
  // private calculator: AirDuctCalculator;
  constructor() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[20]++;
  } // this.calculator = new AirDuctCalculator();
  async calculateDuctSizing(inputs) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[21]++;
    cov_1w1kp6aaxl().s[69]++;
    try {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[70]++;
      // TODO: Implement actual calculation logic
      return {
        success: false,
        input_data: inputs,
        warnings: ['Calculation service not yet implemented'],
        errors: ['Calculation service is under development']
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[71]++;
      console.error('Failed to calculate duct sizing:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[72]++;
      throw error;
    }
  }
  async validateResults(results) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[22]++;
    cov_1w1kp6aaxl().s[73]++;
    try {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[74]++;
      return {
        valid: results.success,
        warnings:
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[21][0]++, results.warnings) ||
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[21][1]++, []),
        errors: results.success ?
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[22][0]++, []) :
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[22][1]++, ['Calculation failed'])
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[75]++;
      console.error('Failed to validate results:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[76]++;
      throw error;
    }
  }
  async getCalculationHistory(projectId) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[23]++;
    cov_1w1kp6aaxl().s[77]++;
    try {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[78]++;
      // Future enhancement: store calculation history
      return [];
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[79]++;
      console.error('Failed to get calculation history:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[80]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[81]++;
exports.EnhancedCalculationService = EnhancedCalculationService;
/**
 * Enhanced validation service
 * TODO: Implement validation service without backend dependencies
 */
class EnhancedValidationService {
  // private smacnaValidator: SMACNAValidator;
  constructor() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[24]++;
  } // this.smacnaValidator = new SMACNAValidator();
  async validateProject(project) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[25]++;
    cov_1w1kp6aaxl().s[82]++;
    try {
      const errors =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[83]++, []);
      const warnings =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[84]++, []);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[85]++;
      if (!project.project_name?.trim()) {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().b[23][0]++;
        cov_1w1kp6aaxl().s[86]++;
        errors.push('Project name is required');
      } else
      /* istanbul ignore next */
      {
        cov_1w1kp6aaxl().b[23][1]++;
      }
      cov_1w1kp6aaxl().s[87]++;
      if (project.rooms.length === 0) {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().b[24][0]++;
        cov_1w1kp6aaxl().s[88]++;
        warnings.push('Project has no rooms defined');
      } else
      /* istanbul ignore next */
      {
        cov_1w1kp6aaxl().b[24][1]++;
      }
      cov_1w1kp6aaxl().s[89]++;
      if (project.segments.length === 0) {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().b[25][0]++;
        cov_1w1kp6aaxl().s[90]++;
        warnings.push('Project has no duct segments defined');
      } else
      /* istanbul ignore next */
      {
        cov_1w1kp6aaxl().b[25][1]++;
      }
      cov_1w1kp6aaxl().s[91]++;
      return {
        valid: errors.length === 0,
        errors,
        warnings
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[92]++;
      console.error('Failed to validate project:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[93]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[94]++;
exports.EnhancedValidationService = EnhancedValidationService;
/**
 * Enhanced export service with DataService integration
 */
class EnhancedExportService {
  constructor(dataService) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[26]++;
    cov_1w1kp6aaxl().s[95]++;
    this.dataService = dataService;
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[96]++;
    this.exportService = (0, ImportExportService_1.createExportService)();
  }
  async exportProject(projectId, options) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[27]++;
    cov_1w1kp6aaxl().s[97]++;
    try {
      const project =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[98]++, await this.dataService.getProject(projectId));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[99]++;
      if (!project) {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().b[26][0]++;
        cov_1w1kp6aaxl().s[100]++;
        throw new Error(`Project ${projectId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_1w1kp6aaxl().b[26][1]++;
      }
      // Map export format to DataService format
      const dataServiceFormat =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[101]++, options.format === 'excel' ?
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[27][0]++, 'xlsx') :
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[27][1]++, options.format === 'bom' ?
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[28][0]++, 'csv') :
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[28][1]++, options.format)));
      const result =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[102]++, await this.exportService.exportEntity('project', project, dataServiceFormat));
      // Convert DataService ExportResult to air-duct-sizer ExportResult
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[103]++;
      return {
        success: result.success,
        exportId: crypto.randomUUID(),
        // Generate missing exportId
        downloadUrl: result.downloadUrl,
        error: result.error
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[104]++;
      console.error('Failed to export project:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[105]++;
      throw error;
    }
  }
  async getExportStatus(exportId) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[28]++;
    cov_1w1kp6aaxl().s[106]++;
    try {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[107]++;
      return {
        success: true,
        exportId: exportId,
        downloadUrl: `/api/exports/${exportId}/download`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[108]++;
      console.error('Failed to get export status:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[109]++;
      throw error;
    }
  }
  async downloadExport(exportId) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[29]++;
    cov_1w1kp6aaxl().s[110]++;
    try {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[111]++;
      return new Blob(['Mock export content'], {
        type: 'application/pdf'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[112]++;
      console.error('Failed to download export:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[113]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[114]++;
exports.EnhancedExportService = EnhancedExportService;
/**
 * Enhanced tier service
 */
class EnhancedTierService {
  constructor(dataService) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[30]++;
    cov_1w1kp6aaxl().s[115]++;
    this.dataService = dataService;
  }
  async getCurrentTier() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[31]++;
    cov_1w1kp6aaxl().s[116]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[117]++, await this.dataService.getCurrentUser());
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[118]++;
      return /* istanbul ignore next */(cov_1w1kp6aaxl().b[29][0]++, user?.tier) ||
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[29][1]++, 'free');
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[119]++;
      console.error('Failed to get current tier:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[120]++;
      return 'free';
    }
  }
  async hasFeatureAccess(feature) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[32]++;
    cov_1w1kp6aaxl().s[121]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[122]++, await this.dataService.getCurrentUser());
      const flag =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[123]++, await this.dataService.getFeatureFlag(feature, user?.id));
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[124]++;
      return /* istanbul ignore next */(cov_1w1kp6aaxl().b[30][0]++, flag?.enabled) ||
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().b[30][1]++, false);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[125]++;
      console.error('Failed to check feature access:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[126]++;
      return false;
    }
  }
  async getTierLimits() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[33]++;
    cov_1w1kp6aaxl().s[127]++;
    try {
      const tier =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[128]++, await this.getCurrentTier());
      const limits =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[129]++, {
        free: {
          maxRooms: 5,
          maxSegments: 10,
          maxProjects: 3,
          canEditComputationalProperties: false,
          canExportWithoutWatermark: false,
          canUseSimulation: false,
          canUseCatalog: false
        },
        pro: {
          maxRooms: 50,
          maxSegments: 100,
          maxProjects: -1,
          canEditComputationalProperties: true,
          canExportWithoutWatermark: true,
          canUseSimulation: true,
          canUseCatalog: true
        },
        enterprise: {
          maxRooms: -1,
          maxSegments: -1,
          maxProjects: -1,
          canEditComputationalProperties: true,
          canExportWithoutWatermark: true,
          canUseSimulation: true,
          canUseCatalog: true
        },
        super_admin: {
          maxRooms: -1,
          maxSegments: -1,
          maxProjects: -1,
          canEditComputationalProperties: true,
          canExportWithoutWatermark: true,
          canUseSimulation: true,
          canUseCatalog: true
        }
      });
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[130]++;
      return limits[tier];
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[131]++;
      console.error('Failed to get tier limits:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[132]++;
      return {
        maxRooms: 5,
        maxSegments: 10,
        maxProjects: 3,
        canEditComputationalProperties: false,
        canExportWithoutWatermark: false,
        canUseSimulation: false,
        canUseCatalog: false
      };
    }
  }
  async upgradeTier(newTier) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[34]++;
    cov_1w1kp6aaxl().s[133]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_1w1kp6aaxl().s[134]++, await this.dataService.getCurrentUser());
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[135]++;
      if (user) {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().b[31][0]++;
        // Map super_admin to enterprise for SyncableUser compatibility
        const syncTier =
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().s[136]++, newTier === 'super_admin' ?
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[32][0]++, 'enterprise') :
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().b[32][1]++, newTier));
        const syncableUser =
        /* istanbul ignore next */
        (cov_1w1kp6aaxl().s[137]++, {
          ...user,
          name:
          /* istanbul ignore next */
          (cov_1w1kp6aaxl().b[33][0]++, user.name) ||
          /* istanbul ignore next */
          (cov_1w1kp6aaxl().b[33][1]++, 'Unknown User'),
          // Ensure name is always a string
          tier: syncTier,
          settings: {},
          // Add default empty settings
          updatedAt: new Date(),
          sync: {
            version: 1,
            lastModified: new Date(),
            lastModifiedBy: user.id,
            syncStatus: 'local',
            changeLog: [],
            isDeleted: false
          },
          offline: {
            preferences: {
              autoSave: true,
              backupFrequency: 'weekly',
              exportFormat: 'json'
            },
            licenseValidation: {
              isValid: true,
              features: ['air_duct_sizer', 'project_management', 'basic_export']
            }
          }
        });
        /* istanbul ignore next */
        cov_1w1kp6aaxl().s[138]++;
        await this.dataService.saveUser(syncableUser);
      } else
      /* istanbul ignore next */
      {
        cov_1w1kp6aaxl().b[31][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[139]++;
      console.error('Failed to upgrade tier:', error);
      /* istanbul ignore next */
      cov_1w1kp6aaxl().s[140]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[141]++;
exports.EnhancedTierService = EnhancedTierService;
/**
 * Enhanced sync service for future online mode
 */
class EnhancedSyncService {
  constructor(dataService) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[35]++;
    cov_1w1kp6aaxl().s[142]++;
    this.dataService = dataService;
  }
  async getPendingOperations() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[36]++;
    cov_1w1kp6aaxl().s[143]++;
    return await this.dataService.getPendingSyncOperations();
  }
  async getConnectionStatus() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[37]++;
    cov_1w1kp6aaxl().s[144]++;
    return this.dataService.getConnectionStatus();
  }
  async forceSyncAll() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[38]++;
    cov_1w1kp6aaxl().s[145]++;
    return await this.dataService.forceSyncAll();
  }
  async getSyncStatistics() {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().f[39]++;
    cov_1w1kp6aaxl().s[146]++;
    return await this.dataService.getSyncStatistics();
  }
}
/* istanbul ignore next */
cov_1w1kp6aaxl().s[147]++;
exports.EnhancedSyncService = EnhancedSyncService;
/**
 * Create enhanced offline service container with robust error handling
 */
async function createEnhancedOfflineServiceContainer() {
  /* istanbul ignore next */
  cov_1w1kp6aaxl().f[40]++;
  cov_1w1kp6aaxl().s[148]++;
  try {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[149]++;
    console.log('🔧 Initializing DataService...');
    // Initialize DataService with timeout
    const dataService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[150]++, await (0, DataService_1.createDataService)('local'));
    // Add timeout for data service initialization
    const initPromise =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[151]++, dataService.initialize());
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[152]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().f[41]++;
      cov_1w1kp6aaxl().s[153]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1w1kp6aaxl().f[42]++;
        cov_1w1kp6aaxl().s[154]++;
        reject(new Error('DataService initialization timed out after 20 seconds'));
      }, 20000);
    }));
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[155]++;
    await Promise.race([initPromise, timeoutPromise]);
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[156]++;
    console.log('✅ DataService initialized successfully');
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[157]++;
    console.log('🔧 Creating service instances...');
    // Create services with error handling
    const projectService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[158]++, new EnhancedProjectService(dataService));
    const userService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[159]++, new EnhancedUserService(dataService));
    const calculationService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[160]++, new EnhancedCalculationService());
    const validationService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[161]++, new EnhancedValidationService());
    const exportService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[162]++, new EnhancedExportService(dataService));
    const tierService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[163]++, new EnhancedTierService(dataService));
    const syncService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[164]++, new EnhancedSyncService(dataService));
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[165]++;
    console.log('🔧 Creating auxiliary services...');
    // Create import/export services
    const importService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[166]++, (0, ImportExportService_1.createImportService)());
    const backupService =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[167]++, (0, ImportExportService_1.createBackupService)());
    // Create feature manager
    const featureManager =
    /* istanbul ignore next */
    (cov_1w1kp6aaxl().s[168]++, (0, BrowserFeatureManager_1.createBrowserFeatureManager)(dataService));
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[169]++;
    console.log('✅ All services created successfully');
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[170]++;
    return {
      dataService,
      projectService,
      userService,
      calculationService,
      validationService,
      exportService,
      tierService,
      featureManager,
      importService,
      backupService,
      syncService
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[171]++;
    console.error('❌ Failed to create enhanced offline service container:', error);
    // Re-throw with more context
    /* istanbul ignore next */
    cov_1w1kp6aaxl().s[172]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1w1kp6aaxl().b[34][0]++;
      cov_1w1kp6aaxl().s[173]++;
      throw new Error(`Service container creation failed: ${error.message}`);
    } else
    /* istanbul ignore next */
    {
      cov_1w1kp6aaxl().b[34][1]++;
    }
    cov_1w1kp6aaxl().s[174]++;
    throw new Error('Unknown error occurred while creating service container');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,