ab016a4006d21e47575019694e211a63
"use strict";

/**
 * System Optimization Engine for Phase 3 Priority 2
 *
 * Main optimization engine providing comprehensive system optimization capabilities including:
 * - Multi-objective optimization with Pareto analysis
 * - Multiple optimization algorithms (GA, SA, PSO, GD)
 * - Constraint handling and validation
 * - Performance analysis and recommendations
 * - Integration with existing Phase 1/2/3 Priority 1 components
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_22ysz9dgtl() {
  var path = "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemOptimizationEngine.ts";
  var hash = "54520269af743d0215eae9e8045ec681db732691";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemOptimizationEngine.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "2": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 76
        }
      },
      "3": {
        start: {
          line: 19,
          column: 35
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "4": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 67
        }
      },
      "5": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "6": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 23,
          column: 85
        }
      },
      "7": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "8": {
        start: {
          line: 25,
          column: 46
        },
        end: {
          line: 25,
          column: 94
        }
      },
      "9": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "10": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 78
        }
      },
      "11": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 84
        }
      },
      "12": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 93
        }
      },
      "13": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "14": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 94
        }
      },
      "15": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 83
        }
      },
      "16": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 83
        }
      },
      "17": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 43
        }
      },
      "18": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "19": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 54
        }
      },
      "20": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 71
        }
      },
      "21": {
        start: {
          line: 58,
          column: 38
        },
        end: {
          line: 58,
          column: 75
        }
      },
      "22": {
        start: {
          line: 60,
          column: 40
        },
        end: {
          line: 60,
          column: 79
        }
      },
      "23": {
        start: {
          line: 62,
          column: 30
        },
        end: {
          line: 62,
          column: 70
        }
      },
      "24": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 129
        }
      },
      "25": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 89
        }
      },
      "26": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 78
        }
      },
      "27": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 80
        }
      },
      "28": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 31
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 57
        }
      },
      "30": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 69
        }
      },
      "31": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "32": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 91
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "34": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 92
        }
      },
      "35": {
        start: {
          line: 87,
          column: 39
        },
        end: {
          line: 87,
          column: 123
        }
      },
      "36": {
        start: {
          line: 87,
          column: 80
        },
        end: {
          line: 87,
          column: 122
        }
      },
      "37": {
        start: {
          line: 89,
          column: 40
        },
        end: {
          line: 89,
          column: 129
        }
      },
      "38": {
        start: {
          line: 89,
          column: 78
        },
        end: {
          line: 89,
          column: 128
        }
      },
      "39": {
        start: {
          line: 91,
          column: 32
        },
        end: {
          line: 115,
          column: 14
        }
      },
      "40": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 116,
          column: 117
        }
      },
      "41": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 93
        }
      },
      "42": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 26
        }
      },
      "43": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 73
        }
      },
      "44": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 24
        }
      },
      "45": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "46": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 111
        }
      },
      "47": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "48": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 116
        }
      },
      "49": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "50": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 85
        }
      },
      "51": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "52": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 84
        }
      },
      "53": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "54": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 85
        }
      },
      "55": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "56": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "57": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 78
        }
      },
      "58": {
        start: {
          line: 250,
          column: 28
        },
        end: {
          line: 250,
          column: 99
        }
      },
      "59": {
        start: {
          line: 250,
          column: 79
        },
        end: {
          line: 250,
          column: 95
        }
      },
      "60": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "61": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 88
        }
      },
      "62": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 84
        }
      },
      "63": {
        start: {
          line: 253,
          column: 57
        },
        end: {
          line: 253,
          column: 82
        }
      },
      "64": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 306,
          column: 10
        }
      },
      "65": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "66": {
        start: {
          line: 263,
          column: 41
        },
        end: {
          line: 263,
          column: 108
        }
      },
      "67": {
        start: {
          line: 265,
          column: 42
        },
        end: {
          line: 274,
          column: 18
        }
      },
      "68": {
        start: {
          line: 276,
          column: 42
        },
        end: {
          line: 276,
          column: 43
        }
      },
      "69": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 299,
          column: 17
        }
      },
      "70": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 297,
          column: 21
        }
      },
      "71": {
        start: {
          line: 281,
          column: 28
        },
        end: {
          line: 281,
          column: 81
        }
      },
      "72": {
        start: {
          line: 282,
          column: 28
        },
        end: {
          line: 282,
          column: 34
        }
      },
      "73": {
        start: {
          line: 284,
          column: 28
        },
        end: {
          line: 284,
          column: 114
        }
      },
      "74": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 34
        }
      },
      "75": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 106
        }
      },
      "76": {
        start: {
          line: 288,
          column: 28
        },
        end: {
          line: 288,
          column: 34
        }
      },
      "77": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 290,
          column: 107
        }
      },
      "78": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 291,
          column: 34
        }
      },
      "79": {
        start: {
          line: 293,
          column: 28
        },
        end: {
          line: 293,
          column: 114
        }
      },
      "80": {
        start: {
          line: 294,
          column: 28
        },
        end: {
          line: 294,
          column: 34
        }
      },
      "81": {
        start: {
          line: 296,
          column: 28
        },
        end: {
          line: 296,
          column: 85
        }
      },
      "82": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 298,
          column: 77
        }
      },
      "83": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 43
        }
      },
      "84": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 80
        }
      },
      "85": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 40
        }
      },
      "86": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 325,
          column: 11
        }
      },
      "87": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 324,
          column: 14
        }
      },
      "88": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 323,
          column: 17
        }
      },
      "89": {
        start: {
          line: 316,
          column: 45
        },
        end: {
          line: 316,
          column: 112
        }
      },
      "90": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 92
        }
      },
      "91": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 90
        }
      },
      "92": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 322,
          column: 44
        }
      },
      "93": {
        start: {
          line: 332,
          column: 33
        },
        end: {
          line: 332,
          column: 71
        }
      },
      "94": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "95": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 67
        }
      },
      "96": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 32
        }
      },
      "97": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "98": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 61
        }
      },
      "99": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 22
        }
      },
      "100": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 64
        }
      },
      "101": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 22
        }
      },
      "102": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 65
        }
      },
      "103": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 22
        }
      },
      "104": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 67
        }
      },
      "105": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 22
        }
      },
      "106": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 61
        }
      },
      "107": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 22
        }
      },
      "108": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 72
        }
      },
      "109": {
        start: {
          line: 385,
          column: 25
        },
        end: {
          line: 385,
          column: 97
        }
      },
      "110": {
        start: {
          line: 386,
          column: 37
        },
        end: {
          line: 386,
          column: 41
        }
      },
      "111": {
        start: {
          line: 387,
          column: 34
        },
        end: {
          line: 387,
          column: 73
        }
      },
      "112": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 33
        }
      },
      "113": {
        start: {
          line: 395,
          column: 27
        },
        end: {
          line: 395,
          column: 28
        }
      },
      "114": {
        start: {
          line: 396,
          column: 31
        },
        end: {
          line: 396,
          column: 32
        }
      },
      "115": {
        start: {
          line: 397,
          column: 28
        },
        end: {
          line: 397,
          column: 29
        }
      },
      "116": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "117": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 71
        }
      },
      "118": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 47
        }
      },
      "119": {
        start: {
          line: 405,
          column: 34
        },
        end: {
          line: 405,
          column: 102
        }
      },
      "120": {
        start: {
          line: 406,
          column: 27
        },
        end: {
          line: 406,
          column: 31
        }
      },
      "121": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 55
        }
      },
      "122": {
        start: {
          line: 409,
          column: 31
        },
        end: {
          line: 409,
          column: 33
        }
      },
      "123": {
        start: {
          line: 410,
          column: 26
        },
        end: {
          line: 410,
          column: 92
        }
      },
      "124": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 411,
          column: 25
        }
      },
      "125": {
        start: {
          line: 418,
          column: 30
        },
        end: {
          line: 418,
          column: 31
        }
      },
      "126": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "127": {
        start: {
          line: 420,
          column: 33
        },
        end: {
          line: 420,
          column: 92
        }
      },
      "128": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 63
        }
      },
      "129": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 48
        }
      },
      "130": {
        start: {
          line: 430,
          column: 43
        },
        end: {
          line: 430,
          column: 76
        }
      },
      "131": {
        start: {
          line: 431,
          column: 31
        },
        end: {
          line: 431,
          column: 66
        }
      },
      "132": {
        start: {
          line: 432,
          column: 27
        },
        end: {
          line: 432,
          column: 70
        }
      },
      "133": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 41
        }
      },
      "134": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 19
        }
      },
      "135": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 18
        }
      },
      "136": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 17
        }
      },
      "137": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "138": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 45
        }
      },
      "139": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 461,
          column: 47
        }
      },
      "140": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 42
        }
      },
      "141": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 44
        }
      },
      "142": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 84
        }
      },
      "143": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 18
        }
      },
      "144": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 480,
          column: 10
        }
      },
      "145": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 18
        }
      },
      "146": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 32
        }
      },
      "147": {
        start: {
          line: 488,
          column: 30
        },
        end: {
          line: 488,
          column: 31
        }
      },
      "148": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 32
        }
      },
      "149": {
        start: {
          line: 492,
          column: 30
        },
        end: {
          line: 492,
          column: 31
        }
      },
      "150": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 92
        }
      },
      "151": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 500,
          column: 70
        }
      },
      "152": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 22
        }
      },
      "153": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 518,
          column: 10
        }
      },
      "154": {
        start: {
          line: 521,
          column: 0
        },
        end: {
          line: 521,
          column: 60
        }
      },
      "155": {
        start: {
          line: 522,
          column: 0
        },
        end: {
          line: 522,
          column: 43
        }
      },
      "156": {
        start: {
          line: 523,
          column: 0
        },
        end: {
          line: 523,
          column: 55
        }
      },
      "157": {
        start: {
          line: 524,
          column: 0
        },
        end: {
          line: 524,
          column: 62
        }
      },
      "158": {
        start: {
          line: 526,
          column: 0
        },
        end: {
          line: 526,
          column: 57
        }
      },
      "159": {
        start: {
          line: 527,
          column: 0
        },
        end: {
          line: 527,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 120
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 118
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 80
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 87,
            column: 73
          },
          end: {
            line: 87,
            column: 74
          }
        },
        loc: {
          start: {
            line: 87,
            column: 80
          },
          end: {
            line: 87,
            column: 122
          }
        },
        line: 87
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 89,
            column: 64
          },
          end: {
            line: 89,
            column: 65
          }
        },
        loc: {
          start: {
            line: 89,
            column: 78
          },
          end: {
            line: 89,
            column: 128
          }
        },
        line: 89
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 90
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 128
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 97
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 171
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 48
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 233
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 250,
            column: 65
          },
          end: {
            line: 250,
            column: 66
          }
        },
        loc: {
          start: {
            line: 250,
            column: 79
          },
          end: {
            line: 250,
            column: 95
          }
        },
        line: 250
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 253,
            column: 50
          },
          end: {
            line: 253,
            column: 51
          }
        },
        loc: {
          start: {
            line: 253,
            column: 57
          },
          end: {
            line: 253,
            column: 82
          }
        },
        line: 253
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 44
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 259
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 260,
            column: 15
          },
          end: {
            line: 260,
            column: 16
          }
        },
        loc: {
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 306,
            column: 9
          }
        },
        line: 260
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 46
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 311
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 312,
            column: 39
          },
          end: {
            line: 312,
            column: 40
          }
        },
        loc: {
          start: {
            line: 312,
            column: 53
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 312
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 313,
            column: 19
          },
          end: {
            line: 313,
            column: 20
          }
        },
        loc: {
          start: {
            line: 313,
            column: 34
          },
          end: {
            line: 324,
            column: 13
          }
        },
        line: 313
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 57
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 330
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 51
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 342
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 51
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 365
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 54
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 368
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        loc: {
          start: {
            line: 371,
            column: 55
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 371
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 57
          },
          end: {
            line: 376,
            column: 5
          }
        },
        line: 374
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 51
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 377
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        },
        loc: {
          start: {
            line: 383,
            column: 75
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 383
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 67
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 393
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 68
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 416
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 74
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 428
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 49
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 436
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 66
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 440
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 447,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        loc: {
          start: {
            line: 447,
            column: 71
          },
          end: {
            line: 450,
            column: 5
          }
        },
        line: 447
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        },
        loc: {
          start: {
            line: 454,
            column: 47
          },
          end: {
            line: 469,
            column: 5
          }
        },
        line: 454
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 471,
            column: 4
          },
          end: {
            line: 471,
            column: 5
          }
        },
        loc: {
          start: {
            line: 471,
            column: 57
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 471
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 475,
            column: 4
          },
          end: {
            line: 475,
            column: 5
          }
        },
        loc: {
          start: {
            line: 475,
            column: 50
          },
          end: {
            line: 481,
            column: 5
          }
        },
        line: 475
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 53
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 482
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        loc: {
          start: {
            line: 486,
            column: 62
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 486
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 488,
            column: 15
          },
          end: {
            line: 488,
            column: 16
          }
        },
        loc: {
          start: {
            line: 488,
            column: 30
          },
          end: {
            line: 488,
            column: 31
          }
        },
        line: 488
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 41
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 490
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 492,
            column: 15
          },
          end: {
            line: 492,
            column: 16
          }
        },
        loc: {
          start: {
            line: 492,
            column: 30
          },
          end: {
            line: 492,
            column: 31
          }
        },
        line: 492
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 495,
            column: 4
          },
          end: {
            line: 495,
            column: 5
          }
        },
        loc: {
          start: {
            line: 495,
            column: 43
          },
          end: {
            line: 497,
            column: 5
          }
        },
        line: 495
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        loc: {
          start: {
            line: 498,
            column: 109
          },
          end: {
            line: 501,
            column: 5
          }
        },
        line: 498
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 502,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        },
        loc: {
          start: {
            line: 502,
            column: 64
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 502
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 506,
            column: 5
          }
        },
        loc: {
          start: {
            line: 506,
            column: 56
          },
          end: {
            line: 519,
            column: 5
          }
        },
        line: 506
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 50,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 118
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 80,
            column: 116
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 61
          },
          end: {
            line: 80,
            column: 116
          }
        }],
        line: 80
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "4": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 23
          }
        }, {
          start: {
            line: 234,
            column: 27
          },
          end: {
            line: 234,
            column: 55
          }
        }],
        line: 234
      },
      "5": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "6": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "7": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "8": {
        loc: {
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 245,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 245,
            column: 32
          }
        }, {
          start: {
            line: 245,
            column: 36
          },
          end: {
            line: 245,
            column: 86
          }
        }],
        line: 245
      },
      "9": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "10": {
        loc: {
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 297,
            column: 21
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 280,
            column: 24
          },
          end: {
            line: 282,
            column: 34
          }
        }, {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 285,
            column: 34
          }
        }, {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 288,
            column: 34
          }
        }, {
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 291,
            column: 34
          }
        }, {
          start: {
            line: 292,
            column: 24
          },
          end: {
            line: 294,
            column: 34
          }
        }, {
          start: {
            line: 295,
            column: 24
          },
          end: {
            line: 296,
            column: 85
          }
        }],
        line: 279
      },
      "11": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 347,
            column: 22
          }
        }, {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 350,
            column: 22
          }
        }, {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 353,
            column: 22
          }
        }, {
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 356,
            column: 22
          }
        }, {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 359,
            column: 22
          }
        }, {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 361,
            column: 72
          }
        }],
        line: 344
      },
      "12": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 456,
            column: 83
          }
        }, {
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 457,
            column: 84
          }
        }, {
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 459,
            column: 45
          }
        }, {
          start: {
            line: 460,
            column: 12
          },
          end: {
            line: 461,
            column: 47
          }
        }, {
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 463,
            column: 42
          }
        }, {
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 465,
            column: 44
          }
        }, {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 467,
            column: 84
          }
        }],
        line: 455
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0, 0],
      "11": [0, 0, 0, 0, 0, 0],
      "12": [0, 0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemOptimizationEngine.ts",
      mappings: ";AAAA;;;;;;;;;;;;GAYG;;;AAEH,6EAgByC;AAEzC,kDAAkD;AAClD,yEAAsE;AAKtE,iCAAiC;AACjC,oEAAiE;AACjE,wEAAqE;AACrE,sFAAmF;AACnF,kEAA+D;AAC/D,+FAA4F;AAE5F;;;GAGG;AACH,MAAa,wBAAwB;IAenC;;OAEG;IACI,MAAM,CAAC,UAAU;QACtB,IAAI,CAAC;YACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,mCAAgB,EAAE,CAAC;YAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,uCAAkB,EAAE,CAAC;YACnD,IAAI,CAAC,aAAa,GAAG,IAAI,qDAAyB,EAAE,CAAC;YACrD,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,EAAE,CAAC;YAE7C,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,CAAC,OAAO,2BAA2B,CAAC,CAAC;QACpF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,gDAAgD,EAAE,KAAK,CAAC,CAAC;YACvE,MAAM,IAAI,KAAK,CAAC,8CAA8C,KAAK,EAAE,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,KAAK,CAAC,cAAc,CAChC,OAA4B,EAC5B,YAAmC,+CAAqB,CAAC,iBAAiB;QAE1E,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAEpC,IAAI,CAAC;YACH,gCAAgC;YAChC,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;YAE1C,mCAAmC;YACnC,MAAM,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YAE5D,4BAA4B;YAC5B,MAAM,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;YAEhE,8BAA8B;YAC9B,MAAM,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;YAEpE,8CAA8C;YAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAE3D,mBAAmB;YACnB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,SAAS,EACT,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,EACP,cAAc,CACf,CAAC;YAEF,mCAAmC;YACnC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YAE9E,6BAA6B;YAC7B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;YAClE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;YAEpE,OAAO,WAAW,CAAC;QAErB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAc,EAAE,SAAS,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,KAAK,CAAC,sBAAsB,CACxC,OAA4B,EAC5B,YAAmC,+CAAqB,CAAC,OAAO;QAGhE,IAAI,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;QACjF,CAAC;QAED,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,sDAAsD,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;YAEhF,6BAA6B;YAC7B,MAAM,kBAAkB,GAAG,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CACjE,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,OAAO,CAAC,CAC3C,CAAC;YAEF,8BAA8B;YAC9B,MAAM,mBAAmB,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAC/D,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,OAAO,CAAC,CACnD,CAAC;YAEF,6CAA6C;YAC7C,MAAM,WAAW,GAAG,IAAI,yEAAmC,CAAC;gBAC1D,SAAS,EAAE,OAAO;gBAClB,cAAc,EAAE,GAAG;gBACnB,cAAc,EAAE,GAAG;gBACnB,aAAa,EAAE,GAAG;gBAClB,YAAY,EAAE,GAAG;gBACjB,SAAS,EAAE,EAAE;gBACb,kBAAkB,EAAE,SAAS;gBAC7B,kBAAkB,EAAE,IAAI;gBACxB,cAAc,EAAE;oBACd,YAAY,EAAE,GAAG;oBACjB,kBAAkB,EAAE,IAAI;oBACxB,oBAAoB,EAAE,IAAI;oBAC1B,WAAW,EAAE;wBACX,OAAO,EAAE,IAAI;wBACb,cAAc,EAAE,EAAE;qBACnB;oBACD,OAAO,EAAE;wBACP,OAAO,EAAE,IAAI;wBACb,aAAa,EAAE,GAAG;qBACnB;iBACF;gBACD,oBAAoB,EAAE,IAAI;gBAC1B,WAAW,EAAE,GAAG;aACjB,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,sBAAsB,CAAC,OAAO,EAAE,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;YAE1G,OAAO,CAAC,GAAG,CAAC,uDAAuD,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;YACjF,OAAO,MAAM,CAAC;QAEhB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;YAC7D,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,KAAK,CAAC,qBAAqB,CACvC,mBAAwC,EACxC,eAA6C,EAC7C,WAAqC;QAGrC,mDAAmD;QACnD,MAAM,OAAO,GAAwB;YACnC,EAAE,EAAE,WAAW,mBAAmB,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;YACrD,IAAI,EAAE,iCAAiC,mBAAmB,CAAC,IAAI,EAAE;YACjE,WAAW,EAAE,yEAAyE;YACtF,mBAAmB;YACnB,SAAS,EAAE,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,EAAE,eAAe,CAAC;YAC9E,UAAU,EAAE,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC;YAC3D,WAAW;YACX,iBAAiB,EAAE;gBACjB,SAAS,EAAE,+CAAqB,CAAC,iBAAiB;gBAClD,UAAU,EAAE;oBACV,cAAc,EAAE,EAAE;oBAClB,aAAa,EAAE,GAAG;oBAClB,aAAa,EAAE,GAAG;oBAClB,YAAY,EAAE,GAAG;iBAClB;gBACD,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;aACnC;YACD,mBAAmB,EAAE;gBACnB,aAAa,EAAE,GAAG;gBAClB,cAAc,EAAE,IAAI;gBACpB,eAAe,EAAE,EAAE;gBACnB,oBAAoB,EAAE,KAAK;aAC5B;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,IAAI;gBACpB,gBAAgB,EAAE,IAAI;gBACtB,mBAAmB,EAAE,IAAI;gBACzB,mBAAmB,EAAE,KAAK;gBAC1B,cAAc,EAAE;oBACd,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,EAAE,EAAE;oBACvC,EAAE,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,EAAE,EAAE;iBAC7C;gBACD,YAAY,EAAE,MAAM;aACrB;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,+CAAqB,CAAC,iBAAiB,CAAC,CAAC;IAC/E,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAC1C,mBAAwC,EACxC,mBAAwB,EACxB,WAAqC;QAGrC,MAAM,OAAO,GAAwB;YACnC,EAAE,EAAE,UAAU,mBAAmB,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;YACpD,IAAI,EAAE,oCAAoC,mBAAmB,CAAC,IAAI,EAAE;YACpE,WAAW,EAAE,8DAA8D;YAC3E,mBAAmB;YACnB,SAAS,EAAE,IAAI,CAAC,iCAAiC,CAAC,mBAAmB,CAAC;YACtE,UAAU,EAAE;gBACV,UAAU,EAAE;oBACV;wBACE,EAAE,EAAE,oBAAoB;wBACxB,SAAS,EAAE,+CAAqB,CAAC,2BAA2B;wBAC5D,MAAM,EAAE,GAAG;wBACX,WAAW,EAAE,0CAA0C;wBACvD,kBAAkB,EAAE,IAAI,CAAC,6BAA6B,CAAC,mBAAmB,CAAC;wBAC3E,KAAK,EAAE,UAAU;qBAClB;oBACD;wBACE,EAAE,EAAE,YAAY;wBAChB,SAAS,EAAE,+CAAqB,CAAC,mBAAmB;wBACpD,MAAM,EAAE,GAAG;wBACX,WAAW,EAAE,kDAAkD;wBAC/D,kBAAkB,EAAE,IAAI,CAAC,2BAA2B,EAAE;wBACtD,KAAK,EAAE,KAAK;qBACb;iBACF;gBACD,iBAAiB,EAAE,cAAc;aAClC;YACD,WAAW;YACX,iBAAiB,EAAE;gBACjB,SAAS,EAAE,+CAAqB,CAAC,cAAc;gBAC/C,UAAU,EAAE;oBACV,cAAc,EAAE,EAAE;oBAClB,aAAa,EAAE,GAAG;oBAClB,aAAa,EAAE,GAAG;oBAClB,wBAAwB,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;iBACrC;gBACD,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;aACnC;YACD,mBAAmB,EAAE;gBACnB,aAAa,EAAE,GAAG;gBAClB,cAAc,EAAE,KAAK;gBACrB,eAAe,EAAE,EAAE;gBACnB,oBAAoB,EAAE,KAAK;aAC5B;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,IAAI;gBACpB,gBAAgB,EAAE,IAAI;gBACtB,mBAAmB,EAAE,IAAI;gBACzB,mBAAmB,EAAE,IAAI;gBACzB,cAAc,EAAE;oBACd,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,EAAE,EAAE;oBACvC,EAAE,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,EAAE;iBACzC;gBACD,YAAY,EAAE,MAAM;aACrB;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,+CAAqB,CAAC,cAAc,CAAC,CAAC;IACpF,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,2BAA2B,CAAC,OAA4B;QACrE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;YAChD,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACnC,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC1E,CAAC;QAED,IAAI,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC/C,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC3E,CAAC;QAED,2BAA2B;QAC3B,KAAK,MAAM,QAAQ,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC3E,MAAM,IAAI,KAAK,CAAC,+BAA+B,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YAChE,CAAC;QACH,CAAC;QAED,6BAA6B;QAC7B,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5F,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC;YACvC,OAAO,CAAC,IAAI,CAAC,4BAA4B,WAAW,sBAAsB,CAAC,CAAC;YAC5E,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,IAAI,WAAW,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,uBAAuB,CAAC,OAA4B;QACjE,OAAO,CAAC,SAAiC,EAAU,EAAE;YACnD,IAAI,CAAC;gBACH,0CAA0C;gBAC1C,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAClD,OAAO,CAAC,mBAAmB,EAC3B,SAAS,CACV,CAAC;gBAEF,8EAA8E;gBAC9E,MAAM,iBAAiB,GAAG,mDAAwB,CAAC,+BAA+B,CAAC;oBACjF,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;oBACnC,UAAU,EAAE,gBAAgB,CAAC,UAAU;oBACvC,gBAAgB,EAAE,gBAAgB,CAAC,gBAAgB;oBACnD,kBAAkB,EAAE;wBAClB,gBAAgB,EAAE,IAAI;wBACtB,eAAe,EAAE,IAAI;wBACrB,YAAY,EAAE,KAAK;qBACpB;iBACF,CAAC,CAAC;gBAEH,6BAA6B;gBAC7B,IAAI,mBAAmB,GAAG,CAAC,CAAC;gBAE5B,KAAK,MAAM,SAAS,IAAI,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;oBACtD,IAAI,cAAsB,CAAC;oBAE3B,QAAQ,SAAS,CAAC,SAAS,EAAE,CAAC;wBAC5B,KAAK,+CAAqB,CAAC,sBAAsB;4BAC/C,cAAc,GAAG,iBAAiB,CAAC,iBAAiB,CAAC;4BACrD,MAAM;wBAER,KAAK,+CAAqB,CAAC,2BAA2B;4BACpD,cAAc,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;4BACtF,MAAM;wBAER,KAAK,+CAAqB,CAAC,mBAAmB;4BAC5C,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;4BAC9E,MAAM;wBAER,KAAK,+CAAqB,CAAC,oBAAoB;4BAC7C,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;4BAC/E,MAAM;wBAER,KAAK,+CAAqB,CAAC,mBAAmB;4BAC5C,cAAc,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;4BACtF,MAAM;wBAER;4BACE,cAAc,GAAG,SAAS,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;oBAC7D,CAAC;oBAED,mBAAmB,IAAI,SAAS,CAAC,MAAM,GAAG,cAAc,CAAC;gBAC3D,CAAC;gBAED,OAAO,mBAAmB,CAAC;YAE7B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;gBAChE,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,6CAA6C;YACxE,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,yBAAyB,CAAC,OAA4B;QACnE,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAC1C,OAAO,CAAC,SAAiC,EAAU,EAAE;gBACnD,IAAI,CAAC;oBACH,0CAA0C;oBAC1C,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAClD,OAAO,CAAC,mBAAmB,EAC3B,SAAS,CACV,CAAC;oBAEF,oCAAoC;oBACpC,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,gBAAgB,EAAE,SAAS,CAAC,CAAC;gBAE1E,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,KAAK,CAAC,+BAA+B,UAAU,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBACtE,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,iDAAiD;gBAC5E,CAAC;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,sBAAsB,CACnC,UAA+B,EAC/B,SAAiC;QAEjC,sCAAsC;QACtC,MAAM,gBAAgB,GAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAErF,0DAA0D;QAC1D,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;YACjC,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,qBAAqB,CAClC,MAA2B,EAC3B,QAA8B;QAE9B,0CAA0C;QAC1C,QAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtB,KAAK,WAAW;gBACd,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBAC7C,MAAM;YACR,KAAK,cAAc;gBACjB,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBAChD,MAAM;YACR,KAAK,eAAe;gBAClB,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBACjD,MAAM;YACR,KAAK,iBAAiB;gBACpB,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBACnD,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBAC7C,MAAM;YACR;gBACE,OAAO,CAAC,IAAI,CAAC,0BAA0B,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,kFAAkF;IAC1E,MAAM,CAAC,qBAAqB,CAAC,MAA2B,EAAE,QAA8B;QAC9F,yCAAyC;IAC3C,CAAC;IAEO,MAAM,CAAC,wBAAwB,CAAC,MAA2B,EAAE,QAA8B;QACjG,4CAA4C;IAC9C,CAAC;IAEO,MAAM,CAAC,yBAAyB,CAAC,MAA2B,EAAE,QAA8B;QAClG,6CAA6C;IAC/C,CAAC;IAEO,MAAM,CAAC,2BAA2B,CAAC,MAA2B,EAAE,QAA8B;QACpG,+CAA+C;IACjD,CAAC;IAEO,MAAM,CAAC,qBAAqB,CAAC,MAA2B,EAAE,QAA8B;QAC9F,yCAAyC;IAC3C,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,0BAA0B,CACvC,iBAAsB,EACtB,gBAAqC;QAErC,kGAAkG;QAClG,MAAM,QAAQ,GAAG,iBAAiB,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,gBAAgB;QAC3G,MAAM,oBAAoB,GAAG,IAAI,CAAC,CAAC,iBAAiB;QACpD,MAAM,iBAAiB,GAAG,QAAQ,GAAG,KAAK,GAAG,oBAAoB,CAAC,CAAC,sBAAsB;QAEzF,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,kBAAkB,CAC/B,iBAAsB,EACtB,gBAAqC;QAErC,yEAAyE;QACzE,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,gBAAgB,GAAG,CAAC,CAAC;QACzB,IAAI,aAAa,GAAG,CAAC,CAAC;QAEtB,2BAA2B;QAC3B,KAAK,MAAM,OAAO,IAAI,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YAChD,YAAY,IAAI,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;QAC7D,CAAC;QAED,gEAAgE;QAChE,gBAAgB,GAAG,YAAY,GAAG,IAAI,CAAC;QAEvC,mCAAmC;QACnC,MAAM,iBAAiB,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;QAC/F,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,QAAQ;QACjC,aAAa,GAAG,iBAAiB,GAAG,UAAU,CAAC;QAE/C,oCAAoC;QACpC,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,MAAM,SAAS,GAAG,YAAY,GAAG,gBAAgB,GAAG,CAAC,aAAa,GAAG,cAAc,CAAC,CAAC;QAErF,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,mBAAmB,CAChC,iBAAsB,EACtB,gBAAqC;QAErC,8EAA8E;QAC9E,IAAI,eAAe,GAAG,CAAC,CAAC;QAExB,KAAK,MAAM,OAAO,IAAI,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YAChD,MAAM,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;YACjF,eAAe,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,CAAC,CAAC,0CAA0C;QAChG,CAAC;QAED,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,qBAAqB;IAChE,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,yBAAyB,CACtC,iBAAsB,EACtB,gBAAqC;QAErC,oCAAoC;QACpC,MAAM,0BAA0B,GAAG,iBAAiB,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,4BAA4B;QAClG,MAAM,cAAc,GAAG,iBAAiB,CAAC,iBAAiB,CAAC;QAC3D,MAAM,UAAU,GAAG,0BAA0B,GAAG,cAAc,CAAC;QAE/D,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,yBAAyB;IAC7D,CAAC;IAED,iDAAiD;IACzC,MAAM,CAAC,4BAA4B,CAAC,OAAY;QACtD,6BAA6B;QAC7B,OAAO,GAAG,CAAC,CAAC,wBAAwB;IACtC,CAAC;IAEO,MAAM,CAAC,0BAA0B,CAAC,OAAY,EAAE,iBAAsB;QAC5E,6BAA6B;QAC7B,OAAO,EAAE,CAAC,CAAC,yBAAyB;IACtC,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,kBAAkB,CAC/B,UAAkC,EAClC,gBAAqC,EACrC,SAAiC;QAEjC,mFAAmF;QACnF,OAAO,CAAC,CAAC,CAAC,8DAA8D;IAC1E,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,eAAe,CAAC,SAAgC,EAAE,OAA4B;QAC3F,QAAQ,SAAS,EAAE,CAAC;YAClB,KAAK,+CAAqB,CAAC,iBAAiB,CAAC;YAC7C,KAAK,+CAAqB,CAAC,kBAAkB,CAAC;YAC9C,KAAK,+CAAqB,CAAC,OAAO;gBAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC;YAC/B,KAAK,+CAAqB,CAAC,mBAAmB;gBAC5C,OAAO,IAAI,CAAC,kBAAkB,CAAC;YACjC,KAAK,+CAAqB,CAAC,cAAc;gBACvC,OAAO,IAAI,CAAC,aAAa,CAAC;YAC5B,KAAK,+CAAqB,CAAC,gBAAgB;gBACzC,OAAO,IAAI,CAAC,eAAe,CAAC;YAC9B;gBACE,MAAM,IAAI,KAAK,CAAC,uCAAuC,SAAS,EAAE,CAAC,CAAC;QACxE,CAAC;IACH,CAAC;IAED,kEAAkE;IAC1D,MAAM,CAAC,wBAAwB,CACrC,MAA2B,EAC3B,WAAyC;QAEzC,6BAA6B;QAC7B,OAAO,EAAE,CAAC;IACZ,CAAC;IAEO,MAAM,CAAC,yBAAyB,CAAC,WAAyC;QAChF,6BAA6B;QAC7B,OAAO;YACL,UAAU,EAAE,EAAE;YACd,iBAAiB,EAAE,cAAc;SAClC,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,iCAAiC,CAAC,MAA2B;QAC1E,6BAA6B;QAC7B,OAAO,EAAE,CAAC;IACZ,CAAC;IAEO,MAAM,CAAC,6BAA6B,CAAC,mBAAwB;QACnE,6BAA6B;QAC7B,OAAO,CAAC,SAAiC,EAAE,EAAE,CAAC,CAAC,CAAC;IAClD,CAAC;IAEO,MAAM,CAAC,2BAA2B;QACxC,6BAA6B;QAC7B,OAAO,CAAC,SAAiC,EAAE,EAAE,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,kBAAkB;IACV,MAAM,CAAC,sBAAsB,CAAC,OAA4B;QAChE,OAAO,OAAO,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IACtF,CAAC;IAEO,MAAM,CAAC,KAAK,CAAC,eAAe,CAClC,SAAc,EACd,iBAAwC,EACxC,mBAA6C,EAC7C,OAA4B,EAC5B,cAAsB;QAEtB,8EAA8E;QAC9E,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAChE,CAAC;IAEO,MAAM,CAAC,KAAK,CAAC,kBAAkB,CACrC,MAA0B,EAC1B,OAA4B,EAC5B,SAAiB;QAEjB,6BAA6B;QAC7B,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,MAAM,CAAC,iBAAiB,CAC9B,OAA4B,EAC5B,KAAY,EACZ,SAAiB;QAEjB,6BAA6B;QAC7B,OAAO;YACL,SAAS,EAAE,OAAO,CAAC,EAAE;YACrB,MAAM,EAAE,4CAAkB,CAAC,KAAK;YAChC,YAAY,EAAE,EAA0B;YACxC,UAAU,EAAE,EAA4B;YACxC,OAAO,EAAE,EAAyB;YAClC,QAAQ,EAAE,EAAoB;YAC9B,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;SACxB,CAAC;IACJ,CAAC;;AA1oBH,4DA2oBC;AA1oByB,gCAAO,GAAG,OAAO,CAAC;AAClB,+CAAsB,GAAG,IAAI,CAAC;AAC9B,sDAA6B,GAAG,IAAI,CAAC;AAQ7D,uBAAuB;AACR,4CAAmB,GAAqC,IAAI,GAAG,EAAE,CAAC;AAClE,2CAAkB,GAAwC,IAAI,GAAG,EAAE,CAAC",
      names: [],
      sources: ["/Users/johnreyrazonable/Documents/SizeWise_Suite_App/backend/services/calculations/SystemOptimizationEngine.ts"],
      sourcesContent: ["/**\n * System Optimization Engine for Phase 3 Priority 2\n * \n * Main optimization engine providing comprehensive system optimization capabilities including:\n * - Multi-objective optimization with Pareto analysis\n * - Multiple optimization algorithms (GA, SA, PSO, GD)\n * - Constraint handling and validation\n * - Performance analysis and recommendations\n * - Integration with existing Phase 1/2/3 Priority 1 components\n * \n * @version 3.0.0\n * @author SizeWise Suite Development Team\n */\n\nimport {\n  OptimizationProblem,\n  OptimizationResult,\n  OptimizationSolution,\n  OptimizationAlgorithm,\n  OptimizationObjective,\n  OptimizationStatus,\n  OptimizationVariable,\n  OptimizationConstraint,\n  SystemConfiguration,\n  MultiObjectiveFunction,\n  OptimizationStatistics,\n  OptimizationHistory,\n  ResultAnalysis,\n  ObjectiveFunctionType,\n  ConstraintFunctionType\n} from './types/SystemOptimizationTypes';\n\n// Import existing Phase 1/2/3 Priority 1 services\nimport { SystemPressureCalculator } from './SystemPressureCalculator';\nimport { FittingLossCalculator } from './FittingLossCalculator';\nimport { AdvancedFittingCalculator } from './AdvancedFittingCalculator';\nimport { AirPropertiesCalculator } from './AirPropertiesCalculator';\n\n// Import optimization algorithms\nimport { GeneticAlgorithm } from './algorithms/GeneticAlgorithm';\nimport { SimulatedAnnealing } from './algorithms/SimulatedAnnealing';\nimport { ParticleSwarmOptimization } from './algorithms/ParticleSwarmOptimization';\nimport { GradientDescent } from './algorithms/GradientDescent';\nimport { MultiObjectiveOptimizationFramework } from './MultiObjectiveOptimizationFramework';\n\n/**\n * Main system optimization engine providing comprehensive optimization capabilities\n * for HVAC duct systems with multi-objective optimization and constraint handling\n */\nexport class SystemOptimizationEngine {\n  private static readonly VERSION = '3.0.0';\n  private static readonly MAX_ITERATIONS_DEFAULT = 1000;\n  private static readonly CONVERGENCE_TOLERANCE_DEFAULT = 1e-6;\n  \n  // Algorithm instances\n  private static geneticAlgorithm: GeneticAlgorithm;\n  private static simulatedAnnealing: SimulatedAnnealing;\n  private static particleSwarm: ParticleSwarmOptimization;\n  private static gradientDescent: GradientDescent;\n  \n  // Performance tracking\n  private static optimizationHistory: Map<string, OptimizationHistory> = new Map();\n  private static performanceMetrics: Map<string, OptimizationStatistics> = new Map();\n\n  /**\n   * Initialize the optimization engine with algorithm instances\n   */\n  public static initialize(): void {\n    try {\n      this.geneticAlgorithm = new GeneticAlgorithm();\n      this.simulatedAnnealing = new SimulatedAnnealing();\n      this.particleSwarm = new ParticleSwarmOptimization();\n      this.gradientDescent = new GradientDescent();\n      \n      console.log(`SystemOptimizationEngine v${this.VERSION} initialized successfully`);\n    } catch (error) {\n      console.error('Failed to initialize SystemOptimizationEngine:', error);\n      throw new Error(`Optimization engine initialization failed: ${error}`);\n    }\n  }\n\n  /**\n   * Main optimization method - solves optimization problems with specified algorithms\n   */\n  public static async optimizeSystem(\n    problem: OptimizationProblem,\n    algorithm: OptimizationAlgorithm = OptimizationAlgorithm.GENETIC_ALGORITHM\n  ): Promise<OptimizationResult> {\n    const startTime = performance.now();\n    \n    try {\n      // Validate optimization problem\n      this.validateOptimizationProblem(problem);\n      \n      // Initialize optimization tracking\n      const optimizationId = this.generateOptimizationId(problem);\n      \n      // Create objective function\n      const objectiveFunction = this.createObjectiveFunction(problem);\n      \n      // Create constraint functions\n      const constraintFunctions = this.createConstraintFunctions(problem);\n      \n      // Select and configure optimization algorithm\n      const optimizer = this.createOptimizer(algorithm, problem);\n      \n      // Run optimization\n      const result = await this.runOptimization(\n        optimizer,\n        objectiveFunction,\n        constraintFunctions,\n        problem,\n        optimizationId\n      );\n      \n      // Post-process and analyze results\n      const finalResult = await this.postProcessResults(result, problem, startTime);\n      \n      // Store optimization history\n      this.optimizationHistory.set(optimizationId, finalResult.history);\n      this.performanceMetrics.set(optimizationId, finalResult.statistics);\n      \n      return finalResult;\n      \n    } catch (error) {\n      console.error('Optimization failed:', error);\n      return this.createErrorResult(problem, error as Error, startTime);\n    }\n  }\n\n  /**\n   * Multi-objective optimization with Pareto analysis\n   */\n  public static async optimizeMultiObjective(\n    problem: OptimizationProblem,\n    algorithm: OptimizationAlgorithm = OptimizationAlgorithm.NSGA_II\n  ): Promise<OptimizationResult> {\n\n    if (problem.objectives.objectives.length < 2) {\n      throw new Error('Multi-objective optimization requires at least 2 objectives');\n    }\n\n    try {\n      console.log(`Starting multi-objective optimization for problem: ${problem.id}`);\n\n      // Create objective functions\n      const objectiveFunctions = problem.objectives.objectives.map(obj =>\n        this.createObjectiveFunction(obj, problem)\n      );\n\n      // Create constraint functions\n      const constraintFunctions = problem.constraints.map(constraint =>\n        this.createConstraintFunction(constraint, problem)\n      );\n\n      // Use Multi-objective Optimization Framework\n      const moFramework = new MultiObjectiveOptimizationFramework({\n        algorithm: 'nsga2',\n        populationSize: 100,\n        maxGenerations: 100,\n        crossoverRate: 0.9,\n        mutationRate: 0.1,\n        eliteSize: 10,\n        constraintHandling: 'penalty',\n        penaltyCoefficient: 1000,\n        paretoSettings: {\n          maxSolutions: 100,\n          diversityThreshold: 0.01,\n          convergenceThreshold: 1e-6,\n          hypervolume: {\n            enabled: true,\n            referencePoint: []\n          },\n          spacing: {\n            enabled: true,\n            targetSpacing: 0.1\n          }\n        },\n        diversityMaintenance: true,\n        archiveSize: 200\n      });\n\n      const result = await moFramework.optimizeMultiObjective(problem, objectiveFunctions, constraintFunctions);\n\n      console.log(`Multi-objective optimization completed for problem: ${problem.id}`);\n      return result;\n\n    } catch (error) {\n      console.error('Multi-objective optimization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Optimize system balance for multi-zone HVAC systems\n   */\n  public static async optimizeSystemBalance(\n    systemConfiguration: SystemConfiguration,\n    targetFlowRates: { [zoneId: string]: number },\n    constraints: OptimizationConstraint[]\n  ): Promise<OptimizationResult> {\n    \n    // Create optimization problem for system balancing\n    const problem: OptimizationProblem = {\n      id: `balance_${systemConfiguration.id}_${Date.now()}`,\n      name: `System Balance Optimization - ${systemConfiguration.name}`,\n      description: 'Optimize damper positions and system configuration for balanced airflow',\n      systemConfiguration,\n      variables: this.createBalancingVariables(systemConfiguration, targetFlowRates),\n      objectives: this.createBalancingObjectives(targetFlowRates),\n      constraints,\n      algorithmSettings: {\n        algorithm: OptimizationAlgorithm.GENETIC_ALGORITHM,\n        parameters: {\n          populationSize: 50,\n          maxIterations: 200,\n          crossoverRate: 0.8,\n          mutationRate: 0.1\n        },\n        parallelization: { enabled: true }\n      },\n      convergenceCriteria: {\n        maxIterations: 200,\n        toleranceValue: 0.01,\n        stagnationLimit: 20,\n        improvementThreshold: 0.001\n      },\n      outputRequirements: {\n        includeHistory: true,\n        detailedAnalysis: true,\n        sensitivityAnalysis: true,\n        uncertaintyAnalysis: false,\n        visualizations: [\n          { type: 'convergence', parameters: {} },\n          { type: 'variable_history', parameters: {} }\n        ],\n        reportFormat: 'json'\n      }\n    };\n    \n    return this.optimizeSystem(problem, OptimizationAlgorithm.GENETIC_ALGORITHM);\n  }\n\n  /**\n   * Optimize for minimum energy consumption\n   */\n  public static async optimizeEnergyEfficiency(\n    systemConfiguration: SystemConfiguration,\n    operatingConditions: any,\n    constraints: OptimizationConstraint[]\n  ): Promise<OptimizationResult> {\n    \n    const problem: OptimizationProblem = {\n      id: `energy_${systemConfiguration.id}_${Date.now()}`,\n      name: `Energy Efficiency Optimization - ${systemConfiguration.name}`,\n      description: 'Optimize system configuration for minimum energy consumption',\n      systemConfiguration,\n      variables: this.createEnergyOptimizationVariables(systemConfiguration),\n      objectives: {\n        objectives: [\n          {\n            id: 'energy_consumption',\n            objective: OptimizationObjective.MINIMIZE_ENERGY_CONSUMPTION,\n            weight: 0.7,\n            description: 'Minimize total system energy consumption',\n            evaluationFunction: this.createEnergyObjectiveFunction(operatingConditions),\n            units: 'kWh/year'\n          },\n          {\n            id: 'total_cost',\n            objective: OptimizationObjective.MINIMIZE_TOTAL_COST,\n            weight: 0.3,\n            description: 'Minimize total system cost (initial + operating)',\n            evaluationFunction: this.createCostObjectiveFunction(),\n            units: 'USD'\n          }\n        ],\n        aggregationMethod: 'weighted_sum'\n      },\n      constraints,\n      algorithmSettings: {\n        algorithm: OptimizationAlgorithm.PARTICLE_SWARM,\n        parameters: {\n          populationSize: 40,\n          maxIterations: 300,\n          inertiaWeight: 0.9,\n          accelerationCoefficients: [2.0, 2.0]\n        },\n        parallelization: { enabled: true }\n      },\n      convergenceCriteria: {\n        maxIterations: 300,\n        toleranceValue: 0.005,\n        stagnationLimit: 30,\n        improvementThreshold: 0.001\n      },\n      outputRequirements: {\n        includeHistory: true,\n        detailedAnalysis: true,\n        sensitivityAnalysis: true,\n        uncertaintyAnalysis: true,\n        visualizations: [\n          { type: 'convergence', parameters: {} },\n          { type: 'pareto_front', parameters: {} }\n        ],\n        reportFormat: 'json'\n      }\n    };\n    \n    return this.optimizeMultiObjective(problem, OptimizationAlgorithm.PARTICLE_SWARM);\n  }\n\n  /**\n   * Validate optimization problem structure and constraints\n   */\n  private static validateOptimizationProblem(problem: OptimizationProblem): void {\n    if (!problem.id || !problem.systemConfiguration) {\n      throw new Error('Invalid optimization problem: missing required fields');\n    }\n    \n    if (problem.variables.length === 0) {\n      throw new Error('Optimization problem must have at least one variable');\n    }\n    \n    if (problem.objectives.objectives.length === 0) {\n      throw new Error('Optimization problem must have at least one objective');\n    }\n    \n    // Validate variable bounds\n    for (const variable of problem.variables) {\n      if (!variable.bounds || variable.bounds.minimum >= variable.bounds.maximum) {\n        throw new Error(`Invalid bounds for variable ${variable.id}`);\n      }\n    }\n    \n    // Validate objective weights\n    const totalWeight = problem.objectives.objectives.reduce((sum, obj) => sum + obj.weight, 0);\n    if (Math.abs(totalWeight - 1.0) > 1e-6) {\n      console.warn(`Objective weights sum to ${totalWeight}, normalizing to 1.0`);\n      problem.objectives.objectives.forEach(obj => obj.weight /= totalWeight);\n    }\n  }\n\n  /**\n   * Create objective function for optimization problem\n   */\n  private static createObjectiveFunction(problem: OptimizationProblem): ObjectiveFunctionType {\n    return (variables: OptimizationVariable[]): number => {\n      try {\n        // Apply variables to system configuration\n        const configuredSystem = this.applyVariablesToSystem(\n          problem.systemConfiguration,\n          variables\n        );\n        \n        // Calculate system performance using existing Phase 1/2/3 Priority 1 services\n        const systemPerformance = SystemPressureCalculator.calculateEnhancedSystemPressure({\n          segments: configuredSystem.segments,\n          systemType: configuredSystem.systemType,\n          designConditions: configuredSystem.designConditions,\n          calculationOptions: {\n            includeElevation: true,\n            includeFittings: true,\n            roundResults: false\n          }\n        });\n        \n        // Calculate objective values\n        let totalObjectiveValue = 0;\n        \n        for (const objective of problem.objectives.objectives) {\n          let objectiveValue: number;\n          \n          switch (objective.objective) {\n            case OptimizationObjective.MINIMIZE_PRESSURE_LOSS:\n              objectiveValue = systemPerformance.totalPressureLoss;\n              break;\n              \n            case OptimizationObjective.MINIMIZE_ENERGY_CONSUMPTION:\n              objectiveValue = this.calculateEnergyConsumption(systemPerformance, configuredSystem);\n              break;\n              \n            case OptimizationObjective.MINIMIZE_TOTAL_COST:\n              objectiveValue = this.calculateTotalCost(systemPerformance, configuredSystem);\n              break;\n              \n            case OptimizationObjective.MINIMIZE_NOISE_LEVEL:\n              objectiveValue = this.calculateNoiseLevel(systemPerformance, configuredSystem);\n              break;\n              \n            case OptimizationObjective.MAXIMIZE_EFFICIENCY:\n              objectiveValue = -this.calculateSystemEfficiency(systemPerformance, configuredSystem);\n              break;\n              \n            default:\n              objectiveValue = objective.evaluationFunction(variables);\n          }\n          \n          totalObjectiveValue += objective.weight * objectiveValue;\n        }\n        \n        return totalObjectiveValue;\n        \n      } catch (error) {\n        console.error('Error in objective function evaluation:', error);\n        return Number.MAX_VALUE; // Return large penalty for invalid solutions\n      }\n    };\n  }\n\n  /**\n   * Create constraint functions for optimization problem\n   */\n  private static createConstraintFunctions(problem: OptimizationProblem): ConstraintFunctionType[] {\n    return problem.constraints.map(constraint => {\n      return (variables: OptimizationVariable[]): number => {\n        try {\n          // Apply variables to system configuration\n          const configuredSystem = this.applyVariablesToSystem(\n            problem.systemConfiguration,\n            variables\n          );\n          \n          // Evaluate constraint based on type\n          return this.evaluateConstraint(constraint, configuredSystem, variables);\n          \n        } catch (error) {\n          console.error(`Error evaluating constraint ${constraint.id}:`, error);\n          return Number.MAX_VALUE; // Return large violation for invalid evaluations\n        }\n      };\n    });\n  }\n\n  /**\n   * Apply optimization variables to system configuration\n   */\n  private static applyVariablesToSystem(\n    baseSystem: SystemConfiguration,\n    variables: OptimizationVariable[]\n  ): SystemConfiguration {\n    // Deep clone the system configuration\n    const configuredSystem: SystemConfiguration = JSON.parse(JSON.stringify(baseSystem));\n    \n    // Apply each variable to the appropriate system component\n    for (const variable of variables) {\n      this.applyVariableToSystem(configuredSystem, variable);\n    }\n    \n    return configuredSystem;\n  }\n\n  /**\n   * Apply a single variable to system configuration\n   */\n  private static applyVariableToSystem(\n    system: SystemConfiguration,\n    variable: OptimizationVariable\n  ): void {\n    // Implementation depends on variable type\n    switch (variable.type) {\n      case 'duct_size':\n        this.applyDuctSizeVariable(system, variable);\n        break;\n      case 'fitting_type':\n        this.applyFittingTypeVariable(system, variable);\n        break;\n      case 'material_type':\n        this.applyMaterialTypeVariable(system, variable);\n        break;\n      case 'damper_position':\n        this.applyDamperPositionVariable(system, variable);\n        break;\n      case 'fan_speed':\n        this.applyFanSpeedVariable(system, variable);\n        break;\n      default:\n        console.warn(`Unknown variable type: ${variable.type}`);\n    }\n  }\n\n  // Variable application methods (to be implemented based on specific requirements)\n  private static applyDuctSizeVariable(system: SystemConfiguration, variable: OptimizationVariable): void {\n    // Implementation for duct size variables\n  }\n\n  private static applyFittingTypeVariable(system: SystemConfiguration, variable: OptimizationVariable): void {\n    // Implementation for fitting type variables\n  }\n\n  private static applyMaterialTypeVariable(system: SystemConfiguration, variable: OptimizationVariable): void {\n    // Implementation for material type variables\n  }\n\n  private static applyDamperPositionVariable(system: SystemConfiguration, variable: OptimizationVariable): void {\n    // Implementation for damper position variables\n  }\n\n  private static applyFanSpeedVariable(system: SystemConfiguration, variable: OptimizationVariable): void {\n    // Implementation for fan speed variables\n  }\n\n  /**\n   * Calculate energy consumption for system configuration\n   */\n  private static calculateEnergyConsumption(\n    systemPerformance: any,\n    configuredSystem: SystemConfiguration\n  ): number {\n    // Simplified energy calculation - to be enhanced with detailed fan curves and operating schedules\n    const fanPower = systemPerformance.totalPressureLoss * systemPerformance.totalFlow / 6356; // Convert to HP\n    const annualOperatingHours = 8760; // Hours per year\n    const energyConsumption = fanPower * 0.746 * annualOperatingHours; // Convert to kWh/year\n    \n    return energyConsumption;\n  }\n\n  /**\n   * Calculate total cost for system configuration\n   */\n  private static calculateTotalCost(\n    systemPerformance: any,\n    configuredSystem: SystemConfiguration\n  ): number {\n    // Simplified cost calculation - to be enhanced with detailed cost models\n    let materialCost = 0;\n    let installationCost = 0;\n    let operatingCost = 0;\n    \n    // Calculate material costs\n    for (const segment of configuredSystem.segments) {\n      materialCost += this.calculateSegmentMaterialCost(segment);\n    }\n    \n    // Calculate installation costs (typically 1.5-2x material cost)\n    installationCost = materialCost * 1.75;\n    \n    // Calculate annual operating costs\n    const energyConsumption = this.calculateEnergyConsumption(systemPerformance, configuredSystem);\n    const energyRate = 0.12; // $/kWh\n    operatingCost = energyConsumption * energyRate;\n    \n    // Total cost over 20-year lifecycle\n    const lifecycleYears = 20;\n    const totalCost = materialCost + installationCost + (operatingCost * lifecycleYears);\n    \n    return totalCost;\n  }\n\n  /**\n   * Calculate noise level for system configuration\n   */\n  private static calculateNoiseLevel(\n    systemPerformance: any,\n    configuredSystem: SystemConfiguration\n  ): number {\n    // Simplified noise calculation - to be enhanced with detailed acoustic models\n    let totalNoiseLevel = 0;\n    \n    for (const segment of configuredSystem.segments) {\n      const segmentNoise = this.calculateSegmentNoiseLevel(segment, systemPerformance);\n      totalNoiseLevel += Math.pow(10, segmentNoise / 10); // Convert dB to linear scale for addition\n    }\n    \n    return 10 * Math.log10(totalNoiseLevel); // Convert back to dB\n  }\n\n  /**\n   * Calculate system efficiency\n   */\n  private static calculateSystemEfficiency(\n    systemPerformance: any,\n    configuredSystem: SystemConfiguration\n  ): number {\n    // Simplified efficiency calculation\n    const theoreticalMinimumPressure = systemPerformance.totalFlow * 0.1; // Minimum pressure for flow\n    const actualPressure = systemPerformance.totalPressureLoss;\n    const efficiency = theoreticalMinimumPressure / actualPressure;\n    \n    return Math.min(efficiency, 1.0); // Cap at 100% efficiency\n  }\n\n  // Helper methods for cost and noise calculations\n  private static calculateSegmentMaterialCost(segment: any): number {\n    // Placeholder implementation\n    return 100; // Base cost per segment\n  }\n\n  private static calculateSegmentNoiseLevel(segment: any, systemPerformance: any): number {\n    // Placeholder implementation\n    return 45; // Base noise level in dB\n  }\n\n  /**\n   * Evaluate constraint function\n   */\n  private static evaluateConstraint(\n    constraint: OptimizationConstraint,\n    configuredSystem: SystemConfiguration,\n    variables: OptimizationVariable[]\n  ): number {\n    // Placeholder implementation - to be enhanced with specific constraint evaluations\n    return 0; // Return 0 for satisfied constraints, positive for violations\n  }\n\n  /**\n   * Create optimizer instance based on algorithm type\n   */\n  private static createOptimizer(algorithm: OptimizationAlgorithm, problem: OptimizationProblem): any {\n    switch (algorithm) {\n      case OptimizationAlgorithm.GENETIC_ALGORITHM:\n      case OptimizationAlgorithm.MULTI_OBJECTIVE_GA:\n      case OptimizationAlgorithm.NSGA_II:\n        return this.geneticAlgorithm;\n      case OptimizationAlgorithm.SIMULATED_ANNEALING:\n        return this.simulatedAnnealing;\n      case OptimizationAlgorithm.PARTICLE_SWARM:\n        return this.particleSwarm;\n      case OptimizationAlgorithm.GRADIENT_DESCENT:\n        return this.gradientDescent;\n      default:\n        throw new Error(`Unsupported optimization algorithm: ${algorithm}`);\n    }\n  }\n\n  // Additional helper methods for creating variables and objectives\n  private static createBalancingVariables(\n    system: SystemConfiguration,\n    targetFlows: { [zoneId: string]: number }\n  ): OptimizationVariable[] {\n    // Placeholder implementation\n    return [];\n  }\n\n  private static createBalancingObjectives(targetFlows: { [zoneId: string]: number }): MultiObjectiveFunction {\n    // Placeholder implementation\n    return {\n      objectives: [],\n      aggregationMethod: 'weighted_sum'\n    };\n  }\n\n  private static createEnergyOptimizationVariables(system: SystemConfiguration): OptimizationVariable[] {\n    // Placeholder implementation\n    return [];\n  }\n\n  private static createEnergyObjectiveFunction(operatingConditions: any): ObjectiveFunctionType {\n    // Placeholder implementation\n    return (variables: OptimizationVariable[]) => 0;\n  }\n\n  private static createCostObjectiveFunction(): ObjectiveFunctionType {\n    // Placeholder implementation\n    return (variables: OptimizationVariable[]) => 0;\n  }\n\n  // Utility methods\n  private static generateOptimizationId(problem: OptimizationProblem): string {\n    return `opt_${problem.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private static async runOptimization(\n    optimizer: any,\n    objectiveFunction: ObjectiveFunctionType,\n    constraintFunctions: ConstraintFunctionType[],\n    problem: OptimizationProblem,\n    optimizationId: string\n  ): Promise<OptimizationResult> {\n    // Placeholder implementation - to be completed with actual optimization logic\n    throw new Error('Optimization execution not yet implemented');\n  }\n\n  private static async postProcessResults(\n    result: OptimizationResult,\n    problem: OptimizationProblem,\n    startTime: number\n  ): Promise<OptimizationResult> {\n    // Placeholder implementation\n    return result;\n  }\n\n  private static createErrorResult(\n    problem: OptimizationProblem,\n    error: Error,\n    startTime: number\n  ): OptimizationResult {\n    // Placeholder implementation\n    return {\n      problemId: problem.id,\n      status: OptimizationStatus.ERROR,\n      bestSolution: {} as OptimizationSolution,\n      statistics: {} as OptimizationStatistics,\n      history: {} as OptimizationHistory,\n      analysis: {} as ResultAnalysis,\n      recommendations: [],\n      warnings: [],\n      errors: [error.message]\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "54520269af743d0215eae9e8045ec681db732691"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22ysz9dgtl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22ysz9dgtl();
cov_22ysz9dgtl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22ysz9dgtl().s[1]++;
exports.SystemOptimizationEngine = void 0;
const SystemOptimizationTypes_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[2]++, require("./types/SystemOptimizationTypes"));
// Import existing Phase 1/2/3 Priority 1 services
const SystemPressureCalculator_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[3]++, require("./SystemPressureCalculator"));
// Import optimization algorithms
const GeneticAlgorithm_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[4]++, require("./algorithms/GeneticAlgorithm"));
const SimulatedAnnealing_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[5]++, require("./algorithms/SimulatedAnnealing"));
const ParticleSwarmOptimization_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[6]++, require("./algorithms/ParticleSwarmOptimization"));
const GradientDescent_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[7]++, require("./algorithms/GradientDescent"));
const MultiObjectiveOptimizationFramework_1 =
/* istanbul ignore next */
(cov_22ysz9dgtl().s[8]++, require("./MultiObjectiveOptimizationFramework"));
/**
 * Main system optimization engine providing comprehensive optimization capabilities
 * for HVAC duct systems with multi-objective optimization and constraint handling
 */
class SystemOptimizationEngine {
  /**
   * Initialize the optimization engine with algorithm instances
   */
  static initialize() {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[0]++;
    cov_22ysz9dgtl().s[9]++;
    try {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[10]++;
      this.geneticAlgorithm = new GeneticAlgorithm_1.GeneticAlgorithm();
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[11]++;
      this.simulatedAnnealing = new SimulatedAnnealing_1.SimulatedAnnealing();
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[12]++;
      this.particleSwarm = new ParticleSwarmOptimization_1.ParticleSwarmOptimization();
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[13]++;
      this.gradientDescent = new GradientDescent_1.GradientDescent();
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[14]++;
      console.log(`SystemOptimizationEngine v${this.VERSION} initialized successfully`);
    } catch (error) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[15]++;
      console.error('Failed to initialize SystemOptimizationEngine:', error);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[16]++;
      throw new Error(`Optimization engine initialization failed: ${error}`);
    }
  }
  /**
   * Main optimization method - solves optimization problems with specified algorithms
   */
  static async optimizeSystem(problem, algorithm =
  /* istanbul ignore next */
  (cov_22ysz9dgtl().b[0][0]++, SystemOptimizationTypes_1.OptimizationAlgorithm.GENETIC_ALGORITHM)) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[17]++, performance.now());
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[18]++;
    try {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[19]++;
      // Validate optimization problem
      this.validateOptimizationProblem(problem);
      // Initialize optimization tracking
      const optimizationId =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[20]++, this.generateOptimizationId(problem));
      // Create objective function
      const objectiveFunction =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[21]++, this.createObjectiveFunction(problem));
      // Create constraint functions
      const constraintFunctions =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[22]++, this.createConstraintFunctions(problem));
      // Select and configure optimization algorithm
      const optimizer =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[23]++, this.createOptimizer(algorithm, problem));
      // Run optimization
      const result =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[24]++, await this.runOptimization(optimizer, objectiveFunction, constraintFunctions, problem, optimizationId));
      // Post-process and analyze results
      const finalResult =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[25]++, await this.postProcessResults(result, problem, startTime));
      // Store optimization history
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[26]++;
      this.optimizationHistory.set(optimizationId, finalResult.history);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[27]++;
      this.performanceMetrics.set(optimizationId, finalResult.statistics);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[28]++;
      return finalResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[29]++;
      console.error('Optimization failed:', error);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[30]++;
      return this.createErrorResult(problem, error, startTime);
    }
  }
  /**
   * Multi-objective optimization with Pareto analysis
   */
  static async optimizeMultiObjective(problem, algorithm =
  /* istanbul ignore next */
  (cov_22ysz9dgtl().b[1][0]++, SystemOptimizationTypes_1.OptimizationAlgorithm.NSGA_II)) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[2]++;
    cov_22ysz9dgtl().s[31]++;
    if (problem.objectives.objectives.length < 2) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().b[2][0]++;
      cov_22ysz9dgtl().s[32]++;
      throw new Error('Multi-objective optimization requires at least 2 objectives');
    } else
    /* istanbul ignore next */
    {
      cov_22ysz9dgtl().b[2][1]++;
    }
    cov_22ysz9dgtl().s[33]++;
    try {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[34]++;
      console.log(`Starting multi-objective optimization for problem: ${problem.id}`);
      // Create objective functions
      const objectiveFunctions =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[35]++, problem.objectives.objectives.map(obj => {
        /* istanbul ignore next */
        cov_22ysz9dgtl().f[3]++;
        cov_22ysz9dgtl().s[36]++;
        return this.createObjectiveFunction(obj, problem);
      }));
      // Create constraint functions
      const constraintFunctions =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[37]++, problem.constraints.map(constraint => {
        /* istanbul ignore next */
        cov_22ysz9dgtl().f[4]++;
        cov_22ysz9dgtl().s[38]++;
        return this.createConstraintFunction(constraint, problem);
      }));
      // Use Multi-objective Optimization Framework
      const moFramework =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[39]++, new MultiObjectiveOptimizationFramework_1.MultiObjectiveOptimizationFramework({
        algorithm: 'nsga2',
        populationSize: 100,
        maxGenerations: 100,
        crossoverRate: 0.9,
        mutationRate: 0.1,
        eliteSize: 10,
        constraintHandling: 'penalty',
        penaltyCoefficient: 1000,
        paretoSettings: {
          maxSolutions: 100,
          diversityThreshold: 0.01,
          convergenceThreshold: 1e-6,
          hypervolume: {
            enabled: true,
            referencePoint: []
          },
          spacing: {
            enabled: true,
            targetSpacing: 0.1
          }
        },
        diversityMaintenance: true,
        archiveSize: 200
      }));
      const result =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[40]++, await moFramework.optimizeMultiObjective(problem, objectiveFunctions, constraintFunctions));
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[41]++;
      console.log(`Multi-objective optimization completed for problem: ${problem.id}`);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[42]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[43]++;
      console.error('Multi-objective optimization failed:', error);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[44]++;
      throw error;
    }
  }
  /**
   * Optimize system balance for multi-zone HVAC systems
   */
  static async optimizeSystemBalance(systemConfiguration, targetFlowRates, constraints) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[5]++;
    // Create optimization problem for system balancing
    const problem =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[45]++, {
      id: `balance_${systemConfiguration.id}_${Date.now()}`,
      name: `System Balance Optimization - ${systemConfiguration.name}`,
      description: 'Optimize damper positions and system configuration for balanced airflow',
      systemConfiguration,
      variables: this.createBalancingVariables(systemConfiguration, targetFlowRates),
      objectives: this.createBalancingObjectives(targetFlowRates),
      constraints,
      algorithmSettings: {
        algorithm: SystemOptimizationTypes_1.OptimizationAlgorithm.GENETIC_ALGORITHM,
        parameters: {
          populationSize: 50,
          maxIterations: 200,
          crossoverRate: 0.8,
          mutationRate: 0.1
        },
        parallelization: {
          enabled: true
        }
      },
      convergenceCriteria: {
        maxIterations: 200,
        toleranceValue: 0.01,
        stagnationLimit: 20,
        improvementThreshold: 0.001
      },
      outputRequirements: {
        includeHistory: true,
        detailedAnalysis: true,
        sensitivityAnalysis: true,
        uncertaintyAnalysis: false,
        visualizations: [{
          type: 'convergence',
          parameters: {}
        }, {
          type: 'variable_history',
          parameters: {}
        }],
        reportFormat: 'json'
      }
    });
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[46]++;
    return this.optimizeSystem(problem, SystemOptimizationTypes_1.OptimizationAlgorithm.GENETIC_ALGORITHM);
  }
  /**
   * Optimize for minimum energy consumption
   */
  static async optimizeEnergyEfficiency(systemConfiguration, operatingConditions, constraints) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[6]++;
    const problem =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[47]++, {
      id: `energy_${systemConfiguration.id}_${Date.now()}`,
      name: `Energy Efficiency Optimization - ${systemConfiguration.name}`,
      description: 'Optimize system configuration for minimum energy consumption',
      systemConfiguration,
      variables: this.createEnergyOptimizationVariables(systemConfiguration),
      objectives: {
        objectives: [{
          id: 'energy_consumption',
          objective: SystemOptimizationTypes_1.OptimizationObjective.MINIMIZE_ENERGY_CONSUMPTION,
          weight: 0.7,
          description: 'Minimize total system energy consumption',
          evaluationFunction: this.createEnergyObjectiveFunction(operatingConditions),
          units: 'kWh/year'
        }, {
          id: 'total_cost',
          objective: SystemOptimizationTypes_1.OptimizationObjective.MINIMIZE_TOTAL_COST,
          weight: 0.3,
          description: 'Minimize total system cost (initial + operating)',
          evaluationFunction: this.createCostObjectiveFunction(),
          units: 'USD'
        }],
        aggregationMethod: 'weighted_sum'
      },
      constraints,
      algorithmSettings: {
        algorithm: SystemOptimizationTypes_1.OptimizationAlgorithm.PARTICLE_SWARM,
        parameters: {
          populationSize: 40,
          maxIterations: 300,
          inertiaWeight: 0.9,
          accelerationCoefficients: [2.0, 2.0]
        },
        parallelization: {
          enabled: true
        }
      },
      convergenceCriteria: {
        maxIterations: 300,
        toleranceValue: 0.005,
        stagnationLimit: 30,
        improvementThreshold: 0.001
      },
      outputRequirements: {
        includeHistory: true,
        detailedAnalysis: true,
        sensitivityAnalysis: true,
        uncertaintyAnalysis: true,
        visualizations: [{
          type: 'convergence',
          parameters: {}
        }, {
          type: 'pareto_front',
          parameters: {}
        }],
        reportFormat: 'json'
      }
    });
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[48]++;
    return this.optimizeMultiObjective(problem, SystemOptimizationTypes_1.OptimizationAlgorithm.PARTICLE_SWARM);
  }
  /**
   * Validate optimization problem structure and constraints
   */
  static validateOptimizationProblem(problem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[7]++;
    cov_22ysz9dgtl().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_22ysz9dgtl().b[4][0]++, !problem.id) ||
    /* istanbul ignore next */
    (cov_22ysz9dgtl().b[4][1]++, !problem.systemConfiguration)) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().b[3][0]++;
      cov_22ysz9dgtl().s[50]++;
      throw new Error('Invalid optimization problem: missing required fields');
    } else
    /* istanbul ignore next */
    {
      cov_22ysz9dgtl().b[3][1]++;
    }
    cov_22ysz9dgtl().s[51]++;
    if (problem.variables.length === 0) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().b[5][0]++;
      cov_22ysz9dgtl().s[52]++;
      throw new Error('Optimization problem must have at least one variable');
    } else
    /* istanbul ignore next */
    {
      cov_22ysz9dgtl().b[5][1]++;
    }
    cov_22ysz9dgtl().s[53]++;
    if (problem.objectives.objectives.length === 0) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().b[6][0]++;
      cov_22ysz9dgtl().s[54]++;
      throw new Error('Optimization problem must have at least one objective');
    } else
    /* istanbul ignore next */
    {
      cov_22ysz9dgtl().b[6][1]++;
    }
    // Validate variable bounds
    cov_22ysz9dgtl().s[55]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[56]++;
      if (
      /* istanbul ignore next */
      (cov_22ysz9dgtl().b[8][0]++, !variable.bounds) ||
      /* istanbul ignore next */
      (cov_22ysz9dgtl().b[8][1]++, variable.bounds.minimum >= variable.bounds.maximum)) {
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[7][0]++;
        cov_22ysz9dgtl().s[57]++;
        throw new Error(`Invalid bounds for variable ${variable.id}`);
      } else
      /* istanbul ignore next */
      {
        cov_22ysz9dgtl().b[7][1]++;
      }
    }
    // Validate objective weights
    const totalWeight =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[58]++, problem.objectives.objectives.reduce((sum, obj) => {
      /* istanbul ignore next */
      cov_22ysz9dgtl().f[8]++;
      cov_22ysz9dgtl().s[59]++;
      return sum + obj.weight;
    }, 0));
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[60]++;
    if (Math.abs(totalWeight - 1.0) > 1e-6) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().b[9][0]++;
      cov_22ysz9dgtl().s[61]++;
      console.warn(`Objective weights sum to ${totalWeight}, normalizing to 1.0`);
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[62]++;
      problem.objectives.objectives.forEach(obj => {
        /* istanbul ignore next */
        cov_22ysz9dgtl().f[9]++;
        cov_22ysz9dgtl().s[63]++;
        return obj.weight /= totalWeight;
      });
    } else
    /* istanbul ignore next */
    {
      cov_22ysz9dgtl().b[9][1]++;
    }
  }
  /**
   * Create objective function for optimization problem
   */
  static createObjectiveFunction(problem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[10]++;
    cov_22ysz9dgtl().s[64]++;
    return variables => {
      /* istanbul ignore next */
      cov_22ysz9dgtl().f[11]++;
      cov_22ysz9dgtl().s[65]++;
      try {
        // Apply variables to system configuration
        const configuredSystem =
        /* istanbul ignore next */
        (cov_22ysz9dgtl().s[66]++, this.applyVariablesToSystem(problem.systemConfiguration, variables));
        // Calculate system performance using existing Phase 1/2/3 Priority 1 services
        const systemPerformance =
        /* istanbul ignore next */
        (cov_22ysz9dgtl().s[67]++, SystemPressureCalculator_1.SystemPressureCalculator.calculateEnhancedSystemPressure({
          segments: configuredSystem.segments,
          systemType: configuredSystem.systemType,
          designConditions: configuredSystem.designConditions,
          calculationOptions: {
            includeElevation: true,
            includeFittings: true,
            roundResults: false
          }
        }));
        // Calculate objective values
        let totalObjectiveValue =
        /* istanbul ignore next */
        (cov_22ysz9dgtl().s[68]++, 0);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[69]++;
        for (const objective of problem.objectives.objectives) {
          let objectiveValue;
          /* istanbul ignore next */
          cov_22ysz9dgtl().s[70]++;
          switch (objective.objective) {
            case SystemOptimizationTypes_1.OptimizationObjective.MINIMIZE_PRESSURE_LOSS:
              /* istanbul ignore next */
              cov_22ysz9dgtl().b[10][0]++;
              cov_22ysz9dgtl().s[71]++;
              objectiveValue = systemPerformance.totalPressureLoss;
              /* istanbul ignore next */
              cov_22ysz9dgtl().s[72]++;
              break;
            case SystemOptimizationTypes_1.OptimizationObjective.MINIMIZE_ENERGY_CONSUMPTION:
              /* istanbul ignore next */
              cov_22ysz9dgtl().b[10][1]++;
              cov_22ysz9dgtl().s[73]++;
              objectiveValue = this.calculateEnergyConsumption(systemPerformance, configuredSystem);
              /* istanbul ignore next */
              cov_22ysz9dgtl().s[74]++;
              break;
            case SystemOptimizationTypes_1.OptimizationObjective.MINIMIZE_TOTAL_COST:
              /* istanbul ignore next */
              cov_22ysz9dgtl().b[10][2]++;
              cov_22ysz9dgtl().s[75]++;
              objectiveValue = this.calculateTotalCost(systemPerformance, configuredSystem);
              /* istanbul ignore next */
              cov_22ysz9dgtl().s[76]++;
              break;
            case SystemOptimizationTypes_1.OptimizationObjective.MINIMIZE_NOISE_LEVEL:
              /* istanbul ignore next */
              cov_22ysz9dgtl().b[10][3]++;
              cov_22ysz9dgtl().s[77]++;
              objectiveValue = this.calculateNoiseLevel(systemPerformance, configuredSystem);
              /* istanbul ignore next */
              cov_22ysz9dgtl().s[78]++;
              break;
            case SystemOptimizationTypes_1.OptimizationObjective.MAXIMIZE_EFFICIENCY:
              /* istanbul ignore next */
              cov_22ysz9dgtl().b[10][4]++;
              cov_22ysz9dgtl().s[79]++;
              objectiveValue = -this.calculateSystemEfficiency(systemPerformance, configuredSystem);
              /* istanbul ignore next */
              cov_22ysz9dgtl().s[80]++;
              break;
            default:
              /* istanbul ignore next */
              cov_22ysz9dgtl().b[10][5]++;
              cov_22ysz9dgtl().s[81]++;
              objectiveValue = objective.evaluationFunction(variables);
          }
          /* istanbul ignore next */
          cov_22ysz9dgtl().s[82]++;
          totalObjectiveValue += objective.weight * objectiveValue;
        }
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[83]++;
        return totalObjectiveValue;
      } catch (error) {
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[84]++;
        console.error('Error in objective function evaluation:', error);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[85]++;
        return Number.MAX_VALUE; // Return large penalty for invalid solutions
      }
    };
  }
  /**
   * Create constraint functions for optimization problem
   */
  static createConstraintFunctions(problem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[12]++;
    cov_22ysz9dgtl().s[86]++;
    return problem.constraints.map(constraint => {
      /* istanbul ignore next */
      cov_22ysz9dgtl().f[13]++;
      cov_22ysz9dgtl().s[87]++;
      return variables => {
        /* istanbul ignore next */
        cov_22ysz9dgtl().f[14]++;
        cov_22ysz9dgtl().s[88]++;
        try {
          // Apply variables to system configuration
          const configuredSystem =
          /* istanbul ignore next */
          (cov_22ysz9dgtl().s[89]++, this.applyVariablesToSystem(problem.systemConfiguration, variables));
          // Evaluate constraint based on type
          /* istanbul ignore next */
          cov_22ysz9dgtl().s[90]++;
          return this.evaluateConstraint(constraint, configuredSystem, variables);
        } catch (error) {
          /* istanbul ignore next */
          cov_22ysz9dgtl().s[91]++;
          console.error(`Error evaluating constraint ${constraint.id}:`, error);
          /* istanbul ignore next */
          cov_22ysz9dgtl().s[92]++;
          return Number.MAX_VALUE; // Return large violation for invalid evaluations
        }
      };
    });
  }
  /**
   * Apply optimization variables to system configuration
   */
  static applyVariablesToSystem(baseSystem, variables) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[15]++;
    // Deep clone the system configuration
    const configuredSystem =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[93]++, JSON.parse(JSON.stringify(baseSystem)));
    // Apply each variable to the appropriate system component
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[94]++;
    for (const variable of variables) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[95]++;
      this.applyVariableToSystem(configuredSystem, variable);
    }
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[96]++;
    return configuredSystem;
  }
  /**
   * Apply a single variable to system configuration
   */
  static applyVariableToSystem(system, variable) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[16]++;
    cov_22ysz9dgtl().s[97]++;
    // Implementation depends on variable type
    switch (variable.type) {
      case 'duct_size':
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[11][0]++;
        cov_22ysz9dgtl().s[98]++;
        this.applyDuctSizeVariable(system, variable);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[99]++;
        break;
      case 'fitting_type':
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[11][1]++;
        cov_22ysz9dgtl().s[100]++;
        this.applyFittingTypeVariable(system, variable);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[101]++;
        break;
      case 'material_type':
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[11][2]++;
        cov_22ysz9dgtl().s[102]++;
        this.applyMaterialTypeVariable(system, variable);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[103]++;
        break;
      case 'damper_position':
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[11][3]++;
        cov_22ysz9dgtl().s[104]++;
        this.applyDamperPositionVariable(system, variable);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[105]++;
        break;
      case 'fan_speed':
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[11][4]++;
        cov_22ysz9dgtl().s[106]++;
        this.applyFanSpeedVariable(system, variable);
        /* istanbul ignore next */
        cov_22ysz9dgtl().s[107]++;
        break;
      default:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[11][5]++;
        cov_22ysz9dgtl().s[108]++;
        console.warn(`Unknown variable type: ${variable.type}`);
    }
  }
  // Variable application methods (to be implemented based on specific requirements)
  static applyDuctSizeVariable(system, variable) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[17]++;
  } // Implementation for duct size variables
  static applyFittingTypeVariable(system, variable) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[18]++;
  } // Implementation for fitting type variables
  static applyMaterialTypeVariable(system, variable) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[19]++;
  } // Implementation for material type variables
  static applyDamperPositionVariable(system, variable) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[20]++;
  } // Implementation for damper position variables
  static applyFanSpeedVariable(system, variable) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[21]++;
  } // Implementation for fan speed variables
  /**
   * Calculate energy consumption for system configuration
   */
  static calculateEnergyConsumption(systemPerformance, configuredSystem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[22]++;
    // Simplified energy calculation - to be enhanced with detailed fan curves and operating schedules
    const fanPower =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[109]++, systemPerformance.totalPressureLoss * systemPerformance.totalFlow / 6356); // Convert to HP
    const annualOperatingHours =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[110]++, 8760); // Hours per year
    const energyConsumption =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[111]++, fanPower * 0.746 * annualOperatingHours); // Convert to kWh/year
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[112]++;
    return energyConsumption;
  }
  /**
   * Calculate total cost for system configuration
   */
  static calculateTotalCost(systemPerformance, configuredSystem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[23]++;
    // Simplified cost calculation - to be enhanced with detailed cost models
    let materialCost =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[113]++, 0);
    let installationCost =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[114]++, 0);
    let operatingCost =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[115]++, 0);
    // Calculate material costs
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[116]++;
    for (const segment of configuredSystem.segments) {
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[117]++;
      materialCost += this.calculateSegmentMaterialCost(segment);
    }
    // Calculate installation costs (typically 1.5-2x material cost)
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[118]++;
    installationCost = materialCost * 1.75;
    // Calculate annual operating costs
    const energyConsumption =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[119]++, this.calculateEnergyConsumption(systemPerformance, configuredSystem));
    const energyRate =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[120]++, 0.12); // $/kWh
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[121]++;
    operatingCost = energyConsumption * energyRate;
    // Total cost over 20-year lifecycle
    const lifecycleYears =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[122]++, 20);
    const totalCost =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[123]++, materialCost + installationCost + operatingCost * lifecycleYears);
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[124]++;
    return totalCost;
  }
  /**
   * Calculate noise level for system configuration
   */
  static calculateNoiseLevel(systemPerformance, configuredSystem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[24]++;
    // Simplified noise calculation - to be enhanced with detailed acoustic models
    let totalNoiseLevel =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[125]++, 0);
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[126]++;
    for (const segment of configuredSystem.segments) {
      const segmentNoise =
      /* istanbul ignore next */
      (cov_22ysz9dgtl().s[127]++, this.calculateSegmentNoiseLevel(segment, systemPerformance));
      /* istanbul ignore next */
      cov_22ysz9dgtl().s[128]++;
      totalNoiseLevel += Math.pow(10, segmentNoise / 10); // Convert dB to linear scale for addition
    }
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[129]++;
    return 10 * Math.log10(totalNoiseLevel); // Convert back to dB
  }
  /**
   * Calculate system efficiency
   */
  static calculateSystemEfficiency(systemPerformance, configuredSystem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[25]++;
    // Simplified efficiency calculation
    const theoreticalMinimumPressure =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[130]++, systemPerformance.totalFlow * 0.1); // Minimum pressure for flow
    const actualPressure =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[131]++, systemPerformance.totalPressureLoss);
    const efficiency =
    /* istanbul ignore next */
    (cov_22ysz9dgtl().s[132]++, theoreticalMinimumPressure / actualPressure);
    /* istanbul ignore next */
    cov_22ysz9dgtl().s[133]++;
    return Math.min(efficiency, 1.0); // Cap at 100% efficiency
  }
  // Helper methods for cost and noise calculations
  static calculateSegmentMaterialCost(segment) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[26]++;
    cov_22ysz9dgtl().s[134]++;
    // Placeholder implementation
    return 100; // Base cost per segment
  }
  static calculateSegmentNoiseLevel(segment, systemPerformance) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[27]++;
    cov_22ysz9dgtl().s[135]++;
    // Placeholder implementation
    return 45; // Base noise level in dB
  }
  /**
   * Evaluate constraint function
   */
  static evaluateConstraint(constraint, configuredSystem, variables) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[28]++;
    cov_22ysz9dgtl().s[136]++;
    // Placeholder implementation - to be enhanced with specific constraint evaluations
    return 0; // Return 0 for satisfied constraints, positive for violations
  }
  /**
   * Create optimizer instance based on algorithm type
   */
  static createOptimizer(algorithm, problem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[29]++;
    cov_22ysz9dgtl().s[137]++;
    switch (algorithm) {
      case SystemOptimizationTypes_1.OptimizationAlgorithm.GENETIC_ALGORITHM:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][0]++;
      case SystemOptimizationTypes_1.OptimizationAlgorithm.MULTI_OBJECTIVE_GA:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][1]++;
      case SystemOptimizationTypes_1.OptimizationAlgorithm.NSGA_II:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][2]++;
        cov_22ysz9dgtl().s[138]++;
        return this.geneticAlgorithm;
      case SystemOptimizationTypes_1.OptimizationAlgorithm.SIMULATED_ANNEALING:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][3]++;
        cov_22ysz9dgtl().s[139]++;
        return this.simulatedAnnealing;
      case SystemOptimizationTypes_1.OptimizationAlgorithm.PARTICLE_SWARM:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][4]++;
        cov_22ysz9dgtl().s[140]++;
        return this.particleSwarm;
      case SystemOptimizationTypes_1.OptimizationAlgorithm.GRADIENT_DESCENT:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][5]++;
        cov_22ysz9dgtl().s[141]++;
        return this.gradientDescent;
      default:
        /* istanbul ignore next */
        cov_22ysz9dgtl().b[12][6]++;
        cov_22ysz9dgtl().s[142]++;
        throw new Error(`Unsupported optimization algorithm: ${algorithm}`);
    }
  }
  // Additional helper methods for creating variables and objectives
  static createBalancingVariables(system, targetFlows) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[30]++;
    cov_22ysz9dgtl().s[143]++;
    // Placeholder implementation
    return [];
  }
  static createBalancingObjectives(targetFlows) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[31]++;
    cov_22ysz9dgtl().s[144]++;
    // Placeholder implementation
    return {
      objectives: [],
      aggregationMethod: 'weighted_sum'
    };
  }
  static createEnergyOptimizationVariables(system) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[32]++;
    cov_22ysz9dgtl().s[145]++;
    // Placeholder implementation
    return [];
  }
  static createEnergyObjectiveFunction(operatingConditions) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[33]++;
    cov_22ysz9dgtl().s[146]++;
    // Placeholder implementation
    return variables => {
      /* istanbul ignore next */
      cov_22ysz9dgtl().f[34]++;
      cov_22ysz9dgtl().s[147]++;
      return 0;
    };
  }
  static createCostObjectiveFunction() {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[35]++;
    cov_22ysz9dgtl().s[148]++;
    // Placeholder implementation
    return variables => {
      /* istanbul ignore next */
      cov_22ysz9dgtl().f[36]++;
      cov_22ysz9dgtl().s[149]++;
      return 0;
    };
  }
  // Utility methods
  static generateOptimizationId(problem) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[37]++;
    cov_22ysz9dgtl().s[150]++;
    return `opt_${problem.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  static async runOptimization(optimizer, objectiveFunction, constraintFunctions, problem, optimizationId) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[38]++;
    cov_22ysz9dgtl().s[151]++;
    // Placeholder implementation - to be completed with actual optimization logic
    throw new Error('Optimization execution not yet implemented');
  }
  static async postProcessResults(result, problem, startTime) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[39]++;
    cov_22ysz9dgtl().s[152]++;
    // Placeholder implementation
    return result;
  }
  static createErrorResult(problem, error, startTime) {
    /* istanbul ignore next */
    cov_22ysz9dgtl().f[40]++;
    cov_22ysz9dgtl().s[153]++;
    // Placeholder implementation
    return {
      problemId: problem.id,
      status: SystemOptimizationTypes_1.OptimizationStatus.ERROR,
      bestSolution: {},
      statistics: {},
      history: {},
      analysis: {},
      recommendations: [],
      warnings: [],
      errors: [error.message]
    };
  }
}
/* istanbul ignore next */
cov_22ysz9dgtl().s[154]++;
exports.SystemOptimizationEngine = SystemOptimizationEngine;
/* istanbul ignore next */
cov_22ysz9dgtl().s[155]++;
SystemOptimizationEngine.VERSION = '3.0.0';
/* istanbul ignore next */
cov_22ysz9dgtl().s[156]++;
SystemOptimizationEngine.MAX_ITERATIONS_DEFAULT = 1000;
/* istanbul ignore next */
cov_22ysz9dgtl().s[157]++;
SystemOptimizationEngine.CONVERGENCE_TOLERANCE_DEFAULT = 1e-6;
// Performance tracking
/* istanbul ignore next */
cov_22ysz9dgtl().s[158]++;
SystemOptimizationEngine.optimizationHistory = new Map();
/* istanbul ignore next */
cov_22ysz9dgtl().s[159]++;
SystemOptimizationEngine.performanceMetrics = new Map();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,