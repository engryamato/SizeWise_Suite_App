version: '3.8'
services:
  frontend:
    image: sizewise-frontend:test-deployment-002
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: sizewise-backend:test-deployment-002
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - REDIS_HOST=${REDIS_HOST:-redis}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-sizewise}
      - POSTGRES_USER=${POSTGRES_USER:-sizewise}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
