af67d93db07fab25ae0a18af276dae29
"use strict";

/**
 * Simulated Annealing Algorithm Implementation for System Optimization
 *
 * Implements simulated annealing optimization with:
 * - Configurable cooling schedules (linear, exponential, logarithmic, adaptive)
 * - Multiple neighborhood generation strategies
 * - Constraint handling with penalty methods
 * - Adaptive parameter adjustment
 * - Restart mechanisms for global optimization
 *
 * @version 3.0.0
 * @author SizeWise Suite Development Team
 */
/* istanbul ignore next */
function cov_1p7ah0mc1t() {
  var path = "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\algorithms\\SimulatedAnnealing.ts";
  var hash = "d7a8bc38eb8abc499d60b51629b7eff5ffb9eb9e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\algorithms\\SimulatedAnnealing.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "2": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 77
        }
      },
      "3": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "6": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "8": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "9": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 77
        }
      },
      "10": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 38
        }
      },
      "11": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "12": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "13": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "14": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 94
        }
      },
      "15": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "16": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 93
        }
      },
      "17": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "18": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "19": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "20": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "21": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 84
        }
      },
      "22": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "23": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 77
        }
      },
      "24": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 24
        }
      },
      "25": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 33
        }
      },
      "26": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 33
        }
      },
      "27": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 26
        }
      },
      "28": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 33
        }
      },
      "29": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 120
        }
      },
      "30": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 101,
          column: 66
        }
      },
      "31": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 102
        }
      },
      "32": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "33": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 51
        }
      },
      "34": {
        start: {
          line: 120,
          column: 26
        },
        end: {
          line: 120,
          column: 28
        }
      },
      "35": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "36": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "37": {
        start: {
          line: 124,
          column: 36
        },
        end: {
          line: 124,
          column: 94
        }
      },
      "38": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 78
        }
      },
      "39": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 101
        }
      },
      "40": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 101
        }
      },
      "41": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 75
        }
      },
      "42": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "43": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "44": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 83
        }
      },
      "45": {
        start: {
          line: 153,
          column: 35
        },
        end: {
          line: 153,
          column: 63
        }
      },
      "46": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "47": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "48": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 95
        }
      },
      "49": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 47
        }
      },
      "50": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "51": {
        start: {
          line: 162,
          column: 34
        },
        end: {
          line: 162,
          column: 63
        }
      },
      "52": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "53": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 94
        }
      },
      "54": {
        start: {
          line: 173,
          column: 73
        },
        end: {
          line: 173,
          column: 92
        }
      },
      "55": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "56": {
        start: {
          line: 176,
          column: 37
        },
        end: {
          line: 178,
          column: 59
        }
      },
      "57": {
        start: {
          line: 177,
          column: 33
        },
        end: {
          line: 177,
          column: 51
        }
      },
      "58": {
        start: {
          line: 178,
          column: 40
        },
        end: {
          line: 178,
          column: 55
        }
      },
      "59": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 49
        }
      },
      "60": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 35
        }
      },
      "61": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 63
        }
      },
      "62": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 48
        }
      },
      "63": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 38
        }
      },
      "64": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 196,
          column: 12
        }
      },
      "65": {
        start: {
          line: 193,
          column: 50
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "66": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 203,
          column: 19
        }
      },
      "67": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 19
        }
      },
      "68": {
        start: {
          line: 205,
          column: 33
        },
        end: {
          line: 205,
          column: 91
        }
      },
      "69": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 103
        }
      },
      "70": {
        start: {
          line: 208,
          column: 23
        },
        end: {
          line: 208,
          column: 84
        }
      },
      "71": {
        start: {
          line: 209,
          column: 38
        },
        end: {
          line: 209,
          column: 112
        }
      },
      "72": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "73": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 58
        }
      },
      "74": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 46
        }
      },
      "75": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "76": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 51
        }
      },
      "77": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "78": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 64
        }
      },
      "79": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "80": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 46
        }
      },
      "81": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 123
        }
      },
      "82": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 38
        }
      },
      "83": {
        start: {
          line: 238,
          column: 25
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "84": {
        start: {
          line: 244,
          column: 28
        },
        end: {
          line: 244,
          column: 59
        }
      },
      "85": {
        start: {
          line: 245,
          column: 33
        },
        end: {
          line: 245,
          column: 92
        }
      },
      "86": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 246,
          column: 79
        }
      },
      "87": {
        start: {
          line: 246,
          column: 53
        },
        end: {
          line: 246,
          column: 78
        }
      },
      "88": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 248,
          column: 28
        }
      },
      "89": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 28
        }
      },
      "90": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 122
        }
      },
      "91": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 24
        }
      },
      "92": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "93": {
        start: {
          line: 259,
          column: 33
        },
        end: {
          line: 259,
          column: 78
        }
      },
      "94": {
        start: {
          line: 260,
          column: 37
        },
        end: {
          line: 260,
          column: 127
        }
      },
      "95": {
        start: {
          line: 261,
          column: 29
        },
        end: {
          line: 261,
          column: 73
        }
      },
      "96": {
        start: {
          line: 262,
          column: 29
        },
        end: {
          line: 262,
          column: 106
        }
      },
      "97": {
        start: {
          line: 263,
          column: 32
        },
        end: {
          line: 263,
          column: 96
        }
      },
      "98": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 56
        }
      },
      "99": {
        start: {
          line: 266,
          column: 13
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "100": {
        start: {
          line: 268,
          column: 24
        },
        end: {
          line: 268,
          column: 97
        }
      },
      "101": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 97
        }
      },
      "102": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 270,
          column: 35
        }
      },
      "103": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "104": {
        start: {
          line: 274,
          column: 34
        },
        end: {
          line: 274,
          column: 74
        }
      },
      "105": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 81
        }
      },
      "106": {
        start: {
          line: 276,
          column: 20
        },
        end: {
          line: 276,
          column: 26
        }
      },
      "107": {
        start: {
          line: 278,
          column: 34
        },
        end: {
          line: 278,
          column: 74
        }
      },
      "108": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 85
        }
      },
      "109": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 26
        }
      },
      "110": {
        start: {
          line: 282,
          column: 34
        },
        end: {
          line: 282,
          column: 74
        }
      },
      "111": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 79
        }
      },
      "112": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 26
        }
      },
      "113": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 116
        }
      },
      "114": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 63
        }
      },
      "115": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 28
        }
      },
      "116": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "117": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 23
        }
      },
      "118": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "119": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 55
        }
      },
      "120": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 68
        }
      },
      "121": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 101
        }
      },
      "122": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 55
        }
      },
      "123": {
        start: {
          line: 314,
          column: 25
        },
        end: {
          line: 314,
          column: 56
        }
      },
      "124": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "125": {
        start: {
          line: 317,
          column: 35
        },
        end: {
          line: 317,
          column: 124
        }
      },
      "126": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 113
        }
      },
      "127": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 102
        }
      },
      "128": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 114
        }
      },
      "129": {
        start: {
          line: 325,
          column: 39
        },
        end: {
          line: 325,
          column: 144
        }
      },
      "130": {
        start: {
          line: 326,
          column: 45
        },
        end: {
          line: 326,
          column: 48
        }
      },
      "131": {
        start: {
          line: 327,
          column: 41
        },
        end: {
          line: 327,
          column: 92
        }
      },
      "132": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 98
        }
      },
      "133": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 102
        }
      },
      "134": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 338,
          column: 24
        }
      },
      "135": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 24
        }
      },
      "136": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "137": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 24
        }
      },
      "138": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "139": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 24
        }
      },
      "140": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "141": {
        start: {
          line: 349,
          column: 34
        },
        end: {
          line: 349,
          column: 57
        }
      },
      "142": {
        start: {
          line: 350,
          column: 31
        },
        end: {
          line: 350,
          column: 81
        }
      },
      "143": {
        start: {
          line: 350,
          column: 66
        },
        end: {
          line: 350,
          column: 79
        }
      },
      "144": {
        start: {
          line: 351,
          column: 32
        },
        end: {
          line: 351,
          column: 70
        }
      },
      "145": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 354,
          column: 13
        }
      },
      "146": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 28
        }
      },
      "147": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 21
        }
      },
      "148": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 363,
          column: 25
        }
      },
      "149": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 25
        }
      },
      "150": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 365,
          column: 25
        }
      },
      "151": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 25
        }
      },
      "152": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 367,
          column: 25
        }
      },
      "153": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 25
        }
      },
      "154": {
        start: {
          line: 369,
          column: 33
        },
        end: {
          line: 369,
          column: 36
        }
      },
      "155": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "156": {
        start: {
          line: 371,
          column: 34
        },
        end: {
          line: 371,
          column: 71
        }
      },
      "157": {
        start: {
          line: 372,
          column: 36
        },
        end: {
          line: 372,
          column: 97
        }
      },
      "158": {
        start: {
          line: 372,
          column: 82
        },
        end: {
          line: 372,
          column: 95
        }
      },
      "159": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 375,
          column: 13
        }
      },
      "160": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 374,
          column: 28
        }
      },
      "161": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 21
        }
      },
      "162": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 102
        }
      },
      "163": {
        start: {
          line: 385,
          column: 28
        },
        end: {
          line: 385,
          column: 62
        }
      },
      "164": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 98
        }
      },
      "165": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 49
        }
      },
      "166": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 75
        }
      },
      "167": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 40
        }
      },
      "168": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 44
        }
      },
      "169": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 44
        }
      },
      "170": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 45
        }
      },
      "171": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 45
        }
      },
      "172": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 41
        }
      },
      "173": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "174": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 89
        }
      },
      "175": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 33
        }
      },
      "176": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 407,
          column: 19
        }
      },
      "177": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 19
        }
      },
      "178": {
        start: {
          line: 408,
          column: 27
        },
        end: {
          line: 408,
          column: 92
        }
      },
      "179": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 410,
          column: 19
        }
      },
      "180": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 19
        }
      },
      "181": {
        start: {
          line: 411,
          column: 31
        },
        end: {
          line: 411,
          column: 75
        }
      },
      "182": {
        start: {
          line: 412,
          column: 37
        },
        end: {
          line: 412,
          column: 40
        }
      },
      "183": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "184": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 101
        }
      },
      "185": {
        start: {
          line: 417,
          column: 13
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "186": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 102
        }
      },
      "187": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 427,
          column: 19
        }
      },
      "188": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 19
        }
      },
      "189": {
        start: {
          line: 428,
          column: 24
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "190": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 35
        }
      },
      "191": {
        start: {
          line: 443,
          column: 30
        },
        end: {
          line: 443,
          column: 59
        }
      },
      "192": {
        start: {
          line: 444,
          column: 27
        },
        end: {
          line: 462,
          column: 9
        }
      },
      "193": {
        start: {
          line: 449,
          column: 54
        },
        end: {
          line: 449,
          column: 67
        }
      },
      "194": {
        start: {
          line: 450,
          column: 57
        },
        end: {
          line: 450,
          column: 73
        }
      },
      "195": {
        start: {
          line: 451,
          column: 52
        },
        end: {
          line: 451,
          column: 63
        }
      },
      "196": {
        start: {
          line: 452,
          column: 62
        },
        end: {
          line: 452,
          column: 84
        }
      },
      "197": {
        start: {
          line: 463,
          column: 36
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "198": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 479,
          column: 10
        }
      },
      "199": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 81
        }
      },
      "200": {
        start: {
          line: 486,
          column: 20
        },
        end: {
          line: 486,
          column: 24
        }
      },
      "201": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 490,
          column: 10
        }
      },
      "202": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 52
        }
      },
      "203": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 34
        }
      },
      "204": {
        start: {
          line: 494,
          column: 19
        },
        end: {
          line: 494,
          column: 32
        }
      },
      "205": {
        start: {
          line: 495,
          column: 19
        },
        end: {
          line: 495,
          column: 32
        }
      },
      "206": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 73
        }
      },
      "207": {
        start: {
          line: 500,
          column: 18
        },
        end: {
          line: 500,
          column: 31
        }
      },
      "208": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 501,
          column: 45
        }
      },
      "209": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 505,
          column: 21
        }
      },
      "210": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 21
        }
      },
      "211": {
        start: {
          line: 506,
          column: 21
        },
        end: {
          line: 506,
          column: 78
        }
      },
      "212": {
        start: {
          line: 506,
          column: 49
        },
        end: {
          line: 506,
          column: 58
        }
      },
      "213": {
        start: {
          line: 507,
          column: 29
        },
        end: {
          line: 507,
          column: 71
        }
      },
      "214": {
        start: {
          line: 507,
          column: 47
        },
        end: {
          line: 507,
          column: 70
        }
      },
      "215": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 508,
          column: 81
        }
      },
      "216": {
        start: {
          line: 508,
          column: 50
        },
        end: {
          line: 508,
          column: 60
        }
      },
      "217": {
        start: {
          line: 511,
          column: 0
        },
        end: {
          line: 511,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 68
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 59
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 81
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 99
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 119
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 86
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 148
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 173,
            column: 68
          },
          end: {
            line: 173,
            column: 69
          }
        },
        loc: {
          start: {
            line: 173,
            column: 73
          },
          end: {
            line: 173,
            column: 92
          }
        },
        line: 173
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 177,
            column: 29
          }
        },
        loc: {
          start: {
            line: 177,
            column: 33
          },
          end: {
            line: 177,
            column: 51
          }
        },
        line: 177
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 29
          }
        },
        loc: {
          start: {
            line: 178,
            column: 40
          },
          end: {
            line: 178,
            column: 55
          }
        },
        line: 178
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 53
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 192
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 193,
            column: 37
          },
          end: {
            line: 193,
            column: 38
          }
        },
        loc: {
          start: {
            line: 193,
            column: 50
          },
          end: {
            line: 196,
            column: 9
          }
        },
        line: 193
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 76
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 201
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 47
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 237
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 246,
            column: 48
          },
          end: {
            line: 246,
            column: 49
          }
        },
        loc: {
          start: {
            line: 246,
            column: 53
          },
          end: {
            line: 246,
            column: 78
          }
        },
        line: 246
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 50
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 256
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 56
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 295
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 53
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 313
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 22
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 336
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 350,
            column: 61
          },
          end: {
            line: 350,
            column: 62
          }
        },
        loc: {
          start: {
            line: 350,
            column: 66
          },
          end: {
            line: 350,
            column: 79
          }
        },
        line: 350
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 20
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 361
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 372,
            column: 77
          },
          end: {
            line: 372,
            column: 78
          }
        },
        loc: {
          start: {
            line: 372,
            column: 82
          },
          end: {
            line: 372,
            column: 95
          }
        },
        line: 372
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 67
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 382
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 28
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 405
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 425
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        loc: {
          start: {
            line: 442,
            column: 49
          },
          end: {
            line: 480,
            column: 5
          }
        },
        line: 442
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 449,
            column: 49
          },
          end: {
            line: 449,
            column: 50
          }
        },
        loc: {
          start: {
            line: 449,
            column: 54
          },
          end: {
            line: 449,
            column: 67
          }
        },
        line: 449
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 450,
            column: 52
          },
          end: {
            line: 450,
            column: 53
          }
        },
        loc: {
          start: {
            line: 450,
            column: 57
          },
          end: {
            line: 450,
            column: 73
          }
        },
        line: 450
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 451,
            column: 47
          },
          end: {
            line: 451,
            column: 48
          }
        },
        loc: {
          start: {
            line: 451,
            column: 52
          },
          end: {
            line: 451,
            column: 63
          }
        },
        line: 451
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 452,
            column: 57
          },
          end: {
            line: 452,
            column: 58
          }
        },
        loc: {
          start: {
            line: 452,
            column: 62
          },
          end: {
            line: 452,
            column: 84
          }
        },
        line: 452
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 25
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 482
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 29
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 485
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 487,
            column: 15
          },
          end: {
            line: 487,
            column: 16
          }
        },
        loc: {
          start: {
            line: 487,
            column: 21
          },
          end: {
            line: 490,
            column: 9
          }
        },
        line: 487
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        loc: {
          start: {
            line: 492,
            column: 21
          },
          end: {
            line: 497,
            column: 5
          }
        },
        line: 492
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        loc: {
          start: {
            line: 498,
            column: 19
          },
          end: {
            line: 502,
            column: 5
          }
        },
        line: 498
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        loc: {
          start: {
            line: 503,
            column: 30
          },
          end: {
            line: 509,
            column: 5
          }
        },
        line: 503
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 506,
            column: 35
          },
          end: {
            line: 506,
            column: 36
          }
        },
        loc: {
          start: {
            line: 506,
            column: 49
          },
          end: {
            line: 506,
            column: 58
          }
        },
        line: 506
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 507,
            column: 40
          },
          end: {
            line: 507,
            column: 41
          }
        },
        loc: {
          start: {
            line: 507,
            column: 47
          },
          end: {
            line: 507,
            column: 70
          }
        },
        line: 507
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 508,
            column: 35
          },
          end: {
            line: 508,
            column: 36
          }
        },
        loc: {
          start: {
            line: 508,
            column: 50
          },
          end: {
            line: 508,
            column: 60
          }
        },
        line: 508
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: 52,
            column: 13
          },
          end: {
            line: 54,
            column: 9
          }
        }],
        line: 49
      },
      "1": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "2": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "3": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 132,
            column: 13
          }
        }],
        line: 122
      },
      "4": {
        loc: {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 39
          }
        }, {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 122,
            column: 77
          }
        }],
        line: 122
      },
      "5": {
        loc: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 129,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 74
          },
          end: {
            line: 129,
            column: 97
          }
        }, {
          start: {
            line: 129,
            column: 100
          },
          end: {
            line: 129,
            column: 101
          }
        }],
        line: 129
      },
      "6": {
        loc: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 130,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 74
          },
          end: {
            line: 130,
            column: 97
          }
        }, {
          start: {
            line: 130,
            column: 100
          },
          end: {
            line: 130,
            column: 101
          }
        }],
        line: 130
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 165,
            column: 35
          },
          end: {
            line: 165,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 51
          },
          end: {
            line: 165,
            column: 63
          }
        }, {
          start: {
            line: 165,
            column: 66
          },
          end: {
            line: 165,
            column: 76
          }
        }],
        line: 165
      },
      "9": {
        loc: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 46
          },
          end: {
            line: 168,
            column: 53
          }
        }, {
          start: {
            line: 168,
            column: 56
          },
          end: {
            line: 168,
            column: 63
          }
        }],
        line: 168
      },
      "10": {
        loc: {
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 45
          },
          end: {
            line: 169,
            column: 91
          }
        }, {
          start: {
            line: 169,
            column: 94
          },
          end: {
            line: 169,
            column: 95
          }
        }],
        line: 169
      },
      "11": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "12": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 34
          }
        }, {
          start: {
            line: 175,
            column: 38
          },
          end: {
            line: 175,
            column: 86
          }
        }],
        line: 175
      },
      "13": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 203,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 203,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: 226,
            column: 13
          },
          end: {
            line: 229,
            column: 9
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: 222,
            column: 17
          },
          end: {
            line: 224,
            column: 13
          }
        }],
        line: 215
      },
      "16": {
        loc: {
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "17": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 248,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 248,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "18": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: 266,
            column: 13
          },
          end: {
            line: 289,
            column: 9
          }
        }],
        line: 257
      },
      "19": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 257,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 257,
            column: 35
          }
        }, {
          start: {
            line: 257,
            column: 39
          },
          end: {
            line: 257,
            column: 73
          }
        }],
        line: 257
      },
      "20": {
        loc: {
          start: {
            line: 266,
            column: 13
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 13
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "21": {
        loc: {
          start: {
            line: 268,
            column: 24
          },
          end: {
            line: 268,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 70
          },
          end: {
            line: 268,
            column: 93
          }
        }, {
          start: {
            line: 268,
            column: 96
          },
          end: {
            line: 268,
            column: 97
          }
        }],
        line: 268
      },
      "22": {
        loc: {
          start: {
            line: 269,
            column: 24
          },
          end: {
            line: 269,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 70
          },
          end: {
            line: 269,
            column: 93
          }
        }, {
          start: {
            line: 269,
            column: 96
          },
          end: {
            line: 269,
            column: 97
          }
        }],
        line: 269
      },
      "23": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 276,
            column: 26
          }
        }, {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 280,
            column: 26
          }
        }, {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 284,
            column: 26
          }
        }, {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 286,
            column: 116
          }
        }],
        line: 272
      },
      "24": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "25": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 301,
            column: 55
          }
        }, {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 303,
            column: 68
          }
        }, {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 305,
            column: 101
          }
        }, {
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 307,
            column: 55
          }
        }],
        line: 299
      },
      "26": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 113
          }
        }, {
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 320,
            column: 102
          }
        }, {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 322,
            column: 114
          }
        }, {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 328,
            column: 98
          }
        }, {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 330,
            column: 102
          }
        }],
        line: 315
      },
      "27": {
        loc: {
          start: {
            line: 327,
            column: 41
          },
          end: {
            line: 327,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 81
          },
          end: {
            line: 327,
            column: 85
          }
        }, {
          start: {
            line: 327,
            column: 88
          },
          end: {
            line: 327,
            column: 92
          }
        }],
        line: 327
      },
      "28": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 338,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 338,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "29": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "30": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "31": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 355,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 355,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "32": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "33": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 363,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 363,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "34": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 365,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 365,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "35": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 367,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 367,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "36": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "37": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "38": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 407,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 407,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "39": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 410,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 410,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "40": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        }, {
          start: {
            line: 417,
            column: 13
          },
          end: {
            line: 420,
            column: 9
          }
        }],
        line: 413
      },
      "41": {
        loc: {
          start: {
            line: 417,
            column: 13
          },
          end: {
            line: 420,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 13
          },
          end: {
            line: 420,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "42": {
        loc: {
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 427,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 427,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "43": {
        loc: {
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 426,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 426,
            column: 30
          }
        }, {
          start: {
            line: 426,
            column: 34
          },
          end: {
            line: 426,
            column: 52
          }
        }],
        line: 426
      },
      "44": {
        loc: {
          start: {
            line: 434,
            column: 34
          },
          end: {
            line: 434,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 434,
            column: 72
          },
          end: {
            line: 434,
            column: 73
          }
        }, {
          start: {
            line: 434,
            column: 76
          },
          end: {
            line: 434,
            column: 77
          }
        }],
        line: 434
      },
      "45": {
        loc: {
          start: {
            line: 445,
            column: 29
          },
          end: {
            line: 445,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 29
          },
          end: {
            line: 445,
            column: 57
          }
        }, {
          start: {
            line: 445,
            column: 61
          },
          end: {
            line: 445,
            column: 62
          }
        }],
        line: 445
      },
      "46": {
        loc: {
          start: {
            line: 447,
            column: 34
          },
          end: {
            line: 447,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 34
          },
          end: {
            line: 447,
            column: 62
          }
        }, {
          start: {
            line: 447,
            column: 66
          },
          end: {
            line: 447,
            column: 67
          }
        }],
        line: 447
      },
      "47": {
        loc: {
          start: {
            line: 454,
            column: 34
          },
          end: {
            line: 454,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 34
          },
          end: {
            line: 454,
            column: 64
          }
        }, {
          start: {
            line: 454,
            column: 68
          },
          end: {
            line: 454,
            column: 69
          }
        }],
        line: 454
      },
      "48": {
        loc: {
          start: {
            line: 455,
            column: 31
          },
          end: {
            line: 455,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 455,
            column: 31
          },
          end: {
            line: 455,
            column: 63
          }
        }, {
          start: {
            line: 455,
            column: 67
          },
          end: {
            line: 455,
            column: 68
          }
        }],
        line: 455
      },
      "49": {
        loc: {
          start: {
            line: 456,
            column: 31
          },
          end: {
            line: 456,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 456,
            column: 31
          },
          end: {
            line: 456,
            column: 63
          }
        }, {
          start: {
            line: 456,
            column: 67
          },
          end: {
            line: 456,
            column: 68
          }
        }],
        line: 456
      },
      "50": {
        loc: {
          start: {
            line: 457,
            column: 32
          },
          end: {
            line: 457,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 32
          },
          end: {
            line: 457,
            column: 65
          }
        }, {
          start: {
            line: 457,
            column: 69
          },
          end: {
            line: 457,
            column: 70
          }
        }],
        line: 457
      },
      "51": {
        loc: {
          start: {
            line: 458,
            column: 32
          },
          end: {
            line: 458,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 32
          },
          end: {
            line: 458,
            column: 65
          }
        }, {
          start: {
            line: 458,
            column: 69
          },
          end: {
            line: 458,
            column: 70
          }
        }],
        line: 458
      },
      "52": {
        loc: {
          start: {
            line: 459,
            column: 30
          },
          end: {
            line: 459,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 30
          },
          end: {
            line: 459,
            column: 61
          }
        }, {
          start: {
            line: 459,
            column: 65
          },
          end: {
            line: 459,
            column: 66
          }
        }],
        line: 459
      },
      "53": {
        loc: {
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 505,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 505,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 504
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0, 0, 0],
      "26": [0, 0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\algorithms\\SimulatedAnnealing.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\johnr\\Downloads\\SizeWise_Suite_App\\backend\\services\\calculations\\algorithms\\SimulatedAnnealing.ts"],
      sourcesContent: ["/**\r\n * Simulated Annealing Algorithm Implementation for System Optimization\r\n * \r\n * Implements simulated annealing optimization with:\r\n * - Configurable cooling schedules (linear, exponential, logarithmic, adaptive)\r\n * - Multiple neighborhood generation strategies\r\n * - Constraint handling with penalty methods\r\n * - Adaptive parameter adjustment\r\n * - Restart mechanisms for global optimization\r\n * \r\n * @version 3.0.0\r\n * @author SizeWise Suite Development Team\r\n */\r\n\r\nimport {\r\n  OptimizationSolution,\r\n  OptimizationVariable,\r\n  OptimizationProblem,\r\n  OptimizationResult,\r\n  OptimizationStatus,\r\n  OptimizationStatistics,\r\n  OptimizationHistory,\r\n  IterationHistory,\r\n  SolutionPerformanceMetrics,\r\n  ObjectiveFunctionType,\r\n  ConstraintFunctionType,\r\n  CoolingSchedule\r\n} from '../types/SystemOptimizationTypes';\r\n\r\nexport interface SimulatedAnnealingParameters {\r\n  initialTemperature: number;\r\n  finalTemperature: number;\r\n  maxIterations: number;\r\n  coolingSchedule: CoolingSchedule;\r\n  neighborhoodSize: number;\r\n  neighborhoodMethod: 'gaussian' | 'uniform' | 'adaptive' | 'cauchy';\r\n  acceptanceCriterion: 'metropolis' | 'boltzmann' | 'fast_annealing';\r\n  constraintHandling: 'penalty' | 'repair' | 'rejection';\r\n  penaltyCoefficient: number;\r\n  restartEnabled: boolean;\r\n  maxRestarts: number;\r\n  restartTemperature: number;\r\n  adaptiveNeighborhood: boolean;\r\n  seedValue?: number;\r\n}\r\n\r\nexport interface SAState {\r\n  solution: OptimizationSolution;\r\n  temperature: number;\r\n  iteration: number;\r\n  acceptedMoves: number;\r\n  rejectedMoves: number;\r\n  improvingMoves: number;\r\n  worseningMoves: number;\r\n  restartCount: number;\r\n}\r\n\r\n/**\r\n * Simulated Annealing optimizer for single-objective optimization problems\r\n */\r\nexport class SimulatedAnnealing {\r\n  private parameters: SimulatedAnnealingParameters;\r\n  private currentState: SAState | null = null;\r\n  private bestSolution: OptimizationSolution | null = null;\r\n  private history: IterationHistory[] = [];\r\n  private random: () => number;\r\n  private evaluationCount: number = 0;\r\n\r\n  constructor(parameters?: Partial<SimulatedAnnealingParameters>) {\r\n    this.parameters = {\r\n      initialTemperature: 1000,\r\n      finalTemperature: 0.01,\r\n      maxIterations: 1000,\r\n      coolingSchedule: {\r\n        initialTemperature: 1000,\r\n        finalTemperature: 0.01,\r\n        coolingRate: 0.95,\r\n        method: 'exponential'\r\n      },\r\n      neighborhoodSize: 0.1,\r\n      neighborhoodMethod: 'gaussian',\r\n      acceptanceCriterion: 'metropolis',\r\n      constraintHandling: 'penalty',\r\n      penaltyCoefficient: 1000,\r\n      restartEnabled: true,\r\n      maxRestarts: 3,\r\n      restartTemperature: 100,\r\n      adaptiveNeighborhood: true,\r\n      ...parameters\r\n    };\r\n\r\n    // Initialize random number generator\r\n    if (this.parameters.seedValue !== undefined) {\r\n      this.random = this.createSeededRandom(this.parameters.seedValue);\r\n    } else {\r\n      this.random = Math.random;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main optimization method\r\n   */\r\n  public async optimize(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<OptimizationResult> {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Initialize algorithm\r\n      this.initializeAlgorithm(problem);\r\n      \r\n      // Create initial solution\r\n      await this.createInitialSolution(problem, objectiveFunction, constraintFunctions);\r\n      \r\n      // Main annealing loop\r\n      while (!this.shouldTerminate()) {\r\n        await this.performIteration(problem, objectiveFunction, constraintFunctions);\r\n        this.updateHistory();\r\n        \r\n        if (this.parameters.adaptiveNeighborhood) {\r\n          this.adaptNeighborhoodSize();\r\n        }\r\n      }\r\n      \r\n      // Check for restart\r\n      if (this.shouldRestart()) {\r\n        await this.restart(problem, objectiveFunction, constraintFunctions);\r\n      }\r\n      \r\n      // Create final result\r\n      return this.createOptimizationResult(problem, startTime);\r\n      \r\n    } catch (error) {\r\n      console.error('Simulated annealing optimization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize algorithm state\r\n   */\r\n  private initializeAlgorithm(problem: OptimizationProblem): void {\r\n    this.currentState = null;\r\n    this.bestSolution = null;\r\n    this.history = [];\r\n    this.evaluationCount = 0;\r\n    \r\n    console.log(`Initializing Simulated Annealing with initial temperature: ${this.parameters.initialTemperature}`);\r\n  }\r\n\r\n  /**\r\n   * Create initial solution\r\n   */\r\n  private async createInitialSolution(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    // Generate random initial solution\r\n    const initialSolution = this.createRandomSolution(problem);\r\n    await this.evaluateSolution(initialSolution, problem, objectiveFunction, constraintFunctions);\r\n    \r\n    // Initialize state\r\n    this.currentState = {\r\n      solution: initialSolution,\r\n      temperature: this.parameters.initialTemperature,\r\n      iteration: 0,\r\n      acceptedMoves: 0,\r\n      rejectedMoves: 0,\r\n      improvingMoves: 0,\r\n      worseningMoves: 0,\r\n      restartCount: 0\r\n    };\r\n    \r\n    this.bestSolution = { ...initialSolution };\r\n  }\r\n\r\n  /**\r\n   * Create a random solution\r\n   */\r\n  private createRandomSolution(problem: OptimizationProblem): OptimizationSolution {\r\n    const variables: { [variableId: string]: number | string } = {};\r\n    \r\n    for (const variable of problem.variables) {\r\n      if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n        // Discrete variable\r\n        const randomIndex = Math.floor(this.random() * variable.discreteValues.length);\r\n        variables[variable.id] = variable.discreteValues[randomIndex];\r\n      } else {\r\n        // Continuous variable\r\n        const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n        const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n        variables[variable.id] = min + this.random() * (max - min);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      id: this.generateSolutionId(),\r\n      variables,\r\n      objectiveValues: {},\r\n      constraintViolations: [],\r\n      feasible: true,\r\n      fitness: 0,\r\n      systemConfiguration: problem.systemConfiguration,\r\n      performanceMetrics: {} as SolutionPerformanceMetrics\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Evaluate solution fitness and constraints\r\n   */\r\n  private async evaluateSolution(\r\n    solution: OptimizationSolution,\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    try {\r\n      // Convert solution to optimization variables\r\n      const variables = this.solutionToVariables(solution, problem.variables);\r\n      \r\n      // Evaluate objective function\r\n      const objectiveValue = objectiveFunction(variables);\r\n      solution.fitness = objectiveValue;\r\n      \r\n      // Store objective values\r\n      if (problem.objectives.objectives.length > 0) {\r\n        solution.objectiveValues[problem.objectives.objectives[0].id] = objectiveValue;\r\n      }\r\n      \r\n      // Evaluate constraints\r\n      solution.constraintViolations = [];\r\n      for (const constraintFunction of constraintFunctions) {\r\n        const violation = constraintFunction(variables);\r\n        solution.constraintViolations.push({\r\n          constraintId: `constraint_${solution.constraintViolations.length}`,\r\n          violationType: violation > 0 ? 'inequality' : 'boundary',\r\n          currentValue: violation,\r\n          requiredValue: 0,\r\n          severity: violation > 0 ? 'major' : 'minor',\r\n          penalty: violation > 0 ? violation * this.parameters.penaltyCoefficient : 0\r\n        });\r\n      }\r\n      \r\n      // Check feasibility\r\n      solution.feasible = solution.constraintViolations.every(v => v.currentValue <= 0);\r\n      \r\n      // Apply constraint handling\r\n      if (!solution.feasible && this.parameters.constraintHandling === 'penalty') {\r\n        const totalPenalty = solution.constraintViolations\r\n          .filter(v => v.currentValue > 0)\r\n          .reduce((sum, v) => sum + v.penalty, 0);\r\n        solution.fitness += totalPenalty;\r\n      }\r\n      \r\n      this.evaluationCount++;\r\n      \r\n    } catch (error) {\r\n      console.error('Error evaluating solution:', error);\r\n      solution.fitness = Number.MAX_VALUE;\r\n      solution.feasible = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert solution to optimization variables\r\n   */\r\n  private solutionToVariables(solution: OptimizationSolution, variableTemplates: OptimizationVariable[]): OptimizationVariable[] {\r\n    return variableTemplates.map(template => ({\r\n      ...template,\r\n      currentValue: solution.variables[template.id]\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Perform one iteration of simulated annealing\r\n   */\r\n  private async performIteration(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    if (!this.currentState) return;\r\n    \r\n    // Generate neighbor solution\r\n    const neighborSolution = this.generateNeighbor(this.currentState.solution, problem);\r\n    await this.evaluateSolution(neighborSolution, problem, objectiveFunction, constraintFunctions);\r\n    \r\n    // Calculate acceptance probability\r\n    const deltaE = neighborSolution.fitness - this.currentState.solution.fitness;\r\n    const acceptanceProbability = this.calculateAcceptanceProbability(deltaE, this.currentState.temperature);\r\n    \r\n    // Accept or reject the neighbor\r\n    if (this.random() < acceptanceProbability) {\r\n      // Accept the neighbor\r\n      this.currentState.solution = neighborSolution;\r\n      this.currentState.acceptedMoves++;\r\n      \r\n      if (deltaE < 0) {\r\n        this.currentState.improvingMoves++;\r\n        \r\n        // Update best solution\r\n        if (neighborSolution.fitness < this.bestSolution!.fitness) {\r\n          this.bestSolution = { ...neighborSolution };\r\n        }\r\n      } else {\r\n        this.currentState.worseningMoves++;\r\n      }\r\n    } else {\r\n      // Reject the neighbor\r\n      this.currentState.rejectedMoves++;\r\n    }\r\n    \r\n    // Update temperature\r\n    this.currentState.temperature = this.updateTemperature(this.currentState.temperature, this.currentState.iteration);\r\n    this.currentState.iteration++;\r\n  }\r\n\r\n  /**\r\n   * Generate neighbor solution\r\n   */\r\n  private generateNeighbor(currentSolution: OptimizationSolution, problem: OptimizationProblem): OptimizationSolution {\r\n    const neighbor: OptimizationSolution = {\r\n      ...currentSolution,\r\n      id: this.generateSolutionId(),\r\n      variables: { ...currentSolution.variables }\r\n    };\r\n    \r\n    // Select random variable to modify\r\n    const variableIds = Object.keys(neighbor.variables);\r\n    const randomVariableId = variableIds[Math.floor(this.random() * variableIds.length)];\r\n    const variable = problem.variables.find(v => v.id === randomVariableId);\r\n    \r\n    if (!variable) return neighbor;\r\n    \r\n    // Generate neighbor value based on neighborhood method\r\n    neighbor.variables[randomVariableId] = this.generateNeighborValue(\r\n      neighbor.variables[randomVariableId],\r\n      variable\r\n    );\r\n    \r\n    return neighbor;\r\n  }\r\n\r\n  /**\r\n   * Generate neighbor value for a variable\r\n   */\r\n  private generateNeighborValue(currentValue: number | string, variable: OptimizationVariable): number | string {\r\n    if (variable.discreteValues && variable.discreteValues.length > 0) {\r\n      // Discrete variable - random selection from neighborhood\r\n      const currentIndex = variable.discreteValues.indexOf(currentValue);\r\n      const neighborhoodSize = Math.max(1, Math.floor(variable.discreteValues.length * this.parameters.neighborhoodSize));\r\n      \r\n      const minIndex = Math.max(0, currentIndex - neighborhoodSize);\r\n      const maxIndex = Math.min(variable.discreteValues.length - 1, currentIndex + neighborhoodSize);\r\n      \r\n      const randomIndex = minIndex + Math.floor(this.random() * (maxIndex - minIndex + 1));\r\n      return variable.discreteValues[randomIndex];\r\n    } else if (typeof currentValue === 'number') {\r\n      // Continuous variable\r\n      const min = typeof variable.bounds.minimum === 'number' ? variable.bounds.minimum : 0;\r\n      const max = typeof variable.bounds.maximum === 'number' ? variable.bounds.maximum : 1;\r\n      const range = max - min;\r\n      \r\n      let neighborValue: number;\r\n      \r\n      switch (this.parameters.neighborhoodMethod) {\r\n        case 'gaussian':\r\n          const sigma = range * this.parameters.neighborhoodSize;\r\n          neighborValue = currentValue + this.gaussianRandom() * sigma;\r\n          break;\r\n        case 'uniform':\r\n          const delta = range * this.parameters.neighborhoodSize;\r\n          neighborValue = currentValue + (this.random() - 0.5) * 2 * delta;\r\n          break;\r\n        case 'cauchy':\r\n          const gamma = range * this.parameters.neighborhoodSize;\r\n          neighborValue = currentValue + this.cauchyRandom() * gamma;\r\n          break;\r\n        default:\r\n          neighborValue = currentValue + (this.random() - 0.5) * range * this.parameters.neighborhoodSize;\r\n      }\r\n      \r\n      return Math.max(min, Math.min(max, neighborValue));\r\n    }\r\n    \r\n    return currentValue;\r\n  }\r\n\r\n  /**\r\n   * Calculate acceptance probability\r\n   */\r\n  private calculateAcceptanceProbability(deltaE: number, temperature: number): number {\r\n    if (deltaE <= 0) {\r\n      return 1.0; // Always accept improving solutions\r\n    }\r\n    \r\n    switch (this.parameters.acceptanceCriterion) {\r\n      case 'metropolis':\r\n        return Math.exp(-deltaE / temperature);\r\n      case 'boltzmann':\r\n        return 1.0 / (1.0 + Math.exp(deltaE / temperature));\r\n      case 'fast_annealing':\r\n        return Math.exp(-deltaE / (temperature * Math.log(this.currentState!.iteration + 2)));\r\n      default:\r\n        return Math.exp(-deltaE / temperature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update temperature according to cooling schedule\r\n   */\r\n  private updateTemperature(currentTemperature: number, iteration: number): number {\r\n    const schedule = this.parameters.coolingSchedule;\r\n    \r\n    switch (schedule.method) {\r\n      case 'linear':\r\n        const linearRate = (schedule.initialTemperature - schedule.finalTemperature) / this.parameters.maxIterations;\r\n        return Math.max(schedule.finalTemperature, schedule.initialTemperature - iteration * linearRate);\r\n        \r\n      case 'exponential':\r\n        return Math.max(schedule.finalTemperature, currentTemperature * schedule.coolingRate);\r\n        \r\n      case 'logarithmic':\r\n        return Math.max(schedule.finalTemperature, schedule.initialTemperature / Math.log(iteration + 2));\r\n        \r\n      case 'adaptive':\r\n        // Adaptive cooling based on acceptance rate\r\n        const acceptanceRate = this.currentState!.acceptedMoves / (this.currentState!.acceptedMoves + this.currentState!.rejectedMoves + 1);\r\n        const targetAcceptanceRate = 0.4;\r\n        const adaptationFactor = acceptanceRate > targetAcceptanceRate ? 0.99 : 0.95;\r\n        return Math.max(schedule.finalTemperature, currentTemperature * adaptationFactor);\r\n        \r\n      default:\r\n        return Math.max(schedule.finalTemperature, currentTemperature * schedule.coolingRate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check termination criteria\r\n   */\r\n  private shouldTerminate(): boolean {\r\n    if (!this.currentState) return true;\r\n    \r\n    // Maximum iterations\r\n    if (this.currentState.iteration >= this.parameters.maxIterations) {\r\n      return true;\r\n    }\r\n    \r\n    // Temperature threshold\r\n    if (this.currentState.temperature <= this.parameters.finalTemperature) {\r\n      return true;\r\n    }\r\n    \r\n    // Convergence check (no improvement in recent iterations)\r\n    if (this.history.length >= 50) {\r\n      const recentHistory = this.history.slice(-50);\r\n      const bestRecent = Math.min(...recentHistory.map(h => h.bestFitness));\r\n      const improvement = this.bestSolution!.fitness - bestRecent;\r\n      \r\n      if (Math.abs(improvement) < 1e-6) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if restart should be performed\r\n   */\r\n  private shouldRestart(): boolean {\r\n    if (!this.parameters.restartEnabled) return false;\r\n    if (!this.currentState) return false;\r\n    if (this.currentState.restartCount >= this.parameters.maxRestarts) return false;\r\n    \r\n    // Restart if stuck in local minimum\r\n    const recentIterations = 100;\r\n    if (this.history.length >= recentIterations) {\r\n      const recentHistory = this.history.slice(-recentIterations);\r\n      const fitnessVariance = this.calculateVariance(recentHistory.map(h => h.bestFitness));\r\n      \r\n      if (fitnessVariance < 1e-6) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Restart the algorithm from a new random solution\r\n   */\r\n  private async restart(\r\n    problem: OptimizationProblem,\r\n    objectiveFunction: ObjectiveFunctionType,\r\n    constraintFunctions: ConstraintFunctionType[]\r\n  ): Promise<void> {\r\n    console.log(`Restarting simulated annealing (restart ${this.currentState!.restartCount + 1})`);\r\n    \r\n    // Create new random solution\r\n    const newSolution = this.createRandomSolution(problem);\r\n    await this.evaluateSolution(newSolution, problem, objectiveFunction, constraintFunctions);\r\n    \r\n    // Reset state with restart temperature\r\n    this.currentState!.solution = newSolution;\r\n    this.currentState!.temperature = this.parameters.restartTemperature;\r\n    this.currentState!.iteration = 0;\r\n    this.currentState!.acceptedMoves = 0;\r\n    this.currentState!.rejectedMoves = 0;\r\n    this.currentState!.improvingMoves = 0;\r\n    this.currentState!.worseningMoves = 0;\r\n    this.currentState!.restartCount++;\r\n    \r\n    // Continue optimization\r\n    while (!this.shouldTerminate()) {\r\n      await this.performIteration(problem, objectiveFunction, constraintFunctions);\r\n      this.updateHistory();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adapt neighborhood size based on acceptance rate\r\n   */\r\n  private adaptNeighborhoodSize(): void {\r\n    if (!this.currentState) return;\r\n    \r\n    const totalMoves = this.currentState.acceptedMoves + this.currentState.rejectedMoves;\r\n    if (totalMoves < 10) return;\r\n    \r\n    const acceptanceRate = this.currentState.acceptedMoves / totalMoves;\r\n    const targetAcceptanceRate = 0.4;\r\n    \r\n    if (acceptanceRate > targetAcceptanceRate + 0.1) {\r\n      // Too many acceptances - increase neighborhood size\r\n      this.parameters.neighborhoodSize = Math.min(0.5, this.parameters.neighborhoodSize * 1.1);\r\n    } else if (acceptanceRate < targetAcceptanceRate - 0.1) {\r\n      // Too few acceptances - decrease neighborhood size\r\n      this.parameters.neighborhoodSize = Math.max(0.01, this.parameters.neighborhoodSize * 0.9);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update optimization history\r\n   */\r\n  private updateHistory(): void {\r\n    if (!this.currentState || !this.bestSolution) return;\r\n    \r\n    const history: IterationHistory = {\r\n      iteration: this.currentState.iteration,\r\n      bestFitness: this.bestSolution.fitness,\r\n      averageFitness: this.currentState.solution.fitness,\r\n      worstFitness: this.currentState.solution.fitness,\r\n      diversity: 0, // Not applicable for single solution\r\n      constraintViolations: this.currentState.solution.feasible ? 0 : 1,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    this.history.push(history);\r\n  }\r\n\r\n  /**\r\n   * Create optimization result\r\n   */\r\n  private createOptimizationResult(problem: OptimizationProblem, startTime: number): OptimizationResult {\r\n    const executionTime = performance.now() - startTime;\r\n    \r\n    const statistics: OptimizationStatistics = {\r\n      totalIterations: this.currentState?.iteration || 0,\r\n      totalEvaluations: this.evaluationCount,\r\n      convergenceIteration: this.currentState?.iteration || 0,\r\n      executionTime,\r\n      bestFitnessHistory: this.history.map(h => h.bestFitness),\r\n      averageFitnessHistory: this.history.map(h => h.averageFitness),\r\n      diversityHistory: this.history.map(h => h.diversity),\r\n      constraintViolationHistory: this.history.map(h => h.constraintViolations),\r\n      algorithmSpecificStats: {\r\n        finalTemperature: this.currentState?.temperature || 0,\r\n        acceptedMoves: this.currentState?.acceptedMoves || 0,\r\n        rejectedMoves: this.currentState?.rejectedMoves || 0,\r\n        improvingMoves: this.currentState?.improvingMoves || 0,\r\n        worseningMoves: this.currentState?.worseningMoves || 0,\r\n        restartCount: this.currentState?.restartCount || 0,\r\n        finalNeighborhoodSize: this.parameters.neighborhoodSize\r\n      }\r\n    };\r\n    \r\n    const optimizationHistory: OptimizationHistory = {\r\n      iterations: this.history,\r\n      populationHistory: [],\r\n      parameterHistory: [],\r\n      convergenceMetrics: []\r\n    };\r\n    \r\n    return {\r\n      problemId: problem.id,\r\n      status: OptimizationStatus.CONVERGED,\r\n      bestSolution: this.bestSolution!,\r\n      statistics,\r\n      history: optimizationHistory,\r\n      analysis: {},\r\n      recommendations: [],\r\n      warnings: [],\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  // Utility methods\r\n  private generateSolutionId(): string {\r\n    return `sa_sol_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private createSeededRandom(seed: number): () => number {\r\n    let state = seed;\r\n    return () => {\r\n      state = (state * 9301 + 49297) % 233280;\r\n      return state / 233280;\r\n    };\r\n  }\r\n\r\n  private gaussianRandom(): number {\r\n    // Box-Muller transform\r\n    const u1 = this.random();\r\n    const u2 = this.random();\r\n    return Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\r\n  }\r\n\r\n  private cauchyRandom(): number {\r\n    // Cauchy distribution using inverse transform\r\n    const u = this.random();\r\n    return Math.tan(Math.PI * (u - 0.5));\r\n  }\r\n\r\n  private calculateVariance(values: number[]): number {\r\n    if (values.length === 0) return 0;\r\n    \r\n    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\r\n    const squaredDiffs = values.map(val => Math.pow(val - mean, 2));\r\n    return squaredDiffs.reduce((sum, diff) => sum + diff, 0) / values.length;\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d7a8bc38eb8abc499d60b51629b7eff5ffb9eb9e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p7ah0mc1t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p7ah0mc1t();
cov_1p7ah0mc1t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1p7ah0mc1t().s[1]++;
exports.SimulatedAnnealing = void 0;
const SystemOptimizationTypes_1 =
/* istanbul ignore next */
(cov_1p7ah0mc1t().s[2]++, require("../types/SystemOptimizationTypes"));
/**
 * Simulated Annealing optimizer for single-objective optimization problems
 */
class SimulatedAnnealing {
  constructor(parameters) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[0]++;
    cov_1p7ah0mc1t().s[3]++;
    this.currentState = null;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[4]++;
    this.bestSolution = null;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[5]++;
    this.history = [];
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[6]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[7]++;
    this.parameters = {
      initialTemperature: 1000,
      finalTemperature: 0.01,
      maxIterations: 1000,
      coolingSchedule: {
        initialTemperature: 1000,
        finalTemperature: 0.01,
        coolingRate: 0.95,
        method: 'exponential'
      },
      neighborhoodSize: 0.1,
      neighborhoodMethod: 'gaussian',
      acceptanceCriterion: 'metropolis',
      constraintHandling: 'penalty',
      penaltyCoefficient: 1000,
      restartEnabled: true,
      maxRestarts: 3,
      restartTemperature: 100,
      adaptiveNeighborhood: true,
      ...parameters
    };
    // Initialize random number generator
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[8]++;
    if (this.parameters.seedValue !== undefined) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[0][0]++;
      cov_1p7ah0mc1t().s[9]++;
      this.random = this.createSeededRandom(this.parameters.seedValue);
    } else {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[0][1]++;
      cov_1p7ah0mc1t().s[10]++;
      this.random = Math.random;
    }
  }
  /**
   * Main optimization method
   */
  async optimize(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[11]++, performance.now());
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[12]++;
    try {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[13]++;
      // Initialize algorithm
      this.initializeAlgorithm(problem);
      // Create initial solution
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[14]++;
      await this.createInitialSolution(problem, objectiveFunction, constraintFunctions);
      // Main annealing loop
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[15]++;
      while (!this.shouldTerminate()) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[16]++;
        await this.performIteration(problem, objectiveFunction, constraintFunctions);
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[17]++;
        this.updateHistory();
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[18]++;
        if (this.parameters.adaptiveNeighborhood) {
          /* istanbul ignore next */
          cov_1p7ah0mc1t().b[1][0]++;
          cov_1p7ah0mc1t().s[19]++;
          this.adaptNeighborhoodSize();
        } else
        /* istanbul ignore next */
        {
          cov_1p7ah0mc1t().b[1][1]++;
        }
      }
      // Check for restart
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[20]++;
      if (this.shouldRestart()) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[2][0]++;
        cov_1p7ah0mc1t().s[21]++;
        await this.restart(problem, objectiveFunction, constraintFunctions);
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[2][1]++;
      }
      // Create final result
      cov_1p7ah0mc1t().s[22]++;
      return this.createOptimizationResult(problem, startTime);
    } catch (error) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[23]++;
      console.error('Simulated annealing optimization failed:', error);
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[24]++;
      throw error;
    }
  }
  /**
   * Initialize algorithm state
   */
  initializeAlgorithm(problem) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[2]++;
    cov_1p7ah0mc1t().s[25]++;
    this.currentState = null;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[26]++;
    this.bestSolution = null;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[27]++;
    this.history = [];
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[28]++;
    this.evaluationCount = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[29]++;
    console.log(`Initializing Simulated Annealing with initial temperature: ${this.parameters.initialTemperature}`);
  }
  /**
   * Create initial solution
   */
  async createInitialSolution(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[3]++;
    // Generate random initial solution
    const initialSolution =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[30]++, this.createRandomSolution(problem));
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[31]++;
    await this.evaluateSolution(initialSolution, problem, objectiveFunction, constraintFunctions);
    // Initialize state
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[32]++;
    this.currentState = {
      solution: initialSolution,
      temperature: this.parameters.initialTemperature,
      iteration: 0,
      acceptedMoves: 0,
      rejectedMoves: 0,
      improvingMoves: 0,
      worseningMoves: 0,
      restartCount: 0
    };
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[33]++;
    this.bestSolution = {
      ...initialSolution
    };
  }
  /**
   * Create a random solution
   */
  createRandomSolution(problem) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[4]++;
    const variables =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[34]++, {});
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[35]++;
    for (const variable of problem.variables) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[4][0]++, variable.discreteValues) &&
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[4][1]++, variable.discreteValues.length > 0)) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[3][0]++;
        // Discrete variable
        const randomIndex =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[37]++, Math.floor(this.random() * variable.discreteValues.length));
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[38]++;
        variables[variable.id] = variable.discreteValues[randomIndex];
      } else {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[3][1]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[39]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[5][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[5][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[40]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[6][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[6][1]++, 1));
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[41]++;
        variables[variable.id] = min + this.random() * (max - min);
      }
    }
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[42]++;
    return {
      id: this.generateSolutionId(),
      variables,
      objectiveValues: {},
      constraintViolations: [],
      feasible: true,
      fitness: 0,
      systemConfiguration: problem.systemConfiguration,
      performanceMetrics: {}
    };
  }
  /**
   * Evaluate solution fitness and constraints
   */
  async evaluateSolution(solution, problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[5]++;
    cov_1p7ah0mc1t().s[43]++;
    try {
      // Convert solution to optimization variables
      const variables =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[44]++, this.solutionToVariables(solution, problem.variables));
      // Evaluate objective function
      const objectiveValue =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[45]++, objectiveFunction(variables));
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[46]++;
      solution.fitness = objectiveValue;
      // Store objective values
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[47]++;
      if (problem.objectives.objectives.length > 0) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[7][0]++;
        cov_1p7ah0mc1t().s[48]++;
        solution.objectiveValues[problem.objectives.objectives[0].id] = objectiveValue;
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[7][1]++;
      }
      // Evaluate constraints
      cov_1p7ah0mc1t().s[49]++;
      solution.constraintViolations = [];
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[50]++;
      for (const constraintFunction of constraintFunctions) {
        const violation =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[51]++, constraintFunction(variables));
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[52]++;
        solution.constraintViolations.push({
          constraintId: `constraint_${solution.constraintViolations.length}`,
          violationType: violation > 0 ?
          /* istanbul ignore next */
          (cov_1p7ah0mc1t().b[8][0]++, 'inequality') :
          /* istanbul ignore next */
          (cov_1p7ah0mc1t().b[8][1]++, 'boundary'),
          currentValue: violation,
          requiredValue: 0,
          severity: violation > 0 ?
          /* istanbul ignore next */
          (cov_1p7ah0mc1t().b[9][0]++, 'major') :
          /* istanbul ignore next */
          (cov_1p7ah0mc1t().b[9][1]++, 'minor'),
          penalty: violation > 0 ?
          /* istanbul ignore next */
          (cov_1p7ah0mc1t().b[10][0]++, violation * this.parameters.penaltyCoefficient) :
          /* istanbul ignore next */
          (cov_1p7ah0mc1t().b[10][1]++, 0)
        });
      }
      // Check feasibility
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[53]++;
      solution.feasible = solution.constraintViolations.every(v => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[6]++;
        cov_1p7ah0mc1t().s[54]++;
        return v.currentValue <= 0;
      });
      // Apply constraint handling
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[12][0]++, !solution.feasible) &&
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[12][1]++, this.parameters.constraintHandling === 'penalty')) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[11][0]++;
        const totalPenalty =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[56]++, solution.constraintViolations.filter(v => {
          /* istanbul ignore next */
          cov_1p7ah0mc1t().f[7]++;
          cov_1p7ah0mc1t().s[57]++;
          return v.currentValue > 0;
        }).reduce((sum, v) => {
          /* istanbul ignore next */
          cov_1p7ah0mc1t().f[8]++;
          cov_1p7ah0mc1t().s[58]++;
          return sum + v.penalty;
        }, 0));
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[59]++;
        solution.fitness += totalPenalty;
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[11][1]++;
      }
      cov_1p7ah0mc1t().s[60]++;
      this.evaluationCount++;
    } catch (error) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[61]++;
      console.error('Error evaluating solution:', error);
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[62]++;
      solution.fitness = Number.MAX_VALUE;
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[63]++;
      solution.feasible = false;
    }
  }
  /**
   * Convert solution to optimization variables
   */
  solutionToVariables(solution, variableTemplates) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[9]++;
    cov_1p7ah0mc1t().s[64]++;
    return variableTemplates.map(template => {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().f[10]++;
      cov_1p7ah0mc1t().s[65]++;
      return {
        ...template,
        currentValue: solution.variables[template.id]
      };
    });
  }
  /**
   * Perform one iteration of simulated annealing
   */
  async performIteration(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[11]++;
    cov_1p7ah0mc1t().s[66]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[13][0]++;
      cov_1p7ah0mc1t().s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[13][1]++;
    }
    // Generate neighbor solution
    const neighborSolution =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[68]++, this.generateNeighbor(this.currentState.solution, problem));
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[69]++;
    await this.evaluateSolution(neighborSolution, problem, objectiveFunction, constraintFunctions);
    // Calculate acceptance probability
    const deltaE =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[70]++, neighborSolution.fitness - this.currentState.solution.fitness);
    const acceptanceProbability =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[71]++, this.calculateAcceptanceProbability(deltaE, this.currentState.temperature));
    // Accept or reject the neighbor
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[72]++;
    if (this.random() < acceptanceProbability) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[14][0]++;
      cov_1p7ah0mc1t().s[73]++;
      // Accept the neighbor
      this.currentState.solution = neighborSolution;
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[74]++;
      this.currentState.acceptedMoves++;
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[75]++;
      if (deltaE < 0) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[15][0]++;
        cov_1p7ah0mc1t().s[76]++;
        this.currentState.improvingMoves++;
        // Update best solution
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[77]++;
        if (neighborSolution.fitness < this.bestSolution.fitness) {
          /* istanbul ignore next */
          cov_1p7ah0mc1t().b[16][0]++;
          cov_1p7ah0mc1t().s[78]++;
          this.bestSolution = {
            ...neighborSolution
          };
        } else
        /* istanbul ignore next */
        {
          cov_1p7ah0mc1t().b[16][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[15][1]++;
        cov_1p7ah0mc1t().s[79]++;
        this.currentState.worseningMoves++;
      }
    } else {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[14][1]++;
      cov_1p7ah0mc1t().s[80]++;
      // Reject the neighbor
      this.currentState.rejectedMoves++;
    }
    // Update temperature
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[81]++;
    this.currentState.temperature = this.updateTemperature(this.currentState.temperature, this.currentState.iteration);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[82]++;
    this.currentState.iteration++;
  }
  /**
   * Generate neighbor solution
   */
  generateNeighbor(currentSolution, problem) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[12]++;
    const neighbor =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[83]++, {
      ...currentSolution,
      id: this.generateSolutionId(),
      variables: {
        ...currentSolution.variables
      }
    });
    // Select random variable to modify
    const variableIds =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[84]++, Object.keys(neighbor.variables));
    const randomVariableId =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[85]++, variableIds[Math.floor(this.random() * variableIds.length)]);
    const variable =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[86]++, problem.variables.find(v => {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().f[13]++;
      cov_1p7ah0mc1t().s[87]++;
      return v.id === randomVariableId;
    }));
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[88]++;
    if (!variable) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[17][0]++;
      cov_1p7ah0mc1t().s[89]++;
      return neighbor;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[17][1]++;
    }
    // Generate neighbor value based on neighborhood method
    cov_1p7ah0mc1t().s[90]++;
    neighbor.variables[randomVariableId] = this.generateNeighborValue(neighbor.variables[randomVariableId], variable);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[91]++;
    return neighbor;
  }
  /**
   * Generate neighbor value for a variable
   */
  generateNeighborValue(currentValue, variable) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[14]++;
    cov_1p7ah0mc1t().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().b[19][0]++, variable.discreteValues) &&
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().b[19][1]++, variable.discreteValues.length > 0)) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[18][0]++;
      // Discrete variable - random selection from neighborhood
      const currentIndex =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[93]++, variable.discreteValues.indexOf(currentValue));
      const neighborhoodSize =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[94]++, Math.max(1, Math.floor(variable.discreteValues.length * this.parameters.neighborhoodSize)));
      const minIndex =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[95]++, Math.max(0, currentIndex - neighborhoodSize));
      const maxIndex =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[96]++, Math.min(variable.discreteValues.length - 1, currentIndex + neighborhoodSize));
      const randomIndex =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[97]++, minIndex + Math.floor(this.random() * (maxIndex - minIndex + 1)));
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[98]++;
      return variable.discreteValues[randomIndex];
    } else {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[18][1]++;
      cov_1p7ah0mc1t().s[99]++;
      if (typeof currentValue === 'number') {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[20][0]++;
        // Continuous variable
        const min =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[100]++, typeof variable.bounds.minimum === 'number' ?
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[21][0]++, variable.bounds.minimum) :
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[21][1]++, 0));
        const max =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[101]++, typeof variable.bounds.maximum === 'number' ?
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[22][0]++, variable.bounds.maximum) :
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[22][1]++, 1));
        const range =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[102]++, max - min);
        let neighborValue;
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[103]++;
        switch (this.parameters.neighborhoodMethod) {
          case 'gaussian':
            /* istanbul ignore next */
            cov_1p7ah0mc1t().b[23][0]++;
            const sigma =
            /* istanbul ignore next */
            (cov_1p7ah0mc1t().s[104]++, range * this.parameters.neighborhoodSize);
            /* istanbul ignore next */
            cov_1p7ah0mc1t().s[105]++;
            neighborValue = currentValue + this.gaussianRandom() * sigma;
            /* istanbul ignore next */
            cov_1p7ah0mc1t().s[106]++;
            break;
          case 'uniform':
            /* istanbul ignore next */
            cov_1p7ah0mc1t().b[23][1]++;
            const delta =
            /* istanbul ignore next */
            (cov_1p7ah0mc1t().s[107]++, range * this.parameters.neighborhoodSize);
            /* istanbul ignore next */
            cov_1p7ah0mc1t().s[108]++;
            neighborValue = currentValue + (this.random() - 0.5) * 2 * delta;
            /* istanbul ignore next */
            cov_1p7ah0mc1t().s[109]++;
            break;
          case 'cauchy':
            /* istanbul ignore next */
            cov_1p7ah0mc1t().b[23][2]++;
            const gamma =
            /* istanbul ignore next */
            (cov_1p7ah0mc1t().s[110]++, range * this.parameters.neighborhoodSize);
            /* istanbul ignore next */
            cov_1p7ah0mc1t().s[111]++;
            neighborValue = currentValue + this.cauchyRandom() * gamma;
            /* istanbul ignore next */
            cov_1p7ah0mc1t().s[112]++;
            break;
          default:
            /* istanbul ignore next */
            cov_1p7ah0mc1t().b[23][3]++;
            cov_1p7ah0mc1t().s[113]++;
            neighborValue = currentValue + (this.random() - 0.5) * range * this.parameters.neighborhoodSize;
        }
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[114]++;
        return Math.max(min, Math.min(max, neighborValue));
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[20][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[115]++;
    return currentValue;
  }
  /**
   * Calculate acceptance probability
   */
  calculateAcceptanceProbability(deltaE, temperature) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[15]++;
    cov_1p7ah0mc1t().s[116]++;
    if (deltaE <= 0) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[24][0]++;
      cov_1p7ah0mc1t().s[117]++;
      return 1.0; // Always accept improving solutions
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[24][1]++;
    }
    cov_1p7ah0mc1t().s[118]++;
    switch (this.parameters.acceptanceCriterion) {
      case 'metropolis':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[25][0]++;
        cov_1p7ah0mc1t().s[119]++;
        return Math.exp(-deltaE / temperature);
      case 'boltzmann':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[25][1]++;
        cov_1p7ah0mc1t().s[120]++;
        return 1.0 / (1.0 + Math.exp(deltaE / temperature));
      case 'fast_annealing':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[25][2]++;
        cov_1p7ah0mc1t().s[121]++;
        return Math.exp(-deltaE / (temperature * Math.log(this.currentState.iteration + 2)));
      default:
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[25][3]++;
        cov_1p7ah0mc1t().s[122]++;
        return Math.exp(-deltaE / temperature);
    }
  }
  /**
   * Update temperature according to cooling schedule
   */
  updateTemperature(currentTemperature, iteration) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[16]++;
    const schedule =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[123]++, this.parameters.coolingSchedule);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[124]++;
    switch (schedule.method) {
      case 'linear':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[26][0]++;
        const linearRate =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[125]++, (schedule.initialTemperature - schedule.finalTemperature) / this.parameters.maxIterations);
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[126]++;
        return Math.max(schedule.finalTemperature, schedule.initialTemperature - iteration * linearRate);
      case 'exponential':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[26][1]++;
        cov_1p7ah0mc1t().s[127]++;
        return Math.max(schedule.finalTemperature, currentTemperature * schedule.coolingRate);
      case 'logarithmic':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[26][2]++;
        cov_1p7ah0mc1t().s[128]++;
        return Math.max(schedule.finalTemperature, schedule.initialTemperature / Math.log(iteration + 2));
      case 'adaptive':
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[26][3]++;
        // Adaptive cooling based on acceptance rate
        const acceptanceRate =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[129]++, this.currentState.acceptedMoves / (this.currentState.acceptedMoves + this.currentState.rejectedMoves + 1));
        const targetAcceptanceRate =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[130]++, 0.4);
        const adaptationFactor =
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().s[131]++, acceptanceRate > targetAcceptanceRate ?
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[27][0]++, 0.99) :
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[27][1]++, 0.95));
        /* istanbul ignore next */
        cov_1p7ah0mc1t().s[132]++;
        return Math.max(schedule.finalTemperature, currentTemperature * adaptationFactor);
      default:
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[26][4]++;
        cov_1p7ah0mc1t().s[133]++;
        return Math.max(schedule.finalTemperature, currentTemperature * schedule.coolingRate);
    }
  }
  /**
   * Check termination criteria
   */
  shouldTerminate() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[17]++;
    cov_1p7ah0mc1t().s[134]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[28][0]++;
      cov_1p7ah0mc1t().s[135]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[28][1]++;
    }
    // Maximum iterations
    cov_1p7ah0mc1t().s[136]++;
    if (this.currentState.iteration >= this.parameters.maxIterations) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[29][0]++;
      cov_1p7ah0mc1t().s[137]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[29][1]++;
    }
    // Temperature threshold
    cov_1p7ah0mc1t().s[138]++;
    if (this.currentState.temperature <= this.parameters.finalTemperature) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[30][0]++;
      cov_1p7ah0mc1t().s[139]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[30][1]++;
    }
    // Convergence check (no improvement in recent iterations)
    cov_1p7ah0mc1t().s[140]++;
    if (this.history.length >= 50) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[31][0]++;
      const recentHistory =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[141]++, this.history.slice(-50));
      const bestRecent =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[142]++, Math.min(...recentHistory.map(h => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[18]++;
        cov_1p7ah0mc1t().s[143]++;
        return h.bestFitness;
      })));
      const improvement =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[144]++, this.bestSolution.fitness - bestRecent);
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[145]++;
      if (Math.abs(improvement) < 1e-6) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[32][0]++;
        cov_1p7ah0mc1t().s[146]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[31][1]++;
    }
    cov_1p7ah0mc1t().s[147]++;
    return false;
  }
  /**
   * Check if restart should be performed
   */
  shouldRestart() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[19]++;
    cov_1p7ah0mc1t().s[148]++;
    if (!this.parameters.restartEnabled) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[33][0]++;
      cov_1p7ah0mc1t().s[149]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[33][1]++;
    }
    cov_1p7ah0mc1t().s[150]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[34][0]++;
      cov_1p7ah0mc1t().s[151]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[34][1]++;
    }
    cov_1p7ah0mc1t().s[152]++;
    if (this.currentState.restartCount >= this.parameters.maxRestarts) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[35][0]++;
      cov_1p7ah0mc1t().s[153]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[35][1]++;
    }
    // Restart if stuck in local minimum
    const recentIterations =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[154]++, 100);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[155]++;
    if (this.history.length >= recentIterations) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[36][0]++;
      const recentHistory =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[156]++, this.history.slice(-recentIterations));
      const fitnessVariance =
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().s[157]++, this.calculateVariance(recentHistory.map(h => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[20]++;
        cov_1p7ah0mc1t().s[158]++;
        return h.bestFitness;
      })));
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[159]++;
      if (fitnessVariance < 1e-6) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[37][0]++;
        cov_1p7ah0mc1t().s[160]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[37][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[36][1]++;
    }
    cov_1p7ah0mc1t().s[161]++;
    return false;
  }
  /**
   * Restart the algorithm from a new random solution
   */
  async restart(problem, objectiveFunction, constraintFunctions) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[21]++;
    cov_1p7ah0mc1t().s[162]++;
    console.log(`Restarting simulated annealing (restart ${this.currentState.restartCount + 1})`);
    // Create new random solution
    const newSolution =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[163]++, this.createRandomSolution(problem));
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[164]++;
    await this.evaluateSolution(newSolution, problem, objectiveFunction, constraintFunctions);
    // Reset state with restart temperature
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[165]++;
    this.currentState.solution = newSolution;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[166]++;
    this.currentState.temperature = this.parameters.restartTemperature;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[167]++;
    this.currentState.iteration = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[168]++;
    this.currentState.acceptedMoves = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[169]++;
    this.currentState.rejectedMoves = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[170]++;
    this.currentState.improvingMoves = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[171]++;
    this.currentState.worseningMoves = 0;
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[172]++;
    this.currentState.restartCount++;
    // Continue optimization
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[173]++;
    while (!this.shouldTerminate()) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[174]++;
      await this.performIteration(problem, objectiveFunction, constraintFunctions);
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[175]++;
      this.updateHistory();
    }
  }
  /**
   * Adapt neighborhood size based on acceptance rate
   */
  adaptNeighborhoodSize() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[22]++;
    cov_1p7ah0mc1t().s[176]++;
    if (!this.currentState) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[38][0]++;
      cov_1p7ah0mc1t().s[177]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[38][1]++;
    }
    const totalMoves =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[178]++, this.currentState.acceptedMoves + this.currentState.rejectedMoves);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[179]++;
    if (totalMoves < 10) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[39][0]++;
      cov_1p7ah0mc1t().s[180]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[39][1]++;
    }
    const acceptanceRate =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[181]++, this.currentState.acceptedMoves / totalMoves);
    const targetAcceptanceRate =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[182]++, 0.4);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[183]++;
    if (acceptanceRate > targetAcceptanceRate + 0.1) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[40][0]++;
      cov_1p7ah0mc1t().s[184]++;
      // Too many acceptances - increase neighborhood size
      this.parameters.neighborhoodSize = Math.min(0.5, this.parameters.neighborhoodSize * 1.1);
    } else {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[40][1]++;
      cov_1p7ah0mc1t().s[185]++;
      if (acceptanceRate < targetAcceptanceRate - 0.1) {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().b[41][0]++;
        cov_1p7ah0mc1t().s[186]++;
        // Too few acceptances - decrease neighborhood size
        this.parameters.neighborhoodSize = Math.max(0.01, this.parameters.neighborhoodSize * 0.9);
      } else
      /* istanbul ignore next */
      {
        cov_1p7ah0mc1t().b[41][1]++;
      }
    }
  }
  /**
   * Update optimization history
   */
  updateHistory() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[23]++;
    cov_1p7ah0mc1t().s[187]++;
    if (
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().b[43][0]++, !this.currentState) ||
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().b[43][1]++, !this.bestSolution)) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[42][0]++;
      cov_1p7ah0mc1t().s[188]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[42][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[189]++, {
      iteration: this.currentState.iteration,
      bestFitness: this.bestSolution.fitness,
      averageFitness: this.currentState.solution.fitness,
      worstFitness: this.currentState.solution.fitness,
      diversity: 0,
      // Not applicable for single solution
      constraintViolations: this.currentState.solution.feasible ?
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[44][0]++, 0) :
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[44][1]++, 1),
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[190]++;
    this.history.push(history);
  }
  /**
   * Create optimization result
   */
  createOptimizationResult(problem, startTime) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[24]++;
    const executionTime =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[191]++, performance.now() - startTime);
    const statistics =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[192]++, {
      totalIterations:
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[45][0]++, this.currentState?.iteration) ||
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[45][1]++, 0),
      totalEvaluations: this.evaluationCount,
      convergenceIteration:
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[46][0]++, this.currentState?.iteration) ||
      /* istanbul ignore next */
      (cov_1p7ah0mc1t().b[46][1]++, 0),
      executionTime,
      bestFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[25]++;
        cov_1p7ah0mc1t().s[193]++;
        return h.bestFitness;
      }),
      averageFitnessHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[26]++;
        cov_1p7ah0mc1t().s[194]++;
        return h.averageFitness;
      }),
      diversityHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[27]++;
        cov_1p7ah0mc1t().s[195]++;
        return h.diversity;
      }),
      constraintViolationHistory: this.history.map(h => {
        /* istanbul ignore next */
        cov_1p7ah0mc1t().f[28]++;
        cov_1p7ah0mc1t().s[196]++;
        return h.constraintViolations;
      }),
      algorithmSpecificStats: {
        finalTemperature:
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[47][0]++, this.currentState?.temperature) ||
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[47][1]++, 0),
        acceptedMoves:
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[48][0]++, this.currentState?.acceptedMoves) ||
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[48][1]++, 0),
        rejectedMoves:
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[49][0]++, this.currentState?.rejectedMoves) ||
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[49][1]++, 0),
        improvingMoves:
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[50][0]++, this.currentState?.improvingMoves) ||
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[50][1]++, 0),
        worseningMoves:
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[51][0]++, this.currentState?.worseningMoves) ||
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[51][1]++, 0),
        restartCount:
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[52][0]++, this.currentState?.restartCount) ||
        /* istanbul ignore next */
        (cov_1p7ah0mc1t().b[52][1]++, 0),
        finalNeighborhoodSize: this.parameters.neighborhoodSize
      }
    });
    const optimizationHistory =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[197]++, {
      iterations: this.history,
      populationHistory: [],
      parameterHistory: [],
      convergenceMetrics: []
    });
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[198]++;
    return {
      problemId: problem.id,
      status: SystemOptimizationTypes_1.OptimizationStatus.CONVERGED,
      bestSolution: this.bestSolution,
      statistics,
      history: optimizationHistory,
      analysis: {},
      recommendations: [],
      warnings: [],
      errors: []
    };
  }
  // Utility methods
  generateSolutionId() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[29]++;
    cov_1p7ah0mc1t().s[199]++;
    return `sa_sol_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  createSeededRandom(seed) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[30]++;
    let state =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[200]++, seed);
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[201]++;
    return () => {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().f[31]++;
      cov_1p7ah0mc1t().s[202]++;
      state = (state * 9301 + 49297) % 233280;
      /* istanbul ignore next */
      cov_1p7ah0mc1t().s[203]++;
      return state / 233280;
    };
  }
  gaussianRandom() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[32]++;
    // Box-Muller transform
    const u1 =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[204]++, this.random());
    const u2 =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[205]++, this.random());
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[206]++;
    return Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);
  }
  cauchyRandom() {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[33]++;
    // Cauchy distribution using inverse transform
    const u =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[207]++, this.random());
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[208]++;
    return Math.tan(Math.PI * (u - 0.5));
  }
  calculateVariance(values) {
    /* istanbul ignore next */
    cov_1p7ah0mc1t().f[34]++;
    cov_1p7ah0mc1t().s[209]++;
    if (values.length === 0) {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().b[53][0]++;
      cov_1p7ah0mc1t().s[210]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1p7ah0mc1t().b[53][1]++;
    }
    const mean =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[211]++, values.reduce((sum, val) => {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().f[35]++;
      cov_1p7ah0mc1t().s[212]++;
      return sum + val;
    }, 0) / values.length);
    const squaredDiffs =
    /* istanbul ignore next */
    (cov_1p7ah0mc1t().s[213]++, values.map(val => {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().f[36]++;
      cov_1p7ah0mc1t().s[214]++;
      return Math.pow(val - mean, 2);
    }));
    /* istanbul ignore next */
    cov_1p7ah0mc1t().s[215]++;
    return squaredDiffs.reduce((sum, diff) => {
      /* istanbul ignore next */
      cov_1p7ah0mc1t().f[37]++;
      cov_1p7ah0mc1t().s[216]++;
      return sum + diff;
    }, 0) / values.length;
  }
}
/* istanbul ignore next */
cov_1p7ah0mc1t().s[217]++;
exports.SimulatedAnnealing = SimulatedAnnealing;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,